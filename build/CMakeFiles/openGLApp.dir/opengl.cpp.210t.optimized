
;; Function constexpr std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) (_ZStorSt13_Ios_OpenmodeS_, funcdef_no=1066, decl_uid=42721, cgraph_uid=331, symbol_order=333)

constexpr std::_Ios_Openmode std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) (_Ios_Openmode __a, _Ios_Openmode __b)
{
  _Ios_Openmode D.66669;
  _Ios_Openmode _3;

  <bb 2>:
  _3 = __a_1(D) | __b_2(D);

<L0>:
  return _3;

}



;; Function VertexBufferLayout::VertexBufferLayout() (_ZN18VertexBufferLayoutC2Ev, funcdef_no=1965, decl_uid=61972, cgraph_uid=513, symbol_order=516)

VertexBufferLayout::VertexBufferLayout() (struct VertexBufferLayout * const this)
{
  struct vector * D.66854;
  struct vector * D.66853;
  struct vector * _4;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  _4 = &this_2(D)->m_Elements;
  std::vector<VertexBufferElement>::vector (_4);
  this_2(D)->m_Stride = 0;
  return;

}



;; Function ShaderProgramSource::ShaderProgramSource() (_ZN19ShaderProgramSourceC2Ev, funcdef_no=1973, decl_uid=62239, cgraph_uid=519, symbol_order=522)

ShaderProgramSource::ShaderProgramSource() (struct ShaderProgramSource * const this)
{
  struct string * D.66680;
  struct string * D.66679;
  struct string * D.66678;
  struct string * D.66677;
  struct string * _2;
  struct string * _5;

  <bb 2>:
  _2 = &this_1(D)->VertexSource;
  std::__cxx11::basic_string<char>::basic_string (_2);
  _5 = &this_1(D)->FragmentSource;
  std::__cxx11::basic_string<char>::basic_string (_5);
  return;

}



;; Function ShaderProgramSource::~ShaderProgramSource() (_ZN19ShaderProgramSourceD2Ev, funcdef_no=1976, decl_uid=62268, cgraph_uid=522, symbol_order=525)

ShaderProgramSource::~ShaderProgramSource() (struct ShaderProgramSource * const this)
{
  struct string * D.66682;
  struct string * D.66681;
  struct string * _2;
  struct string * _5;

  <bb 2>:
  _2 = &this_1(D)->FragmentSource;
  std::__cxx11::basic_string<char>::~basic_string (_2);
  _5 = &this_1(D)->VertexSource;
  std::__cxx11::basic_string<char>::~basic_string (_5);
  MEM[(struct  &)this_1(D)] ={v} {CLOBBER};
  return;

}



;; Function ShaderProgramSource ParseShader(const string&) (_ZL11ParseShaderRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1971, decl_uid=62162, cgraph_uid=530, symbol_order=533)

Merging blocks 35 and 36
ShaderProgramSource ParseShader(const string&) (const struct string & file)
{
  void * D.66956;
  struct basic_ostream & D.66652;
  long unsigned int D.66651;
  long unsigned int D.66650;
  long unsigned int D.66649;
  bool D.66648;
  struct basic_istream & D.66647;
  struct stringstream * D.62174;
  struct stringstream * D.62173;
  struct ShaderProgramSource result [value-expr: *<retval>];
  struct string line;
  ShaderType type;
  struct stringstream ss[2];
  struct ifstream stream;
  int (*__vtbl_ptr_type) () D.66643;
  int (*__vtbl_ptr_type) () * D.66642;
  struct string * D.66636;
  struct __string_type D.62282;
  struct string * D.66635;
  struct __string_type D.62278;
  struct basic_ostream & D.66634;
  struct basic_ostream * D.66633;
  long unsigned int D.66628;
  bool retval.4;
  long unsigned int D.66623;
  bool retval.3;
  long unsigned int D.66619;
  bool retval.2;
  struct basic_ios * D.66616;
  sizetype D.66615;
  long int D.66614;
  int (*__vtbl_ptr_type) () * D.66613;
  int (*__vtbl_ptr_type) () * D.66612;
  struct basic_istream & D.66611;
  bool retval.1;
  int (*__vtbl_ptr_type) () D.66607;
  int (*__vtbl_ptr_type) () * D.66606;
  sizetype D.66602;
  sizetype D.66601;
  long int D.66600;
  _Ios_Openmode D.66597;
  long int D.62172;
  struct stringstream * D.62171;
  struct stringstream * D.62170;
  struct stringstream * retval.0;
  struct stringstream * _1;
  long int _2;
  struct stringstream * _3;
  struct stringstream * _4;
  struct stringstream * _5;
  struct stringstream * _22;
  struct stringstream * _23;
  long int _24;
  _Ios_Openmode _26;
  struct stringstream * _28;
  long int _29;
  long int _30;
  sizetype _31;
  sizetype _32;
  struct stringstream * _33;
  struct stringstream * _34;
  int (*__vtbl_ptr_type) () * _35;
  int (*__vtbl_ptr_type) () _36;
  struct stringstream * retval.0_38;
  struct basic_istream & _42;
  struct basic_istream & _43;
  int (*__vtbl_ptr_type) () * _44;
  int (*__vtbl_ptr_type) () * _45;
  long int _46;
  sizetype _47;
  struct basic_ios * _48;
  bool _50;
  bool retval.1_51;
  long unsigned int _53;
  long unsigned int _54;
  bool retval.2_55;
  long unsigned int _57;
  long unsigned int _58;
  bool retval.3_59;
  long unsigned int _61;
  long unsigned int _62;
  bool retval.4_63;
  struct basic_ostream * _66;
  struct basic_ostream & _68;
  struct basic_ostream & _69;
  struct string * _74;
  struct string * _79;
  struct stringstream * _84;
  struct stringstream * _85;
  int (*__vtbl_ptr_type) () * _86;
  int (*__vtbl_ptr_type) () _87;
  struct stringstream * _95;
  struct stringstream * _96;
  int (*__vtbl_ptr_type) () * _97;
  int (*__vtbl_ptr_type) () _98;

  <bb 2>:
  std::basic_ifstream<char>::basic_ifstream (&stream, file_20(D), 8);
  _22 = &ss;
  _23 = _22;
  _24 = 1;

  <bb 3>:
  # _1 = PHI <_23(2), _28(5)>
  # _2 = PHI <_24(2), _29(5)>
  if (_2 < 0)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  _26 = std::operator| (16, 8);
  std::__cxx11::basic_stringstream<char>::basic_stringstream (_1, _26);

  <bb 5>:
  _28 = _1 + 392;
  _29 = _2 + -1;
  goto <bb 3>;

  <bb 6>:
  retval.0_38 = _22;
  type_39 = -1;
  std::__cxx11::basic_string<char>::basic_string (&line);

  <bb 7>:
  # type_6 = PHI <type_39(6), type_7(20)>
  _42 = std::getline<char, std::char_traits<char>, std::allocator<char> > (&stream.D.54947, &line);

  <bb 8>:
  _43 = _42;
  _44 = _43->_vptr.basic_istream;
  _45 = _44 + 18446744073709551592;
  _46 = MEM[(long int *)_45];
  _47 = (sizetype) _46;
  _48 = _43 + _47;
  _50 = std::basic_ios<char>::operator bool (_48);

  <bb 9>:
  retval.1_51 = _50;
  if (retval.1_51 != 0)
    goto <bb 10>;
  else
    goto <bb 21>;

  <bb 10>:
  _53 = std::__cxx11::basic_string<char>::find (&line, "#shader", 0);

  <bb 11>:
  _54 = _53;
  retval.2_55 = _54 != 18446744073709551615;
  if (retval.2_55 != 0)
    goto <bb 12>;
  else
    goto <bb 18>;

  <bb 12>:
  _57 = std::__cxx11::basic_string<char>::find (&line, "vertex", 0);

  <bb 13>:
  _58 = _57;
  retval.3_59 = _58 != 18446744073709551615;
  if (retval.3_59 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  type_65 = 0;
  goto <bb 20>;

  <bb 15>:
  _61 = std::__cxx11::basic_string<char>::find (&line, "fragment", 0);

  <bb 16>:
  _62 = _61;
  retval.4_63 = _62 != 18446744073709551615;
  if (retval.4_63 != 0)
    goto <bb 17>;
  else
    goto <bb 20>;

  <bb 17>:
  type_64 = 1;
  goto <bb 20>;

  <bb 18>:
  _66 = &ss[type_6].D.56917.D.51121;
  _68 = std::operator<< <char, std::char_traits<char>, std::allocator<char> > (_66, &line);

  <bb 19>:
  _69 = _68;
  std::basic_ostream<char>::operator<< (_69, endl);

  <bb 20>:
  # type_7 = PHI <type_6(16), type_6(19), type_65(14), type_64(17)>
  goto <bb 7>;

  <bb 21>:
  ShaderProgramSource::ShaderProgramSource (result_71(D));
  D.62278 = std::__cxx11::basic_stringstream<char>::str (&ss[0]); [return slot optimization]

  <bb 22>:
  _74 = &result_71(D)->VertexSource;
  std::__cxx11::basic_string<char>::operator= (_74, &D.62278);
  std::__cxx11::basic_string<char>::~basic_string (&D.62278);
  D.62278 ={v} {CLOBBER};
  D.62282 = std::__cxx11::basic_stringstream<char>::str (&ss[1]); [return slot optimization]

  <bb 23>:
  _79 = &result_71(D)->FragmentSource;
  std::__cxx11::basic_string<char>::operator= (_79, &D.62282);
  std::__cxx11::basic_string<char>::~basic_string (&D.62282);
  D.62282 ={v} {CLOBBER};

  <bb 24>:
  std::__cxx11::basic_string<char>::~basic_string (&line);
  _84 = &ss + 784;

  <bb 25>:
  # _4 = PHI <_84(24), _85(26)>
  if (&ss == _4)
    goto <bb 27>;
  else
    goto <bb 26>;

  <bb 26>:
  _85 = _4 + 18446744073709551224;
  _86 = _85->D.56917.D.51120._vptr.basic_istream;
  _87 = *_86;
  OBJ_TYPE_REF(_87;(struct basic_stringstream)_85->0) (_85);
  goto <bb 25>;

  <bb 27>:
  std::basic_ifstream<char>::~basic_ifstream (&stream);
  stream ={v} {CLOBBER};
  ss ={v} {CLOBBER};
  line ={v} {CLOBBER};

<L25>:
  return result_71(D);

<L26>:
  if (_22 != 0B)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 30>:
  _30 = 1 - _2;
  _31 = (sizetype) _30;
  _32 = _31 * 392;
  _33 = _22 + _32;

  <bb 31>:
  # _3 = PHI <_33(30), _34(32)>
  if (_3 == _22)
    goto <bb 33>;
  else
    goto <bb 32>;

  <bb 32>:
  _34 = _3 + 18446744073709551224;
  _35 = _34->D.56917.D.51120._vptr.basic_istream;
  _36 = *_35;
  OBJ_TYPE_REF(_36;(struct basic_stringstream)_34->0) (_34);
  goto <bb 31>;

  <bb 33>:
  __builtin_eh_copy_values (2, 3);
  goto <bb 39>;

<L33>:
  ShaderProgramSource::~ShaderProgramSource (result_71(D));
  __builtin_eh_copy_values (6, 7);

<L34>:
  std::__cxx11::basic_string<char>::~basic_string (&line);
  __builtin_eh_copy_values (5, 6);
  _95 = &ss + 784;

  <bb 36>:
  # _5 = PHI <_95(35), _96(37)>
  if (&ss == _5)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 37>:
  _96 = _5 + 18446744073709551224;
  _97 = _96->D.56917.D.51120._vptr.basic_istream;
  _98 = *_97;
  OBJ_TYPE_REF(_98;(struct basic_stringstream)_96->0) (_96);
  goto <bb 36>;

  <bb 38>:
  __builtin_eh_copy_values (2, 5);

  <bb 39>:
  std::basic_ifstream<char>::~basic_ifstream (&stream);
  _18 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_18);

}



;; Function unsigned int CompileShader(unsigned int, const string&) (_ZL13CompileShaderjRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1984, decl_uid=62293, cgraph_uid=531, symbol_order=534)

unsigned int CompileShader(unsigned int, const string&) (unsigned int type, const struct string & source)
{
  struct basic_ostream & D.66724;
  struct basic_ostream & D.66723;
  struct basic_ostream & D.66722;
  struct basic_ostream & D.66721;
  bool D.66720;
  bool D.66719;
  unsigned int D.66718;
  char * message;
  int length;
  int result;
  const char * src;
  unsigned int shader;
  unsigned int D.66716;
  void (*<T976>) (GLuint) __glewDeleteShader.18;
  struct basic_ostream & D.66714;
  struct basic_ostream & D.66713;
  struct basic_ostream & D.66712;
  struct basic_ostream & D.66711;
  const char * iftmp.17;
  int length.16;
  void (*<T9ae>) (GLuint, GLsizei, GLsizei *, GLchar *) __glewGetShaderInfoLog.15;
  long unsigned int D.66704;
  int length.14;
  void (*<T94a>) (GLuint, GLenum, GLint *) __glewGetShaderiv.13;
  int result.12;
  void (*<T94a>) (GLuint, GLenum, GLint *) __glewGetShaderiv.11;
  bool D.66694;
  bool retval.10;
  void (*<T976>) (GLuint) __glewCompileShader.9;
  bool D.66688;
  bool retval.8;
  void (*<T9ea>) (GLuint, GLsizei, const GLchar * const *, const GLint *) __glewShaderSource.7;
  const char * src.6;
  GLuint (*<T97f>) (GLenum) __glewCreateShader.5;
  const char * iftmp.17_1;
  unsigned int _2;
  GLuint (*<T97f>) (GLenum) __glewCreateShader.5_9;
  unsigned int _12;
  const char * src.6_16;
  void (*<T9ea>) (GLuint, GLsizei, const GLchar * const *, const GLint *) __glewShaderSource.7_19;
  bool _22;
  bool _23;
  bool retval.8_24;
  void (*<T976>) (GLuint) __glewCompileShader.9_27;
  bool _30;
  bool _31;
  bool retval.10_32;
  void (*<T94a>) (GLuint, GLenum, GLint *) __glewGetShaderiv.11_34;
  int result.12_36;
  void (*<T94a>) (GLuint, GLenum, GLint *) __glewGetShaderiv.13_37;
  int length.14_39;
  long unsigned int _40;
  void (*<T9ae>) (GLuint, GLsizei, GLsizei *, GLchar *) __glewGetShaderInfoLog.15_43;
  int length.16_44;
  const char * iftmp.17_46;
  const char * iftmp.17_47;
  struct basic_ostream & _49;
  struct basic_ostream & _50;
  struct basic_ostream & _52;
  struct basic_ostream & _53;
  struct basic_ostream & _55;
  struct basic_ostream & _56;
  struct basic_ostream & _59;
  struct basic_ostream & _60;
  void (*<T976>) (GLuint) __glewDeleteShader.18_62;
  unsigned int _64;
  unsigned int _67;

  <bb 2>:
  __glewCreateShader.5_9 = __glewCreateShader;
  _12 = __glewCreateShader.5_9 (type_10(D));
  shader_13 = _12;
  src.6_16 = std::__cxx11::basic_string<char>::c_str (source_14(D));
  src = src.6_16;
  GLClearError ();
  __glewShaderSource.7_19 = __glewShaderSource;
  __glewShaderSource.7_19 (shader_13, 1, &src, 0B);
  _22 = GLLogCall ("glShaderSource(shader, 1, &src, nullptr)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 66);
  _23 = _22;
  retval.8_24 = ~_23;
  if (retval.8_24 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  raise (2);

  <bb 4>:
  GLClearError ();
  __glewCompileShader.9_27 = __glewCompileShader;
  __glewCompileShader.9_27 (shader_13);
  _30 = GLLogCall ("glCompileShader(shader)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 67);
  _31 = _30;
  retval.10_32 = ~_31;
  if (retval.10_32 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  raise (2);

  <bb 6>:
  __glewGetShaderiv.11_34 = __glewGetShaderiv;
  __glewGetShaderiv.11_34 (shader_13, 35713, &result);
  result.12_36 = result;
  if (result.12_36 == 0)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 7>:
  __glewGetShaderiv.13_37 = __glewGetShaderiv;
  __glewGetShaderiv.13_37 (shader_13, 35716, &length);
  length.14_39 = length;
  _40 = (long unsigned int) length.14_39;
  message_42 = __builtin_alloca (_40);
  __glewGetShaderInfoLog.15_43 = __glewGetShaderInfoLog;
  length.16_44 = length;
  __glewGetShaderInfoLog.15_43 (shader_13, length.16_44, &length, message_42);
  if (type_10(D) == 35633)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  iftmp.17_46 = "vertex";
  goto <bb 10>;

  <bb 9>:
  iftmp.17_47 = "fragment";

  <bb 10>:
  # iftmp.17_1 = PHI <iftmp.17_46(8), iftmp.17_47(9)>
  _49 = std::operator<< <std::char_traits<char> > (&cout, "Failed to compile ");
  _50 = _49;
  _52 = std::operator<< <std::char_traits<char> > (_50, iftmp.17_1);
  _53 = _52;
  _55 = std::operator<< <std::char_traits<char> > (_53, " shader.");
  _56 = _55;
  std::basic_ostream<char>::operator<< (_56, endl);
  _59 = std::operator<< <std::char_traits<char> > (&cout, message_42);
  _60 = _59;
  std::basic_ostream<char>::operator<< (_60, endl);
  __glewDeleteShader.18_62 = __glewDeleteShader;
  __glewDeleteShader.18_62 (shader_13);
  _64 = 0;
  length ={v} {CLOBBER};
  goto <bb 12>;

  <bb 11>:
  _67 = shader_13;

  <bb 12>:
  # _2 = PHI <_64(10), _67(11)>
  src ={v} {CLOBBER};
  result ={v} {CLOBBER};

<L13>:
  return _2;

}



;; Function unsigned int CreateShader(const string&, const string&) (_ZL12CreateShaderRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_, funcdef_no=1985, decl_uid=62318, cgraph_uid=532, symbol_order=535)

unsigned int CreateShader(const string&, const string&) (const struct string & vertexShader, const struct string & fragmentShader)
{
  bool D.66776;
  bool D.66775;
  bool D.66774;
  bool D.66773;
  bool D.66772;
  bool D.66771;
  unsigned int D.66770;
  unsigned int D.66769;
  unsigned int D.66768;
  unsigned int fs;
  unsigned int vs;
  unsigned int program;
  unsigned int D.66766;
  bool D.66762;
  bool retval.31;
  void (*<T976>) (GLuint) __glewDeleteShader.30;
  bool D.66756;
  bool retval.29;
  void (*<T976>) (GLuint) __glewDeleteShader.28;
  bool D.66750;
  bool retval.27;
  void (*<T976>) (GLuint) __glewValidateProgram.26;
  bool D.66744;
  bool retval.25;
  void (*<T976>) (GLuint) __glewLinkProgram.24;
  bool D.66738;
  bool retval.23;
  void (*<T967>) (GLuint, GLuint) __glewAttachShader.22;
  bool D.66732;
  bool retval.21;
  void (*<T967>) (GLuint, GLuint) __glewAttachShader.20;
  GLuint (*<T97a>) (void) __glewCreateProgram.19;
  GLuint (*<T97a>) (void) __glewCreateProgram.19_8;
  unsigned int _10;
  unsigned int _14;
  unsigned int _18;
  void (*<T967>) (GLuint, GLuint) __glewAttachShader.20_21;
  bool _24;
  bool _25;
  bool retval.21_26;
  void (*<T967>) (GLuint, GLuint) __glewAttachShader.22_29;
  bool _32;
  bool _33;
  bool retval.23_34;
  void (*<T976>) (GLuint) __glewLinkProgram.24_37;
  bool _40;
  bool _41;
  bool retval.25_42;
  void (*<T976>) (GLuint) __glewValidateProgram.26_45;
  bool _48;
  bool _49;
  bool retval.27_50;
  void (*<T976>) (GLuint) __glewDeleteShader.28_53;
  bool _56;
  bool _57;
  bool retval.29_58;
  void (*<T976>) (GLuint) __glewDeleteShader.30_61;
  bool _64;
  bool _65;
  bool retval.31_66;
  unsigned int _68;

  <bb 2>:
  __glewCreateProgram.19_8 = __glewCreateProgram;
  _10 = __glewCreateProgram.19_8 ();
  program_11 = _10;
  _14 = CompileShader (35633, vertexShader_12(D));
  vs_15 = _14;
  _18 = CompileShader (35632, fragmentShader_16(D));
  fs_19 = _18;
  GLClearError ();
  __glewAttachShader.20_21 = __glewAttachShader;
  __glewAttachShader.20_21 (program_11, vs_15);
  _24 = GLLogCall ("glAttachShader(program, vs)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 94);
  _25 = _24;
  retval.21_26 = ~_25;
  if (retval.21_26 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  raise (2);

  <bb 4>:
  GLClearError ();
  __glewAttachShader.22_29 = __glewAttachShader;
  __glewAttachShader.22_29 (program_11, fs_19);
  _32 = GLLogCall ("glAttachShader(program, fs)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 95);
  _33 = _32;
  retval.23_34 = ~_33;
  if (retval.23_34 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  raise (2);

  <bb 6>:
  GLClearError ();
  __glewLinkProgram.24_37 = __glewLinkProgram;
  __glewLinkProgram.24_37 (program_11);
  _40 = GLLogCall ("glLinkProgram(program)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 96);
  _41 = _40;
  retval.25_42 = ~_41;
  if (retval.25_42 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  raise (2);

  <bb 8>:
  GLClearError ();
  __glewValidateProgram.26_45 = __glewValidateProgram;
  __glewValidateProgram.26_45 (program_11);
  _48 = GLLogCall ("glValidateProgram(program)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 97);
  _49 = _48;
  retval.27_50 = ~_49;
  if (retval.27_50 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  raise (2);

  <bb 10>:
  GLClearError ();
  __glewDeleteShader.28_53 = __glewDeleteShader;
  __glewDeleteShader.28_53 (vs_15);
  _56 = GLLogCall ("glDeleteShader(vs)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 99);
  _57 = _56;
  retval.29_58 = ~_57;
  if (retval.29_58 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  raise (2);

  <bb 12>:
  GLClearError ();
  __glewDeleteShader.30_61 = __glewDeleteShader;
  __glewDeleteShader.30_61 (fs_19);
  _64 = GLLogCall ("glDeleteShader(fs)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 100);
  _65 = _64;
  retval.31_66 = ~_65;
  if (retval.31_66 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  raise (2);

  <bb 14>:
  _68 = program_11;

<L18>:
  return _68;

}



;; Function int main() (main, funcdef_no=1986, decl_uid=62323, cgraph_uid=533, symbol_order=536)

Merging blocks 57 and 58
int main() ()
{
  void * D.66979;
  bool D.66840;
  bool D.66839;
  int D.66838;
  bool D.66837;
  int D.66836;
  bool D.66835;
  unsigned int D.66834;
  struct basic_ostream & D.66829;
  unsigned int D.66828;
  struct GLFWwindow * D.66827;
  int D.66826;
  float increment;
  float r;
  int location;
  unsigned int shader;
  struct ShaderProgramSource source;
  struct IndexBuffer ib;
  struct VertexBufferLayout layout;
  struct VertexBuffer vb;
  struct VertexArray va;
  unsigned int indices[6];
  float positions[8];
  struct GLFWwindow * window;
  void (*<T976>) (GLuint) __glewDeleteProgram.42;
  bool D.66817;
  bool retval.41;
  bool D.66812;
  bool retval.40;
  float D.66810;
  void (*<Ta2a>) (GLint, GLfloat, GLfloat, GLfloat, GLfloat) __glewUniform4f.39;
  int D.66807;
  bool retval.38;
  bool D.66798;
  bool retval.37;
  GLint (*<T9a9>) (GLuint, const GLchar *) __glewGetUniformLocation.36;
  bool D.66792;
  bool retval.35;
  void (*<T976>) (GLuint) __glewUseProgram.34;
  struct allocator D.62376;
  const struct string D.62377;
  struct basic_ostream & D.66788;
  unsigned int D.66785;
  bool retval.33;
  int D.66781;
  int D.66778;
  bool retval.32;
  int _4;
  int _21;
  int _22;
  bool retval.32_23;
  int _24;
  struct GLFWwindow * _26;
  int _29;
  unsigned int _32;
  unsigned int _33;
  bool retval.33_34;
  struct basic_ostream & _36;
  struct basic_ostream & _37;
  unsigned int _67;
  void (*<T976>) (GLuint) __glewUseProgram.34_70;
  bool _73;
  bool _74;
  bool retval.35_75;
  GLint (*<T9a9>) (GLuint, const GLchar *) __glewGetUniformLocation.36_78;
  int _80;
  bool _83;
  bool _84;
  bool retval.37_85;
  int _91;
  int _92;
  bool retval.38_93;
  void (*<Ta2a>) (GLint, GLfloat, GLfloat, GLfloat, GLfloat) __glewUniform4f.39_96;
  float _97;
  bool _100;
  bool _101;
  bool retval.40_102;
  bool _109;
  bool _110;
  bool retval.41_111;
  void (*<T976>) (GLuint) __glewDeleteProgram.42_117;
  int _120;

  <bb 2>:
  _21 = glfwInit ();
  _22 = _21;
  retval.32_23 = _22 == 0;
  if (retval.32_23 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _24 = -1;
  goto <bb 51>;

  <bb 4>:
  _26 = glfwCreateWindow (640, 640, "OpenGL Tutorial", 0B, 0B);
  window_27 = _26;
  if (window_27 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  glfwTerminate ();
  _29 = -1;
  goto <bb 51>;

  <bb 6>:
  glfwMakeContextCurrent (window_27);
  _32 = glewInit ();
  _33 = _32;
  retval.33_34 = _33 != 0;
  if (retval.33_34 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _36 = std::operator<< <std::char_traits<char> > (&cout, "Glew loading error!");
  _37 = _36;
  std::basic_ostream<char>::operator<< (_37, endl);

  <bb 8>:
  positions[0] = -5.0e-1;
  positions[1] = -5.0e-1;
  positions[2] = 5.0e-1;
  positions[3] = -5.0e-1;
  positions[4] = 5.0e-1;
  positions[5] = 5.0e-1;
  positions[6] = -5.0e-1;
  positions[7] = 5.0e-1;
  indices[0] = 0;
  indices[1] = 1;
  indices[2] = 2;
  indices[3] = 2;
  indices[4] = 3;
  indices[5] = 0;
  VertexArray::VertexArray (&va);
  VertexBuffer::VertexBuffer (&vb, &positions, 32);

  <bb 9>:
  VertexBufferLayout::VertexBufferLayout (&layout);
  VertexBufferLayout::Push<float> (&layout, 2);
  VertexArray::AddBuffer (&va, &vb, &layout);

  <bb 10>:
  IndexBuffer::IndexBuffer (&ib, &indices, 6);

  <bb 11>:
  std::allocator<char>::allocator (&D.62376);
  std::__cxx11::basic_string<char>::basic_string (&D.62377, "/home/benjamin/Videos/openGLSeries/code/res/shaders/Basic.shader", &D.62376);

  <bb 12>:
  source = ParseShader (&D.62377); [return slot optimization]

  <bb 13>:
  std::__cxx11::basic_string<char>::~basic_string (&D.62377);
  D.62377 ={v} {CLOBBER};
  std::allocator<char>::~allocator (&D.62376);
  D.62376 ={v} {CLOBBER};
  _67 = CreateShader (&source.VertexSource, &source.FragmentSource);

  <bb 14>:
  shader_68 = _67;
  GLClearError ();

  <bb 15>:
  __glewUseProgram.34_70 = __glewUseProgram;
  __glewUseProgram.34_70 (shader_68);

  <bb 16>:
  _73 = GLLogCall ("glUseProgram(shader)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 151);

  <bb 17>:
  _74 = _73;
  retval.35_75 = ~_74;
  if (retval.35_75 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  raise (2);

  <bb 19>:
  GLClearError ();

  <bb 20>:
  __glewGetUniformLocation.36_78 = __glewGetUniformLocation;
  _80 = __glewGetUniformLocation.36_78 (shader_68, "u_Color");

  <bb 21>:
  location_81 = _80;
  _83 = GLLogCall ("int location = glGetUniformLocation(shader, \"u_Color\")", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 153);

  <bb 22>:
  _84 = _83;
  retval.37_85 = ~_84;
  if (retval.37_85 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  raise (2);

  <bb 24>:
  if (location_81 == -1)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  raise (2);

  <bb 26>:
  r_88 = 0.0;
  increment_89 = 9.99999974737875163555145263671875e-5;

  <bb 27>:
  # r_1 = PHI <r_88(26), r_114(47)>
  # increment_2 = PHI <increment_89(26), increment_3(47)>
  _91 = glfwWindowShouldClose (window_27);

  <bb 28>:
  _92 = _91;
  retval.38_93 = _92 == 0;
  if (retval.38_93 != 0)
    goto <bb 29>;
  else
    goto <bb 48>;

  <bb 29>:
  glClear (16384);

  <bb 30>:
  GLClearError ();

  <bb 31>:
  __glewUniform4f.39_96 = __glewUniform4f;
  _97 = 1.0e+0 - r_1;
  __glewUniform4f.39_96 (location_81, r_1, _97, r_1, 1.0e+0);

  <bb 32>:
  _100 = GLLogCall ("glUniform4f(location, r, 1.0f - r, r, 1.0f)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 165);

  <bb 33>:
  _101 = _100;
  retval.40_102 = ~_101;
  if (retval.40_102 != 0)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  raise (2);

  <bb 35>:
  VertexArray::Bind (&va);

  <bb 36>:
  IndexBuffer::Bind (&ib);

  <bb 37>:
  GLClearError ();

  <bb 38>:
  glDrawElements (4, 6, 5125, 0B);

  <bb 39>:
  _109 = GLLogCall ("glDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, nullptr)", "/home/benjamin/Videos/openGLSeries/code/opengl.cpp", 170);

  <bb 40>:
  _110 = _109;
  retval.41_111 = ~_110;
  if (retval.41_111 != 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  raise (2);

  <bb 42>:
  if (r_1 > 1.0e+0)
    goto <bb 44>;
  else
    goto <bb 43>;

  <bb 43>:
  if (r_1 < 0.0)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  increment_113 = -increment_2;

  <bb 45>:
  # increment_3 = PHI <increment_2(43), increment_113(44)>
  r_114 = r_1 + increment_3;
  glfwSwapBuffers (window_27);

  <bb 46>:
  glfwPollEvents ();

  <bb 47>:
  goto <bb 27>;

  <bb 48>:
  __glewDeleteProgram.42_117 = __glewDeleteProgram;
  __glewDeleteProgram.42_117 (shader_68);

  <bb 49>:
  glfwTerminate ();

  <bb 50>:
  _120 = 0;
  ShaderProgramSource::~ShaderProgramSource (&source);
  IndexBuffer::~IndexBuffer (&ib);
  VertexBufferLayout::~VertexBufferLayout (&layout);
  VertexBuffer::~VertexBuffer (&vb);
  VertexArray::~VertexArray (&va);

  <bb 51>:
  # _4 = PHI <_24(3), _29(5), _120(50)>
  positions ={v} {CLOBBER};
  indices ={v} {CLOBBER};
  va ={v} {CLOBBER};
  vb ={v} {CLOBBER};
  layout ={v} {CLOBBER};
  ib ={v} {CLOBBER};
  source ={v} {CLOBBER};

<L34>:
  return _4;

<L35>:
  std::__cxx11::basic_string<char>::~basic_string (&D.62377);
  __builtin_eh_copy_values (7, 9);

<L37>:
  D.62377 ={v} {CLOBBER};
  std::allocator<char>::~allocator (&D.62376);
  __builtin_eh_copy_values (5, 7);
  goto <bb 56>;

<L39>:
  ShaderProgramSource::~ShaderProgramSource (&source);
  __builtin_eh_copy_values (5, 16);

  <bb 56>:
  D.62376 ={v} {CLOBBER};
  IndexBuffer::~IndexBuffer (&ib);
  __builtin_eh_copy_values (4, 5);

<L41>:
  VertexBufferLayout::~VertexBufferLayout (&layout);
  __builtin_eh_copy_values (3, 4);
  VertexBuffer::~VertexBuffer (&vb);
  __builtin_eh_copy_values (2, 3);

<L43>:
  VertexArray::~VertexArray (&va);
  _18 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_18);

}



;; Function std::vector<_Tp, _Alloc>::vector() [with _Tp = VertexBufferElement; _Alloc = std::allocator<VertexBufferElement>] (_ZNSt6vectorI19VertexBufferElementSaIS0_EEC2Ev, funcdef_no=2218, decl_uid=61944, cgraph_uid=765, symbol_order=768)

std::vector<_Tp, _Alloc>::vector() [with _Tp = VertexBufferElement; _Alloc = std::allocator<VertexBufferElement>] (struct vector * const this)
{
  struct _Vector_base * D.66856;
  struct _Vector_base * D.66855;
  struct _Vector_base * _4;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  _4 = &this_2(D)->D.61952;
  std::_Vector_base<VertexBufferElement, std::allocator<VertexBufferElement> >::_Vector_base (_4);
  return;

}



;; Function void VertexBufferLayout::Push(unsigned int) [with T = float] (_ZN18VertexBufferLayout4PushIfEEvj, funcdef_no=2256, decl_uid=62361, cgraph_uid=803, symbol_order=806)

void VertexBufferLayout::Push(unsigned int) [with T = float] (struct VertexBufferLayout * const this, unsigned int count)
{
  <bb 2>:
  raise (2);
  return;

}



;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = VertexBufferElement; _Alloc = std::allocator<VertexBufferElement>] (_ZNSt12_Vector_baseI19VertexBufferElementSaIS0_EEC2Ev, funcdef_no=2357, decl_uid=61325, cgraph_uid=904, symbol_order=907)

std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = VertexBufferElement; _Alloc = std::allocator<VertexBufferElement>] (struct _Vector_base * const this)
{
  struct _Vector_impl * D.66858;
  struct _Vector_impl * D.66857;
  struct _Vector_impl * _4;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  _4 = &this_2(D)->_M_impl;
  std::_Vector_base<VertexBufferElement, std::allocator<VertexBufferElement> >::_Vector_impl::_Vector_impl (_4);
  return;

}



;; Function std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = VertexBufferElement; _Alloc = std::allocator<VertexBufferElement>] (_ZNSt12_Vector_baseI19VertexBufferElementSaIS0_EE12_Vector_implC2Ev, funcdef_no=2455, decl_uid=61268, cgraph_uid=1002, symbol_order=1005)

std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = VertexBufferElement; _Alloc = std::allocator<VertexBufferElement>] (struct _Vector_impl * const this)
{
  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  std::allocator<VertexBufferElement>::allocator (this_2(D));
  this_2(D)->_M_start = 0B;
  this_2(D)->_M_finish = 0B;
  this_2(D)->_M_end_of_storage = 0B;
  return;

}



;; Function std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = VertexBufferElement] (_ZNSaI19VertexBufferElementEC2Ev, funcdef_no=2528, decl_uid=61231, cgraph_uid=1075, symbol_order=1078)

std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = VertexBufferElement] (struct allocator * const this)
{
  void * D.66859;

  <bb 2>:
  __gnu_cxx::new_allocator<VertexBufferElement>::new_allocator (this_2(D));
  return;

}



;; Function __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = VertexBufferElement] (_ZN9__gnu_cxx13new_allocatorI19VertexBufferElementEC2Ev, funcdef_no=2569, decl_uid=61166, cgraph_uid=1116, symbol_order=1119)

__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = VertexBufferElement] (struct new_allocator * const this)
{
  <bb 2>:
  return;

}



;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=2623, decl_uid=66582, cgraph_uid=1170, symbol_order=1231)

void __static_initialization_and_destruction_0(int, int) (int __initialize_p, int __priority)
{
  <bb 2>:
  if (__initialize_p_2(D) == 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  if (__priority_4(D) == 65535)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  std::ios_base::Init::Init (&__ioinit);
  __cxa_atexit (__comp_dtor , &__ioinit, &__dso_handle);

  <bb 5>:
  return;

}



;; Function (static initializers for /home/benjamin/Videos/openGLSeries/code/opengl.cpp) (_GLOBAL__sub_I_main, funcdef_no=2624, decl_uid=66591, cgraph_uid=1171, symbol_order=1359)

(static initializers for /home/benjamin/Videos/openGLSeries/code/opengl.cpp) ()
{
  <bb 2>:
  __static_initialization_and_destruction_0 (1, 65535);
  return;

}


