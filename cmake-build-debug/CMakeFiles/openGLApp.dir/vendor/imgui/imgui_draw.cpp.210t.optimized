
;; Function ImVec2::ImVec2() (_ZN6ImVec2C2Ev, funcdef_no=1, decl_uid=2367, cgraph_uid=1, symbol_order=1)

ImVec2::ImVec2() (struct ImVec2 * const this)
{
  float D.26536;
  float _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->y = 0.0;
  _5 = this_2(D)->y;
  this_2(D)->x = _5;
  return;

}



;; Function ImVec2::ImVec2(float, float) (_ZN6ImVec2C2Eff, funcdef_no=4, decl_uid=2361, cgraph_uid=4, symbol_order=4)

ImVec2::ImVec2(float, float) (struct ImVec2 * const this, float _x, float _y)
{
  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->x = _x_4(D);
  this_2(D)->y = _y_6(D);
  return;

}



;; Function ImVec4::ImVec4() (_ZN6ImVec4C2Ev, funcdef_no=8, decl_uid=2407, cgraph_uid=8, symbol_order=8)

ImVec4::ImVec4() (struct ImVec4 * const this)
{
  float D.26535;
  float D.26534;
  float D.26533;
  float _5;
  float _7;
  float _9;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->w = 0.0;
  _5 = this_2(D)->w;
  this_2(D)->z = _5;
  _7 = this_2(D)->z;
  this_2(D)->y = _7;
  _9 = this_2(D)->y;
  this_2(D)->x = _9;
  return;

}



;; Function ImVec4::ImVec4(float, float, float, float) (_ZN6ImVec4C2Effff, funcdef_no=11, decl_uid=2399, cgraph_uid=11, symbol_order=11)

ImVec4::ImVec4(float, float, float, float) (struct ImVec4 * const this, float _x, float _y, float _z, float _w)
{
  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->x = _x_4(D);
  this_2(D)->y = _y_6(D);
  this_2(D)->z = _z_8(D);
  this_2(D)->w = _w_10(D);
  return;

}



;; Function void* operator new(size_t, ImNewDummy, void*) (_Znwm10ImNewDummyPv, funcdef_no=59, decl_uid=4171, cgraph_uid=30, symbol_order=30)

void* operator new(size_t, ImNewDummy, void*) (size_t D.4168, struct ImNewDummy D.4169, void * ptr)
{
  void * D.26840;
  void * _2;

  <bb 2>:
  _2 = ptr_1(D);

<L0>:
  return _2;

}



;; Function void operator delete(void*, ImNewDummy, void*) (_ZdlPv10ImNewDummyS_, funcdef_no=60, decl_uid=4176, cgraph_uid=31, symbol_order=31)

void operator delete(void*, ImNewDummy, void*) (void * D.4173, struct ImNewDummy D.4174, void * D.4175)
{
  <bb 2>:
  GIMPLE_NOP
  return;

}



;; Function ImDrawCmd::ImDrawCmd() (_ZN9ImDrawCmdC2Ev, funcdef_no=135, decl_uid=5034, cgraph_uid=105, symbol_order=105)

ImDrawCmd::ImDrawCmd() (struct ImDrawCmd * const this)
{
  float D.26964;
  float D.26963;
  float D.26962;
  struct ImVec4 * D.26961;
  struct ImVec4 * _4;
  float _8;
  float _10;
  float _12;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  _4 = &this_2(D)->ClipRect;
  ImVec4::ImVec4 (_4);
  this_2(D)->ElemCount = 0;
  this_2(D)->ClipRect.w = 0.0;
  _8 = this_2(D)->ClipRect.w;
  this_2(D)->ClipRect.z = _8;
  _10 = this_2(D)->ClipRect.z;
  this_2(D)->ClipRect.y = _10;
  _12 = this_2(D)->ClipRect.y;
  this_2(D)->ClipRect.x = _12;
  this_2(D)->TextureId = 0B;
  this_2(D)->UserCallback = 0B;
  this_2(D)->UserCallbackData = 0B;
  return;

}



;; Function ImDrawList::ImDrawList(const ImDrawListSharedData*) (_ZN10ImDrawListC2EPK20ImDrawListSharedData, funcdef_no=138, decl_uid=6069, cgraph_uid=108, symbol_order=108)

Merging blocks 4 and 5
Merging blocks 4 and 6
Merging blocks 4 and 7
Merging blocks 4 and 8
Merging blocks 4 and 9
Merging blocks 4 and 10
ImDrawList::ImDrawList(const ImDrawListSharedData*) (struct ImDrawList * const this, const struct ImDrawListSharedData * shared_data)
{
  void * D.32555;
  struct ImVector * D.26855;
  struct ImVector * D.26854;
  struct ImVector * D.26853;
  struct ImVector * D.26852;
  struct ImVector * D.26851;
  struct ImVector * D.26850;
  struct ImVector * D.26849;
  struct ImVector * D.26848;
  struct ImVector * D.26847;
  struct ImVector * D.26846;
  struct ImVector * D.26845;
  struct ImVector * D.26844;
  struct ImVector * D.26843;
  struct ImVector * D.26842;
  struct ImVector * _4;
  struct ImVector * _6;
  struct ImVector * _8;
  struct ImVector * _10;
  struct ImVector * _12;
  struct ImVector * _14;
  struct ImVector * _16;
  struct ImVector * _22;
  struct ImVector * _24;
  struct ImVector * _26;
  struct ImVector * _28;
  struct ImVector * _30;
  struct ImVector * _32;
  struct ImVector * _34;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  _4 = &this_2(D)->CmdBuffer;
  ImVector<ImDrawCmd>::ImVector (_4);
  _6 = &this_2(D)->IdxBuffer;
  ImVector<short unsigned int>::ImVector (_6);
  _8 = &this_2(D)->VtxBuffer;
  ImVector<ImDrawVert>::ImVector (_8);
  _10 = &this_2(D)->_ClipRectStack;
  ImVector<ImVec4>::ImVector (_10);
  _12 = &this_2(D)->_TextureIdStack;
  ImVector<void*>::ImVector (_12);
  _14 = &this_2(D)->_Path;
  ImVector<ImVec2>::ImVector (_14);
  _16 = &this_2(D)->_Channels;
  ImVector<ImDrawChannel>::ImVector (_16);
  this_2(D)->_Data = shared_data_18(D);
  this_2(D)->_OwnerName = 0B;
  ImDrawList::Clear (this_2(D));

  <bb 3>:
  return;

<L0>:
  _22 = &this_2(D)->_Channels;
  ImVector<ImDrawChannel>::~ImVector (_22);
  __builtin_eh_copy_values (6, 7);
  _24 = &this_2(D)->_Path;
  ImVector<ImVec2>::~ImVector (_24);
  __builtin_eh_copy_values (5, 6);
  _26 = &this_2(D)->_TextureIdStack;
  ImVector<void*>::~ImVector (_26);
  __builtin_eh_copy_values (4, 5);
  _28 = &this_2(D)->_ClipRectStack;
  ImVector<ImVec4>::~ImVector (_28);
  __builtin_eh_copy_values (3, 4);
  _30 = &this_2(D)->VtxBuffer;
  ImVector<ImDrawVert>::~ImVector (_30);
  __builtin_eh_copy_values (2, 3);
  _32 = &this_2(D)->IdxBuffer;
  ImVector<short unsigned int>::~ImVector (_32);
  __builtin_eh_copy_values (1, 2);
  _34 = &this_2(D)->CmdBuffer;
  ImVector<ImDrawCmd>::~ImVector (_34);
  _36 = __builtin_eh_pointer (1);
  __builtin_unwind_resume (_36);

}



;; Function void ImDrawList::PathClear() (_ZN10ImDrawList9PathClearEv, funcdef_no=145, decl_uid=5961, cgraph_uid=115, symbol_order=115)

void ImDrawList::PathClear() (struct ImDrawList * const this)
{
  struct ImVector * D.28672;
  struct ImVector * _2;

  <bb 2>:
  _2 = &this_1(D)->_Path;
  ImVector<ImVec2>::resize (_2, 0);
  return;

}



;; Function void ImDrawList::PathLineTo(const ImVec2&) (_ZN10ImDrawList10PathLineToERK6ImVec2, funcdef_no=146, decl_uid=5964, cgraph_uid=116, symbol_order=116)

void ImDrawList::PathLineTo(const ImVec2&) (struct ImDrawList * const this, const struct ImVec2 & pos)
{
  struct ImVector * D.28660;
  struct ImVector * _2;

  <bb 2>:
  _2 = &this_1(D)->_Path;
  ImVector<ImVec2>::push_back (_2, pos_4(D));
  return;

}



;; Function void ImDrawList::PathFillConvex(ImU32) (_ZN10ImDrawList14PathFillConvexEj, funcdef_no=148, decl_uid=5970, cgraph_uid=118, symbol_order=118)

void ImDrawList::PathFillConvex(ImU32) (struct ImDrawList * const this, ImU32 col)
{
  struct ImVec2 * D.28698;
  int D.28697;
  int _3;
  struct ImVec2 * _4;

  <bb 2>:
  _3 = this_2(D)->_Path.Size;
  _4 = this_2(D)->_Path.Data;
  ImDrawList::AddConvexPolyFilled (this_2(D), _4, _3, col_5(D));
  ImDrawList::PathClear (this_2(D));
  return;

}



;; Function void ImDrawList::PathStroke(ImU32, bool, float) (_ZN10ImDrawList10PathStrokeEjbf, funcdef_no=149, decl_uid=5975, cgraph_uid=119, symbol_order=119)

void ImDrawList::PathStroke(ImU32, bool, float) (struct ImDrawList * const this, ImU32 col, bool closed, float thickness)
{
  struct ImVec2 * D.28671;
  int D.28670;
  int D.28669;
  int _2;
  int _5;
  struct ImVec2 * _6;

  <bb 2>:
  _2 = (int) closed_1(D);
  _5 = this_4(D)->_Path.Size;
  _6 = this_4(D)->_Path.Data;
  ImDrawList::AddPolyline (this_4(D), _6, _5, col_7(D), _2, thickness_8(D));
  ImDrawList::PathClear (this_4(D));
  return;

}



;; Function void ImDrawList::PrimWriteVtx(const ImVec2&, const ImVec2&, ImU32) (_ZN10ImDrawList12PrimWriteVtxERK6ImVec2S2_j, funcdef_no=150, decl_uid=6052, cgraph_uid=120, symbol_order=120)

void ImDrawList::PrimWriteVtx(const ImVec2&, const ImVec2&, ImU32) (struct ImDrawList * const this, const struct ImVec2 & pos, const struct ImVec2 & uv, ImU32 col)
{
  unsigned int D.28745;
  unsigned int D.28744;
  struct ImDrawVert * D.28743;
  struct ImDrawVert * D.28742;
  struct ImDrawVert * D.28741;
  struct ImDrawVert * D.28740;
  struct ImDrawVert * D.28739;
  struct ImDrawVert * _3;
  struct ImDrawVert * _6;
  struct ImDrawVert * _9;
  struct ImDrawVert * _12;
  struct ImDrawVert * _13;
  unsigned int _15;
  unsigned int _16;

  <bb 2>:
  _3 = this_2(D)->_VtxWritePtr;
  _3->pos = *pos_4(D);
  _6 = this_2(D)->_VtxWritePtr;
  _6->uv = *uv_7(D);
  _9 = this_2(D)->_VtxWritePtr;
  _9->col = col_10(D);
  _12 = this_2(D)->_VtxWritePtr;
  _13 = _12 + 20;
  this_2(D)->_VtxWritePtr = _13;
  _15 = this_2(D)->_VtxCurrentIdx;
  _16 = _15 + 1;
  this_2(D)->_VtxCurrentIdx = _16;
  return;

}



;; Function void ImDrawList::PrimWriteIdx(ImDrawIdx) (_ZN10ImDrawList12PrimWriteIdxEt, funcdef_no=151, decl_uid=6055, cgraph_uid=121, symbol_order=121)

void ImDrawList::PrimWriteIdx(ImDrawIdx) (struct ImDrawList * const this, ImDrawIdx idx)
{
  ImDrawIdx * D.28738;
  ImDrawIdx * D.28737;
  ImDrawIdx * D.28736;
  ImDrawIdx * _3;
  ImDrawIdx * _6;
  ImDrawIdx * _7;

  <bb 2>:
  _3 = this_2(D)->_IdxWritePtr;
  *_3 = idx_4(D);
  _6 = this_2(D)->_IdxWritePtr;
  _7 = _6 + 2;
  this_2(D)->_IdxWritePtr = _7;
  return;

}



;; Function bool ImFontAtlas::GlyphRangesBuilder::GetBit(int) (_ZN11ImFontAtlas18GlyphRangesBuilder6GetBitEi, funcdef_no=164, decl_uid=6410, cgraph_uid=134, symbol_order=134)

bool ImFontAtlas::GlyphRangesBuilder::GetBit(int) (struct GlyphRangesBuilder * const this, int n)
{
  int D.30665;
  int D.30664;
  int D.30663;
  int D.30662;
  unsigned char D.30661;
  value_type & D.30660;
  struct ImVector * D.30659;
  int D.30658;
  bool D.30657;
  int _2;
  struct ImVector * _4;
  value_type & _7;
  unsigned char _8;
  int _9;
  int _10;
  int _11;
  int _12;
  bool _13;

  <bb 2>:
  _2 = n_1(D) >> 3;
  _4 = &this_3(D)->UsedChars;
  _7 = ImVector<unsigned char>::operator[] (_4, _2);
  _8 = *_7;
  _9 = (int) _8;
  _10 = n_1(D) & 7;
  _11 = _9 >> _10;
  _12 = _11 & 1;
  _13 = _12 != 0;

<L0>:
  return _13;

}



;; Function void ImFontAtlas::GlyphRangesBuilder::SetBit(int) (_ZN11ImFontAtlas18GlyphRangesBuilder6SetBitEi, funcdef_no=165, decl_uid=6413, cgraph_uid=135, symbol_order=135)

void ImFontAtlas::GlyphRangesBuilder::SetBit(int) (struct GlyphRangesBuilder * const this, int n)
{
  unsigned char D.30614;
  signed char D.30613;
  signed char D.30612;
  int D.30611;
  int D.30610;
  signed char D.30609;
  unsigned char D.30608;
  value_type & D.30607;
  struct ImVector * D.30606;
  int D.30605;
  int _2;
  struct ImVector * _4;
  value_type & _7;
  unsigned char _8;
  signed char _9;
  int _10;
  int _11;
  signed char _12;
  signed char _13;
  unsigned char _14;

  <bb 2>:
  _2 = n_1(D) >> 3;
  _4 = &this_3(D)->UsedChars;
  _7 = ImVector<unsigned char>::operator[] (_4, _2);
  _8 = *_7;
  _9 = (signed char) _8;
  _10 = n_1(D) & 7;
  _11 = 1 << _10;
  _12 = (signed char) _11;
  _13 = _9 | _12;
  _14 = (unsigned char) _13;
  *_7 = _14;
  return;

}



;; Function void ImFontAtlas::GlyphRangesBuilder::AddChar(ImWchar) (_ZN11ImFontAtlas18GlyphRangesBuilder7AddCharEt, funcdef_no=166, decl_uid=6416, cgraph_uid=136, symbol_order=136)

void ImFontAtlas::GlyphRangesBuilder::AddChar(ImWchar) (struct GlyphRangesBuilder * const this, ImWchar c)
{
  int D.30604;
  int _2;

  <bb 2>:
  _2 = (int) c_1(D);
  ImFontAtlas::GlyphRangesBuilder::SetBit (this_4(D), _2);
  return;

}



;; Function ImFontAtlas::CustomRect::CustomRect() (_ZN11ImFontAtlas10CustomRectC2Ev, funcdef_no=168, decl_uid=6449, cgraph_uid=138, symbol_order=138)

ImFontAtlas::CustomRect::CustomRect() (struct CustomRect * const this)
{
  struct ImVec2 D.6842;
  short unsigned int D.29709;
  short unsigned int D.29708;
  struct ImVec2 * D.29707;
  struct ImVec2 * _4;
  short unsigned int _8;
  short unsigned int _11;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  _4 = &this_2(D)->GlyphOffset;
  ImVec2::ImVec2 (_4);
  this_2(D)->ID = 4294967295;
  this_2(D)->Height = 0;
  _8 = this_2(D)->Height;
  this_2(D)->Width = _8;
  this_2(D)->Y = 65535;
  _11 = this_2(D)->Y;
  this_2(D)->X = _11;
  this_2(D)->GlyphAdvanceX = 0.0;
  ImVec2::ImVec2 (&D.6842, 0.0, 0.0);
  this_2(D)->GlyphOffset = D.6842;
  D.6842 ={v} {CLOBBER};
  this_2(D)->Font = 0B;
  return;

}



;; Function bool ImFontAtlas::CustomRect::IsPacked() const (_ZNK11ImFontAtlas10CustomRect8IsPackedEv, funcdef_no=170, decl_uid=6445, cgraph_uid=140, symbol_order=140)

bool ImFontAtlas::CustomRect::IsPacked() const (const struct CustomRect * const this)
{
  short unsigned int D.29810;
  bool D.29809;
  short unsigned int _3;
  bool _4;

  <bb 2>:
  _3 = this_2(D)->X;
  _4 = _3 != 65535;

<L0>:
  return _4;

}



;; Function bool ImFont::IsLoaded() const (_ZNK6ImFont8IsLoadedEv, funcdef_no=173, decl_uid=7088, cgraph_uid=143, symbol_order=143)

bool ImFont::IsLoaded() const (const struct ImFont * const this)
{
  struct ImFontAtlas * D.30258;
  bool D.30257;
  struct ImFontAtlas * _3;
  bool _4;

  <bb 2>:
  _3 = this_2(D)->ContainerAtlas;
  _4 = _3 != 0B;

<L0>:
  return _4;

}



;; Function constexpr float std::acos(float) (_ZSt4acosf, funcdef_no=183, decl_uid=54, cgraph_uid=149, symbol_order=149)

__attribute__((nothrow, leaf))
constexpr float std::acos(float) (float __x)
{
  float D.25320;
  float _4;

  <bb 2>:
  _4 = __builtin_acosf (__x_2(D));

<L0>:
  return _4;

}



;; Function constexpr float std::ceil(float) (_ZSt4ceilf, funcdef_no=195, decl_uid=129, cgraph_uid=157, symbol_order=157)

__attribute__((nothrow, leaf, const))
constexpr float std::ceil(float) (float __x)
{
  float D.22842;
  float _2;

  <bb 2>:
  _2 = __builtin_ceilf (__x_1(D));

<L0>:
  return _2;

}



;; Function constexpr float std::cos(float) (_ZSt3cosf, funcdef_no=198, decl_uid=147, cgraph_uid=159, symbol_order=159)

__attribute__((nothrow, leaf, const))
constexpr float std::cos(float) (float __x)
{
  float D.25322;
  float _2;

  <bb 2>:
  _2 = __builtin_cosf (__x_1(D));

<L0>:
  return _2;

}



;; Function constexpr float std::fabs(float) (_ZSt4fabsf, funcdef_no=207, decl_uid=216, cgraph_uid=165, symbol_order=165)

__attribute__((nothrow, leaf, const))
constexpr float std::fabs(float) (float __x)
{
  float D.22268;
  float _2;

  <bb 2>:
  _2 = ABS_EXPR <__x_1(D)>;

<L0>:
  return _2;

}



;; Function constexpr float std::floor(float) (_ZSt5floorf, funcdef_no=210, decl_uid=237, cgraph_uid=167, symbol_order=167)

__attribute__((nothrow, leaf, const))
constexpr float std::floor(float) (float __x)
{
  float D.22840;
  float _2;

  <bb 2>:
  _2 = __builtin_floorf (__x_1(D));

<L0>:
  return _2;

}



;; Function constexpr float std::fmod(float, float) (_ZSt4fmodff, funcdef_no=213, decl_uid=273, cgraph_uid=169, symbol_order=169)

__attribute__((nothrow, leaf))
constexpr float std::fmod(float, float) (float __x, float __y)
{
  float D.25265;
  float _5;

  <bb 2>:
  _5 = __builtin_fmodf (__x_2(D), __y_3(D));

<L0>:
  return _5;

}



;; Function constexpr float std::pow(float, float) (_ZSt3powff, funcdef_no=230, decl_uid=510, cgraph_uid=181, symbol_order=181)

__attribute__((nothrow, leaf))
constexpr float std::pow(float, float) (float __x, float __y)
{
  float D.25273;
  float _5;

  <bb 2>:
  _5 = __builtin_powf (__x_2(D), __y_3(D));

<L0>:
  return _5;

}



;; Function constexpr float std::sqrt(float) (_ZSt4sqrtf, funcdef_no=239, decl_uid=612, cgraph_uid=187, symbol_order=187)

__attribute__((nothrow, leaf))
constexpr float std::sqrt(float) (float __x)
{
  float D.21900;
  float _4;

  <bb 2>:
  _4 = __builtin_sqrtf (__x_2(D));

<L0>:
  return _4;

}



;; Function bool ImCharIsSpace(unsigned int) (_ZL13ImCharIsSpacej, funcdef_no=398, decl_uid=10525, cgraph_uid=297, symbol_order=297)

bool ImCharIsSpace(unsigned int) (unsigned int c)
{
  bool iftmp.747;
  bool D.31158;
  bool iftmp.747_1;
  bool iftmp.747_3;
  bool iftmp.747_4;
  bool _5;

  <bb 2>:
  if (c_2(D) == 32)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 3>:
  if (c_2(D) == 9)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  if (c_2(D) == 12288)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  iftmp.747_4 = 1;
  goto <bb 7>;

  <bb 6>:
  iftmp.747_3 = 0;

  <bb 7>:
  # iftmp.747_1 = PHI <iftmp.747_4(5), iftmp.747_3(6)>
  _5 = iftmp.747_1;

<L5>:
  return _5;

}



;; Function int ImUpperPowerOfTwo(int) (_ZL17ImUpperPowerOfTwoi, funcdef_no=400, decl_uid=10531, cgraph_uid=299, symbol_order=299)

int ImUpperPowerOfTwo(int) (int v)
{
  int D.30271;
  int D.30270;
  int D.30269;
  int D.30268;
  int D.30267;
  int D.30266;
  int _3;
  int _5;
  int _7;
  int _9;
  int _11;
  int _14;

  <bb 2>:
  v_2 = v_1(D) + -1;
  _3 = v_2 >> 1;
  v_4 = _3 | v_2;
  _5 = v_4 >> 2;
  v_6 = _5 | v_4;
  _7 = v_6 >> 4;
  v_8 = _7 | v_6;
  _9 = v_8 >> 8;
  v_10 = _9 | v_8;
  _11 = v_10 >> 16;
  v_12 = _11 | v_10;
  v_13 = v_12 + 1;
  _14 = v_13;

<L0>:
  return _14;

}



;; Function ImVec2 operator*(const ImVec2&, float) (_ZmlRK6ImVec2f, funcdef_no=401, decl_uid=10593, cgraph_uid=300, symbol_order=300)

ImVec2 operator*(const ImVec2&, float) (const struct ImVec2 & lhs, const float rhs)
{
  float D.28200;
  float D.28199;
  float D.28198;
  float D.28197;
  struct ImVec2 D.10595;
  struct ImVec2 D.28196;
  float _3;
  float _5;
  float _6;
  float _7;

  <bb 2>:
  _3 = lhs_2(D)->y;
  _5 = _3 * rhs_4(D);
  _6 = lhs_2(D)->x;
  _7 = _6 * rhs_4(D);
  ImVec2::ImVec2 (&D.10595, _7, _5);
  D.28196 = D.10595;
  D.10595 ={v} {CLOBBER};

<L1>:
  return D.28196;

}



;; Function ImVec2 operator+(const ImVec2&, const ImVec2&) (_ZplRK6ImVec2S1_, funcdef_no=403, decl_uid=10603, cgraph_uid=302, symbol_order=302)

ImVec2 operator+(const ImVec2&, const ImVec2&) (const struct ImVec2 & lhs, const struct ImVec2 & rhs)
{
  float D.28209;
  float D.28208;
  float D.28207;
  float D.28206;
  float D.28205;
  float D.28204;
  struct ImVec2 D.10605;
  struct ImVec2 D.28203;
  float _3;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;

  <bb 2>:
  _3 = lhs_2(D)->y;
  _5 = rhs_4(D)->y;
  _6 = _3 + _5;
  _7 = lhs_2(D)->x;
  _8 = rhs_4(D)->x;
  _9 = _7 + _8;
  ImVec2::ImVec2 (&D.10605, _9, _6);
  D.28203 = D.10605;
  D.10605 ={v} {CLOBBER};

<L1>:
  return D.28203;

}



;; Function ImVec2 operator-(const ImVec2&, const ImVec2&) (_ZmiRK6ImVec2S1_, funcdef_no=404, decl_uid=10608, cgraph_uid=303, symbol_order=303)

ImVec2 operator-(const ImVec2&, const ImVec2&) (const struct ImVec2 & lhs, const struct ImVec2 & rhs)
{
  float D.28218;
  float D.28217;
  float D.28216;
  float D.28215;
  float D.28214;
  float D.28213;
  struct ImVec2 D.10610;
  struct ImVec2 D.28212;
  float _3;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;

  <bb 2>:
  _3 = lhs_2(D)->y;
  _5 = rhs_4(D)->y;
  _6 = _3 - _5;
  _7 = lhs_2(D)->x;
  _8 = rhs_4(D)->x;
  _9 = _7 - _8;
  ImVec2::ImVec2 (&D.10610, _9, _6);
  D.28212 = D.10610;
  D.10610 ={v} {CLOBBER};

<L1>:
  return D.28212;

}



;; Function ImVec2 operator*(const ImVec2&, const ImVec2&) (_ZmlRK6ImVec2S1_, funcdef_no=405, decl_uid=10613, cgraph_uid=304, symbol_order=304)

ImVec2 operator*(const ImVec2&, const ImVec2&) (const struct ImVec2 & lhs, const struct ImVec2 & rhs)
{
  float D.29860;
  float D.29859;
  float D.29858;
  float D.29857;
  float D.29856;
  float D.29855;
  struct ImVec2 D.10615;
  struct ImVec2 D.29854;
  float _3;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;

  <bb 2>:
  _3 = lhs_2(D)->y;
  _5 = rhs_4(D)->y;
  _6 = _3 * _5;
  _7 = lhs_2(D)->x;
  _8 = rhs_4(D)->x;
  _9 = _7 * _8;
  ImVec2::ImVec2 (&D.10615, _9, _6);
  D.29854 = D.10615;
  D.10615 ={v} {CLOBBER};

<L1>:
  return D.29854;

}



;; Function ImVec2& operator*=(ImVec2&, float) (_ZmLR6ImVec2f, funcdef_no=409, decl_uid=10631, cgraph_uid=308, symbol_order=308)

ImVec2& operator*=(ImVec2&, float) (struct ImVec2 & lhs, const float rhs)
{
  struct ImVec2 & D.28236;
  float D.28235;
  float D.28234;
  float D.28233;
  float D.28232;
  float _3;
  float _5;
  float _7;
  float _8;
  struct ImVec2 & _10;

  <bb 2>:
  _3 = lhs_2(D)->x;
  _5 = _3 * rhs_4(D);
  lhs_2(D)->x = _5;
  _7 = lhs_2(D)->y;
  _8 = _7 * rhs_4(D);
  lhs_2(D)->y = _8;
  _10 = lhs_2(D);

<L0>:
  return _10;

}



;; Function int ImMax(int, int) (_ZL5ImMaxii, funcdef_no=415, decl_uid=10658, cgraph_uid=314, symbol_order=314)

int ImMax(int, int) (int lhs, int rhs)
{
  int iftmp.701;
  int D.30260;
  int iftmp.701_1;
  int iftmp.701_4;
  int iftmp.701_5;
  int _6;

  <bb 2>:
  if (lhs_2(D) >= rhs_3(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.701_4 = lhs_2(D);
  goto <bb 5>;

  <bb 4>:
  iftmp.701_5 = rhs_3(D);

  <bb 5>:
  # iftmp.701_1 = PHI <iftmp.701_4(3), iftmp.701_5(4)>
  _6 = iftmp.701_1;

<L3>:
  return _6;

}



;; Function float ImMin(float, float) (_ZL5ImMinff, funcdef_no=416, decl_uid=10662, cgraph_uid=315, symbol_order=315)

float ImMin(float, float) (float lhs, float rhs)
{
  float iftmp.646;
  float D.28654;
  float iftmp.646_1;
  float iftmp.646_4;
  float iftmp.646_5;
  float _6;

  <bb 2>:
  if (lhs_2(D) < rhs_3(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.646_4 = lhs_2(D);
  goto <bb 5>;

  <bb 4>:
  iftmp.646_5 = rhs_3(D);

  <bb 5>:
  # iftmp.646_1 = PHI <iftmp.646_4(3), iftmp.646_5(4)>
  _6 = iftmp.646_1;

<L3>:
  return _6;

}



;; Function float ImMax(float, float) (_ZL5ImMaxff, funcdef_no=417, decl_uid=10666, cgraph_uid=316, symbol_order=316)

float ImMax(float, float) (float lhs, float rhs)
{
  float iftmp.600;
  float D.27176;
  float iftmp.600_1;
  float iftmp.600_4;
  float iftmp.600_5;
  float _6;

  <bb 2>:
  if (lhs_2(D) >= rhs_3(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.600_4 = lhs_2(D);
  goto <bb 5>;

  <bb 4>:
  iftmp.600_5 = rhs_3(D);

  <bb 5>:
  # iftmp.600_1 = PHI <iftmp.600_4(3), iftmp.600_5(4)>
  _6 = iftmp.600_1;

<L3>:
  return _6;

}



;; Function ImVec2 ImMin(const ImVec2&, const ImVec2&) (_ZL5ImMinRK6ImVec2S1_, funcdef_no=418, decl_uid=10670, cgraph_uid=317, symbol_order=317)

ImVec2 ImMin(const ImVec2&, const ImVec2&) (const struct ImVec2 & lhs, const struct ImVec2 & rhs)
{
  float D.29119;
  float D.29118;
  const float iftmp.664;
  float D.29113;
  float D.29112;
  const float iftmp.663;
  struct ImVec2 D.10672;
  struct ImVec2 D.29110;
  const float iftmp.663_1;
  const float iftmp.664_2;
  float _5;
  float _7;
  const float iftmp.663_8;
  const float iftmp.663_9;
  float _10;
  float _11;
  const float iftmp.664_12;
  const float iftmp.664_13;

  <bb 2>:
  _5 = lhs_4(D)->y;
  _7 = rhs_6(D)->y;
  if (_5 < _7)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.663_8 = lhs_4(D)->y;
  goto <bb 5>;

  <bb 4>:
  iftmp.663_9 = rhs_6(D)->y;

  <bb 5>:
  # iftmp.663_1 = PHI <iftmp.663_8(3), iftmp.663_9(4)>
  _10 = lhs_4(D)->x;
  _11 = rhs_6(D)->x;
  if (_10 < _11)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.664_12 = lhs_4(D)->x;
  goto <bb 8>;

  <bb 7>:
  iftmp.664_13 = rhs_6(D)->x;

  <bb 8>:
  # iftmp.664_2 = PHI <iftmp.664_12(6), iftmp.664_13(7)>
  ImVec2::ImVec2 (&D.10672, iftmp.664_2, iftmp.663_1);
  D.29110 = D.10672;
  D.10672 ={v} {CLOBBER};

<L7>:
  return D.29110;

}



;; Function ImVec2 ImMax(const ImVec2&, const ImVec2&) (_ZL5ImMaxRK6ImVec2S1_, funcdef_no=419, decl_uid=10675, cgraph_uid=318, symbol_order=318)

ImVec2 ImMax(const ImVec2&, const ImVec2&) (const struct ImVec2 & lhs, const struct ImVec2 & rhs)
{
  float D.29134;
  float D.29133;
  const float iftmp.666;
  float D.29128;
  float D.29127;
  const float iftmp.665;
  struct ImVec2 D.10677;
  struct ImVec2 D.29125;
  const float iftmp.665_1;
  const float iftmp.666_2;
  float _5;
  float _7;
  const float iftmp.665_8;
  const float iftmp.665_9;
  float _10;
  float _11;
  const float iftmp.666_12;
  const float iftmp.666_13;

  <bb 2>:
  _5 = lhs_4(D)->y;
  _7 = rhs_6(D)->y;
  if (_5 >= _7)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.665_8 = lhs_4(D)->y;
  goto <bb 5>;

  <bb 4>:
  iftmp.665_9 = rhs_6(D)->y;

  <bb 5>:
  # iftmp.665_1 = PHI <iftmp.665_8(3), iftmp.665_9(4)>
  _10 = lhs_4(D)->x;
  _11 = rhs_6(D)->x;
  if (_10 >= _11)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.666_12 = lhs_4(D)->x;
  goto <bb 8>;

  <bb 7>:
  iftmp.666_13 = rhs_6(D)->x;

  <bb 8>:
  # iftmp.666_2 = PHI <iftmp.666_12(6), iftmp.666_13(7)>
  ImVec2::ImVec2 (&D.10677, iftmp.666_2, iftmp.665_1);
  D.29125 = D.10677;
  D.10677 ={v} {CLOBBER};

<L7>:
  return D.29125;

}



;; Function float ImClamp(float, float, float) (_ZL7ImClampfff, funcdef_no=421, decl_uid=10686, cgraph_uid=320, symbol_order=320)

float ImClamp(float, float, float) (float v, float mn, float mx)
{
  float iftmp.654;
  float iftmp.653;
  float D.29037;
  float iftmp.653_1;
  float iftmp.654_2;
  float iftmp.653_5;
  float iftmp.654_7;
  float iftmp.654_8;
  float iftmp.653_9;
  float _10;

  <bb 2>:
  if (v_3(D) < mn_4(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.653_5 = mn_4(D);
  goto <bb 8>;

  <bb 4>:
  if (v_3(D) > mx_6(D))
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  iftmp.654_7 = mx_6(D);
  goto <bb 7>;

  <bb 6>:
  iftmp.654_8 = v_3(D);

  <bb 7>:
  # iftmp.654_2 = PHI <iftmp.654_7(5), iftmp.654_8(6)>
  iftmp.653_9 = iftmp.654_2;

  <bb 8>:
  # iftmp.653_1 = PHI <iftmp.653_5(3), iftmp.653_9(7)>
  _10 = iftmp.653_1;

<L6>:
  return _10;

}



;; Function ImVec2 ImClamp(const ImVec2&, const ImVec2&, ImVec2) (_ZL7ImClampRK6ImVec2S1_S_, funcdef_no=422, decl_uid=10691, cgraph_uid=321, symbol_order=321)

ImVec2 ImClamp(const ImVec2&, const ImVec2&, ImVec2) (const struct ImVec2 & f, const struct ImVec2 & mn, struct ImVec2 mx)
{
  float D.29148;
  float D.29147;
  float D.29146;
  float D.29145;
  float D.29144;
  float D.29143;
  float D.29142;
  float D.29141;
  struct ImVec2 D.10693;
  struct ImVec2 D.29140;
  float _2;
  float _4;
  float _6;
  float _8;
  float _9;
  float _10;
  float _11;
  float _13;

  <bb 2>:
  _2 = mx.y;
  _4 = mn_3(D)->y;
  _6 = f_5(D)->y;
  _8 = ImClamp (_6, _4, _2);
  _9 = mx.x;
  _10 = mn_3(D)->x;
  _11 = f_5(D)->x;
  _13 = ImClamp (_11, _10, _9);
  ImVec2::ImVec2 (&D.10693, _13, _8);
  D.29140 = D.10693;
  D.10693 ={v} {CLOBBER};

<L1>:
  return D.29140;

}



;; Function void ImSwap(float&, float&) (_ZL6ImSwapRfS_, funcdef_no=425, decl_uid=10704, cgraph_uid=324, symbol_order=324)

void ImSwap(float&, float&) (float & a, float & b)
{
  float tmp;
  float D.31677;
  float _5;

  <bb 2>:
  tmp_3 = *a_2(D);
  _5 = *b_4(D);
  *a_2(D) = _5;
  *b_4(D) = tmp_3;
  return;

}



;; Function int ImLerp(int, int, float) (_ZL6ImLerpiif, funcdef_no=426, decl_uid=10710, cgraph_uid=325, symbol_order=325)

int ImLerp(int, int, float) (int a, int b, float t)
{
  float D.29052;
  float D.29051;
  float D.29050;
  int D.29049;
  float D.29048;
  int D.29047;
  float _2;
  int _4;
  float _5;
  float _7;
  float _8;
  int _9;

  <bb 2>:
  _2 = (float) a_1(D);
  _4 = b_3(D) - a_1(D);
  _5 = (float) _4;
  _7 = _5 * t_6(D);
  _8 = _2 + _7;
  _9 = (int) _8;

<L0>:
  return _9;

}



;; Function float ImLerp(float, float, float) (_ZL6ImLerpfff, funcdef_no=427, decl_uid=10715, cgraph_uid=326, symbol_order=326)

float ImLerp(float, float, float) (float a, float b, float t)
{
  float D.31680;
  float D.31679;
  float D.31678;
  float _3;
  float _5;
  float _6;

  <bb 2>:
  _3 = b_1(D) - a_2(D);
  _5 = _3 * t_4(D);
  _6 = _5 + a_2(D);

<L0>:
  return _6;

}



;; Function float ImLengthSqr(const ImVec2&) (_ZL11ImLengthSqrRK6ImVec2, funcdef_no=431, decl_uid=10736, cgraph_uid=330, symbol_order=330)

float ImLengthSqr(const ImVec2&) (const struct ImVec2 & lhs)
{
  float D.29027;
  float D.29026;
  float D.29025;
  float D.29024;
  float D.29023;
  float D.29022;
  float D.29021;
  float _3;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;

  <bb 2>:
  _3 = lhs_2(D)->x;
  _4 = lhs_2(D)->x;
  _5 = _3 * _4;
  _6 = lhs_2(D)->y;
  _7 = lhs_2(D)->y;
  _8 = _6 * _7;
  _9 = _5 + _8;

<L0>:
  return _9;

}



;; Function float ImInvLength(const ImVec2&, float) (_ZL11ImInvLengthRK6ImVec2f, funcdef_no=433, decl_uid=10743, cgraph_uid=332, symbol_order=332)

float ImInvLength(const ImVec2&, float) (const struct ImVec2 & lhs, float fail_value)
{
  float d;
  float D.28230;
  float D.28229;
  float D.28226;
  float D.28225;
  float D.28224;
  float D.28223;
  float D.28222;
  float D.28221;
  float _1;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _10;
  float _13;
  float _14;
  float _16;

  <bb 2>:
  _5 = lhs_4(D)->x;
  _6 = lhs_4(D)->x;
  _7 = _5 * _6;
  _8 = lhs_4(D)->y;
  _9 = lhs_4(D)->y;
  _10 = _8 * _9;
  d_11 = _7 + _10;
  if (d_11 > 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _13 = sqrtf (d_11);
  _14 = 1.0e+0 / _13;
  goto <bb 5> (<L2>);

  <bb 4>:
  _16 = fail_value_15(D);

  # _1 = PHI <_14(3), _16(4)>
<L2>:
  return _1;

}



;; Function float ImFloor(float) (_ZL7ImFloorf, funcdef_no=434, decl_uid=10747, cgraph_uid=333, symbol_order=333)

float ImFloor(float) (float f)
{
  int D.30274;
  float D.30273;
  int _2;
  float _3;

  <bb 2>:
  _2 = (int) f_1(D);
  _3 = (float) _2;

<L0>:
  return _3;

}



;; Function float ImDot(const ImVec2&, const ImVec2&) (_ZL5ImDotRK6ImVec2S1_, funcdef_no=436, decl_uid=10755, cgraph_uid=335, symbol_order=335)

float ImDot(const ImVec2&, const ImVec2&) (const struct ImVec2 & a, const struct ImVec2 & b)
{
  float D.29035;
  float D.29034;
  float D.29033;
  float D.29032;
  float D.29031;
  float D.29030;
  float D.29029;
  float _3;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;
  float _10;

  <bb 2>:
  _3 = a_2(D)->x;
  _5 = b_4(D)->x;
  _6 = _3 * _5;
  _7 = a_2(D)->y;
  _8 = b_4(D)->y;
  _9 = _7 * _8;
  _10 = _6 + _9;

<L0>:
  return _10;

}



;; Function ImVec2 ImMul(const ImVec2&, const ImVec2&) (_ZL5ImMulRK6ImVec2S1_, funcdef_no=439, decl_uid=10770, cgraph_uid=338, symbol_order=338)

ImVec2 ImMul(const ImVec2&, const ImVec2&) (const struct ImVec2 & lhs, const struct ImVec2 & rhs)
{
  float D.29157;
  float D.29156;
  float D.29155;
  float D.29154;
  float D.29153;
  float D.29152;
  struct ImVec2 D.10772;
  struct ImVec2 D.29151;
  float _3;
  float _5;
  float _6;
  float _7;
  float _8;
  float _9;

  <bb 2>:
  _3 = lhs_2(D)->y;
  _5 = rhs_4(D)->y;
  _6 = _3 * _5;
  _7 = lhs_2(D)->x;
  _8 = rhs_4(D)->x;
  _9 = _7 * _8;
  ImVec2::ImVec2 (&D.10772, _9, _6);
  D.29151 = D.10772;
  D.10772 ={v} {CLOBBER};

<L1>:
  return D.29151;

}



;; Function void stbrp_setup_heuristic(stbrp_context*, int) (stbrp_setup_heuristic, funcdef_no=553, decl_uid=14142, cgraph_uid=452, symbol_order=452)

void stbrp_setup_heuristic(stbrp_context*, int) (struct stbrp_context * context, int heuristic)
{
  static const char __PRETTY_FUNCTION__[48] = "void stbrp_setup_heuristic(stbrp_context*, int)";
  int D.19975;
  int _3;

  <bb 2>:
  _3 = context_2(D)->init_mode;
  switch (_3) <default: <L6>, case 1: <L0>>

<L0>:
  if (heuristic_4(D) == 0)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  if (heuristic_4(D) == 1)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  __assert_fail ("heuristic == STBRP_HEURISTIC_Skyline_BL_sortHeight || heuristic == STBRP_HEURISTIC_Skyline_BF_sortHeight", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 224, &__PRETTY_FUNCTION__);

  <bb 6>:
  context_2(D)->heuristic = heuristic_4(D);
  goto <bb 8>;

<L6>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 228, &__PRETTY_FUNCTION__);

  <bb 8>:
  return;

}



;; Function void stbrp_setup_allow_out_of_mem(stbrp_context*, int) (stbrp_setup_allow_out_of_mem, funcdef_no=554, decl_uid=14139, cgraph_uid=453, symbol_order=453)

void stbrp_setup_allow_out_of_mem(stbrp_context*, int) (struct stbrp_context * context, int allow_out_of_mem)
{
  int D.19992;
  int D.19991;
  int D.19990;
  int D.19989;
  int D.19988;
  int D.19987;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;

  <bb 2>:
  if (allow_out_of_mem_2(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  context_4(D)->align = 1;
  goto <bb 5>;

  <bb 4>:
  _6 = context_4(D)->width;
  _7 = context_4(D)->num_nodes;
  _8 = _6 + _7;
  _9 = _8 + -1;
  _10 = context_4(D)->num_nodes;
  _11 = _9 / _10;
  context_4(D)->align = _11;

  <bb 5>:
  return;

}



;; Function void stbrp_init_target(stbrp_context*, int, int, stbrp_node*, int) (stbrp_init_target, funcdef_no=555, decl_uid=14136, cgraph_uid=454, symbol_order=454)

void stbrp_init_target(stbrp_context*, int, int, stbrp_node*, int) (struct stbrp_context * context, int width, int height, struct stbrp_node * nodes, int num_nodes)
{
  static const char __PRETTY_FUNCTION__[67] = "void stbrp_init_target(stbrp_context*, int, int, stbrp_node*, int)";
  int i;
  short unsigned int D.20012;
  struct stbrp_node * D.20011;
  struct stbrp_node * D.20010;
  struct stbrp_node * D.20009;
  long unsigned int D.20008;
  long unsigned int D.20007;
  struct stbrp_node * D.20006;
  sizetype D.20005;
  sizetype D.20004;
  sizetype D.20003;
  struct stbrp_node * D.20002;
  long unsigned int D.20001;
  long unsigned int D.20000;
  int D.19998;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  struct stbrp_node * _12;
  sizetype _13;
  sizetype _14;
  sizetype _15;
  struct stbrp_node * _16;
  long unsigned int _19;
  long unsigned int _20;
  struct stbrp_node * _21;
  struct stbrp_node * _27;
  struct stbrp_node * _35;
  short unsigned int _37;

  <bb 2>:
  if (width_3(D) <= 65535)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  if (height_4(D) <= 65535)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:
  __assert_fail ("width <= 0xffff && height <= 0xffff", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 256, &__PRETTY_FUNCTION__);

  <bb 6>:
  i_5 = 0;

  <bb 7>:
  # i_1 = PHI <i_5(6), i_18(8)>
  _8 = num_nodes_7(D) + -1;
  if (_8 <= i_1)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  _9 = (long unsigned int) i_1;
  _10 = _9 * 16;
  _12 = nodes_11(D) + _10;
  _13 = (sizetype) i_1;
  _14 = _13 + 1;
  _15 = _14 * 16;
  _16 = nodes_11(D) + _15;
  _12->next = _16;
  i_18 = i_1 + 1;
  goto <bb 7>;

  <bb 9>:
  _19 = (long unsigned int) i_1;
  _20 = _19 * 16;
  _21 = nodes_11(D) + _20;
  _21->next = 0B;
  context_23(D)->init_mode = 1;
  context_23(D)->heuristic = 0;
  context_23(D)->free_head = nodes_11(D);
  _27 = &context_23(D)->extra[0];
  context_23(D)->active_head = _27;
  context_23(D)->width = width_3(D);
  context_23(D)->height = height_4(D);
  context_23(D)->num_nodes = num_nodes_7(D);
  stbrp_setup_allow_out_of_mem (context_23(D), 0);
  context_23(D)->extra[0].x = 0;
  context_23(D)->extra[0].y = 0;
  _35 = &context_23(D)->extra[1];
  context_23(D)->extra[0].next = _35;
  _37 = (short unsigned int) width_3(D);
  context_23(D)->extra[1].x = _37;
  context_23(D)->extra[1].y = 65535;
  context_23(D)->extra[1].next = 0B;
  return;

}



;; Function int stbrp__skyline_find_min_y(stbrp_context*, stbrp_node*, int, int, int*) (_ZL25stbrp__skyline_find_min_yP13stbrp_contextP10stbrp_nodeiiPi, funcdef_no=556, decl_uid=14966, cgraph_uid=455, symbol_order=455)

int stbrp__skyline_find_min_y(stbrp_context*, stbrp_node*, int, int, int*) (struct stbrp_context * c, struct stbrp_node * first, int x0, int width, int * pwaste)
{
  int under_width;
  static const char __PRETTY_FUNCTION__[75] = "int stbrp__skyline_find_min_y(stbrp_context*, stbrp_node*, int, int, int*)";
  int waste_area;
  int visited_width;
  int min_y;
  int x1;
  struct stbrp_node * node;
  int D.20071;
  int D.20070;
  int D.20069;
  int D.20068;
  short unsigned int D.20067;
  int D.20063;
  int D.20062;
  short unsigned int D.20061;
  int D.20060;
  short unsigned int D.20059;
  struct stbrp_node * D.20058;
  int D.20056;
  int D.20055;
  short unsigned int D.20054;
  int D.20053;
  short unsigned int D.20052;
  struct stbrp_node * D.20051;
  int D.20049;
  int D.20048;
  short unsigned int D.20047;
  struct stbrp_node * D.20046;
  int D.20043;
  short unsigned int D.20042;
  short unsigned int D.20041;
  int D.20040;
  int D.20039;
  int D.20038;
  short unsigned int D.20037;
  int D.20034;
  short unsigned int D.20033;
  int D.20031;
  short unsigned int D.20030;
  int D.20025;
  short unsigned int D.20024;
  int D.20020;
  short unsigned int D.20019;
  struct stbrp_node * D.20018;
  int D.20014;
  short unsigned int D.20013;
  short unsigned int _16;
  int _17;
  struct stbrp_node * _18;
  short unsigned int _19;
  int _20;
  short unsigned int _21;
  int _22;
  short unsigned int _26;
  int _27;
  short unsigned int _28;
  int _29;
  short unsigned int _30;
  int _31;
  int _32;
  int _33;
  short unsigned int _35;
  short unsigned int _37;
  int _38;
  struct stbrp_node * _39;
  short unsigned int _40;
  int _41;
  int _42;
  struct stbrp_node * _44;
  short unsigned int _45;
  int _46;
  short unsigned int _47;
  int _48;
  int _49;
  struct stbrp_node * _51;
  short unsigned int _52;
  int _53;
  short unsigned int _54;
  int _55;
  int _57;
  short unsigned int _59;
  int _60;
  int _61;
  int _62;
  int _68;

  <bb 2>:
  node_11 = first_10(D);
  x1_14 = x0_12(D) + width_13(D);
  _16 = first_10(D)->x;
  _17 = (int) _16;
  if (_17 <= x0_12(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("first->x <= x0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 293, &__PRETTY_FUNCTION__);

  <bb 4>:
  _18 = node_11->next;
  _19 = _18->x;
  _20 = (int) _19;
  if (_20 > x0_12(D))
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  __assert_fail ("node->next->x > x0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 300, &__PRETTY_FUNCTION__);

  <bb 6>:
  _21 = node_11->x;
  _22 = (int) _21;
  if (_22 <= x0_12(D))
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  __assert_fail ("node->x <= x0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 303, &__PRETTY_FUNCTION__);

  <bb 8>:
  min_y_23 = 0;
  waste_area_24 = 0;
  visited_width_25 = 0;

  <bb 9>:
  # node_1 = PHI <node_11(8), node_65(18)>
  # min_y_2 = PHI <min_y_23(8), min_y_3(18)>
  # visited_width_4 = PHI <visited_width_25(8), visited_width_6(18)>
  # waste_area_7 = PHI <waste_area_24(8), waste_area_8(18)>
  _26 = node_1->x;
  _27 = (int) _26;
  if (_27 >= x1_14)
    goto <bb 19>;
  else
    goto <bb 10>;

  <bb 10>:
  _28 = node_1->y;
  _29 = (int) _28;
  if (_29 > min_y_2)
    goto <bb 11>;
  else
    goto <bb 15>;

  <bb 11>:
  _30 = node_1->y;
  _31 = (int) _30;
  _32 = _31 - min_y_2;
  _33 = _32 * visited_width_4;
  waste_area_34 = _33 + waste_area_7;
  _35 = node_1->y;
  min_y_36 = (int) _35;
  _37 = node_1->x;
  _38 = (int) _37;
  if (_38 < x0_12(D))
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _39 = node_1->next;
  _40 = _39->x;
  _41 = (int) _40;
  _42 = _41 - x0_12(D);
  visited_width_43 = _42 + visited_width_4;
  goto <bb 14>;

  <bb 13>:
  _44 = node_1->next;
  _45 = _44->x;
  _46 = (int) _45;
  _47 = node_1->x;
  _48 = (int) _47;
  _49 = _46 - _48;
  visited_width_50 = _49 + visited_width_4;

  <bb 14>:
  # visited_width_5 = PHI <visited_width_43(12), visited_width_50(13)>
  goto <bb 18>;

  <bb 15>:
  _51 = node_1->next;
  _52 = _51->x;
  _53 = (int) _52;
  _54 = node_1->x;
  _55 = (int) _54;
  under_width_56 = _53 - _55;
  _57 = under_width_56 + visited_width_4;
  if (_57 > width_13(D))
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  under_width_58 = width_13(D) - visited_width_4;

  <bb 17>:
  # under_width_9 = PHI <under_width_56(15), under_width_58(16)>
  _59 = node_1->y;
  _60 = (int) _59;
  _61 = min_y_2 - _60;
  _62 = _61 * under_width_9;
  waste_area_63 = _62 + waste_area_7;
  visited_width_64 = visited_width_4 + under_width_9;

  <bb 18>:
  # min_y_3 = PHI <min_y_36(14), min_y_2(17)>
  # visited_width_6 = PHI <visited_width_5(14), visited_width_64(17)>
  # waste_area_8 = PHI <waste_area_34(14), waste_area_63(17)>
  node_65 = node_1->next;
  goto <bb 9>;

  <bb 19>:
  *pwaste_66(D) = waste_area_7;
  _68 = min_y_2;

<L21>:
  return _68;

}



;; Function stbrp__findresult stbrp__skyline_find_best_pos(stbrp_context*, int, int) (_ZL28stbrp__skyline_find_best_posP13stbrp_contextii, funcdef_no=557, decl_uid=14986, cgraph_uid=456, symbol_order=456)

stbrp__findresult stbrp__skyline_find_best_pos(stbrp_context*, int, int) (struct stbrp_context * c, int width, int height)
{
  int waste;
  int y;
  int xpos;
  int waste;
  int y;
  static const char __PRETTY_FUNCTION__[73] = "stbrp__findresult stbrp__skyline_find_best_pos(stbrp_context*, int, int)";
  struct stbrp_node * * best;
  struct stbrp_node * tail;
  struct stbrp_node * node;
  struct stbrp_node * * prev;
  struct stbrp__findresult fr;
  int best_y;
  int best_x;
  int best_waste;
  struct stbrp__findresult D.20160;
  int waste.3;
  int waste.2;
  int D.20142;
  int D.20141;
  int D.20139;
  short unsigned int D.20138;
  int D.20136;
  short unsigned int D.20135;
  struct stbrp_node * D.20134;
  int D.20130;
  short unsigned int D.20129;
  struct stbrp_node * D.20128;
  int D.20123;
  short unsigned int D.20122;
  int D.20118;
  short unsigned int D.20117;
  int D.20113;
  short unsigned int D.20111;
  struct stbrp_node * D.20110;
  int iftmp.1;
  int waste.0;
  int D.20098;
  int D.20097;
  int D.20090;
  int D.20089;
  short unsigned int D.20088;
  int D.20086;
  int D.20085;
  int D.20084;
  short unsigned int D.20083;
  int D.20078;
  int D.20077;
  int D.20076;
  int D.20075;
  int D.20074;
  int D.20073;
  int iftmp.1_33;
  int _42;
  int _44;
  int _46;
  int _47;
  int _49;
  int _50;
  short unsigned int _53;
  int _54;
  int _55;
  int _56;
  short unsigned int _57;
  int _58;
  int _61;
  int _65;
  int _66;
  int waste.0_67;
  struct stbrp_node * _74;
  short unsigned int _75;
  int iftmp.1_76;
  int iftmp.1_77;
  int _79;
  short unsigned int _83;
  int _84;
  short unsigned int _86;
  int _87;
  struct stbrp_node * _89;
  short unsigned int _90;
  int _91;
  struct stbrp_node * _94;
  short unsigned int _95;
  int _96;
  short unsigned int _97;
  int _98;
  int _101;
  int _102;
  int waste.2_103;
  int waste.3_104;

  <bb 2>:
  best_waste_37 = 1073741824;
  best_y_38 = 1073741824;
  best_39 = 0B;
  _42 = c_41(D)->align;
  _44 = _42 + width_43(D);
  width_45 = _44 + -1;
  _46 = c_41(D)->align;
  _47 = width_45 % _46;
  width_48 = width_45 - _47;
  _49 = c_41(D)->align;
  _50 = width_48 % _49;
  if (_50 == 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("width % c->align == 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 350, &__PRETTY_FUNCTION__);

  <bb 4>:
  node_51 = c_41(D)->active_head;
  prev_52 = &c_41(D)->active_head;

  <bb 5>:
  # best_waste_1 = PHI <best_waste_37(4), best_waste_3(15)>
  # best_y_11 = PHI <best_y_38(4), best_y_13(15)>
  # prev_18 = PHI <prev_52(4), prev_71(15)>
  # node_21 = PHI <node_51(4), node_72(15)>
  # best_26 = PHI <best_39(4), best_28(15)>
  _53 = node_21->x;
  _54 = (int) _53;
  _55 = _54 + width_48;
  _56 = c_41(D)->width;
  if (_55 > _56)
    goto <bb 16>;
  else
    goto <bb 6>;

  <bb 6>:
  _57 = node_21->x;
  _58 = (int) _57;
  y_60 = stbrp__skyline_find_min_y (c_41(D), node_21, _58, width_48, &waste);
  _61 = c_41(D)->heuristic;
  if (_61 == 0)
    goto <bb 7>;
  else
    goto <bb 9>;

  <bb 7>:
  if (y_60 < best_y_11)
    goto <bb 8>;
  else
    goto <bb 15>;

  <bb 8>:
  best_y_62 = y_60;
  best_63 = prev_18;
  goto <bb 15>;

  <bb 9>:
  _65 = y_60 + height_64(D);
  _66 = c_41(D)->height;
  if (_65 <= _66)
    goto <bb 10>;
  else
    goto <bb 15>;

  <bb 10>:
  if (y_60 < best_y_11)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 11>:
  if (y_60 == best_y_11)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  waste.0_67 = waste;
  if (waste.0_67 < best_waste_1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  best_y_68 = y_60;
  best_waste_69 = waste;
  best_70 = prev_18;

  <bb 14>:
  # best_waste_2 = PHI <best_waste_1(11), best_waste_1(12), best_waste_69(13)>
  # best_y_12 = PHI <best_y_11(11), best_y_11(12), best_y_68(13)>
  # best_27 = PHI <best_26(11), best_26(12), best_70(13)>

  <bb 15>:
  # best_waste_3 = PHI <best_waste_1(8), best_waste_1(9), best_waste_2(14), best_waste_1(7)>
  # best_y_13 = PHI <best_y_62(8), best_y_11(9), best_y_12(14), best_y_11(7)>
  # best_28 = PHI <best_63(8), best_26(9), best_27(14), best_26(7)>
  prev_71 = &node_21->next;
  node_72 = node_21->next;
  waste ={v} {CLOBBER};
  goto <bb 5>;

  <bb 16>:
  if (best_26 != 0B)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _74 = *best_26;
  _75 = _74->x;
  iftmp.1_76 = (int) _75;
  goto <bb 19>;

  <bb 18>:
  iftmp.1_77 = 0;

  <bb 19>:
  # iftmp.1_33 = PHI <iftmp.1_76(17), iftmp.1_77(18)>
  best_x_78 = iftmp.1_33;
  _79 = c_41(D)->heuristic;
  if (_79 == 1)
    goto <bb 20>;
  else
    goto <bb 44>;

  <bb 20>:
  tail_80 = c_41(D)->active_head;
  node_81 = c_41(D)->active_head;
  prev_82 = &c_41(D)->active_head;

  <bb 21>:
  # tail_24 = PHI <tail_80(20), tail_85(22)>
  _83 = tail_24->x;
  _84 = (int) _83;
  if (_84 >= width_48)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  tail_85 = tail_24->next;
  goto <bb 21>;

  <bb 23>:
  # best_waste_4 = PHI <best_waste_1(21), best_waste_6(42)>
  # best_x_7 = PHI <best_x_78(21), best_x_9(42)>
  # best_y_14 = PHI <best_y_11(21), best_y_16(42)>
  # prev_19 = PHI <prev_82(21), prev_20(42)>
  # node_22 = PHI <node_81(21), node_23(42)>
  # tail_25 = PHI <tail_24(21), tail_110(42)>
  # best_29 = PHI <best_26(21), best_31(42)>
  if (tail_25 == 0B)
    goto <bb 43>;
  else
    goto <bb 24>;

  <bb 24>:
  _86 = tail_25->x;
  _87 = (int) _86;
  xpos_88 = _87 - width_48;
  if (xpos_88 >= 0)
    goto <bb 26>;
  else
    goto <bb 25>;

  <bb 25>:
  __assert_fail ("xpos >= 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 407, &__PRETTY_FUNCTION__);

  <bb 26>:
  # prev_20 = PHI <prev_19(24), prev_92(27)>
  # node_23 = PHI <node_22(24), node_93(27)>
  _89 = node_23->next;
  _90 = _89->x;
  _91 = (int) _90;
  if (_91 > xpos_88)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  prev_92 = &node_23->next;
  node_93 = node_23->next;
  goto <bb 26>;

  <bb 28>:
  _94 = node_23->next;
  _95 = _94->x;
  _96 = (int) _95;
  if (_96 > xpos_88)
    goto <bb 29>;
  else
    goto <bb 31>;

  <bb 29>:
  _97 = node_23->x;
  _98 = (int) _97;
  if (_98 <= xpos_88)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  goto <bb 32>;

  <bb 31>:
  __assert_fail ("node->next->x > xpos && node->x <= xpos", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 413, &__PRETTY_FUNCTION__);

  <bb 32>:
  y_100 = stbrp__skyline_find_min_y (c_41(D), node_23, xpos_88, width_48, &waste);
  _101 = y_100 + height_64(D);
  _102 = c_41(D)->height;
  if (_101 < _102)
    goto <bb 33>;
  else
    goto <bb 42>;

  <bb 33>:
  if (y_100 <= best_y_14)
    goto <bb 34>;
  else
    goto <bb 42>;

  <bb 34>:
  if (y_100 < best_y_14)
    goto <bb 38>;
  else
    goto <bb 35>;

  <bb 35>:
  waste.2_103 = waste;
  if (waste.2_103 < best_waste_4)
    goto <bb 38>;
  else
    goto <bb 36>;

  <bb 36>:
  waste.3_104 = waste;
  if (waste.3_104 == best_waste_4)
    goto <bb 37>;
  else
    goto <bb 41>;

  <bb 37>:
  if (xpos_88 < best_x_7)
    goto <bb 38>;
  else
    goto <bb 41>;

  <bb 38>:
  best_x_105 = xpos_88;
  if (y_100 <= best_y_14)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:
  __assert_fail ("y <= best_y", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 419, &__PRETTY_FUNCTION__);

  <bb 40>:
  best_y_106 = y_100;
  best_waste_107 = waste;
  best_108 = prev_20;

  <bb 41>:
  # best_waste_5 = PHI <best_waste_4(36), best_waste_4(37), best_waste_107(40)>
  # best_x_8 = PHI <best_x_7(36), best_x_7(37), best_x_105(40)>
  # best_y_15 = PHI <best_y_14(36), best_y_14(37), best_y_106(40)>
  # best_30 = PHI <best_29(36), best_29(37), best_108(40)>

  <bb 42>:
  # best_waste_6 = PHI <best_waste_4(32), best_waste_5(41), best_waste_4(33)>
  # best_x_9 = PHI <best_x_7(32), best_x_8(41), best_x_7(33)>
  # best_y_16 = PHI <best_y_14(32), best_y_15(41), best_y_14(33)>
  # best_31 = PHI <best_29(32), best_30(41), best_29(33)>
  tail_110 = tail_25->next;
  waste ={v} {CLOBBER};
  goto <bb 23>;

  <bb 43>:

  <bb 44>:
  # best_x_10 = PHI <best_x_78(19), best_x_7(43)>
  # best_y_17 = PHI <best_y_11(19), best_y_14(43)>
  # best_32 = PHI <best_26(19), best_29(43)>
  fr.prev_link = best_32;
  fr.x = best_x_10;
  fr.y = best_y_17;
  D.20160 = fr;
  fr ={v} {CLOBBER};

<L56>:
  return D.20160;

}



;; Function stbrp__findresult stbrp__skyline_pack_rectangle(stbrp_context*, int, int) (_ZL29stbrp__skyline_pack_rectangleP13stbrp_contextii, funcdef_no=558, decl_uid=15047, cgraph_uid=457, symbol_order=457)

stbrp__findresult stbrp__skyline_pack_rectangle(stbrp_context*, int, int) (struct stbrp_context * context, int width, int height)
{
  struct stbrp_node * next;
  struct stbrp_node * next;
  struct stbrp_node * cur;
  struct stbrp_node * node;
  struct stbrp__findresult res;
  short unsigned int D.20207;
  short unsigned int D.20206;
  short unsigned int D.20205;
  int D.20204;
  int D.20201;
  int D.20200;
  int D.20199;
  short unsigned int D.20198;
  struct stbrp_node * D.20197;
  int D.20195;
  int D.20194;
  int D.20193;
  short unsigned int D.20192;
  struct stbrp_node * D.20191;
  struct stbrp_node * D.20189;
  struct stbrp_node * * D.20187;
  int D.20183;
  int D.20182;
  short unsigned int D.20181;
  struct stbrp_node * * D.20180;
  struct stbrp_node * D.20179;
  short unsigned int D.20178;
  short unsigned int D.20177;
  short unsigned int D.20176;
  int D.20175;
  short unsigned int D.20174;
  int D.20173;
  struct stbrp__findresult D.20172;
  struct stbrp_node * D.20171;
  int D.20169;
  int D.20168;
  int D.20167;
  struct stbrp_node * * D.20165;
  struct stbrp_node * * _10;
  int _11;
  int _12;
  int _13;
  struct stbrp_node * _14;
  int _16;
  short unsigned int _17;
  int _19;
  short unsigned int _20;
  short unsigned int _21;
  short unsigned int _22;
  struct stbrp_node * _24;
  struct stbrp_node * * _26;
  short unsigned int _28;
  int _29;
  int _30;
  struct stbrp_node * * _34;
  struct stbrp_node * _36;
  struct stbrp_node * _37;
  short unsigned int _38;
  int _39;
  int _40;
  int _41;
  struct stbrp_node * _43;
  short unsigned int _48;
  int _49;
  int _50;
  int _51;
  int _52;
  short unsigned int _53;
  short unsigned int _54;
  short unsigned int _55;

  <bb 2>:
  res = stbrp__skyline_find_best_pos (context_6(D), width_7(D), height_8(D));
  _10 = res.prev_link;
  if (_10 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;

  <bb 3>:
  _11 = res.y;
  _12 = _11 + height_8(D);
  _13 = context_6(D)->height;
  if (_12 > _13)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  _14 = context_6(D)->free_head;
  if (_14 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  res.prev_link = 0B;
  D.20172 = res;
  goto <bb 15>;

  <bb 6>:
  node_15 = context_6(D)->free_head;
  _16 = res.x;
  _17 = (short unsigned int) _16;
  node_15->x = _17;
  _19 = res.y;
  _20 = (short unsigned int) _19;
  _21 = (short unsigned int) height_8(D);
  _22 = _20 + _21;
  node_15->y = _22;
  _24 = node_15->next;
  context_6(D)->free_head = _24;
  _26 = res.prev_link;
  cur_27 = *_26;
  _28 = cur_27->x;
  _29 = (int) _28;
  _30 = res.x;
  if (_29 < _30)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  next_31 = cur_27->next;
  cur_27->next = node_15;
  cur_33 = next_31;
  goto <bb 9>;

  <bb 8>:
  _34 = res.prev_link;
  *_34 = node_15;

  <bb 9>:
  # cur_1 = PHI <cur_33(7), cur_27(8), cur_46(11)>
  _36 = cur_1->next;
  if (_36 == 0B)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  _37 = cur_1->next;
  _38 = _37->x;
  _39 = (int) _38;
  _40 = res.x;
  _41 = _40 + width_7(D);
  if (_39 > _41)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  next_42 = cur_1->next;
  _43 = context_6(D)->free_head;
  cur_1->next = _43;
  context_6(D)->free_head = cur_1;
  cur_46 = next_42;
  goto <bb 9>;

  <bb 12>:
  node_15->next = cur_1;
  _48 = cur_1->x;
  _49 = (int) _48;
  _50 = res.x;
  _51 = _50 + width_7(D);
  if (_49 < _51)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _52 = res.x;
  _53 = (short unsigned int) _52;
  _54 = (short unsigned int) width_7(D);
  _55 = _53 + _54;
  cur_1->x = _55;

  <bb 14>:
  D.20172 = res;

  <bb 15>:
  res ={v} {CLOBBER};

<L15>:
  return D.20172;

}



;; Function int rect_height_compare(const void*, const void*) (_ZL19rect_height_comparePKvS0_, funcdef_no=559, decl_uid=15061, cgraph_uid=458, symbol_order=458)

int rect_height_compare(const void*, const void*) (const void * a, const void * b)
{
  const struct stbrp_rect * q;
  const struct stbrp_rect * p;
  bool D.20235;
  int D.20234;
  short unsigned int D.20233;
  int D.20232;
  short unsigned int D.20231;
  int D.20228;
  short unsigned int D.20227;
  int D.20226;
  short unsigned int D.20225;
  int iftmp.4;
  int D.20221;
  short unsigned int D.20220;
  int D.20219;
  short unsigned int D.20218;
  int D.20217;
  int D.20214;
  short unsigned int D.20213;
  int D.20212;
  short unsigned int D.20211;
  int _1;
  int iftmp.4_2;
  short unsigned int _8;
  int _9;
  short unsigned int _10;
  int _11;
  int _12;
  short unsigned int _13;
  int _14;
  short unsigned int _15;
  int _16;
  int _17;
  short unsigned int _18;
  int _19;
  short unsigned int _20;
  int _21;
  short unsigned int _22;
  int _23;
  short unsigned int _24;
  int _25;
  bool _26;
  int iftmp.4_27;
  int iftmp.4_28;
  int _29;

  <bb 2>:
  p_4 = a_3(D);
  q_6 = b_5(D);
  _8 = p_4->h;
  _9 = (int) _8;
  _10 = q_6->h;
  _11 = (int) _10;
  if (_9 > _11)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _12 = -1;
  goto <bb 10> (<L7>);

  <bb 4>:
  _13 = p_4->h;
  _14 = (int) _13;
  _15 = q_6->h;
  _16 = (int) _15;
  if (_14 < _16)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _17 = 1;
  goto <bb 10> (<L7>);

  <bb 6>:
  _18 = p_4->w;
  _19 = (int) _18;
  _20 = q_6->w;
  _21 = (int) _20;
  if (_19 <= _21)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _22 = p_4->w;
  _23 = (int) _22;
  _24 = q_6->w;
  _25 = (int) _24;
  _26 = _23 < _25;
  iftmp.4_27 = (int) _26;
  goto <bb 9>;

  <bb 8>:
  iftmp.4_28 = -1;

  <bb 9>:
  # iftmp.4_2 = PHI <iftmp.4_27(7), iftmp.4_28(8)>
  _29 = iftmp.4_2;

  # _1 = PHI <_12(3), _17(5), _29(9)>
<L7>:
  return _1;

}



;; Function int rect_original_order(const void*, const void*) (_ZL19rect_original_orderPKvS0_, funcdef_no=560, decl_uid=15067, cgraph_uid=459, symbol_order=459)

int rect_original_order(const void*, const void*) (const void * a, const void * b)
{
  const struct stbrp_rect * q;
  const struct stbrp_rect * p;
  bool D.20246;
  int D.20245;
  int D.20244;
  int D.20241;
  int D.20240;
  int iftmp.5;
  int D.20238;
  int iftmp.5_1;
  int _7;
  int _8;
  int _9;
  int _10;
  bool _11;
  int iftmp.5_12;
  int iftmp.5_13;
  int _14;

  <bb 2>:
  p_3 = a_2(D);
  q_5 = b_4(D);
  _7 = p_3->was_packed;
  _8 = q_5->was_packed;
  if (_7 >= _8)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _9 = p_3->was_packed;
  _10 = q_5->was_packed;
  _11 = _9 > _10;
  iftmp.5_12 = (int) _11;
  goto <bb 5>;

  <bb 4>:
  iftmp.5_13 = -1;

  <bb 5>:
  # iftmp.5_1 = PHI <iftmp.5_12(3), iftmp.5_13(4)>
  _14 = iftmp.5_1;

<L3>:
  return _14;

}



;; Function int stbrp_pack_rects(stbrp_context*, stbrp_rect*, int) (stbrp_pack_rects, funcdef_no=561, decl_uid=14123, cgraph_uid=460, symbol_order=460)

int stbrp_pack_rects(stbrp_context*, stbrp_rect*, int) (struct stbrp_context * context, struct stbrp_rect * rects, int num_rects)
{
  struct stbrp__findresult fr;
  static const char __PRETTY_FUNCTION__[55] = "int stbrp_pack_rects(stbrp_context*, stbrp_rect*, int)";
  int all_rects_packed;
  int i;
  int D.20348;
  int D.20344;
  struct stbrp_rect * D.20343;
  long unsigned int D.20342;
  long unsigned int D.20341;
  int D.20340;
  short unsigned int D.20339;
  struct stbrp_rect * D.20338;
  long unsigned int D.20337;
  long unsigned int D.20336;
  short unsigned int D.20334;
  struct stbrp_rect * D.20333;
  long unsigned int D.20332;
  long unsigned int D.20331;
  bool iftmp.6;
  struct stbrp_rect * D.20326;
  long unsigned int D.20325;
  long unsigned int D.20324;
  long unsigned int D.20321;
  short unsigned int D.20320;
  struct stbrp_rect * D.20319;
  long unsigned int D.20318;
  long unsigned int D.20317;
  struct stbrp_rect * D.20316;
  long unsigned int D.20315;
  long unsigned int D.20314;
  short unsigned int D.20312;
  int D.20311;
  struct stbrp_rect * D.20310;
  long unsigned int D.20309;
  long unsigned int D.20308;
  short unsigned int D.20307;
  int D.20306;
  struct stbrp_rect * D.20305;
  long unsigned int D.20304;
  long unsigned int D.20303;
  struct stbrp_node * * D.20300;
  int D.20299;
  short unsigned int D.20298;
  struct stbrp_rect * D.20297;
  long unsigned int D.20296;
  long unsigned int D.20295;
  int D.20294;
  short unsigned int D.20293;
  struct stbrp_rect * D.20292;
  long unsigned int D.20291;
  long unsigned int D.20290;
  short unsigned int D.20289;
  struct stbrp_rect * D.20288;
  long unsigned int D.20287;
  long unsigned int D.20286;
  struct stbrp_rect * D.20285;
  long unsigned int D.20284;
  long unsigned int D.20283;
  short unsigned int D.20282;
  struct stbrp_rect * D.20281;
  long unsigned int D.20280;
  long unsigned int D.20279;
  short unsigned int D.20277;
  struct stbrp_rect * D.20276;
  long unsigned int D.20275;
  long unsigned int D.20274;
  long unsigned int D.20268;
  int D.20266;
  short unsigned int D.20265;
  struct stbrp_rect * D.20264;
  long unsigned int D.20263;
  long unsigned int D.20262;
  int D.20260;
  short unsigned int D.20259;
  struct stbrp_rect * D.20258;
  long unsigned int D.20257;
  long unsigned int D.20256;
  struct stbrp_rect * D.20253;
  long unsigned int D.20252;
  long unsigned int D.20251;
  bool iftmp.6_6;
  long unsigned int _16;
  long unsigned int _17;
  struct stbrp_rect * _19;
  long unsigned int _21;
  long unsigned int _22;
  struct stbrp_rect * _23;
  short unsigned int _24;
  int _25;
  long unsigned int _26;
  long unsigned int _27;
  struct stbrp_rect * _28;
  short unsigned int _29;
  int _30;
  long unsigned int _33;
  long unsigned int _36;
  long unsigned int _37;
  struct stbrp_rect * _38;
  short unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  struct stbrp_rect * _42;
  short unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  struct stbrp_rect * _46;
  short unsigned int _47;
  int _48;
  long unsigned int _49;
  long unsigned int _50;
  struct stbrp_rect * _51;
  short unsigned int _52;
  int _53;
  struct stbrp_node * * _56;
  long unsigned int _57;
  long unsigned int _58;
  struct stbrp_rect * _59;
  int _60;
  short unsigned int _61;
  long unsigned int _63;
  long unsigned int _64;
  struct stbrp_rect * _65;
  int _66;
  short unsigned int _67;
  long unsigned int _69;
  long unsigned int _70;
  struct stbrp_rect * _71;
  long unsigned int _72;
  long unsigned int _73;
  struct stbrp_rect * _74;
  short unsigned int _76;
  long unsigned int _79;
  long unsigned int _80;
  struct stbrp_rect * _81;
  long unsigned int _82;
  long unsigned int _83;
  struct stbrp_rect * _84;
  short unsigned int _86;
  long unsigned int _89;
  long unsigned int _92;
  long unsigned int _93;
  struct stbrp_rect * _94;
  long unsigned int _95;
  long unsigned int _96;
  struct stbrp_rect * _97;
  short unsigned int _98;
  long unsigned int _99;
  long unsigned int _100;
  struct stbrp_rect * _101;
  short unsigned int _102;
  bool iftmp.6_103;
  bool iftmp.6_104;
  int _105;
  long unsigned int _107;
  long unsigned int _108;
  struct stbrp_rect * _109;
  int _110;
  int _113;

  <bb 2>:
  all_rects_packed_12 = 1;
  i_13 = 0;

  <bb 3>:
  # i_1 = PHI <i_13(2), i_31(8)>
  if (i_1 >= num_rects_15(D))
    goto <bb 9>;
  else
    goto <bb 4>;

  <bb 4>:
  _16 = (long unsigned int) i_1;
  _17 = _16 * 16;
  _19 = rects_18(D) + _17;
  _19->was_packed = i_1;
  _21 = (long unsigned int) i_1;
  _22 = _21 * 16;
  _23 = rects_18(D) + _22;
  _24 = _23->w;
  _25 = (int) _24;
  if (_25 <= 65535)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  _26 = (long unsigned int) i_1;
  _27 = _26 * 16;
  _28 = rects_18(D) + _27;
  _29 = _28->h;
  _30 = (int) _29;
  if (_30 <= 65535)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  goto <bb 8>;

  <bb 7>:
  __assert_fail ("rects[i].w <= 0xffff && rects[i].h <= 0xffff", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_rect_pack.h", 547, &__PRETTY_FUNCTION__);

  <bb 8>:
  i_31 = i_1 + 1;
  goto <bb 3>;

  <bb 9>:
  _33 = (long unsigned int) num_rects_15(D);
  qsort (rects_18(D), _33, 16, rect_height_compare);
  i_35 = 0;

  <bb 10>:
  # i_2 = PHI <i_35(9), i_88(18)>
  if (i_2 >= num_rects_15(D))
    goto <bb 19>;
  else
    goto <bb 11>;

  <bb 11>:
  _36 = (long unsigned int) i_2;
  _37 = _36 * 16;
  _38 = rects_18(D) + _37;
  _39 = _38->w;
  if (_39 == 0)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  _40 = (long unsigned int) i_2;
  _41 = _40 * 16;
  _42 = rects_18(D) + _41;
  _43 = _42->h;
  if (_43 == 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _79 = (long unsigned int) i_2;
  _80 = _79 * 16;
  _81 = rects_18(D) + _80;
  _82 = (long unsigned int) i_2;
  _83 = _82 * 16;
  _84 = rects_18(D) + _83;
  _84->y = 0;
  _86 = _84->y;
  _81->x = _86;
  goto <bb 18>;

  <bb 14>:
  _44 = (long unsigned int) i_2;
  _45 = _44 * 16;
  _46 = rects_18(D) + _45;
  _47 = _46->h;
  _48 = (int) _47;
  _49 = (long unsigned int) i_2;
  _50 = _49 * 16;
  _51 = rects_18(D) + _50;
  _52 = _51->w;
  _53 = (int) _52;
  fr = stbrp__skyline_pack_rectangle (context_54(D), _53, _48);
  _56 = fr.prev_link;
  if (_56 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _57 = (long unsigned int) i_2;
  _58 = _57 * 16;
  _59 = rects_18(D) + _58;
  _60 = fr.x;
  _61 = (short unsigned int) _60;
  _59->x = _61;
  _63 = (long unsigned int) i_2;
  _64 = _63 * 16;
  _65 = rects_18(D) + _64;
  _66 = fr.y;
  _67 = (short unsigned int) _66;
  _65->y = _67;
  goto <bb 17>;

  <bb 16>:
  _69 = (long unsigned int) i_2;
  _70 = _69 * 16;
  _71 = rects_18(D) + _70;
  _72 = (long unsigned int) i_2;
  _73 = _72 * 16;
  _74 = rects_18(D) + _73;
  _74->y = 65535;
  _76 = _74->y;
  _71->x = _76;

  <bb 17>:
  fr ={v} {CLOBBER};

  <bb 18>:
  i_88 = i_2 + 1;
  goto <bb 10>;

  <bb 19>:
  _89 = (long unsigned int) num_rects_15(D);
  qsort (rects_18(D), _89, 16, rect_original_order);
  i_91 = 0;

  <bb 20>:
  # i_3 = PHI <i_91(19), i_112(27)>
  # all_rects_packed_4 = PHI <all_rects_packed_12(19), all_rects_packed_5(27)>
  if (i_3 >= num_rects_15(D))
    goto <bb 28>;
  else
    goto <bb 21>;

  <bb 21>:
  _92 = (long unsigned int) i_3;
  _93 = _92 * 16;
  _94 = rects_18(D) + _93;
  _95 = (long unsigned int) i_3;
  _96 = _95 * 16;
  _97 = rects_18(D) + _96;
  _98 = _97->x;
  if (_98 != 65535)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  _99 = (long unsigned int) i_3;
  _100 = _99 * 16;
  _101 = rects_18(D) + _100;
  _102 = _101->y;
  if (_102 != 65535)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  iftmp.6_104 = 1;
  goto <bb 25>;

  <bb 24>:
  iftmp.6_103 = 0;

  <bb 25>:
  # iftmp.6_6 = PHI <iftmp.6_104(23), iftmp.6_103(24)>
  _105 = (int) iftmp.6_6;
  _94->was_packed = _105;
  _107 = (long unsigned int) i_3;
  _108 = _107 * 16;
  _109 = rects_18(D) + _108;
  _110 = _109->was_packed;
  if (_110 == 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  all_rects_packed_111 = 0;

  <bb 27>:
  # all_rects_packed_5 = PHI <all_rects_packed_4(25), all_rects_packed_111(26)>
  i_112 = i_3 + 1;
  goto <bb 20>;

  <bb 28>:
  _113 = all_rects_packed_4;

<L27>:
  return _113;

}



;; Function stbtt_uint8 stbtt__buf_get8(stbtt__buf*) (_ZL15stbtt__buf_get8P10stbtt__buf, funcdef_no=562, decl_uid=15616, cgraph_uid=461, symbol_order=461)

stbtt_uint8 stbtt__buf_get8(stbtt__buf*) (struct stbtt__buf * b)
{
  unsigned char * D.20360;
  sizetype D.20359;
  int D.20358;
  int D.20357;
  int D.20356;
  unsigned char * D.20355;
  stbtt_uint8 D.20354;
  int D.20351;
  int D.20350;
  stbtt_uint8 _1;
  int _5;
  int _6;
  stbtt_uint8 _7;
  unsigned char * _8;
  int _9;
  int _10;
  int _11;
  sizetype _13;
  unsigned char * _14;
  stbtt_uint8 _15;

  <bb 2>:
  _5 = b_4(D)->cursor;
  _6 = b_4(D)->size;
  if (_5 >= _6)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = 0;
  goto <bb 5> (<L2>);

  <bb 4>:
  _8 = b_4(D)->data;
  _9 = b_4(D)->cursor;
  _10 = _9;
  _11 = _10 + 1;
  b_4(D)->cursor = _11;
  _13 = (sizetype) _10;
  _14 = _8 + _13;
  _15 = *_14;

  # _1 = PHI <_7(3), _15(4)>
<L2>:
  return _1;

}



;; Function stbtt_uint8 stbtt__buf_peek8(stbtt__buf*) (_ZL16stbtt__buf_peek8P10stbtt__buf, funcdef_no=563, decl_uid=15619, cgraph_uid=462, symbol_order=462)

stbtt_uint8 stbtt__buf_peek8(stbtt__buf*) (struct stbtt__buf * b)
{
  unsigned char * D.20370;
  sizetype D.20369;
  int D.20368;
  unsigned char * D.20367;
  stbtt_uint8 D.20366;
  int D.20363;
  int D.20362;
  stbtt_uint8 _1;
  int _4;
  int _5;
  stbtt_uint8 _6;
  unsigned char * _7;
  int _8;
  sizetype _9;
  unsigned char * _10;
  stbtt_uint8 _11;

  <bb 2>:
  _4 = b_3(D)->cursor;
  _5 = b_3(D)->size;
  if (_4 >= _5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = 0;
  goto <bb 5> (<L2>);

  <bb 4>:
  _7 = b_3(D)->data;
  _8 = b_3(D)->cursor;
  _9 = (sizetype) _8;
  _10 = _7 + _9;
  _11 = *_10;

  # _1 = PHI <_6(3), _11(4)>
<L2>:
  return _1;

}



;; Function void stbtt__buf_seek(stbtt__buf*, int) (_ZL15stbtt__buf_seekP10stbtt__bufi, funcdef_no=564, decl_uid=15623, cgraph_uid=463, symbol_order=463)

void stbtt__buf_seek(stbtt__buf*, int) (struct stbtt__buf * b, int o)
{
  static const char __PRETTY_FUNCTION__[39] = "void stbtt__buf_seek(stbtt__buf*, int)";
  int D.20381;
  int iftmp.7;
  int D.20374;
  int iftmp.7_1;
  int _4;
  int _6;
  int iftmp.7_7;
  int iftmp.7_8;

  <bb 2>:
  _4 = b_3(D)->size;
  if (_4 >= o_5(D))
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  if (o_5(D) >= 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:
  __assert_fail ("!(o > b->size || o < 0)", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1116, &__PRETTY_FUNCTION__);

  <bb 6>:
  _6 = b_3(D)->size;
  if (_6 < o_5(D))
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  if (o_5(D) < 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  iftmp.7_8 = b_3(D)->size;
  goto <bb 10>;

  <bb 9>:
  iftmp.7_7 = o_5(D);

  <bb 10>:
  # iftmp.7_1 = PHI <iftmp.7_8(8), iftmp.7_7(9)>
  b_3(D)->cursor = iftmp.7_1;
  return;

}



;; Function void stbtt__buf_skip(stbtt__buf*, int) (_ZL15stbtt__buf_skipP10stbtt__bufi, funcdef_no=565, decl_uid=15628, cgraph_uid=464, symbol_order=464)

void stbtt__buf_skip(stbtt__buf*, int) (struct stbtt__buf * b, int o)
{
  int D.20384;
  int D.20383;
  int _3;
  int _5;

  <bb 2>:
  _3 = b_2(D)->cursor;
  _5 = _3 + o_4(D);
  stbtt__buf_seek (b_2(D), _5);
  return;

}



;; Function stbtt_uint32 stbtt__buf_get(stbtt__buf*, int) (_ZL14stbtt__buf_getP10stbtt__bufi, funcdef_no=566, decl_uid=15632, cgraph_uid=465, symbol_order=465)

stbtt_uint32 stbtt__buf_get(stbtt__buf*, int) (struct stbtt__buf * b, int n)
{
  static const char __PRETTY_FUNCTION__[46] = "stbtt_uint32 stbtt__buf_get(stbtt__buf*, int)";
  int i;
  stbtt_uint32 v;
  stbtt_uint32 D.20394;
  unsigned int D.20393;
  unsigned char D.20392;
  unsigned int D.20391;
  unsigned int _8;
  unsigned char _11;
  unsigned int _12;
  stbtt_uint32 _15;

  <bb 2>:
  v_4 = 0;
  if (n_5(D) > 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  if (n_5(D) <= 4)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:
  __assert_fail ("n >= 1 && n <= 4", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1129, &__PRETTY_FUNCTION__);

  <bb 6>:
  i_6 = 0;

  <bb 7>:
  # v_1 = PHI <v_4(6), v_13(8)>
  # i_2 = PHI <i_6(6), i_14(8)>
  if (i_2 >= n_5(D))
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  _8 = v_1 << 8;
  _11 = stbtt__buf_get8 (b_9(D));
  _12 = (unsigned int) _11;
  v_13 = _8 | _12;
  i_14 = i_2 + 1;
  goto <bb 7>;

  <bb 9>:
  _15 = v_1;

<L7>:
  return _15;

}



;; Function stbtt__buf stbtt__new_buf(const void*, size_t) (_ZL14stbtt__new_bufPKvm, funcdef_no=567, decl_uid=15641, cgraph_uid=466, symbol_order=466)

stbtt__buf stbtt__new_buf(const void*, size_t) (const void * p, size_t size)
{
  static const char __PRETTY_FUNCTION__[47] = "stbtt__buf stbtt__new_buf(const void*, size_t)";
  struct stbtt__buf r;
  struct stbtt__buf D.20400;
  int D.20399;
  int _5;

  <bb 2>:
  if (size_1(D) <= 1073741823)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("size < 0x40000000", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1138, &__PRETTY_FUNCTION__);

  <bb 4>:
  r.data = p_3(D);
  _5 = (int) size_1(D);
  r.size = _5;
  r.cursor = 0;
  D.20400 = r;
  r ={v} {CLOBBER};

<L4>:
  return D.20400;

}



;; Function stbtt__buf stbtt__buf_range(const stbtt__buf*, int, int) (_ZL16stbtt__buf_rangePK10stbtt__bufii, funcdef_no=568, decl_uid=15682, cgraph_uid=467, symbol_order=467)

stbtt__buf stbtt__buf_range(const stbtt__buf*, int, int) (const struct stbtt__buf * b, int o, int s)
{
  struct stbtt__buf r;
  unsigned char * D.20414;
  sizetype D.20413;
  unsigned char * D.20412;
  struct stbtt__buf D.20411;
  int D.20410;
  int D.20409;
  int D.20407;
  int _7;
  int _8;
  int _9;
  unsigned char * _10;
  sizetype _11;
  unsigned char * _12;

  <bb 2>:
  r = stbtt__new_buf (0B, 0);
  if (o_4(D) < 0)
    goto <bb 6>;
  else
    goto <bb 3>;

  <bb 3>:
  if (s_5(D) < 0)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  _7 = b_6(D)->size;
  if (_7 < o_4(D))
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  _8 = b_6(D)->size;
  _9 = _8 - o_4(D);
  if (_9 < s_5(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  D.20411 = r;
  goto <bb 8>;

  <bb 7>:
  _10 = b_6(D)->data;
  _11 = (sizetype) o_4(D);
  _12 = _10 + _11;
  r.data = _12;
  r.size = s_5(D);
  D.20411 = r;

  <bb 8>:
  r ={v} {CLOBBER};

<L6>:
  return D.20411;

}



;; Function stbtt__buf stbtt__cff_get_index(stbtt__buf*) (_ZL20stbtt__cff_get_indexP10stbtt__buf, funcdef_no=569, decl_uid=15689, cgraph_uid=468, symbol_order=468)

stbtt__buf stbtt__cff_get_index(stbtt__buf*) (struct stbtt__buf * b)
{
  static const char __PRETTY_FUNCTION__[45] = "stbtt__buf stbtt__cff_get_index(stbtt__buf*)";
  int offsize;
  int start;
  int count;
  struct stbtt__buf * b.15;
  int D.20439;
  int D.20438;
  struct stbtt__buf * b.14;
  struct stbtt__buf D.20436;
  struct stbtt__buf * b.13;
  int D.20433;
  unsigned int D.20432;
  unsigned int D.20431;
  struct stbtt__buf * b.12;
  struct stbtt__buf * b.11;
  int D.20428;
  unsigned char D.20423;
  struct stbtt__buf * b.10;
  unsigned int D.20419;
  struct stbtt__buf * b.9;
  struct stbtt__buf * b.8;
  struct stbtt__buf * b.8_3;
  struct stbtt__buf * b.9_5;
  unsigned int _7;
  struct stbtt__buf * b.10_9;
  unsigned char _11;
  int _13;
  struct stbtt__buf * b.11_14;
  struct stbtt__buf * b.12_16;
  unsigned int _18;
  unsigned int _19;
  int _20;
  struct stbtt__buf * b.13_21;
  struct stbtt__buf * b.14_24;
  int _25;
  int _26;
  struct stbtt__buf * b.15_27;

  <bb 2>:
  b.8_3 = b;
  start_4 = b.8_3->cursor;
  b.9_5 = b;
  _7 = stbtt__buf_get (b.9_5, 2);
  count_8 = (int) _7;
  if (count_8 != 0)
    goto <bb 3>;
  else
    goto <bb 8>;

  <bb 3>:
  b.10_9 = b;
  _11 = stbtt__buf_get8 (b.10_9);
  offsize_12 = (int) _11;
  if (offsize_12 > 0)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 4>:
  if (offsize_12 <= 4)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  goto <bb 7>;

  <bb 6>:
  __assert_fail ("offsize >= 1 && offsize <= 4", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1164, &__PRETTY_FUNCTION__);

  <bb 7>:
  _13 = offsize_12 * count_8;
  b.11_14 = b;
  stbtt__buf_skip (b.11_14, _13);
  b.12_16 = b;
  _18 = stbtt__buf_get (b.12_16, offsize_12);
  _19 = _18 + 4294967295;
  _20 = (int) _19;
  b.13_21 = b;
  stbtt__buf_skip (b.13_21, _20);

  <bb 8>:
  b.14_24 = b;
  _25 = b.14_24->cursor;
  _26 = _25 - start_4;
  b.15_27 = b;
  D.20436 = stbtt__buf_range (b.15_27, start_4, _26);

<L7>:
  return D.20436;

}



;; Function stbtt_uint32 stbtt__cff_int(stbtt__buf*) (_ZL14stbtt__cff_intP10stbtt__buf, funcdef_no=570, decl_uid=15697, cgraph_uid=469, symbol_order=469)

stbtt_uint32 stbtt__cff_int(stbtt__buf*) (struct stbtt__buf * b)
{
  static const char __PRETTY_FUNCTION__[41] = "stbtt_uint32 stbtt__cff_int(stbtt__buf*)";
  int b0;
  struct stbtt__buf * b.20;
  struct stbtt__buf * b.19;
  int D.20468;
  int D.20467;
  int D.20466;
  unsigned char D.20465;
  struct stbtt__buf * b.18;
  int D.20463;
  int D.20462;
  int D.20458;
  int D.20457;
  int D.20456;
  unsigned char D.20455;
  struct stbtt__buf * b.17;
  int D.20453;
  int D.20452;
  int D.20448;
  stbtt_uint32 D.20447;
  unsigned char D.20443;
  struct stbtt__buf * b.16;
  stbtt_uint32 _1;
  struct stbtt__buf * b.16_4;
  unsigned char _6;
  int _8;
  stbtt_uint32 _9;
  int _10;
  int _11;
  struct stbtt__buf * b.17_12;
  unsigned char _14;
  int _15;
  int _16;
  int _17;
  stbtt_uint32 _18;
  int _19;
  int _20;
  struct stbtt__buf * b.18_21;
  unsigned char _23;
  int _24;
  int _25;
  int _26;
  stbtt_uint32 _27;
  struct stbtt__buf * b.19_28;
  stbtt_uint32 _30;
  struct stbtt__buf * b.20_31;
  stbtt_uint32 _33;

  <bb 2>:
  b.16_4 = b;
  _6 = stbtt__buf_get8 (b.16_4);
  b0_7 = (int) _6;
  if (b0_7 > 31)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  if (b0_7 <= 246)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _8 = b0_7 + -139;
  _9 = (stbtt_uint32) _8;
  goto <bb 16> (<L16>);

  <bb 5>:
  if (b0_7 > 246)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  if (b0_7 <= 250)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _10 = b0_7 + -247;
  _11 = _10 * 256;
  b.17_12 = b;
  _14 = stbtt__buf_get8 (b.17_12);
  _15 = (int) _14;
  _16 = _11 + _15;
  _17 = _16 + 108;
  _18 = (stbtt_uint32) _17;
  goto <bb 16> (<L16>);

  <bb 8>:
  if (b0_7 > 250)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:
  if (b0_7 <= 254)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _19 = 251 - b0_7;
  _20 = _19 * 256;
  b.18_21 = b;
  _23 = stbtt__buf_get8 (b.18_21);
  _24 = (int) _23;
  _25 = _20 - _24;
  _26 = _25 + -108;
  _27 = (stbtt_uint32) _26;
  goto <bb 16> (<L16>);

  <bb 11>:
  if (b0_7 == 28)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  b.19_28 = b;
  _30 = stbtt__buf_get (b.19_28, 2);
  goto <bb 16> (<L16>);

  <bb 13>:
  if (b0_7 == 29)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  b.20_31 = b;
  _33 = stbtt__buf_get (b.20_31, 4);
  goto <bb 16> (<L16>);

  <bb 15>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1179, &__PRETTY_FUNCTION__);

  # _1 = PHI <_9(4), _18(7), _27(10), _30(12), _33(14)>
<L16>:
  return _1;

}



;; Function void stbtt__cff_skip_operand(stbtt__buf*) (_ZL23stbtt__cff_skip_operandP10stbtt__buf, funcdef_no=571, decl_uid=15702, cgraph_uid=470, symbol_order=470)

void stbtt__cff_skip_operand(stbtt__buf*) (struct stbtt__buf * b)
{
  static const char __PRETTY_FUNCTION__[42] = "void stbtt__cff_skip_operand(stbtt__buf*)";
  int b0;
  int v;
  int D.20492;
  int D.20490;
  unsigned char D.20489;
  int D.20487;
  int D.20486;
  unsigned char D.20479;
  unsigned char _6;
  int _9;
  int _10;
  unsigned char _12;
  int _14;
  int _15;

  <bb 2>:
  _6 = stbtt__buf_peek8 (b_4(D));
  b0_7 = (int) _6;
  if (b0_7 > 27)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("b0 >= 28", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1185, &__PRETTY_FUNCTION__);

  <bb 4>:
  if (b0_7 == 30)
    goto <bb 5>;
  else
    goto <bb 10>;

  <bb 5>:
  stbtt__buf_skip (b_4(D), 1);

  <bb 6>:
  _9 = b_4(D)->cursor;
  _10 = b_4(D)->size;
  if (_9 >= _10)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 7>:
  _12 = stbtt__buf_get8 (b_4(D));
  v_13 = (int) _12;
  _14 = v_13 & 15;
  if (_14 == 15)
    goto <bb 11>;
  else
    goto <bb 8>;

  <bb 8>:
  _15 = v_13 >> 4;
  if (_15 == 15)
    goto <bb 11>;
  else
    goto <bb 9>;

  <bb 9>:
  goto <bb 6>;

  <bb 10>:
  stbtt__cff_int (b_4(D));

  <bb 11>:
  return;

}



;; Function stbtt__buf stbtt__dict_get(stbtt__buf*, int) (_ZL15stbtt__dict_getP10stbtt__bufi, funcdef_no=572, decl_uid=15711, cgraph_uid=471, symbol_order=471)

stbtt__buf stbtt__dict_get(stbtt__buf*, int) (struct stbtt__buf * b, int key)
{
  int op;
  int end;
  int start;
  int D.20513;
  struct stbtt__buf D.20512;
  int D.20508;
  unsigned char D.20507;
  unsigned char D.20504;
  int D.20502;
  unsigned char D.20501;
  bool retval.21;
  int D.20497;
  int D.20496;
  int _9;
  int _10;
  unsigned char _13;
  int _14;
  bool retval.21_15;
  unsigned char _19;
  unsigned char _22;
  int _23;
  int _26;

  <bb 2>:
  stbtt__buf_seek (b_7(D), 0);

  <bb 3>:
  _9 = b_7(D)->cursor;
  _10 = b_7(D)->size;
  if (_9 >= _10)
    goto <bb 12>;
  else
    goto <bb 4>;

  <bb 4>:
  start_11 = b_7(D)->cursor;

  <bb 5>:
  _13 = stbtt__buf_peek8 (b_7(D));
  _14 = (int) _13;
  retval.21_15 = _14 > 27;
  if (retval.21_15 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  stbtt__cff_skip_operand (b_7(D));
  goto <bb 5>;

  <bb 7>:
  end_17 = b_7(D)->cursor;
  _19 = stbtt__buf_get8 (b_7(D));
  op_20 = (int) _19;
  if (op_20 == 12)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _22 = stbtt__buf_get8 (b_7(D));
  _23 = (int) _22;
  op_24 = _23 | 256;

  <bb 9>:
  # op_1 = PHI <op_20(7), op_24(8)>
  if (op_1 == key_25(D))
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _26 = end_17 - start_11;
  D.20512 = stbtt__buf_range (b_7(D), start_11, _26);
  goto <bb 13> (<L11>);

  <bb 11>:
  goto <bb 3>;

  <bb 12>:
  D.20512 = stbtt__buf_range (b_7(D), 0, 0);

<L11>:
  return D.20512;

}



;; Function void stbtt__dict_get_ints(stbtt__buf*, int, int, stbtt_uint32*) (_ZL20stbtt__dict_get_intsP10stbtt__bufiiPj, funcdef_no=573, decl_uid=15726, cgraph_uid=472, symbol_order=472)

void stbtt__dict_get_ints(stbtt__buf*, int, int, stbtt_uint32*) (struct stbtt__buf * b, int key, int outcount, stbtt_uint32 * out)
{
  struct stbtt__buf operands;
  int i;
  unsigned int D.20523;
  stbtt_uint32 * D.20522;
  long unsigned int D.20521;
  long unsigned int D.20520;
  int D.20518;
  int D.20517;
  int _9;
  int _10;
  long unsigned int _11;
  long unsigned int _12;
  stbtt_uint32 * _14;
  unsigned int _16;

  <bb 2>:
  operands = stbtt__dict_get (b_4(D), key_5(D));
  i_7 = 0;

  <bb 3>:
  # i_1 = PHI <i_7(2), i_18(5)>
  if (i_1 >= outcount_8(D))
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  _9 = operands.cursor;
  _10 = operands.size;
  if (_9 >= _10)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  _11 = (long unsigned int) i_1;
  _12 = _11 * 4;
  _14 = out_13(D) + _12;
  _16 = stbtt__cff_int (&operands);
  *_14 = _16;
  i_18 = i_1 + 1;
  goto <bb 3>;

  <bb 6>:
  operands ={v} {CLOBBER};
  return;

}



;; Function int stbtt__cff_index_count(stbtt__buf*) (_ZL22stbtt__cff_index_countP10stbtt__buf, funcdef_no=574, decl_uid=15734, cgraph_uid=473, symbol_order=473)

int stbtt__cff_index_count(stbtt__buf*) (struct stbtt__buf * b)
{
  unsigned int D.20527;
  struct stbtt__buf * b.23;
  int D.20525;
  struct stbtt__buf * b.22;
  struct stbtt__buf * b.22_2;
  struct stbtt__buf * b.23_4;
  unsigned int _6;
  int _7;

  <bb 2>:
  b.22_2 = b;
  stbtt__buf_seek (b.22_2, 0);
  b.23_4 = b;
  _6 = stbtt__buf_get (b.23_4, 2);
  _7 = (int) _6;

<L0>:
  return _7;

}



;; Function stbtt__buf stbtt__cff_index_get(stbtt__buf, int) (_ZL20stbtt__cff_index_get10stbtt__bufi, funcdef_no=575, decl_uid=15738, cgraph_uid=474, symbol_order=474)

stbtt__buf stbtt__cff_index_get(stbtt__buf, int) (struct stbtt__buf b, int i)
{
  static const char __PRETTY_FUNCTION__[49] = "stbtt__buf stbtt__cff_index_get(stbtt__buf, int)";
  int end;
  int start;
  int offsize;
  int count;
  int D.20547;
  int D.20546;
  int D.20545;
  int D.20544;
  int D.20543;
  struct stbtt__buf D.20542;
  unsigned int D.20541;
  unsigned int D.20540;
  int D.20539;
  unsigned char D.20530;
  unsigned int D.20529;
  unsigned int _4;
  unsigned char _7;
  int _10;
  unsigned int _13;
  unsigned int _16;
  int _18;
  int _19;
  int _20;
  int _21;
  int _22;

  <bb 2>:
  stbtt__buf_seek (&b, 0);
  _4 = stbtt__buf_get (&b, 2);
  count_5 = (int) _4;
  _7 = stbtt__buf_get8 (&b);
  offsize_8 = (int) _7;
  if (i_9(D) >= 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  if (i_9(D) < count_5)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:
  __assert_fail ("i >= 0 && i < count", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1233, &__PRETTY_FUNCTION__);

  <bb 6>:
  if (offsize_8 > 0)
    goto <bb 7>;
  else
    goto <bb 9>;

  <bb 7>:
  if (offsize_8 <= 4)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  goto <bb 10>;

  <bb 9>:
  __assert_fail ("offsize >= 1 && offsize <= 4", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1234, &__PRETTY_FUNCTION__);

  <bb 10>:
  _10 = i_9(D) * offsize_8;
  stbtt__buf_skip (&b, _10);
  _13 = stbtt__buf_get (&b, offsize_8);
  start_14 = (int) _13;
  _16 = stbtt__buf_get (&b, offsize_8);
  end_17 = (int) _16;
  _18 = end_17 - start_14;
  _19 = count_5 + 1;
  _20 = _19 * offsize_8;
  _21 = _20 + 2;
  _22 = _21 + start_14;
  D.20542 = stbtt__buf_range (&b, _22, _18);

<L8>:
  return D.20542;

}



;; Function stbtt_uint16 ttUSHORT(stbtt_uint8*) (_ZL8ttUSHORTPh, funcdef_no=576, decl_uid=15747, cgraph_uid=475, symbol_order=475)

stbtt_uint16 ttUSHORT(stbtt_uint8*) (stbtt_uint8 * p)
{
  short unsigned int D.20555;
  unsigned char D.20554;
  stbtt_uint8 * D.20553;
  short unsigned int D.20552;
  short unsigned int D.20551;
  unsigned char D.20550;
  stbtt_uint16 D.20549;
  unsigned char _3;
  short unsigned int _4;
  short unsigned int _5;
  stbtt_uint8 * _6;
  unsigned char _7;
  short unsigned int _8;
  stbtt_uint16 _9;

  <bb 2>:
  _3 = *p_2(D);
  _4 = (short unsigned int) _3;
  _5 = _4 * 256;
  _6 = p_2(D) + 1;
  _7 = *_6;
  _8 = (short unsigned int) _7;
  _9 = _5 + _8;

<L0>:
  return _9;

}



;; Function stbtt_int16 ttSHORT(stbtt_uint8*) (_ZL7ttSHORTPh, funcdef_no=577, decl_uid=15750, cgraph_uid=476, symbol_order=476)

stbtt_int16 ttSHORT(stbtt_uint8*) (stbtt_uint8 * p)
{
  unsigned short D.20564;
  unsigned short D.20563;
  unsigned char D.20562;
  stbtt_uint8 * D.20561;
  unsigned short D.20560;
  unsigned short D.20559;
  unsigned char D.20558;
  stbtt_int16 D.20557;
  unsigned char _3;
  unsigned short _4;
  unsigned short _5;
  stbtt_uint8 * _6;
  unsigned char _7;
  unsigned short _8;
  unsigned short _9;
  stbtt_int16 _10;

  <bb 2>:
  _3 = *p_2(D);
  _4 = (unsigned short) _3;
  _5 = _4 * 256;
  _6 = p_2(D) + 1;
  _7 = *_6;
  _8 = (unsigned short) _7;
  _9 = _5 + _8;
  _10 = (stbtt_int16) _9;

<L0>:
  return _10;

}



;; Function stbtt_uint32 ttULONG(stbtt_uint8*) (_ZL7ttULONGPh, funcdef_no=578, decl_uid=15753, cgraph_uid=477, symbol_order=477)

stbtt_uint32 ttULONG(stbtt_uint8*) (stbtt_uint8 * p)
{
  int D.20583;
  int D.20582;
  unsigned char D.20581;
  stbtt_uint8 * D.20580;
  int D.20579;
  int D.20578;
  int D.20577;
  unsigned char D.20576;
  stbtt_uint8 * D.20575;
  int D.20574;
  int D.20573;
  int D.20572;
  unsigned char D.20571;
  stbtt_uint8 * D.20570;
  int D.20569;
  int D.20568;
  unsigned char D.20567;
  stbtt_uint32 D.20566;
  unsigned char _3;
  int _4;
  int _5;
  stbtt_uint8 * _6;
  unsigned char _7;
  int _8;
  int _9;
  int _10;
  stbtt_uint8 * _11;
  unsigned char _12;
  int _13;
  int _14;
  int _15;
  stbtt_uint8 * _16;
  unsigned char _17;
  int _18;
  int _19;
  stbtt_uint32 _20;

  <bb 2>:
  _3 = *p_2(D);
  _4 = (int) _3;
  _5 = _4 << 24;
  _6 = p_2(D) + 1;
  _7 = *_6;
  _8 = (int) _7;
  _9 = _8 << 16;
  _10 = _5 + _9;
  _11 = p_2(D) + 2;
  _12 = *_11;
  _13 = (int) _12;
  _14 = _13 << 8;
  _15 = _10 + _14;
  _16 = p_2(D) + 3;
  _17 = *_16;
  _18 = (int) _17;
  _19 = _15 + _18;
  _20 = (stbtt_uint32) _19;

<L0>:
  return _20;

}



;; Function stbtt_int32 ttLONG(stbtt_uint8*) (_ZL6ttLONGPh, funcdef_no=579, decl_uid=15756, cgraph_uid=478, symbol_order=478)

stbtt_int32 ttLONG(stbtt_uint8*) (stbtt_uint8 * p)
{
  int D.20601;
  unsigned char D.20600;
  stbtt_uint8 * D.20599;
  int D.20598;
  int D.20597;
  int D.20596;
  unsigned char D.20595;
  stbtt_uint8 * D.20594;
  int D.20593;
  int D.20592;
  int D.20591;
  unsigned char D.20590;
  stbtt_uint8 * D.20589;
  int D.20588;
  int D.20587;
  unsigned char D.20586;
  stbtt_int32 D.20585;
  unsigned char _3;
  int _4;
  int _5;
  stbtt_uint8 * _6;
  unsigned char _7;
  int _8;
  int _9;
  int _10;
  stbtt_uint8 * _11;
  unsigned char _12;
  int _13;
  int _14;
  int _15;
  stbtt_uint8 * _16;
  unsigned char _17;
  int _18;
  stbtt_int32 _19;

  <bb 2>:
  _3 = *p_2(D);
  _4 = (int) _3;
  _5 = _4 << 24;
  _6 = p_2(D) + 1;
  _7 = *_6;
  _8 = (int) _7;
  _9 = _8 << 16;
  _10 = _5 + _9;
  _11 = p_2(D) + 2;
  _12 = *_11;
  _13 = (int) _12;
  _14 = _13 << 8;
  _15 = _10 + _14;
  _16 = p_2(D) + 3;
  _17 = *_16;
  _18 = (int) _17;
  _19 = _15 + _18;

<L0>:
  return _19;

}



;; Function int stbtt__isfont(stbtt_uint8*) (_ZL13stbtt__isfontPh, funcdef_no=580, decl_uid=15759, cgraph_uid=479, symbol_order=479)

int stbtt__isfont(stbtt_uint8*) (stbtt_uint8 * font)
{
  int D.20732;
  char D.20731;
  int D.20730;
  unsigned char D.20729;
  stbtt_uint8 * D.20728;
  stbtt_uint8 * font.43;
  int D.20724;
  char D.20723;
  int D.20722;
  unsigned char D.20721;
  stbtt_uint8 * D.20720;
  stbtt_uint8 * font.42;
  int D.20716;
  char D.20715;
  int D.20714;
  unsigned char D.20713;
  stbtt_uint8 * D.20712;
  stbtt_uint8 * font.41;
  int D.20708;
  char D.20707;
  int D.20706;
  unsigned char D.20705;
  stbtt_uint8 * font.40;
  unsigned char D.20701;
  stbtt_uint8 * D.20700;
  stbtt_uint8 * font.39;
  unsigned char D.20696;
  stbtt_uint8 * D.20695;
  stbtt_uint8 * font.38;
  unsigned char D.20691;
  stbtt_uint8 * D.20690;
  stbtt_uint8 * font.37;
  unsigned char D.20686;
  stbtt_uint8 * font.36;
  int D.20682;
  char D.20681;
  int D.20680;
  unsigned char D.20679;
  stbtt_uint8 * D.20678;
  stbtt_uint8 * font.35;
  int D.20674;
  char D.20673;
  int D.20672;
  unsigned char D.20671;
  stbtt_uint8 * D.20670;
  stbtt_uint8 * font.34;
  int D.20666;
  char D.20665;
  int D.20664;
  unsigned char D.20663;
  stbtt_uint8 * D.20662;
  stbtt_uint8 * font.33;
  int D.20658;
  char D.20657;
  int D.20656;
  unsigned char D.20655;
  stbtt_uint8 * font.32;
  int D.20651;
  char D.20650;
  int D.20649;
  unsigned char D.20648;
  stbtt_uint8 * D.20647;
  stbtt_uint8 * font.31;
  int D.20643;
  char D.20642;
  int D.20641;
  unsigned char D.20640;
  stbtt_uint8 * D.20639;
  stbtt_uint8 * font.30;
  int D.20635;
  char D.20634;
  int D.20633;
  unsigned char D.20632;
  stbtt_uint8 * D.20631;
  stbtt_uint8 * font.29;
  int D.20627;
  char D.20626;
  int D.20625;
  unsigned char D.20624;
  stbtt_uint8 * font.28;
  int D.20622;
  unsigned char D.20619;
  stbtt_uint8 * D.20618;
  stbtt_uint8 * font.27;
  unsigned char D.20614;
  stbtt_uint8 * D.20613;
  stbtt_uint8 * font.26;
  unsigned char D.20609;
  stbtt_uint8 * D.20608;
  stbtt_uint8 * font.25;
  unsigned char D.20604;
  stbtt_uint8 * font.24;
  int _1;
  stbtt_uint8 * font.24_3;
  unsigned char _4;
  stbtt_uint8 * font.25_5;
  stbtt_uint8 * _6;
  unsigned char _7;
  stbtt_uint8 * font.26_8;
  stbtt_uint8 * _9;
  unsigned char _10;
  stbtt_uint8 * font.27_11;
  stbtt_uint8 * _12;
  unsigned char _13;
  int _14;
  stbtt_uint8 * font.28_15;
  unsigned char _16;
  int _17;
  char _18;
  int _19;
  stbtt_uint8 * font.29_20;
  stbtt_uint8 * _21;
  unsigned char _22;
  int _23;
  char _24;
  int _25;
  stbtt_uint8 * font.30_26;
  stbtt_uint8 * _27;
  unsigned char _28;
  int _29;
  char _30;
  int _31;
  stbtt_uint8 * font.31_32;
  stbtt_uint8 * _33;
  unsigned char _34;
  int _35;
  char _36;
  int _37;
  int _38;
  stbtt_uint8 * font.32_39;
  unsigned char _40;
  int _41;
  char _42;
  int _43;
  stbtt_uint8 * font.33_44;
  stbtt_uint8 * _45;
  unsigned char _46;
  int _47;
  char _48;
  int _49;
  stbtt_uint8 * font.34_50;
  stbtt_uint8 * _51;
  unsigned char _52;
  int _53;
  char _54;
  int _55;
  stbtt_uint8 * font.35_56;
  stbtt_uint8 * _57;
  unsigned char _58;
  int _59;
  char _60;
  int _61;
  int _62;
  stbtt_uint8 * font.36_63;
  unsigned char _64;
  stbtt_uint8 * font.37_65;
  stbtt_uint8 * _66;
  unsigned char _67;
  stbtt_uint8 * font.38_68;
  stbtt_uint8 * _69;
  unsigned char _70;
  stbtt_uint8 * font.39_71;
  stbtt_uint8 * _72;
  unsigned char _73;
  int _74;
  stbtt_uint8 * font.40_75;
  unsigned char _76;
  int _77;
  char _78;
  int _79;
  stbtt_uint8 * font.41_80;
  stbtt_uint8 * _81;
  unsigned char _82;
  int _83;
  char _84;
  int _85;
  stbtt_uint8 * font.42_86;
  stbtt_uint8 * _87;
  unsigned char _88;
  int _89;
  char _90;
  int _91;
  stbtt_uint8 * font.43_92;
  stbtt_uint8 * _93;
  unsigned char _94;
  int _95;
  char _96;
  int _97;
  int _98;
  int _99;

  <bb 2>:
  font.24_3 = font;
  _4 = *font.24_3;
  if (_4 == 49)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 3>:
  font.25_5 = font;
  _6 = font.25_5 + 1;
  _7 = *_6;
  if (_7 == 0)
    goto <bb 4>;
  else
    goto <bb 7>;

  <bb 4>:
  font.26_8 = font;
  _9 = font.26_8 + 2;
  _10 = *_9;
  if (_10 == 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  font.27_11 = font;
  _12 = font.27_11 + 3;
  _13 = *_12;
  if (_13 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _14 = 1;
  goto <bb 28> (<L40>);

  <bb 7>:
  font.28_15 = font;
  _16 = *font.28_15;
  _17 = (int) _16;
  _18 = 116;
  _19 = (int) _18;
  if (_17 == _19)
    goto <bb 8>;
  else
    goto <bb 12>;

  <bb 8>:
  font.29_20 = font;
  _21 = font.29_20 + 1;
  _22 = *_21;
  _23 = (int) _22;
  _24 = 121;
  _25 = (int) _24;
  if (_23 == _25)
    goto <bb 9>;
  else
    goto <bb 12>;

  <bb 9>:
  font.30_26 = font;
  _27 = font.30_26 + 2;
  _28 = *_27;
  _29 = (int) _28;
  _30 = 112;
  _31 = (int) _30;
  if (_29 == _31)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  font.31_32 = font;
  _33 = font.31_32 + 3;
  _34 = *_33;
  _35 = (int) _34;
  _36 = 49;
  _37 = (int) _36;
  if (_35 == _37)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _38 = 1;
  goto <bb 28> (<L40>);

  <bb 12>:
  font.32_39 = font;
  _40 = *font.32_39;
  _41 = (int) _40;
  _42 = 79;
  _43 = (int) _42;
  if (_41 == _43)
    goto <bb 13>;
  else
    goto <bb 17>;

  <bb 13>:
  font.33_44 = font;
  _45 = font.33_44 + 1;
  _46 = *_45;
  _47 = (int) _46;
  _48 = 84;
  _49 = (int) _48;
  if (_47 == _49)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  font.34_50 = font;
  _51 = font.34_50 + 2;
  _52 = *_51;
  _53 = (int) _52;
  _54 = 84;
  _55 = (int) _54;
  if (_53 == _55)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 15>:
  font.35_56 = font;
  _57 = font.35_56 + 3;
  _58 = *_57;
  _59 = (int) _58;
  _60 = 79;
  _61 = (int) _60;
  if (_59 == _61)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _62 = 1;
  goto <bb 28> (<L40>);

  <bb 17>:
  font.36_63 = font;
  _64 = *font.36_63;
  if (_64 == 0)
    goto <bb 18>;
  else
    goto <bb 22>;

  <bb 18>:
  font.37_65 = font;
  _66 = font.37_65 + 1;
  _67 = *_66;
  if (_67 == 1)
    goto <bb 19>;
  else
    goto <bb 22>;

  <bb 19>:
  font.38_68 = font;
  _69 = font.38_68 + 2;
  _70 = *_69;
  if (_70 == 0)
    goto <bb 20>;
  else
    goto <bb 22>;

  <bb 20>:
  font.39_71 = font;
  _72 = font.39_71 + 3;
  _73 = *_72;
  if (_73 == 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _74 = 1;
  goto <bb 28> (<L40>);

  <bb 22>:
  font.40_75 = font;
  _76 = *font.40_75;
  _77 = (int) _76;
  _78 = 116;
  _79 = (int) _78;
  if (_77 == _79)
    goto <bb 23>;
  else
    goto <bb 27>;

  <bb 23>:
  font.41_80 = font;
  _81 = font.41_80 + 1;
  _82 = *_81;
  _83 = (int) _82;
  _84 = 114;
  _85 = (int) _84;
  if (_83 == _85)
    goto <bb 24>;
  else
    goto <bb 27>;

  <bb 24>:
  font.42_86 = font;
  _87 = font.42_86 + 2;
  _88 = *_87;
  _89 = (int) _88;
  _90 = 117;
  _91 = (int) _90;
  if (_89 == _91)
    goto <bb 25>;
  else
    goto <bb 27>;

  <bb 25>:
  font.43_92 = font;
  _93 = font.43_92 + 3;
  _94 = *_93;
  _95 = (int) _94;
  _96 = 101;
  _97 = (int) _96;
  if (_95 == _97)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  _98 = 1;
  goto <bb 28> (<L40>);

  <bb 27>:
  _99 = 0;

  # _1 = PHI <_14(6), _38(11), _62(16), _74(21), _98(26), _99(27)>
<L40>:
  return _1;

}



;; Function stbtt_uint32 stbtt__find_table(stbtt_uint8*, stbtt_uint32, const char*) (_ZL17stbtt__find_tablePhjPKc, funcdef_no=581, decl_uid=15764, cgraph_uid=480, symbol_order=480)

stbtt_uint32 stbtt__find_table(stbtt_uint8*, stbtt_uint32, const char*) (stbtt_uint8 * data, stbtt_uint32 fontstart, const char * tag)
{
  stbtt_uint32 loc;
  stbtt_int32 i;
  stbtt_uint32 tabledir;
  stbtt_int32 num_tables;
  stbtt_uint8 * D.20785;
  sizetype D.20784;
  sizetype D.20783;
  stbtt_uint32 D.20782;
  int D.20779;
  char D.20778;
  const char * D.20777;
  int D.20776;
  unsigned char D.20775;
  stbtt_uint8 * D.20774;
  sizetype D.20773;
  sizetype D.20772;
  int D.20769;
  char D.20768;
  const char * D.20767;
  int D.20766;
  unsigned char D.20765;
  stbtt_uint8 * D.20764;
  sizetype D.20763;
  sizetype D.20762;
  int D.20759;
  char D.20758;
  const char * D.20757;
  int D.20756;
  unsigned char D.20755;
  stbtt_uint8 * D.20754;
  sizetype D.20753;
  sizetype D.20752;
  int D.20749;
  char D.20748;
  int D.20747;
  unsigned char D.20746;
  stbtt_uint8 * D.20745;
  sizetype D.20744;
  unsigned int D.20743;
  int D.20742;
  short unsigned int D.20739;
  stbtt_uint8 * D.20738;
  sizetype D.20737;
  sizetype D.20736;
  stbtt_uint32 _2;
  sizetype _5;
  sizetype _6;
  stbtt_uint8 * _8;
  short unsigned int _11;
  int _15;
  unsigned int _16;
  sizetype _18;
  stbtt_uint8 * _19;
  unsigned char _20;
  int _21;
  char _23;
  int _24;
  sizetype _26;
  sizetype _27;
  stbtt_uint8 * _28;
  unsigned char _29;
  int _30;
  const char * _31;
  char _32;
  int _33;
  sizetype _34;
  sizetype _35;
  stbtt_uint8 * _36;
  unsigned char _37;
  int _38;
  const char * _39;
  char _40;
  int _41;
  sizetype _42;
  sizetype _43;
  stbtt_uint8 * _44;
  unsigned char _45;
  int _46;
  const char * _47;
  char _48;
  int _49;
  sizetype _50;
  sizetype _51;
  stbtt_uint8 * _52;
  stbtt_uint32 _54;
  stbtt_uint32 _55;

  <bb 2>:
  _5 = (sizetype) fontstart_4(D);
  _6 = _5 + 4;
  _8 = data_7(D) + _6;
  _11 = ttUSHORT (_8);
  num_tables_12 = (stbtt_int32) _11;
  tabledir_13 = fontstart_4(D) + 12;
  i_14 = 0;

  <bb 3>:
  # i_1 = PHI <i_14(2), i_25(9)>
  if (i_1 >= num_tables_12)
    goto <bb 10>;
  else
    goto <bb 4>;

  <bb 4>:
  _15 = i_1 * 16;
  _16 = (unsigned int) _15;
  loc_17 = _16 + tabledir_13;
  _18 = (sizetype) loc_17;
  _19 = data_7(D) + _18;
  _20 = *_19;
  _21 = (int) _20;
  _23 = *tag_22(D);
  _24 = (int) _23;
  if (_21 == _24)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 5>:
  _26 = (sizetype) loc_17;
  _27 = _26 + 1;
  _28 = data_7(D) + _27;
  _29 = *_28;
  _30 = (int) _29;
  _31 = tag_22(D) + 1;
  _32 = *_31;
  _33 = (int) _32;
  if (_30 == _33)
    goto <bb 6>;
  else
    goto <bb 9>;

  <bb 6>:
  _34 = (sizetype) loc_17;
  _35 = _34 + 2;
  _36 = data_7(D) + _35;
  _37 = *_36;
  _38 = (int) _37;
  _39 = tag_22(D) + 2;
  _40 = *_39;
  _41 = (int) _40;
  if (_38 == _41)
    goto <bb 7>;
  else
    goto <bb 9>;

  <bb 7>:
  _42 = (sizetype) loc_17;
  _43 = _42 + 3;
  _44 = data_7(D) + _43;
  _45 = *_44;
  _46 = (int) _45;
  _47 = tag_22(D) + 3;
  _48 = *_47;
  _49 = (int) _48;
  if (_46 == _49)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _50 = (sizetype) loc_17;
  _51 = _50 + 8;
  _52 = data_7(D) + _51;
  _54 = ttULONG (_52);
  goto <bb 11> (<L11>);

  <bb 9>:
  i_25 = i_1 + 1;
  goto <bb 3>;

  <bb 10>:
  _55 = 0;

  # _2 = PHI <_54(8), _55(10)>
<L11>:
  return _2;

}



;; Function int stbtt_GetFontOffsetForIndex_internal(unsigned char*, int) (_ZL36stbtt_GetFontOffsetForIndex_internalPhi, funcdef_no=582, decl_uid=15774, cgraph_uid=481, symbol_order=481)

int stbtt_GetFontOffsetForIndex_internal(unsigned char*, int) (unsigned char * font_collection, int index)
{
  stbtt_int32 n;
  unsigned int D.20851;
  unsigned char * D.20850;
  sizetype D.20849;
  sizetype D.20848;
  int D.20847;
  unsigned char * font_collection.56;
  unsigned char * D.20843;
  unsigned char * font_collection.55;
  unsigned int D.20839;
  unsigned char * D.20838;
  unsigned char * font_collection.54;
  unsigned int D.20835;
  unsigned char * D.20834;
  unsigned char * font_collection.53;
  bool iftmp.52;
  bool retval.51;
  int D.20825;
  char D.20824;
  int D.20823;
  unsigned char D.20822;
  unsigned char * D.20821;
  unsigned char * font_collection.50;
  int D.20817;
  char D.20816;
  int D.20815;
  unsigned char D.20814;
  unsigned char * D.20813;
  unsigned char * font_collection.49;
  int D.20809;
  char D.20808;
  int D.20807;
  unsigned char D.20806;
  unsigned char * D.20805;
  unsigned char * font_collection.48;
  int D.20801;
  char D.20800;
  int D.20799;
  unsigned char D.20798;
  unsigned char * font_collection.47;
  int iftmp.46;
  int D.20792;
  int D.20789;
  unsigned char * font_collection.45;
  bool retval.44;
  int _1;
  int iftmp.46_2;
  bool iftmp.52_3;
  unsigned char * font_collection.45_9;
  int _11;
  bool retval.44_12;
  int iftmp.46_14;
  int iftmp.46_15;
  int _16;
  unsigned char * font_collection.47_17;
  unsigned char _18;
  int _19;
  char _20;
  int _21;
  unsigned char * font_collection.48_22;
  unsigned char * _23;
  unsigned char _24;
  int _25;
  char _26;
  int _27;
  unsigned char * font_collection.49_28;
  unsigned char * _29;
  unsigned char _30;
  int _31;
  char _32;
  int _33;
  unsigned char * font_collection.50_34;
  unsigned char * _35;
  unsigned char _36;
  int _37;
  char _38;
  int _39;
  unsigned char * font_collection.53_40;
  unsigned char * _41;
  unsigned int _43;
  unsigned char * font_collection.54_44;
  unsigned char * _45;
  unsigned int _47;
  bool iftmp.52_48;
  bool iftmp.52_49;
  bool retval.51_50;
  unsigned char * font_collection.55_51;
  unsigned char * _52;
  int _55;
  unsigned char * font_collection.56_56;
  int _57;
  sizetype _58;
  sizetype _59;
  unsigned char * _60;
  unsigned int _62;
  int _63;
  int _64;

  <bb 2>:
  font_collection.45_9 = font_collection;
  _11 = stbtt__isfont (font_collection.45_9);
  retval.44_12 = _11 != 0;
  if (retval.44_12 != 0)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 3>:
  if (index_13(D) == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  iftmp.46_14 = 0;
  goto <bb 6>;

  <bb 5>:
  iftmp.46_15 = -1;

  <bb 6>:
  # iftmp.46_2 = PHI <iftmp.46_14(4), iftmp.46_15(5)>
  _16 = iftmp.46_2;
  goto <bb 21> (<L22>);

  <bb 7>:
  font_collection.47_17 = font_collection;
  _18 = *font_collection.47_17;
  _19 = (int) _18;
  _20 = 116;
  _21 = (int) _20;
  if (_19 == _21)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  font_collection.48_22 = font_collection;
  _23 = font_collection.48_22 + 1;
  _24 = *_23;
  _25 = (int) _24;
  _26 = 116;
  _27 = (int) _26;
  if (_25 == _27)
    goto <bb 9>;
  else
    goto <bb 20>;

  <bb 9>:
  font_collection.49_28 = font_collection;
  _29 = font_collection.49_28 + 2;
  _30 = *_29;
  _31 = (int) _30;
  _32 = 99;
  _33 = (int) _32;
  if (_31 == _33)
    goto <bb 10>;
  else
    goto <bb 20>;

  <bb 10>:
  font_collection.50_34 = font_collection;
  _35 = font_collection.50_34 + 3;
  _36 = *_35;
  _37 = (int) _36;
  _38 = 102;
  _39 = (int) _38;
  if (_37 == _39)
    goto <bb 11>;
  else
    goto <bb 20>;

  <bb 11>:
  font_collection.53_40 = font_collection;
  _41 = font_collection.53_40 + 4;
  _43 = ttULONG (_41);
  if (_43 == 65536)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  font_collection.54_44 = font_collection;
  _45 = font_collection.54_44 + 4;
  _47 = ttULONG (_45);
  if (_47 == 131072)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  iftmp.52_49 = 1;
  goto <bb 15>;

  <bb 14>:
  iftmp.52_48 = 0;

  <bb 15>:
  # iftmp.52_3 = PHI <iftmp.52_49(13), iftmp.52_48(14)>
  retval.51_50 = iftmp.52_3;
  if (retval.51_50 != 0)
    goto <bb 16>;
  else
    goto <bb 19>;

  <bb 16>:
  font_collection.55_51 = font_collection;
  _52 = font_collection.55_51 + 8;
  n_54 = ttLONG (_52);
  if (index_13(D) >= n_54)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _55 = -1;
  goto <bb 21> (<L22>);

  <bb 18>:
  font_collection.56_56 = font_collection;
  _57 = index_13(D) * 4;
  _58 = (sizetype) _57;
  _59 = _58 + 12;
  _60 = font_collection.56_56 + _59;
  _62 = ttULONG (_60);
  _63 = (int) _62;
  goto <bb 21> (<L22>);

  <bb 19>:

  <bb 20>:
  _64 = -1;

  # _1 = PHI <_16(6), _55(17), _63(18), _64(20)>
<L22>:
  return _1;

}



;; Function int stbtt_GetNumberOfFonts_internal(unsigned char*) (_ZL31stbtt_GetNumberOfFonts_internalPh, funcdef_no=583, decl_uid=15778, cgraph_uid=482, symbol_order=482)

int stbtt_GetNumberOfFonts_internal(unsigned char*) (unsigned char * font_collection)
{
  unsigned char * D.20906;
  unsigned char * font_collection.67;
  unsigned int D.20902;
  unsigned char * D.20901;
  unsigned char * font_collection.66;
  unsigned int D.20898;
  unsigned char * D.20897;
  unsigned char * font_collection.65;
  bool iftmp.64;
  bool retval.63;
  int D.20888;
  char D.20887;
  int D.20886;
  unsigned char D.20885;
  unsigned char * D.20884;
  unsigned char * font_collection.62;
  int D.20880;
  char D.20879;
  int D.20878;
  unsigned char D.20877;
  unsigned char * D.20876;
  unsigned char * font_collection.61;
  int D.20872;
  char D.20871;
  int D.20870;
  unsigned char D.20869;
  unsigned char * D.20868;
  unsigned char * font_collection.60;
  int D.20864;
  char D.20863;
  int D.20862;
  unsigned char D.20861;
  unsigned char * font_collection.59;
  int D.20859;
  int D.20856;
  unsigned char * font_collection.58;
  bool retval.57;
  int _1;
  bool iftmp.64_2;
  unsigned char * font_collection.58_8;
  int _10;
  bool retval.57_11;
  int _12;
  unsigned char * font_collection.59_13;
  unsigned char _14;
  int _15;
  char _16;
  int _17;
  unsigned char * font_collection.60_18;
  unsigned char * _19;
  unsigned char _20;
  int _21;
  char _22;
  int _23;
  unsigned char * font_collection.61_24;
  unsigned char * _25;
  unsigned char _26;
  int _27;
  char _28;
  int _29;
  unsigned char * font_collection.62_30;
  unsigned char * _31;
  unsigned char _32;
  int _33;
  char _34;
  int _35;
  unsigned char * font_collection.65_36;
  unsigned char * _37;
  unsigned int _39;
  unsigned char * font_collection.66_40;
  unsigned char * _41;
  unsigned int _43;
  bool iftmp.64_44;
  bool iftmp.64_45;
  bool retval.63_46;
  unsigned char * font_collection.67_47;
  unsigned char * _48;
  int _50;
  int _51;

  <bb 2>:
  font_collection.58_8 = font_collection;
  _10 = stbtt__isfont (font_collection.58_8);
  retval.57_11 = _10 != 0;
  if (retval.57_11 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _12 = 1;
  goto <bb 15> (<L17>);

  <bb 4>:
  font_collection.59_13 = font_collection;
  _14 = *font_collection.59_13;
  _15 = (int) _14;
  _16 = 116;
  _17 = (int) _16;
  if (_15 == _17)
    goto <bb 5>;
  else
    goto <bb 14>;

  <bb 5>:
  font_collection.60_18 = font_collection;
  _19 = font_collection.60_18 + 1;
  _20 = *_19;
  _21 = (int) _20;
  _22 = 116;
  _23 = (int) _22;
  if (_21 == _23)
    goto <bb 6>;
  else
    goto <bb 14>;

  <bb 6>:
  font_collection.61_24 = font_collection;
  _25 = font_collection.61_24 + 2;
  _26 = *_25;
  _27 = (int) _26;
  _28 = 99;
  _29 = (int) _28;
  if (_27 == _29)
    goto <bb 7>;
  else
    goto <bb 14>;

  <bb 7>:
  font_collection.62_30 = font_collection;
  _31 = font_collection.62_30 + 3;
  _32 = *_31;
  _33 = (int) _32;
  _34 = 102;
  _35 = (int) _34;
  if (_33 == _35)
    goto <bb 8>;
  else
    goto <bb 14>;

  <bb 8>:
  font_collection.65_36 = font_collection;
  _37 = font_collection.65_36 + 4;
  _39 = ttULONG (_37);
  if (_39 == 65536)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  font_collection.66_40 = font_collection;
  _41 = font_collection.66_40 + 4;
  _43 = ttULONG (_41);
  if (_43 == 131072)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  iftmp.64_45 = 1;
  goto <bb 12>;

  <bb 11>:
  iftmp.64_44 = 0;

  <bb 12>:
  # iftmp.64_2 = PHI <iftmp.64_45(10), iftmp.64_44(11)>
  retval.63_46 = iftmp.64_2;
  if (retval.63_46 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  font_collection.67_47 = font_collection;
  _48 = font_collection.67_47 + 8;
  _50 = ttLONG (_48);
  goto <bb 15> (<L17>);

  <bb 14>:
  _51 = 0;

  # _1 = PHI <_12(3), _50(13), _51(14)>
<L17>:
  return _1;

}



;; Function stbtt__buf stbtt__get_subrs(stbtt__buf, stbtt__buf) (_ZL16stbtt__get_subrs10stbtt__bufS_, funcdef_no=584, decl_uid=15782, cgraph_uid=483, symbol_order=483)

stbtt__buf stbtt__get_subrs(stbtt__buf, stbtt__buf) (struct stbtt__buf cff, struct stbtt__buf fontdict)
{
  struct stbtt__buf pdict;
  stbtt_uint32 private_loc[2];
  stbtt_uint32 subrsoff;
  int D.20925;
  unsigned int D.20924;
  unsigned int subrsoff.69;
  unsigned int D.20922;
  unsigned int subrsoff.68;
  int D.20918;
  unsigned int D.20917;
  int D.20916;
  unsigned int D.20915;
  struct stbtt__buf D.20914;
  unsigned int D.20913;
  unsigned int D.20911;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  unsigned int _11;
  int _12;
  unsigned int subrsoff.68_15;
  unsigned int _17;
  unsigned int subrsoff.69_18;
  unsigned int _19;
  int _20;

  <bb 2>:
  subrsoff = 0;
  private_loc[0] = 0;
  private_loc[1] = 0;
  stbtt__dict_get_ints (&fontdict, 18, 2, &private_loc);
  _7 = private_loc[1];
  if (_7 == 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _8 = private_loc[0];
  if (_8 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  D.20914 = stbtt__new_buf (0B, 0);
  goto <bb 8>;

  <bb 5>:
  _9 = private_loc[0];
  _10 = (int) _9;
  _11 = private_loc[1];
  _12 = (int) _11;
  pdict = stbtt__buf_range (&cff, _12, _10);
  stbtt__dict_get_ints (&pdict, 19, 1, &subrsoff);
  subrsoff.68_15 = subrsoff;
  if (subrsoff.68_15 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  D.20914 = stbtt__new_buf (0B, 0);
  goto <bb 8>;

  <bb 7>:
  _17 = private_loc[1];
  subrsoff.69_18 = subrsoff;
  _19 = _17 + subrsoff.69_18;
  _20 = (int) _19;
  stbtt__buf_seek (&cff, _20);
  D.20914 = stbtt__cff_get_index (&cff);

  <bb 8>:
  subrsoff ={v} {CLOBBER};
  private_loc ={v} {CLOBBER};
  pdict ={v} {CLOBBER};

<L6>:
  return D.20914;

}



;; Function int stbtt_InitFont_internal(stbtt_fontinfo*, unsigned char*, int) (_ZL23stbtt_InitFont_internalP14stbtt_fontinfoPhi, funcdef_no=585, decl_uid=15800, cgraph_uid=484, symbol_order=484)

int stbtt_InitFont_internal(stbtt_fontinfo*, unsigned char*, int) (struct stbtt_fontinfo * info, unsigned char * data, int fontstart)
{
  stbtt_uint32 encoding_record;
  stbtt_uint32 cff;
  stbtt_uint32 fdselectoff;
  stbtt_uint32 fdarrayoff;
  stbtt_uint32 charstrings;
  stbtt_uint32 cstype;
  struct stbtt__buf topdictidx;
  struct stbtt__buf topdict;
  struct stbtt__buf b;
  stbtt_int32 numTables;
  stbtt_int32 i;
  stbtt_uint32 t;
  stbtt_uint32 cmap;
  int D.21046;
  short unsigned int D.21045;
  unsigned char * D.21044;
  sizetype D.21043;
  sizetype D.21042;
  int D.21041;
  int D.21038;
  int D.21036;
  unsigned int D.21035;
  unsigned int D.21034;
  unsigned char * D.21033;
  sizetype D.21032;
  sizetype D.21031;
  int D.21029;
  unsigned int D.21028;
  unsigned int D.21027;
  unsigned char * D.21026;
  sizetype D.21025;
  sizetype D.21024;
  short unsigned int D.21023;
  unsigned char * D.21022;
  sizetype D.21021;
  sizetype D.21020;
  int retval.92;
  short unsigned int D.21018;
  unsigned char * D.21017;
  sizetype D.21016;
  int retval.91;
  unsigned int D.21014;
  unsigned int D.21013;
  int D.21012;
  short unsigned int D.21009;
  unsigned char * D.21008;
  sizetype D.21007;
  sizetype D.21006;
  int D.21004;
  short unsigned int D.21003;
  unsigned char * D.21002;
  sizetype D.21001;
  sizetype D.21000;
  unsigned int fontstart.90;
  int charstrings.89;
  unsigned int charstrings.88;
  int fdselectoff.87;
  unsigned int fdselectoff.86;
  int D.20991;
  unsigned int D.20990;
  unsigned int fdselectoff.85;
  unsigned int D.20988;
  int D.20987;
  int fdarrayoff.84;
  unsigned int fdarrayoff.83;
  unsigned int fdselectoff.82;
  unsigned int fdarrayoff.81;
  unsigned int charstrings.80;
  unsigned int cstype.79;
  struct stbtt__buf D.15822;
  struct stbtt__buf D.15818;
  int D.20972;
  unsigned char D.20971;
  unsigned char * D.20970;
  sizetype D.20969;
  unsigned int fontstart.78;
  int D.20962;
  int D.20959;
  int D.20958;
  int D.20957;
  int D.20955;
  int D.20953;
  int D.20949;
  unsigned int D.20948;
  unsigned int fontstart.77;
  int D.20946;
  unsigned int D.20945;
  unsigned int fontstart.76;
  int D.20943;
  unsigned int D.20942;
  unsigned int fontstart.75;
  int D.20940;
  unsigned int D.20939;
  unsigned int fontstart.74;
  int D.20937;
  unsigned int D.20936;
  unsigned int fontstart.73;
  int D.20934;
  unsigned int D.20933;
  unsigned int fontstart.72;
  int D.20931;
  unsigned int D.20930;
  unsigned int fontstart.71;
  unsigned int fontstart.70;
  int _2;
  int _3;
  unsigned int fontstart.70_19;
  unsigned int fontstart.71_22;
  unsigned int _24;
  int _25;
  unsigned int fontstart.72_27;
  unsigned int _29;
  int _30;
  unsigned int fontstart.73_32;
  unsigned int _34;
  int _35;
  unsigned int fontstart.74_37;
  unsigned int _39;
  int _40;
  unsigned int fontstart.75_42;
  unsigned int _44;
  int _45;
  unsigned int fontstart.76_47;
  unsigned int _49;
  int _50;
  unsigned int fontstart.77_52;
  unsigned int _54;
  int _55;
  int _57;
  int _58;
  int _59;
  int _60;
  int _61;
  int _62;
  unsigned int fontstart.78_67;
  int _70;
  sizetype _73;
  unsigned char * _74;
  unsigned char _79;
  int _80;
  unsigned int cstype.79_92;
  int _93;
  unsigned int charstrings.80_94;
  int _95;
  unsigned int fdarrayoff.81_96;
  unsigned int fdselectoff.82_97;
  int _98;
  unsigned int fdarrayoff.83_99;
  int fdarrayoff.84_100;
  int _103;
  unsigned int _104;
  unsigned int fdselectoff.85_105;
  unsigned int _106;
  int _107;
  unsigned int fdselectoff.86_108;
  int fdselectoff.87_109;
  unsigned int charstrings.88_111;
  int charstrings.89_112;
  unsigned int fontstart.90_129;
  sizetype _132;
  sizetype _133;
  unsigned char * _134;
  short unsigned int _136;
  int _137;
  sizetype _140;
  sizetype _141;
  unsigned char * _142;
  short unsigned int _144;
  int _148;
  unsigned int _149;
  unsigned int _150;
  sizetype _152;
  unsigned char * _153;
  short unsigned int _155;
  int retval.91_156;
  sizetype _157;
  sizetype _158;
  unsigned char * _159;
  short unsigned int _161;
  int retval.92_162;
  sizetype _163;
  sizetype _164;
  unsigned char * _165;
  unsigned int _167;
  unsigned int _168;
  int _169;
  sizetype _171;
  sizetype _172;
  unsigned char * _173;
  unsigned int _175;
  unsigned int _176;
  int _177;
  int _180;
  int _181;
  int _182;
  sizetype _183;
  sizetype _184;
  unsigned char * _185;
  short unsigned int _187;
  int _188;
  int _190;
  int _191;

  <bb 2>:
  info_13(D)->data = data_14(D);
  info_13(D)->fontstart = fontstart_16(D);
  info_13(D)->cff = stbtt__new_buf (0B, 0);
  fontstart.70_19 = (unsigned int) fontstart_16(D);
  cmap_21 = stbtt__find_table (data_14(D), fontstart.70_19, "cmap");
  fontstart.71_22 = (unsigned int) fontstart_16(D);
  _24 = stbtt__find_table (data_14(D), fontstart.71_22, "loca");
  _25 = (int) _24;
  info_13(D)->loca = _25;
  fontstart.72_27 = (unsigned int) fontstart_16(D);
  _29 = stbtt__find_table (data_14(D), fontstart.72_27, "head");
  _30 = (int) _29;
  info_13(D)->head = _30;
  fontstart.73_32 = (unsigned int) fontstart_16(D);
  _34 = stbtt__find_table (data_14(D), fontstart.73_32, "glyf");
  _35 = (int) _34;
  info_13(D)->glyf = _35;
  fontstart.74_37 = (unsigned int) fontstart_16(D);
  _39 = stbtt__find_table (data_14(D), fontstart.74_37, "hhea");
  _40 = (int) _39;
  info_13(D)->hhea = _40;
  fontstart.75_42 = (unsigned int) fontstart_16(D);
  _44 = stbtt__find_table (data_14(D), fontstart.75_42, "hmtx");
  _45 = (int) _44;
  info_13(D)->hmtx = _45;
  fontstart.76_47 = (unsigned int) fontstart_16(D);
  _49 = stbtt__find_table (data_14(D), fontstart.76_47, "kern");
  _50 = (int) _49;
  info_13(D)->kern = _50;
  fontstart.77_52 = (unsigned int) fontstart_16(D);
  _54 = stbtt__find_table (data_14(D), fontstart.77_52, "GPOS");
  _55 = (int) _54;
  info_13(D)->gpos = _55;
  if (cmap_21 == 0)
    goto <bb 6>;
  else
    goto <bb 3>;

  <bb 3>:
  _57 = info_13(D)->head;
  if (_57 == 0)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  _58 = info_13(D)->hhea;
  if (_58 == 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  _59 = info_13(D)->hmtx;
  if (_59 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _191 = 0;
  goto <bb 36> (<L39>);

  <bb 7>:
  _60 = info_13(D)->glyf;
  if (_60 != 0)
    goto <bb 8>;
  else
    goto <bb 10>;

  <bb 8>:
  _61 = info_13(D)->loca;
  if (_61 == 0)
    goto <bb 9>;
  else
    goto <bb 22>;

  <bb 9>:
  _62 = 0;
  goto <bb 36> (<L39>);

  <bb 10>:
  cstype = 2;
  charstrings = 0;
  fdarrayoff = 0;
  fdselectoff = 0;
  fontstart.78_67 = (unsigned int) fontstart_16(D);
  cff_69 = stbtt__find_table (data_14(D), fontstart.78_67, "CFF ");
  if (cff_69 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _70 = 0;
  goto <bb 21>;

  <bb 12>:
  info_13(D)->fontdicts = stbtt__new_buf (0B, 0);
  info_13(D)->fdselect = stbtt__new_buf (0B, 0);
  _73 = (sizetype) cff_69;
  _74 = data_14(D) + _73;
  info_13(D)->cff = stbtt__new_buf (_74, 536870912);
  b = info_13(D)->cff;
  stbtt__buf_skip (&b, 2);
  _79 = stbtt__buf_get8 (&b);
  _80 = (int) _79;
  stbtt__buf_seek (&b, _80);
  D.15818 = stbtt__cff_get_index (&b);
  topdictidx = stbtt__cff_get_index (&b);
  topdict = stbtt__cff_index_get (topdictidx, 0);
  D.15822 = stbtt__cff_get_index (&b);
  info_13(D)->gsubrs = stbtt__cff_get_index (&b);
  stbtt__dict_get_ints (&topdict, 17, 1, &charstrings);
  stbtt__dict_get_ints (&topdict, 262, 1, &cstype);
  stbtt__dict_get_ints (&topdict, 292, 1, &fdarrayoff);
  stbtt__dict_get_ints (&topdict, 293, 1, &fdselectoff);
  info_13(D)->subrs = stbtt__get_subrs (b, topdict);
  cstype.79_92 = cstype;
  if (cstype.79_92 != 2)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _93 = 0;
  goto <bb 21>;

  <bb 14>:
  charstrings.80_94 = charstrings;
  if (charstrings.80_94 == 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _95 = 0;
  goto <bb 21>;

  <bb 16>:
  fdarrayoff.81_96 = fdarrayoff;
  if (fdarrayoff.81_96 != 0)
    goto <bb 17>;
  else
    goto <bb 20>;

  <bb 17>:
  fdselectoff.82_97 = fdselectoff;
  if (fdselectoff.82_97 == 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _98 = 0;
  goto <bb 21>;

  <bb 19>:
  fdarrayoff.83_99 = fdarrayoff;
  fdarrayoff.84_100 = (int) fdarrayoff.83_99;
  stbtt__buf_seek (&b, fdarrayoff.84_100);
  info_13(D)->fontdicts = stbtt__cff_get_index (&b);
  _103 = b.size;
  _104 = (unsigned int) _103;
  fdselectoff.85_105 = fdselectoff;
  _106 = _104 - fdselectoff.85_105;
  _107 = (int) _106;
  fdselectoff.86_108 = fdselectoff;
  fdselectoff.87_109 = (int) fdselectoff.86_108;
  info_13(D)->fdselect = stbtt__buf_range (&b, fdselectoff.87_109, _107);

  <bb 20>:
  charstrings.88_111 = charstrings;
  charstrings.89_112 = (int) charstrings.88_111;
  stbtt__buf_seek (&b, charstrings.89_112);
  info_13(D)->charstrings = stbtt__cff_get_index (&b);
  b ={v} {CLOBBER};
  topdict ={v} {CLOBBER};
  topdictidx ={v} {CLOBBER};
  cstype ={v} {CLOBBER};
  charstrings ={v} {CLOBBER};
  fdarrayoff ={v} {CLOBBER};
  fdselectoff ={v} {CLOBBER};
  goto <bb 22>;

  <bb 21>:
  # _2 = PHI <_70(11), _93(13), _95(15), _98(18)>
  b ={v} {CLOBBER};
  topdict ={v} {CLOBBER};
  topdictidx ={v} {CLOBBER};
  cstype ={v} {CLOBBER};
  charstrings ={v} {CLOBBER};
  fdarrayoff ={v} {CLOBBER};
  fdselectoff ={v} {CLOBBER};
  goto <bb 36> (<L39>);

  <bb 22>:
  fontstart.90_129 = (unsigned int) fontstart_16(D);
  t_131 = stbtt__find_table (data_14(D), fontstart.90_129, "maxp");
  if (t_131 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  _132 = (sizetype) t_131;
  _133 = _132 + 4;
  _134 = data_14(D) + _133;
  _136 = ttUSHORT (_134);
  _137 = (int) _136;
  info_13(D)->numGlyphs = _137;
  goto <bb 25>;

  <bb 24>:
  info_13(D)->numGlyphs = 65535;

  <bb 25>:
  _140 = (sizetype) cmap_21;
  _141 = _140 + 2;
  _142 = data_14(D) + _141;
  _144 = ttUSHORT (_142);
  numTables_145 = (stbtt_int32) _144;
  info_13(D)->index_map = 0;
  i_147 = 0;

  <bb 26>:
  # i_1 = PHI <i_147(25), i_179(32)>
  if (i_1 >= numTables_145)
    goto <bb 33>;
  else
    goto <bb 27>;

  <bb 27>:
  _148 = i_1 * 8;
  _149 = (unsigned int) _148;
  _150 = _149 + cmap_21;
  encoding_record_151 = _150 + 4;
  _152 = (sizetype) encoding_record_151;
  _153 = data_14(D) + _152;
  _155 = ttUSHORT (_153);
  retval.91_156 = (int) _155;
  switch (retval.91_156) <default: <L34>, case 0: <L33>, case 3: <L28>>

<L28>:
  _157 = (sizetype) encoding_record_151;
  _158 = _157 + 2;
  _159 = data_14(D) + _158;
  _161 = ttUSHORT (_159);
  retval.92_162 = (int) _161;
  switch (retval.92_162) <default: <L31>, case 1: <L29>, case 10: <L29>>

<L29>:
  _163 = (sizetype) encoding_record_151;
  _164 = _163 + 4;
  _165 = data_14(D) + _164;
  _167 = ttULONG (_165);
  _168 = _167 + cmap_21;
  _169 = (int) _168;
  info_13(D)->index_map = _169;

<L31>:
  goto <bb 32> (<L34>);

<L33>:
  _171 = (sizetype) encoding_record_151;
  _172 = _171 + 4;
  _173 = data_14(D) + _172;
  _175 = ttULONG (_173);
  _176 = _175 + cmap_21;
  _177 = (int) _176;
  info_13(D)->index_map = _177;

<L34>:
  i_179 = i_1 + 1;
  goto <bb 26>;

  <bb 33>:
  _180 = info_13(D)->index_map;
  if (_180 == 0)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  _181 = 0;
  goto <bb 36> (<L39>);

  <bb 35>:
  _182 = info_13(D)->head;
  _183 = (sizetype) _182;
  _184 = _183 + 50;
  _185 = data_14(D) + _184;
  _187 = ttUSHORT (_185);
  _188 = (int) _187;
  info_13(D)->indexToLocFormat = _188;
  _190 = 1;

  # _3 = PHI <_191(6), _62(9), _2(21), _181(34), _190(35)>
<L39>:
  return _3;

}



;; Function int stbtt_FindGlyphIndex(const stbtt_fontinfo*, int) (stbtt_FindGlyphIndex, funcdef_no=586, decl_uid=15262, cgraph_uid=485, symbol_order=485)

int stbtt_FindGlyphIndex(const stbtt_fontinfo*, int) (const struct stbtt_fontinfo * info, int unicode_codepoint)
{
  stbtt_uint32 start_glyph;
  stbtt_uint32 end_char;
  stbtt_uint32 start_char;
  stbtt_int32 mid;
  stbtt_int32 high;
  stbtt_int32 low;
  stbtt_uint32 ngroups;
  stbtt_uint16 item;
  stbtt_uint16 start;
  stbtt_uint16 offset;
  stbtt_uint16 end;
  stbtt_uint32 search;
  stbtt_uint32 endCount;
  stbtt_uint16 rangeShift;
  stbtt_uint16 entrySelector;
  stbtt_uint16 searchRange;
  stbtt_uint16 segcount;
  stbtt_uint32 count;
  stbtt_uint32 first;
  stbtt_int32 bytes;
  static const char __PRETTY_FUNCTION__[53] = "int stbtt_FindGlyphIndex(const stbtt_fontinfo*, int)";
  stbtt_uint16 format;
  stbtt_uint32 index_map;
  stbtt_uint8 * data;
  unsigned int D.21271;
  unsigned int D.21270;
  unsigned int unicode_codepoint.99;
  stbtt_uint8 * D.21266;
  sizetype D.21265;
  sizetype D.21264;
  sizetype D.21263;
  int D.21262;
  sizetype D.21261;
  unsigned int unicode_codepoint.98;
  unsigned int unicode_codepoint.97;
  stbtt_uint8 * D.21252;
  sizetype D.21251;
  sizetype D.21250;
  sizetype D.21249;
  int D.21248;
  sizetype D.21247;
  stbtt_uint8 * D.21246;
  sizetype D.21245;
  sizetype D.21244;
  sizetype D.21243;
  int D.21242;
  sizetype D.21241;
  int D.21240;
  int D.21239;
  stbtt_uint8 * D.21236;
  sizetype D.21235;
  sizetype D.21234;
  short unsigned int D.21230;
  stbtt_uint8 * D.21229;
  sizetype D.21228;
  sizetype D.21227;
  sizetype D.21226;
  int D.21225;
  int D.21224;
  sizetype D.21223;
  sizetype D.21222;
  int D.21221;
  int D.21220;
  sizetype D.21219;
  sizetype D.21218;
  sizetype D.21217;
  sizetype D.21216;
  int D.21215;
  int D.21214;
  int D.21213;
  sizetype D.21212;
  short unsigned int D.21211;
  short unsigned int D.21210;
  short unsigned int D.21209;
  short int D.21208;
  stbtt_uint8 * D.21207;
  sizetype D.21206;
  sizetype D.21205;
  sizetype D.21204;
  int D.21203;
  int D.21202;
  sizetype D.21201;
  sizetype D.21200;
  int D.21199;
  int D.21198;
  sizetype D.21197;
  stbtt_uint8 * D.21194;
  sizetype D.21193;
  sizetype D.21192;
  sizetype D.21191;
  int D.21190;
  int D.21189;
  sizetype D.21188;
  sizetype D.21187;
  int D.21186;
  int D.21185;
  sizetype D.21184;
  int D.21181;
  stbtt_uint8 * D.21180;
  sizetype D.21179;
  sizetype D.21178;
  sizetype D.21177;
  int D.21176;
  int D.21175;
  sizetype D.21174;
  sizetype D.21173;
  int D.21172;
  int D.21171;
  sizetype D.21170;
  int D.21166;
  short unsigned int D.21165;
  stbtt_uint8 * D.21164;
  sizetype D.21163;
  sizetype D.21162;
  int D.21161;
  int D.21160;
  sizetype D.21159;
  unsigned int D.21158;
  unsigned int D.21157;
  unsigned int D.21155;
  int D.21154;
  int D.21153;
  int D.21150;
  stbtt_uint8 * D.21149;
  sizetype D.21148;
  sizetype D.21147;
  int D.21146;
  int D.21145;
  sizetype D.21144;
  int D.21143;
  int D.21142;
  unsigned int D.21138;
  int D.21137;
  int D.21136;
  int D.21133;
  short unsigned int D.21132;
  stbtt_uint8 * D.21131;
  sizetype D.21130;
  sizetype D.21129;
  int D.21128;
  int D.21127;
  sizetype D.21126;
  bool retval.96;
  int D.21122;
  int D.21121;
  short unsigned int D.21120;
  stbtt_uint8 * D.21119;
  sizetype D.21118;
  sizetype D.21117;
  stbtt_uint8 * D.21116;
  sizetype D.21115;
  sizetype D.21114;
  int D.21113;
  int D.21112;
  short unsigned int D.21111;
  stbtt_uint8 * D.21110;
  sizetype D.21109;
  sizetype D.21108;
  int D.21107;
  int D.21106;
  short unsigned int D.21105;
  stbtt_uint8 * D.21104;
  sizetype D.21103;
  sizetype D.21102;
  short unsigned int D.21094;
  stbtt_uint8 * D.21093;
  sizetype D.21092;
  sizetype D.21091;
  sizetype D.21090;
  unsigned int D.21089;
  unsigned int D.21088;
  unsigned int unicode_codepoint.95;
  sizetype D.21086;
  unsigned int unicode_codepoint.94;
  unsigned int D.21082;
  unsigned int unicode_codepoint.93;
  short unsigned int D.21078;
  stbtt_uint8 * D.21077;
  sizetype D.21076;
  sizetype D.21075;
  short unsigned int D.21074;
  stbtt_uint8 * D.21073;
  sizetype D.21072;
  sizetype D.21071;
  unsigned char D.21068;
  stbtt_uint8 * D.21067;
  sizetype D.21066;
  sizetype D.21065;
  sizetype D.21064;
  sizetype D.21063;
  int D.21062;
  int D.21059;
  short unsigned int D.21058;
  stbtt_uint8 * D.21057;
  sizetype D.21056;
  sizetype D.21055;
  stbtt_uint8 * D.21052;
  sizetype D.21051;
  int D.21050;
  int _10;
  int _17;
  sizetype _19;
  stbtt_uint8 * _20;
  sizetype _23;
  sizetype _24;
  stbtt_uint8 * _25;
  short unsigned int _27;
  int _29;
  sizetype _31;
  sizetype _32;
  sizetype _33;
  sizetype _34;
  stbtt_uint8 * _35;
  unsigned char _36;
  int _37;
  int _38;
  sizetype _39;
  sizetype _40;
  stbtt_uint8 * _41;
  short unsigned int _43;
  sizetype _45;
  sizetype _46;
  stbtt_uint8 * _47;
  short unsigned int _49;
  unsigned int unicode_codepoint.93_51;
  unsigned int _52;
  unsigned int unicode_codepoint.94_53;
  sizetype _54;
  unsigned int unicode_codepoint.95_55;
  unsigned int _56;
  unsigned int _57;
  sizetype _58;
  sizetype _59;
  sizetype _60;
  stbtt_uint8 * _61;
  short unsigned int _63;
  int _64;
  int _65;
  sizetype _67;
  sizetype _68;
  stbtt_uint8 * _69;
  int _74;
  int _75;
  sizetype _77;
  int _78;
  sizetype _79;
  sizetype _80;
  sizetype _81;
  stbtt_uint8 * _82;
  sizetype _85;
  int _86;
  sizetype _87;
  sizetype _88;
  sizetype _89;
  stbtt_uint8 * _90;
  unsigned int unicode_codepoint.97_93;
  unsigned int unicode_codepoint.98_95;
  sizetype _97;
  int _98;
  sizetype _99;
  sizetype _100;
  sizetype _101;
  stbtt_uint8 * _102;
  unsigned int unicode_codepoint.99_105;
  unsigned int _106;
  unsigned int _107;
  int _108;
  int _109;
  int _110;
  sizetype _111;
  sizetype _112;
  stbtt_uint8 * _113;
  short unsigned int _115;
  int _116;
  int _117;
  sizetype _119;
  sizetype _120;
  stbtt_uint8 * _121;
  short unsigned int _123;
  int _124;
  int _125;
  sizetype _127;
  sizetype _128;
  stbtt_uint8 * _129;
  sizetype _132;
  sizetype _133;
  stbtt_uint8 * _134;
  short unsigned int _136;
  int _137;
  int _138;
  int _142;
  sizetype _143;
  int _144;
  int _145;
  sizetype _146;
  sizetype _147;
  stbtt_uint8 * _148;
  short unsigned int _150;
  int _151;
  bool retval.96_152;
  int _153;
  int _154;
  unsigned int _155;
  int _158;
  int _159;
  sizetype _161;
  int _162;
  int _163;
  sizetype _164;
  sizetype _165;
  stbtt_uint8 * _166;
  int _169;
  int _170;
  int _171;
  unsigned int _172;
  unsigned int _176;
  unsigned int _177;
  sizetype _179;
  int _180;
  int _181;
  sizetype _182;
  sizetype _183;
  stbtt_uint8 * _184;
  short unsigned int _186;
  int _187;
  sizetype _188;
  int _189;
  int _190;
  sizetype _191;
  sizetype _192;
  int _193;
  int _194;
  sizetype _195;
  sizetype _196;
  sizetype _197;
  stbtt_uint8 * _198;
  int _201;
  int _202;
  sizetype _203;
  int _204;
  int _205;
  sizetype _206;
  sizetype _207;
  int _208;
  int _209;
  sizetype _210;
  sizetype _211;
  sizetype _212;
  stbtt_uint8 * _213;
  sizetype _216;
  int _217;
  int _218;
  sizetype _219;
  sizetype _220;
  int _221;
  int _222;
  sizetype _223;
  sizetype _224;
  sizetype _225;
  stbtt_uint8 * _226;
  short int _228;
  short unsigned int _229;
  short unsigned int _230;
  short unsigned int _231;
  int _232;
  sizetype _233;
  int _234;
  int _235;
  int _236;
  sizetype _237;
  sizetype _238;
  sizetype _239;
  sizetype _240;
  int _241;
  int _242;
  sizetype _243;
  sizetype _244;
  int _245;
  int _246;
  sizetype _247;
  sizetype _248;
  sizetype _249;
  stbtt_uint8 * _250;
  short unsigned int _252;
  int _253;

  <bb 2>:
  data_16 = info_15(D)->data;
  _17 = info_15(D)->index_map;
  index_map_18 = (stbtt_uint32) _17;
  _19 = (sizetype) index_map_18;
  _20 = data_16 + _19;
  format_22 = ttUSHORT (_20);
  if (format_22 == 0)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 3>:
  _23 = (sizetype) index_map_18;
  _24 = _23 + 2;
  _25 = data_16 + _24;
  _27 = ttUSHORT (_25);
  bytes_28 = (stbtt_int32) _27;
  _29 = bytes_28 + -6;
  if (_29 > unicode_codepoint_30(D))
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _31 = (sizetype) index_map_18;
  _32 = (sizetype) unicode_codepoint_30(D);
  _33 = _31 + _32;
  _34 = _33 + 6;
  _35 = data_16 + _34;
  _36 = *_35;
  _37 = (int) _36;
  goto <bb 45> (<L52>);

  <bb 5>:
  _38 = 0;
  goto <bb 45> (<L52>);

  <bb 6>:
  if (format_22 == 6)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 7>:
  _39 = (sizetype) index_map_18;
  _40 = _39 + 6;
  _41 = data_16 + _40;
  _43 = ttUSHORT (_41);
  first_44 = (stbtt_uint32) _43;
  _45 = (sizetype) index_map_18;
  _46 = _45 + 8;
  _47 = data_16 + _46;
  _49 = ttUSHORT (_47);
  count_50 = (stbtt_uint32) _49;
  unicode_codepoint.93_51 = (unsigned int) unicode_codepoint_30(D);
  if (unicode_codepoint.93_51 >= first_44)
    goto <bb 8>;
  else
    goto <bb 10>;

  <bb 8>:
  _52 = first_44 + count_50;
  unicode_codepoint.94_53 = (unsigned int) unicode_codepoint_30(D);
  if (_52 > unicode_codepoint.94_53)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _54 = (sizetype) index_map_18;
  unicode_codepoint.95_55 = (unsigned int) unicode_codepoint_30(D);
  _56 = unicode_codepoint.95_55 - first_44;
  _57 = _56 * 2;
  _58 = (sizetype) _57;
  _59 = _54 + _58;
  _60 = _59 + 10;
  _61 = data_16 + _60;
  _63 = ttUSHORT (_61);
  _64 = (int) _63;
  goto <bb 45> (<L52>);

  <bb 10>:
  _65 = 0;
  goto <bb 45> (<L52>);

  <bb 11>:
  if (format_22 == 2)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1463, &__PRETTY_FUNCTION__);

  <bb 13>:
  if (format_22 == 4)
    goto <bb 14>;
  else
    goto <bb 30>;

  <bb 14>:
  _111 = (sizetype) index_map_18;
  _112 = _111 + 6;
  _113 = data_16 + _112;
  _115 = ttUSHORT (_113);
  _116 = (int) _115;
  _117 = _116 >> 1;
  segcount_118 = (stbtt_uint16) _117;
  _119 = (sizetype) index_map_18;
  _120 = _119 + 8;
  _121 = data_16 + _120;
  _123 = ttUSHORT (_121);
  _124 = (int) _123;
  _125 = _124 >> 1;
  searchRange_126 = (stbtt_uint16) _125;
  _127 = (sizetype) index_map_18;
  _128 = _127 + 10;
  _129 = data_16 + _128;
  entrySelector_131 = ttUSHORT (_129);
  _132 = (sizetype) index_map_18;
  _133 = _132 + 12;
  _134 = data_16 + _133;
  _136 = ttUSHORT (_134);
  _137 = (int) _136;
  _138 = _137 >> 1;
  rangeShift_139 = (stbtt_uint16) _138;
  endCount_140 = index_map_18 + 14;
  search_141 = endCount_140;
  if (unicode_codepoint_30(D) > 65535)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _142 = 0;
  goto <bb 45> (<L52>);

  <bb 16>:
  _143 = (sizetype) search_141;
  _144 = (int) rangeShift_139;
  _145 = _144 * 2;
  _146 = (sizetype) _145;
  _147 = _143 + _146;
  _148 = data_16 + _147;
  _150 = ttUSHORT (_148);
  _151 = (int) _150;
  retval.96_152 = _151 <= unicode_codepoint_30(D);
  if (retval.96_152 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _153 = (int) rangeShift_139;
  _154 = _153 * 2;
  _155 = (unsigned int) _154;
  search_156 = _155 + search_141;

  <bb 18>:
  # search_3 = PHI <search_141(16), search_156(17)>
  search_157 = search_3 + 4294967294;

  <bb 19>:
  # searchRange_1 = PHI <searchRange_126(18), searchRange_160(22)>
  # entrySelector_2 = PHI <entrySelector_131(18), entrySelector_174(22)>
  # search_4 = PHI <search_157(18), search_5(22)>
  if (entrySelector_2 == 0)
    goto <bb 23>;
  else
    goto <bb 20>;

  <bb 20>:
  _158 = (int) searchRange_1;
  _159 = _158 >> 1;
  searchRange_160 = (stbtt_uint16) _159;
  _161 = (sizetype) search_4;
  _162 = (int) searchRange_160;
  _163 = _162 * 2;
  _164 = (sizetype) _163;
  _165 = _161 + _164;
  _166 = data_16 + _165;
  end_168 = ttUSHORT (_166);
  _169 = (int) end_168;
  if (_169 < unicode_codepoint_30(D))
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _170 = (int) searchRange_160;
  _171 = _170 * 2;
  _172 = (unsigned int) _171;
  search_173 = _172 + search_4;

  <bb 22>:
  # search_5 = PHI <search_4(20), search_173(21)>
  entrySelector_174 = entrySelector_2 + 65535;
  goto <bb 19>;

  <bb 23>:
  search_175 = search_4 + 2;
  _176 = search_175 - endCount_140;
  _177 = _176 >> 1;
  item_178 = (stbtt_uint16) _177;
  _179 = (sizetype) endCount_140;
  _180 = (int) item_178;
  _181 = _180 * 2;
  _182 = (sizetype) _181;
  _183 = _179 + _182;
  _184 = data_16 + _183;
  _186 = ttUSHORT (_184);
  _187 = (int) _186;
  if (_187 >= unicode_codepoint_30(D))
    goto <bb 25>;
  else
    goto <bb 24>;

  <bb 24>:
  __assert_fail ("unicode_codepoint <= ttUSHORT(data + endCount + 2*item)", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1499, &__PRETTY_FUNCTION__);

  <bb 25>:
  _188 = (sizetype) index_map_18;
  _189 = (int) segcount_118;
  _190 = _189 * 2;
  _191 = (sizetype) _190;
  _192 = _188 + _191;
  _193 = (int) item_178;
  _194 = _193 * 2;
  _195 = (sizetype) _194;
  _196 = _192 + _195;
  _197 = _196 + 16;
  _198 = data_16 + _197;
  start_200 = ttUSHORT (_198);
  _201 = (int) start_200;
  if (_201 > unicode_codepoint_30(D))
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  _202 = 0;
  goto <bb 45> (<L52>);

  <bb 27>:
  _203 = (sizetype) index_map_18;
  _204 = (int) segcount_118;
  _205 = _204 * 6;
  _206 = (sizetype) _205;
  _207 = _203 + _206;
  _208 = (int) item_178;
  _209 = _208 * 2;
  _210 = (sizetype) _209;
  _211 = _207 + _210;
  _212 = _211 + 16;
  _213 = data_16 + _212;
  offset_215 = ttUSHORT (_213);
  if (offset_215 == 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _216 = (sizetype) index_map_18;
  _217 = (int) segcount_118;
  _218 = _217 * 4;
  _219 = (sizetype) _218;
  _220 = _216 + _219;
  _221 = (int) item_178;
  _222 = _221 * 2;
  _223 = (sizetype) _222;
  _224 = _220 + _223;
  _225 = _224 + 16;
  _226 = data_16 + _225;
  _228 = ttSHORT (_226);
  _229 = (short unsigned int) _228;
  _230 = (short unsigned int) unicode_codepoint_30(D);
  _231 = _229 + _230;
  _232 = (int) _231;
  goto <bb 45> (<L52>);

  <bb 29>:
  _233 = (sizetype) offset_215;
  _234 = (int) start_200;
  _235 = unicode_codepoint_30(D) - _234;
  _236 = _235 * 2;
  _237 = (sizetype) _236;
  _238 = _233 + _237;
  _239 = (sizetype) index_map_18;
  _240 = _238 + _239;
  _241 = (int) segcount_118;
  _242 = _241 * 6;
  _243 = (sizetype) _242;
  _244 = _240 + _243;
  _245 = (int) item_178;
  _246 = _245 * 2;
  _247 = (sizetype) _246;
  _248 = _244 + _247;
  _249 = _248 + 16;
  _250 = data_16 + _249;
  _252 = ttUSHORT (_250);
  _253 = (int) _252;
  goto <bb 45> (<L52>);

  <bb 30>:
  if (format_22 == 12)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:
  if (format_22 == 13)
    goto <bb 32>;
  else
    goto <bb 43>;

  <bb 32>:
  _67 = (sizetype) index_map_18;
  _68 = _67 + 12;
  _69 = data_16 + _68;
  ngroups_71 = ttULONG (_69);
  low_72 = 0;
  high_73 = (stbtt_int32) ngroups_71;

  <bb 33>:
  # low_6 = PHI <low_72(32), low_7(41)>
  # high_8 = PHI <high_73(32), high_9(41)>
  if (low_6 >= high_8)
    goto <bb 42>;
  else
    goto <bb 34>;

  <bb 34>:
  _74 = high_8 - low_6;
  _75 = _74 >> 1;
  mid_76 = _75 + low_6;
  _77 = (sizetype) index_map_18;
  _78 = mid_76 * 12;
  _79 = (sizetype) _78;
  _80 = _77 + _79;
  _81 = _80 + 16;
  _82 = data_16 + _81;
  start_char_84 = ttULONG (_82);
  _85 = (sizetype) index_map_18;
  _86 = mid_76 * 12;
  _87 = (sizetype) _86;
  _88 = _85 + _87;
  _89 = _88 + 20;
  _90 = data_16 + _89;
  end_char_92 = ttULONG (_90);
  unicode_codepoint.97_93 = (unsigned int) unicode_codepoint_30(D);
  if (unicode_codepoint.97_93 < start_char_84)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  high_94 = mid_76;
  goto <bb 41>;

  <bb 36>:
  unicode_codepoint.98_95 = (unsigned int) unicode_codepoint_30(D);
  if (unicode_codepoint.98_95 > end_char_92)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  low_96 = mid_76 + 1;
  goto <bb 41>;

  <bb 38>:
  _97 = (sizetype) index_map_18;
  _98 = mid_76 * 12;
  _99 = (sizetype) _98;
  _100 = _97 + _99;
  _101 = _100 + 24;
  _102 = data_16 + _101;
  start_glyph_104 = ttULONG (_102);
  if (format_22 == 12)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  unicode_codepoint.99_105 = (unsigned int) unicode_codepoint_30(D);
  _106 = start_glyph_104 + unicode_codepoint.99_105;
  _107 = _106 - start_char_84;
  _108 = (int) _107;
  goto <bb 45> (<L52>);

  <bb 40>:
  _109 = (int) start_glyph_104;
  goto <bb 45> (<L52>);

  <bb 41>:
  # low_7 = PHI <low_6(35), low_96(37)>
  # high_9 = PHI <high_94(35), high_8(37)>
  goto <bb 33>;

  <bb 42>:
  _110 = 0;
  goto <bb 45> (<L52>);

  <bb 43>:

  <bb 44>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1534, &__PRETTY_FUNCTION__);

  # _10 = PHI <_37(4), _38(5), _64(9), _65(10), _110(42), _142(15), _202(26), _232(28), _253(29), _108(39), _109(40)>
<L52>:
  return _10;

}



;; Function int stbtt_GetCodepointShape(const stbtt_fontinfo*, int, stbtt_vertex**) (stbtt_GetCodepointShape, funcdef_no=587, decl_uid=15339, cgraph_uid=486, symbol_order=486)

int stbtt_GetCodepointShape(const stbtt_fontinfo*, int, stbtt_vertex**) (const struct stbtt_fontinfo * info, int unicode_codepoint, struct stbtt_vertex * * vertices)
{
  int D.21279;
  int D.21277;
  int D.21276;
  int _5;
  int _8;
  int _9;

  <bb 2>:
  _5 = stbtt_FindGlyphIndex (info_2(D), unicode_codepoint_3(D));
  _8 = stbtt_GetGlyphShape (info_2(D), _5, vertices_6(D));
  _9 = _8;

<L0>:
  return _9;

}



;; Function void stbtt_setvertex(stbtt_vertex*, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32) (_ZL15stbtt_setvertexP12stbtt_vertexhiiii, funcdef_no=588, decl_uid=15882, cgraph_uid=487, symbol_order=487)

void stbtt_setvertex(stbtt_vertex*, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32) (struct stbtt_vertex * v, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbtt_int32 cx, stbtt_int32 cy)
{
  short int D.21283;
  short int D.21282;
  short int D.21281;
  short int D.21280;
  short int _6;
  short int _9;
  short int _12;
  short int _15;

  <bb 2>:
  v_2(D)->type = type_3(D);
  _6 = (short int) x_5(D);
  v_2(D)->x = _6;
  _9 = (short int) y_8(D);
  v_2(D)->y = _9;
  _12 = (short int) cx_11(D);
  v_2(D)->cx = _12;
  _15 = (short int) cy_14(D);
  v_2(D)->cy = _15;
  return;

}



;; Function int stbtt__GetGlyfOffset(const stbtt_fontinfo*, int) (_ZL20stbtt__GetGlyfOffsetPK14stbtt_fontinfoi, funcdef_no=589, decl_uid=15886, cgraph_uid=488, symbol_order=488)

int stbtt__GetGlyfOffset(const stbtt_fontinfo*, int) (const struct stbtt_fontinfo * info, int glyph_index)
{
  static const char __PRETTY_FUNCTION__[53] = "int stbtt__GetGlyfOffset(const stbtt_fontinfo*, int)";
  int g2;
  int g1;
  int iftmp.100;
  unsigned int D.21344;
  unsigned int D.21343;
  unsigned char * D.21342;
  sizetype D.21341;
  sizetype D.21340;
  sizetype D.21339;
  int D.21338;
  sizetype D.21337;
  int D.21336;
  unsigned char * D.21335;
  unsigned int D.21334;
  int D.21333;
  unsigned int D.21332;
  unsigned int D.21331;
  unsigned char * D.21330;
  sizetype D.21329;
  sizetype D.21328;
  int D.21327;
  sizetype D.21326;
  int D.21325;
  unsigned char * D.21324;
  unsigned int D.21323;
  int D.21322;
  int D.21320;
  int D.21319;
  short unsigned int D.21318;
  unsigned char * D.21317;
  sizetype D.21316;
  sizetype D.21315;
  sizetype D.21314;
  int D.21313;
  sizetype D.21312;
  int D.21311;
  unsigned char * D.21310;
  int D.21309;
  int D.21308;
  int D.21307;
  short unsigned int D.21306;
  unsigned char * D.21305;
  sizetype D.21304;
  sizetype D.21303;
  int D.21302;
  sizetype D.21301;
  int D.21300;
  unsigned char * D.21299;
  int D.21298;
  int D.21295;
  int D.21292;
  int D.21291;
  int D.21288;
  int D.21284;
  int _3;
  int iftmp.100_4;
  int _9;
  int _10;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  unsigned char * _17;
  int _18;
  sizetype _19;
  int _20;
  sizetype _21;
  sizetype _22;
  unsigned char * _23;
  short unsigned int _25;
  int _26;
  int _27;
  int _29;
  unsigned char * _30;
  int _31;
  sizetype _32;
  int _33;
  sizetype _34;
  sizetype _35;
  sizetype _36;
  unsigned char * _37;
  short unsigned int _39;
  int _40;
  int _41;
  int _43;
  unsigned int _44;
  unsigned char * _45;
  int _46;
  sizetype _47;
  int _48;
  sizetype _49;
  sizetype _50;
  unsigned char * _51;
  unsigned int _53;
  unsigned int _54;
  int _56;
  unsigned int _57;
  unsigned char * _58;
  int _59;
  sizetype _60;
  int _61;
  sizetype _62;
  sizetype _63;
  sizetype _64;
  unsigned char * _65;
  unsigned int _67;
  unsigned int _68;
  int iftmp.100_70;
  int iftmp.100_71;
  int _72;

  <bb 2>:
  _9 = info_8(D)->cff.size;
  if (_9 == 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("!info->cff.size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1556, &__PRETTY_FUNCTION__);

  <bb 4>:
  _10 = info_8(D)->numGlyphs;
  if (_10 <= glyph_index_11(D))
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _12 = -1;
  goto <bb 15> (<L13>);

  <bb 6>:
  _13 = info_8(D)->indexToLocFormat;
  if (_13 > 1)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _14 = -1;
  goto <bb 15> (<L13>);

  <bb 8>:
  _15 = info_8(D)->indexToLocFormat;
  if (_15 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _16 = info_8(D)->glyf;
  _17 = info_8(D)->data;
  _18 = info_8(D)->loca;
  _19 = (sizetype) _18;
  _20 = glyph_index_11(D) * 2;
  _21 = (sizetype) _20;
  _22 = _19 + _21;
  _23 = _17 + _22;
  _25 = ttUSHORT (_23);
  _26 = (int) _25;
  _27 = _26 * 2;
  g1_28 = _16 + _27;
  _29 = info_8(D)->glyf;
  _30 = info_8(D)->data;
  _31 = info_8(D)->loca;
  _32 = (sizetype) _31;
  _33 = glyph_index_11(D) * 2;
  _34 = (sizetype) _33;
  _35 = _32 + _34;
  _36 = _35 + 2;
  _37 = _30 + _36;
  _39 = ttUSHORT (_37);
  _40 = (int) _39;
  _41 = _40 * 2;
  g2_42 = _29 + _41;
  goto <bb 11>;

  <bb 10>:
  _43 = info_8(D)->glyf;
  _44 = (unsigned int) _43;
  _45 = info_8(D)->data;
  _46 = info_8(D)->loca;
  _47 = (sizetype) _46;
  _48 = glyph_index_11(D) * 4;
  _49 = (sizetype) _48;
  _50 = _47 + _49;
  _51 = _45 + _50;
  _53 = ttULONG (_51);
  _54 = _44 + _53;
  g1_55 = (int) _54;
  _56 = info_8(D)->glyf;
  _57 = (unsigned int) _56;
  _58 = info_8(D)->data;
  _59 = info_8(D)->loca;
  _60 = (sizetype) _59;
  _61 = glyph_index_11(D) * 4;
  _62 = (sizetype) _61;
  _63 = _60 + _62;
  _64 = _63 + 4;
  _65 = _58 + _64;
  _67 = ttULONG (_65);
  _68 = _57 + _67;
  g2_69 = (int) _68;

  <bb 11>:
  # g1_1 = PHI <g1_28(9), g1_55(10)>
  # g2_2 = PHI <g2_42(9), g2_69(10)>
  if (g1_1 != g2_2)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  iftmp.100_70 = g1_1;
  goto <bb 14>;

  <bb 13>:
  iftmp.100_71 = -1;

  <bb 14>:
  # iftmp.100_4 = PHI <iftmp.100_70(12), iftmp.100_71(13)>
  _72 = iftmp.100_4;

  # _3 = PHI <_12(5), _14(7), _72(14)>
<L13>:
  return _3;

}



;; Function int stbtt_GetGlyphBox(const stbtt_fontinfo*, int, int*, int*, int*, int*) (stbtt_GetGlyphBox, funcdef_no=590, decl_uid=15316, cgraph_uid=489, symbol_order=489)

int stbtt_GetGlyphBox(const stbtt_fontinfo*, int, int*, int*, int*, int*) (const struct stbtt_fontinfo * info, int glyph_index, int * x0, int * y0, int * x1, int * y1)
{
  int g;
  int D.21391;
  short int D.21390;
  unsigned char * D.21389;
  sizetype D.21388;
  sizetype D.21387;
  unsigned char * D.21386;
  int D.21382;
  short int D.21381;
  unsigned char * D.21380;
  sizetype D.21379;
  sizetype D.21378;
  unsigned char * D.21377;
  int D.21373;
  short int D.21372;
  unsigned char * D.21371;
  sizetype D.21370;
  sizetype D.21369;
  unsigned char * D.21368;
  int D.21364;
  short int D.21363;
  unsigned char * D.21362;
  sizetype D.21361;
  sizetype D.21360;
  unsigned char * D.21359;
  int D.21356;
  int D.21350;
  int _1;
  int _9;
  int _13;
  unsigned char * _15;
  sizetype _16;
  sizetype _17;
  unsigned char * _18;
  short int _20;
  int _21;
  unsigned char * _24;
  sizetype _25;
  sizetype _26;
  unsigned char * _27;
  short int _29;
  int _30;
  unsigned char * _33;
  sizetype _34;
  sizetype _35;
  unsigned char * _36;
  short int _38;
  int _39;
  unsigned char * _42;
  sizetype _43;
  sizetype _44;
  unsigned char * _45;
  short int _47;
  int _48;
  int _51;

  <bb 2>:
  _9 = info_8(D)->cff.size;
  if (_9 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  stbtt__GetGlyphInfoT2 (info_8(D), glyph_index_10(D), x0_14(D), y0_23(D), x1_32(D), y1_41(D));
  goto <bb 14>;

  <bb 4>:
  g_12 = stbtt__GetGlyfOffset (info_8(D), glyph_index_10(D));
  if (g_12 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = 0;
  goto <bb 15> (<L17>);

  <bb 6>:
  if (x0_14(D) != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _15 = info_8(D)->data;
  _16 = (sizetype) g_12;
  _17 = _16 + 2;
  _18 = _15 + _17;
  _20 = ttSHORT (_18);
  _21 = (int) _20;
  *x0_14(D) = _21;

  <bb 8>:
  if (y0_23(D) != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _24 = info_8(D)->data;
  _25 = (sizetype) g_12;
  _26 = _25 + 4;
  _27 = _24 + _26;
  _29 = ttSHORT (_27);
  _30 = (int) _29;
  *y0_23(D) = _30;

  <bb 10>:
  if (x1_32(D) != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _33 = info_8(D)->data;
  _34 = (sizetype) g_12;
  _35 = _34 + 6;
  _36 = _33 + _35;
  _38 = ttSHORT (_36);
  _39 = (int) _38;
  *x1_32(D) = _39;

  <bb 12>:
  if (y1_41(D) != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _42 = info_8(D)->data;
  _43 = (sizetype) g_12;
  _44 = _43 + 8;
  _45 = _42 + _44;
  _47 = ttSHORT (_45);
  _48 = (int) _47;
  *y1_41(D) = _48;

  <bb 14>:
  _51 = 1;

  # _1 = PHI <_13(5), _51(14)>
<L17>:
  return _1;

}



;; Function int stbtt_GetCodepointBox(const stbtt_fontinfo*, int, int*, int*, int*, int*) (stbtt_GetCodepointBox, funcdef_no=591, decl_uid=15300, cgraph_uid=490, symbol_order=490)

int stbtt_GetCodepointBox(const stbtt_fontinfo*, int, int*, int*, int*, int*) (const struct stbtt_fontinfo * info, int codepoint, int * x0, int * y0, int * x1, int * y1)
{
  int D.21397;
  int D.21395;
  int D.21394;
  int _5;
  int _11;
  int _12;

  <bb 2>:
  _5 = stbtt_FindGlyphIndex (info_2(D), codepoint_3(D));
  _11 = stbtt_GetGlyphBox (info_2(D), _5, x0_6(D), y0_7(D), x1_8(D), y1_9(D));
  _12 = _11;

<L0>:
  return _12;

}



;; Function int stbtt_IsGlyphEmpty(const stbtt_fontinfo*, int) (stbtt_IsGlyphEmpty, funcdef_no=592, decl_uid=15335, cgraph_uid=491, symbol_order=491)

int stbtt_IsGlyphEmpty(const stbtt_fontinfo*, int) (const struct stbtt_fontinfo * info, int glyph_index)
{
  int g;
  stbtt_int16 numberOfContours;
  bool D.21409;
  unsigned char * D.21408;
  sizetype D.21407;
  unsigned char * D.21406;
  bool D.21403;
  int D.21402;
  int D.21401;
  int D.21398;
  int _1;
  int _5;
  int _8;
  bool _9;
  int _10;
  int _13;
  unsigned char * _14;
  sizetype _15;
  unsigned char * _16;
  bool _19;
  int _20;

  <bb 2>:
  _5 = info_4(D)->cff.size;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _8 = stbtt__GetGlyphInfoT2 (info_4(D), glyph_index_6(D), 0B, 0B, 0B, 0B);
  _9 = _8 == 0;
  _10 = (int) _9;
  goto <bb 7> (<L4>);

  <bb 4>:
  g_12 = stbtt__GetGlyfOffset (info_4(D), glyph_index_6(D));
  if (g_12 < 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = 1;
  goto <bb 7> (<L4>);

  <bb 6>:
  _14 = info_4(D)->data;
  _15 = (sizetype) g_12;
  _16 = _14 + _15;
  numberOfContours_18 = ttSHORT (_16);
  _19 = numberOfContours_18 == 0;
  _20 = (int) _19;

  # _1 = PHI <_10(3), _13(5), _20(6)>
<L4>:
  return _1;

}



;; Function int stbtt__close_shape(stbtt_vertex*, int, int, int, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32) (_ZL18stbtt__close_shapeP12stbtt_vertexiiiiiiiii, funcdef_no=593, decl_uid=15931, cgraph_uid=492, symbol_order=492)

int stbtt__close_shape(stbtt_vertex*, int, int, int, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32) (struct stbtt_vertex * vertices, int num_vertices, int was_off, int start_off, stbtt_int32 sx, stbtt_int32 sy, stbtt_int32 scx, stbtt_int32 scy, stbtt_int32 cx, stbtt_int32 cy)
{
  int D.21440;
  struct stbtt_vertex * D.21439;
  long unsigned int D.21438;
  long unsigned int D.21437;
  int num_vertices.104;
  struct stbtt_vertex * D.21434;
  long unsigned int D.21433;
  long unsigned int D.21432;
  int num_vertices.103;
  struct stbtt_vertex * D.21427;
  long unsigned int D.21426;
  long unsigned int D.21425;
  int num_vertices.102;
  struct stbtt_vertex * D.21422;
  long unsigned int D.21421;
  long unsigned int D.21420;
  int num_vertices.101;
  int D.21418;
  int D.21417;
  int D.21416;
  int D.21415;
  int _11;
  int _12;
  int _15;
  int _16;
  int num_vertices.101_17;
  long unsigned int _19;
  long unsigned int _20;
  struct stbtt_vertex * _22;
  int num_vertices.102_24;
  long unsigned int _26;
  long unsigned int _27;
  struct stbtt_vertex * _28;
  int num_vertices.103_32;
  long unsigned int _34;
  long unsigned int _35;
  struct stbtt_vertex * _36;
  int num_vertices.104_38;
  long unsigned int _40;
  long unsigned int _41;
  struct stbtt_vertex * _42;
  int _44;

  <bb 2>:
  if (start_off_5(D) != 0)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 3>:
  if (was_off_6(D) != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _11 = cy_9(D) + scy_10(D);
  _12 = _11 >> 1;
  _15 = cx_13(D) + scx_14(D);
  _16 = _15 >> 1;
  num_vertices.101_17 = num_vertices_7(D);
  num_vertices_18 = num_vertices.101_17 + 1;
  _19 = (long unsigned int) num_vertices.101_17;
  _20 = _19 * 14;
  _22 = vertices_21(D) + _20;
  stbtt_setvertex (_22, 3, _16, _12, cx_13(D), cy_9(D));

  <bb 5>:
  # num_vertices_1 = PHI <num_vertices_7(D)(3), num_vertices_18(4)>
  num_vertices.102_24 = num_vertices_1;
  num_vertices_25 = num_vertices.102_24 + 1;
  _26 = (long unsigned int) num_vertices.102_24;
  _27 = _26 * 14;
  _28 = vertices_21(D) + _27;
  stbtt_setvertex (_28, 3, sx_29(D), sy_30(D), scx_14(D), scy_10(D));
  goto <bb 9>;

  <bb 6>:
  if (was_off_6(D) != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  num_vertices.103_32 = num_vertices_7(D);
  num_vertices_33 = num_vertices.103_32 + 1;
  _34 = (long unsigned int) num_vertices.103_32;
  _35 = _34 * 14;
  _36 = vertices_21(D) + _35;
  stbtt_setvertex (_36, 3, sx_29(D), sy_30(D), cx_13(D), cy_9(D));
  goto <bb 9>;

  <bb 8>:
  num_vertices.104_38 = num_vertices_7(D);
  num_vertices_39 = num_vertices.104_38 + 1;
  _40 = (long unsigned int) num_vertices.104_38;
  _41 = _40 * 14;
  _42 = vertices_21(D) + _41;
  stbtt_setvertex (_42, 2, sx_29(D), sy_30(D), 0, 0);

  <bb 9>:
  # num_vertices_2 = PHI <num_vertices_25(5), num_vertices_33(7), num_vertices_39(8)>
  _44 = num_vertices_2;

<L9>:
  return _44;

}



;; Function int stbtt__GetGlyphShapeTT(const stbtt_fontinfo*, int, stbtt_vertex**) (_ZL22stbtt__GetGlyphShapeTTPK14stbtt_fontinfoiPP12stbtt_vertex, funcdef_no=594, decl_uid=15936, cgraph_uid=493, symbol_order=493)

int stbtt__GetGlyphShapeTT(const stbtt_fontinfo*, int, stbtt_vertex**) (const struct stbtt_fontinfo * info, int glyph_index, struct stbtt_vertex * * pvertices)
{
  void * D.32607;
  struct stbtt_vertex * D.21892;
  int D.21891;
  struct stbtt_vertex * D.21890;
  short int y;
  short int x;
  struct stbtt_vertex * v;
  float n;
  float m;
  float mtx[6];
  struct stbtt_vertex * tmp;
  struct stbtt_vertex * comp_verts;
  int i;
  int comp_num_verts;
  stbtt_uint16 gidx;
  stbtt_uint16 flags;
  stbtt_uint8 * comp;
  int more;
  stbtt_int16 dy;
  stbtt_int16 dx;
  stbtt_uint8 * points;
  stbtt_int32 scy;
  stbtt_int32 scx;
  stbtt_int32 sy;
  stbtt_int32 sx;
  stbtt_int32 cy;
  stbtt_int32 cx;
  stbtt_int32 y;
  stbtt_int32 x;
  stbtt_int32 start_off;
  stbtt_int32 off;
  stbtt_int32 was_off;
  stbtt_int32 next_move;
  stbtt_int32 n;
  stbtt_int32 m;
  stbtt_int32 j;
  stbtt_int32 i;
  stbtt_int32 ins;
  stbtt_uint8 flagcount;
  stbtt_uint8 flags;
  static const char __PRETTY_FUNCTION__[71] = "int stbtt__GetGlyphShapeTT(const stbtt_fontinfo*, int, stbtt_vertex**)";
  int g;
  int num_vertices;
  struct stbtt_vertex * vertices;
  stbtt_uint8 * data;
  stbtt_uint8 * endPtsOfContours;
  stbtt_int16 numberOfContours;
  int D.21881;
  struct stbtt_vertex * comp_verts.159;
  struct stbtt_vertex * D.21875;
  long unsigned int D.21874;
  long unsigned int D.21873;
  struct stbtt_vertex * comp_verts.158;
  long unsigned int D.21871;
  long unsigned int D.21870;
  long unsigned int D.21868;
  long unsigned int D.21867;
  struct stbtt_vertex * comp_verts.157;
  struct stbtt_vertex * comp_verts.156;
  long unsigned int D.21854;
  long unsigned int D.21853;
  int D.21852;
  short int D.21851;
  float D.21850;
  float D.21849;
  float D.21848;
  float D.21847;
  float D.21846;
  float D.21845;
  float D.21844;
  float D.21843;
  float D.21842;
  float D.21841;
  short int D.21840;
  float D.21839;
  float D.21838;
  float D.21837;
  float D.21836;
  float D.21835;
  float D.21834;
  float D.21833;
  float D.21832;
  float D.21831;
  float D.21830;
  short int D.21829;
  float D.21828;
  float D.21827;
  float D.21826;
  float D.21825;
  float D.21824;
  float D.21823;
  float D.21822;
  float D.21821;
  float D.21820;
  float D.21819;
  short int D.21818;
  float D.21817;
  float D.21816;
  float D.21815;
  float D.21814;
  float D.21813;
  float D.21812;
  float D.21811;
  float D.21810;
  float D.21809;
  float D.21808;
  long unsigned int D.21807;
  long unsigned int D.21806;
  struct stbtt_vertex * comp_verts.155;
  int D.21800;
  float D.21799;
  float D.21798;
  float D.21797;
  float D.21796;
  float D.21795;
  float D.21794;
  float D.21793;
  float D.21792;
  float D.21791;
  float D.21790;
  float D.21789;
  float D.21788;
  float D.21787;
  float D.21786;
  stbtt_uint8 * comp.154;
  stbtt_uint8 * comp.153;
  float D.21782;
  float D.21781;
  short int D.21780;
  stbtt_uint8 * comp.152;
  stbtt_uint8 * comp.151;
  stbtt_uint8 * comp.150;
  float D.21776;
  float D.21775;
  short int D.21774;
  stbtt_uint8 * comp.149;
  stbtt_uint8 * comp.148;
  stbtt_uint8 * comp.147;
  float D.21770;
  float D.21769;
  short int D.21768;
  stbtt_uint8 * comp.146;
  stbtt_uint8 * comp.145;
  stbtt_uint8 * comp.144;
  float D.21764;
  float D.21763;
  short int D.21762;
  stbtt_uint8 * comp.143;
  int D.21758;
  int D.21757;
  stbtt_uint8 * comp.142;
  stbtt_uint8 * comp.141;
  float D.21753;
  float D.21752;
  short int D.21751;
  stbtt_uint8 * comp.140;
  float D.21749;
  stbtt_uint8 * comp.139;
  stbtt_uint8 * comp.138;
  float D.21746;
  float D.21745;
  short int D.21744;
  stbtt_uint8 * comp.137;
  int D.21740;
  int D.21739;
  float D.21737;
  stbtt_uint8 * comp.136;
  stbtt_uint8 * comp.135;
  float D.21734;
  float D.21733;
  float D.21732;
  short int D.21731;
  stbtt_uint8 * comp.134;
  int D.21727;
  int D.21726;
  stbtt_uint8 * comp.133;
  stbtt_uint8 * comp.132;
  float D.21719;
  signed char D.21718;
  stbtt_uint8 * comp.131;
  stbtt_uint8 * comp.130;
  stbtt_uint8 * comp.129;
  float D.21714;
  signed char D.21713;
  stbtt_uint8 * comp.128;
  stbtt_uint8 * comp.127;
  stbtt_uint8 * comp.126;
  float D.21708;
  short int D.21707;
  stbtt_uint8 * comp.125;
  stbtt_uint8 * comp.124;
  stbtt_uint8 * comp.123;
  float D.21703;
  short int D.21702;
  stbtt_uint8 * comp.122;
  int D.21698;
  int D.21697;
  int D.21694;
  int D.21693;
  stbtt_uint8 * comp.121;
  stbtt_uint8 * comp.120;
  short int D.21690;
  stbtt_uint8 * comp.119;
  stbtt_uint8 * comp.118;
  stbtt_uint8 * comp.117;
  short int D.21686;
  stbtt_uint8 * comp.116;
  stbtt_uint8 * comp.115;
  sizetype D.21681;
  sizetype D.21680;
  struct stbtt_vertex * D.21676;
  long unsigned int D.21675;
  long unsigned int D.21674;
  int num_vertices.114;
  struct stbtt_vertex * D.21671;
  long unsigned int D.21670;
  long unsigned int D.21669;
  int num_vertices.113;
  struct stbtt_vertex * D.21663;
  long unsigned int D.21662;
  long unsigned int D.21661;
  int num_vertices.112;
  int D.21659;
  int D.21658;
  int D.21657;
  int D.21656;
  int D.21651;
  int D.21650;
  int D.21648;
  short unsigned int D.21647;
  stbtt_uint8 * D.21646;
  sizetype D.21645;
  int D.21644;
  struct stbtt_vertex * D.21643;
  long unsigned int D.21642;
  long unsigned int D.21641;
  int num_vertices.111;
  short int D.21638;
  struct stbtt_vertex * D.21637;
  sizetype D.21636;
  sizetype D.21635;
  sizetype D.21634;
  int D.21633;
  short int D.21632;
  struct stbtt_vertex * D.21631;
  sizetype D.21630;
  sizetype D.21629;
  sizetype D.21628;
  int D.21627;
  int D.21625;
  int D.21624;
  short int D.21623;
  struct stbtt_vertex * D.21622;
  sizetype D.21621;
  sizetype D.21620;
  sizetype D.21619;
  int D.21618;
  int D.21617;
  int D.21616;
  short int D.21615;
  struct stbtt_vertex * D.21614;
  sizetype D.21613;
  sizetype D.21612;
  sizetype D.21611;
  int D.21610;
  int D.21607;
  int D.21606;
  unsigned char D.21605;
  struct stbtt_vertex * D.21604;
  sizetype D.21603;
  sizetype D.21602;
  sizetype D.21601;
  int D.21600;
  bool D.21597;
  int D.21596;
  int D.21595;
  short int D.21589;
  struct stbtt_vertex * D.21588;
  long unsigned int D.21587;
  long unsigned int D.21586;
  int D.21585;
  short int D.21584;
  struct stbtt_vertex * D.21583;
  long unsigned int D.21582;
  long unsigned int D.21581;
  int D.21580;
  struct stbtt_vertex * D.21579;
  long unsigned int D.21578;
  long unsigned int D.21577;
  int D.21576;
  short int D.21573;
  struct stbtt_vertex * D.21572;
  long unsigned int D.21571;
  long unsigned int D.21570;
  int D.21569;
  int D.21567;
  short int D.21566;
  unsigned short D.21565;
  unsigned short D.21564;
  unsigned char D.21563;
  stbtt_uint8 * D.21562;
  unsigned short D.21561;
  unsigned short D.21560;
  unsigned char D.21559;
  int D.21556;
  int D.21555;
  int D.21553;
  int D.21549;
  int D.21548;
  int iftmp.110;
  unsigned char D.21546;
  stbtt_uint8 * points.109;
  int D.21542;
  int D.21541;
  struct stbtt_vertex * D.21540;
  long unsigned int D.21539;
  long unsigned int D.21538;
  int D.21537;
  short int D.21534;
  struct stbtt_vertex * D.21533;
  long unsigned int D.21532;
  long unsigned int D.21531;
  int D.21530;
  int D.21528;
  short int D.21527;
  unsigned short D.21526;
  unsigned short D.21525;
  unsigned char D.21524;
  stbtt_uint8 * D.21523;
  unsigned short D.21522;
  unsigned short D.21521;
  unsigned char D.21520;
  int D.21517;
  int D.21516;
  int D.21514;
  int D.21510;
  int D.21509;
  int iftmp.108;
  unsigned char D.21507;
  stbtt_uint8 * points.107;
  int D.21503;
  int D.21502;
  struct stbtt_vertex * D.21501;
  long unsigned int D.21500;
  long unsigned int D.21499;
  int D.21498;
  struct stbtt_vertex * D.21495;
  long unsigned int D.21494;
  long unsigned int D.21493;
  int D.21492;
  stbtt_uint8 * points.106;
  int D.21486;
  int D.21485;
  stbtt_uint8 * points.105;
  long unsigned int D.21477;
  long unsigned int D.21476;
  int D.21475;
  int D.21474;
  int D.21473;
  short unsigned int D.21472;
  stbtt_uint8 * D.21471;
  sizetype D.21470;
  sizetype D.21469;
  int D.21468;
  int D.21467;
  sizetype D.21466;
  sizetype D.21465;
  sizetype D.21464;
  sizetype D.21463;
  sizetype D.21462;
  int D.21461;
  int D.21460;
  sizetype D.21459;
  short unsigned int D.21458;
  stbtt_uint8 * D.21457;
  sizetype D.21456;
  sizetype D.21455;
  sizetype D.21454;
  int D.21453;
  int D.21452;
  sizetype D.21451;
  sizetype D.21450;
  sizetype D.21449;
  stbtt_uint8 * D.21446;
  sizetype D.21445;
  int D.21444;
  int _61;
  int iftmp.108_62;
  int iftmp.110_63;
  int _94;
  sizetype _95;
  stbtt_uint8 * _96;
  sizetype _103;
  sizetype _104;
  sizetype _106;
  int _107;
  int _108;
  sizetype _109;
  sizetype _110;
  sizetype _111;
  stbtt_uint8 * _112;
  short unsigned int _114;
  sizetype _116;
  int _117;
  int _118;
  sizetype _119;
  sizetype _120;
  sizetype _121;
  sizetype _122;
  sizetype _123;
  int _125;
  int _126;
  sizetype _127;
  sizetype _128;
  stbtt_uint8 * _129;
  short unsigned int _131;
  int _132;
  int _134;
  int _135;
  long unsigned int _137;
  long unsigned int _138;
  struct stbtt_vertex * _140;
  int _142;
  stbtt_uint8 * points.105_147;
  int _150;
  int _151;
  stbtt_uint8 * points.106_152;
  int _156;
  long unsigned int _157;
  long unsigned int _158;
  struct stbtt_vertex * _159;
  int _164;
  long unsigned int _165;
  long unsigned int _166;
  struct stbtt_vertex * _167;
  int _169;
  int _170;
  stbtt_uint8 * points.107_171;
  unsigned char _173;
  int _175;
  int _176;
  int iftmp.108_177;
  int _178;
  int iftmp.108_179;
  int _181;
  int _182;
  unsigned char _183;
  unsigned short _184;
  unsigned short _185;
  stbtt_uint8 * _186;
  unsigned char _187;
  unsigned short _188;
  unsigned short _189;
  short int _190;
  int _191;
  int _194;
  long unsigned int _195;
  long unsigned int _196;
  struct stbtt_vertex * _197;
  short int _198;
  int _203;
  long unsigned int _204;
  long unsigned int _205;
  struct stbtt_vertex * _206;
  int _208;
  int _209;
  stbtt_uint8 * points.109_210;
  unsigned char _212;
  int _214;
  int _215;
  int iftmp.110_216;
  int _217;
  int iftmp.110_218;
  int _220;
  int _221;
  unsigned char _222;
  unsigned short _223;
  unsigned short _224;
  stbtt_uint8 * _225;
  unsigned char _226;
  unsigned short _227;
  unsigned short _228;
  short int _229;
  int _230;
  int _233;
  long unsigned int _234;
  long unsigned int _235;
  struct stbtt_vertex * _236;
  short int _237;
  int _248;
  long unsigned int _249;
  long unsigned int _250;
  struct stbtt_vertex * _251;
  int _253;
  long unsigned int _254;
  long unsigned int _255;
  struct stbtt_vertex * _256;
  short int _257;
  int _259;
  long unsigned int _260;
  long unsigned int _261;
  struct stbtt_vertex * _262;
  short int _263;
  int _267;
  int _268;
  bool _269;
  int _273;
  sizetype _274;
  sizetype _275;
  sizetype _276;
  struct stbtt_vertex * _277;
  unsigned char _278;
  int _279;
  int _280;
  int _281;
  sizetype _282;
  sizetype _283;
  sizetype _284;
  struct stbtt_vertex * _285;
  short int _286;
  int _287;
  int _288;
  int _290;
  sizetype _291;
  sizetype _292;
  sizetype _293;
  struct stbtt_vertex * _294;
  short int _295;
  int _296;
  int _297;
  int _299;
  sizetype _300;
  sizetype _301;
  sizetype _302;
  struct stbtt_vertex * _303;
  short int _304;
  int _306;
  sizetype _307;
  sizetype _308;
  sizetype _309;
  struct stbtt_vertex * _310;
  short int _311;
  int num_vertices.111_316;
  long unsigned int _318;
  long unsigned int _319;
  struct stbtt_vertex * _320;
  int _323;
  sizetype _324;
  stbtt_uint8 * _325;
  short unsigned int _327;
  int _328;
  int _331;
  int _332;
  int _333;
  int _334;
  int _335;
  int _336;
  int num_vertices.112_337;
  long unsigned int _339;
  long unsigned int _340;
  struct stbtt_vertex * _341;
  int num_vertices.113_346;
  long unsigned int _348;
  long unsigned int _349;
  struct stbtt_vertex * _350;
  int num_vertices.114_352;
  long unsigned int _354;
  long unsigned int _355;
  struct stbtt_vertex * _356;
  sizetype _363;
  sizetype _364;
  stbtt_uint8 * comp.115_365;
  stbtt_uint8 * comp.116_378;
  short int _380;
  stbtt_uint8 * comp.117_382;
  stbtt_uint8 * comp.118_383;
  stbtt_uint8 * comp.119_385;
  short int _387;
  stbtt_uint8 * comp.120_389;
  stbtt_uint8 * comp.121_390;
  int _392;
  int _393;
  int _394;
  int _395;
  stbtt_uint8 * comp.122_396;
  short int _398;
  float _399;
  stbtt_uint8 * comp.123_401;
  stbtt_uint8 * comp.124_402;
  stbtt_uint8 * comp.125_404;
  short int _406;
  float _407;
  stbtt_uint8 * comp.126_409;
  stbtt_uint8 * comp.127_410;
  stbtt_uint8 * comp.128_412;
  signed char _413;
  float _414;
  stbtt_uint8 * comp.129_416;
  stbtt_uint8 * comp.130_417;
  stbtt_uint8 * comp.131_419;
  signed char _420;
  float _421;
  stbtt_uint8 * comp.132_423;
  stbtt_uint8 * comp.133_424;
  int _426;
  int _427;
  stbtt_uint8 * comp.134_428;
  short int _430;
  float _431;
  float _432;
  float _434;
  stbtt_uint8 * comp.135_436;
  stbtt_uint8 * comp.136_437;
  float _440;
  int _442;
  int _443;
  stbtt_uint8 * comp.137_444;
  short int _446;
  float _447;
  float _448;
  stbtt_uint8 * comp.138_450;
  stbtt_uint8 * comp.139_451;
  float _454;
  stbtt_uint8 * comp.140_456;
  short int _458;
  float _459;
  float _460;
  stbtt_uint8 * comp.141_462;
  stbtt_uint8 * comp.142_463;
  int _465;
  int _466;
  stbtt_uint8 * comp.143_467;
  short int _469;
  float _470;
  float _471;
  stbtt_uint8 * comp.144_473;
  stbtt_uint8 * comp.145_474;
  stbtt_uint8 * comp.146_476;
  short int _478;
  float _479;
  float _480;
  stbtt_uint8 * comp.147_482;
  stbtt_uint8 * comp.148_483;
  stbtt_uint8 * comp.149_485;
  short int _487;
  float _488;
  float _489;
  stbtt_uint8 * comp.150_491;
  stbtt_uint8 * comp.151_492;
  stbtt_uint8 * comp.152_494;
  short int _496;
  float _497;
  float _498;
  stbtt_uint8 * comp.153_500;
  stbtt_uint8 * comp.154_501;
  float _503;
  float _504;
  float _505;
  float _506;
  float _507;
  float _508;
  float _509;
  float _512;
  float _513;
  float _514;
  float _515;
  float _516;
  float _517;
  float _518;
  int _521;
  int _523;
  int _525;
  struct stbtt_vertex * comp_verts.155_530;
  long unsigned int _531;
  long unsigned int _532;
  float _536;
  float _537;
  float _538;
  float _539;
  float _540;
  float _541;
  float _542;
  float _543;
  float _544;
  float _545;
  short int _546;
  float _548;
  float _549;
  float _550;
  float _551;
  float _552;
  float _553;
  float _554;
  float _555;
  float _556;
  float _557;
  short int _558;
  float _562;
  float _563;
  float _564;
  float _565;
  float _566;
  float _567;
  float _568;
  float _569;
  float _570;
  float _571;
  short int _572;
  float _574;
  float _575;
  float _576;
  float _577;
  float _578;
  float _579;
  float _580;
  float _581;
  float _582;
  float _583;
  short int _584;
  int _587;
  long unsigned int _588;
  long unsigned int _589;
  struct stbtt_vertex * _591;
  long unsigned int _593;
  long unsigned int _594;
  long unsigned int _596;
  long unsigned int _597;
  struct stbtt_vertex * comp_verts.158_598;
  long unsigned int _599;
  long unsigned int _600;
  struct stbtt_vertex * _601;
  struct stbtt_vertex * comp_verts.159_605;
  struct stbtt_vertex * comp_verts.156_609;
  struct stbtt_vertex * comp_verts.157_610;
  int _612;
  int _623;

  <bb 2>:
  data_86 = info_85(D)->data;
  vertices_87 = 0B;
  num_vertices_88 = 0;
  g_91 = stbtt__GetGlyfOffset (info_85(D), glyph_index_89(D));
  *pvertices_92(D) = 0B;
  if (g_91 < 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _94 = 0;
  goto <bb 97> (<L118>);

  <bb 4>:
  _95 = (sizetype) g_91;
  _96 = data_86 + _95;
  numberOfContours_98 = ttSHORT (_96);
  if (numberOfContours_98 > 0)
    goto <bb 5>;
  else
    goto <bb 56>;

  <bb 5>:
  flags_99 = 0;
  j_100 = 0;
  was_off_101 = 0;
  start_off_102 = 0;
  _103 = (sizetype) g_91;
  _104 = _103 + 10;
  endPtsOfContours_105 = data_86 + _104;
  _106 = (sizetype) g_91;
  _107 = (int) numberOfContours_98;
  _108 = _107 * 2;
  _109 = (sizetype) _108;
  _110 = _106 + _109;
  _111 = _110 + 10;
  _112 = data_86 + _111;
  _114 = ttUSHORT (_112);
  ins_115 = (stbtt_int32) _114;
  _116 = (sizetype) g_91;
  _117 = (int) numberOfContours_98;
  _118 = _117 * 2;
  _119 = (sizetype) _118;
  _120 = _116 + _119;
  _121 = (sizetype) ins_115;
  _122 = _120 + _121;
  _123 = _122 + 12;
  points_124 = data_86 + _123;
  _125 = (int) numberOfContours_98;
  _126 = _125 * 2;
  _127 = (sizetype) _126;
  _128 = _127 + 18446744073709551614;
  _129 = endPtsOfContours_105 + _128;
  _131 = ttUSHORT (_129);
  _132 = (int) _131;
  n_133 = _132 + 1;
  _134 = (int) numberOfContours_98;
  _135 = _134 * 2;
  m_136 = _135 + n_133;
  _137 = (long unsigned int) m_136;
  _138 = _137 * 14;
  _140 = ImGui::MemAlloc (_138);
  vertices_141 = _140;
  if (vertices_141 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _142 = 0;
  goto <bb 97> (<L118>);

  <bb 7>:
  next_move_143 = 0;
  flagcount_144 = 0;
  off_145 = m_136 - n_133;
  i_146 = 0;

  <bb 8>:
  # flags_12 = PHI <flags_99(7), flags_13(13)>
  # flagcount_14 = PHI <flagcount_144(7), flagcount_15(13)>
  # i_16 = PHI <i_146(7), i_161(13)>
  # points_53 = PHI <points_124(7), points_54(13)>
  if (i_16 >= n_133)
    goto <bb 14>;
  else
    goto <bb 9>;

  <bb 9>:
  if (flagcount_14 == 0)
    goto <bb 10>;
  else
    goto <bb 12>;

  <bb 10>:
  points.105_147 = points_53;
  points_148 = points.105_147 + 1;
  flags_149 = *points.105_147;
  _150 = (int) flags_149;
  _151 = _150 & 8;
  if (_151 != 0)
    goto <bb 11>;
  else
    goto <bb 13>;

  <bb 11>:
  points.106_152 = points_148;
  points_153 = points.106_152 + 1;
  flagcount_154 = *points.106_152;
  goto <bb 13>;

  <bb 12>:
  flagcount_155 = flagcount_14 + 255;

  <bb 13>:
  # flags_13 = PHI <flags_149(11), flags_12(12), flags_149(10)>
  # flagcount_15 = PHI <flagcount_154(11), flagcount_155(12), flagcount_14(10)>
  # points_54 = PHI <points_153(11), points_53(12), points_148(10)>
  _156 = off_145 + i_16;
  _157 = (long unsigned int) _156;
  _158 = _157 * 14;
  _159 = vertices_141 + _158;
  _159->type = flags_13;
  i_161 = i_16 + 1;
  goto <bb 8>;

  <bb 14>:
  x_162 = 0;
  i_163 = 0;

  <bb 15>:
  # i_17 = PHI <i_163(14), i_200(23)>
  # x_31 = PHI <x_162(14), x_32(23)>
  # points_55 = PHI <points_53(14), points_56(23)>
  if (i_17 >= n_133)
    goto <bb 24>;
  else
    goto <bb 16>;

  <bb 16>:
  _164 = off_145 + i_17;
  _165 = (long unsigned int) _164;
  _166 = _165 * 14;
  _167 = vertices_141 + _166;
  flags_168 = _167->type;
  _169 = (int) flags_168;
  _170 = _169 & 2;
  if (_170 != 0)
    goto <bb 17>;
  else
    goto <bb 21>;

  <bb 17>:
  points.107_171 = points_55;
  points_172 = points.107_171 + 1;
  _173 = *points.107_171;
  dx_174 = (stbtt_int16) _173;
  _175 = (int) flags_168;
  _176 = _175 & 16;
  if (_176 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  iftmp.108_177 = (int) dx_174;
  goto <bb 20>;

  <bb 19>:
  _178 = (int) dx_174;
  iftmp.108_179 = -_178;

  <bb 20>:
  # iftmp.108_62 = PHI <iftmp.108_177(18), iftmp.108_179(19)>
  x_180 = iftmp.108_62 + x_31;
  goto <bb 23>;

  <bb 21>:
  _181 = (int) flags_168;
  _182 = _181 & 16;
  if (_182 == 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _183 = *points_55;
  _184 = (unsigned short) _183;
  _185 = _184 * 256;
  _186 = points_55 + 1;
  _187 = *_186;
  _188 = (unsigned short) _187;
  _189 = _185 + _188;
  _190 = (short int) _189;
  _191 = (int) _190;
  x_192 = _191 + x_31;
  points_193 = points_55 + 2;

  <bb 23>:
  # x_32 = PHI <x_180(20), x_31(21), x_192(22)>
  # points_56 = PHI <points_172(20), points_55(21), points_193(22)>
  _194 = off_145 + i_17;
  _195 = (long unsigned int) _194;
  _196 = _195 * 14;
  _197 = vertices_141 + _196;
  _198 = (short int) x_32;
  _197->x = _198;
  i_200 = i_17 + 1;
  goto <bb 15>;

  <bb 24>:
  y_201 = 0;
  i_202 = 0;

  <bb 25>:
  # i_18 = PHI <i_202(24), i_239(33)>
  # y_33 = PHI <y_201(24), y_34(33)>
  # points_57 = PHI <points_55(24), points_58(33)>
  if (i_18 >= n_133)
    goto <bb 34>;
  else
    goto <bb 26>;

  <bb 26>:
  _203 = off_145 + i_18;
  _204 = (long unsigned int) _203;
  _205 = _204 * 14;
  _206 = vertices_141 + _205;
  flags_207 = _206->type;
  _208 = (int) flags_207;
  _209 = _208 & 4;
  if (_209 != 0)
    goto <bb 27>;
  else
    goto <bb 31>;

  <bb 27>:
  points.109_210 = points_57;
  points_211 = points.109_210 + 1;
  _212 = *points.109_210;
  dy_213 = (stbtt_int16) _212;
  _214 = (int) flags_207;
  _215 = _214 & 32;
  if (_215 != 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  iftmp.110_216 = (int) dy_213;
  goto <bb 30>;

  <bb 29>:
  _217 = (int) dy_213;
  iftmp.110_218 = -_217;

  <bb 30>:
  # iftmp.110_63 = PHI <iftmp.110_216(28), iftmp.110_218(29)>
  y_219 = iftmp.110_63 + y_33;
  goto <bb 33>;

  <bb 31>:
  _220 = (int) flags_207;
  _221 = _220 & 32;
  if (_221 == 0)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  _222 = *points_57;
  _223 = (unsigned short) _222;
  _224 = _223 * 256;
  _225 = points_57 + 1;
  _226 = *_225;
  _227 = (unsigned short) _226;
  _228 = _224 + _227;
  _229 = (short int) _228;
  _230 = (int) _229;
  y_231 = _230 + y_33;
  points_232 = points_57 + 2;

  <bb 33>:
  # y_34 = PHI <y_219(30), y_33(31), y_231(32)>
  # points_58 = PHI <points_211(30), points_57(31), points_232(32)>
  _233 = off_145 + i_18;
  _234 = (long unsigned int) _233;
  _235 = _234 * 14;
  _236 = vertices_141 + _235;
  _237 = (short int) y_34;
  _236->y = _237;
  i_239 = i_18 + 1;
  goto <bb 25>;

  <bb 34>:
  num_vertices_240 = 0;
  scy_241 = 0;
  scx_242 = scy_241;
  cy_243 = scx_242;
  cx_244 = cy_243;
  sy_245 = cx_244;
  sx_246 = sy_245;
  i_247 = 0;

  <bb 35>:
  # num_vertices_4 = PHI <num_vertices_240(34), num_vertices_8(54)>
  # i_19 = PHI <i_247(34), i_359(54)>
  # j_23 = PHI <j_100(34), j_24(54)>
  # next_move_25 = PHI <next_move_143(34), next_move_26(54)>
  # was_off_27 = PHI <was_off_101(34), was_off_28(54)>
  # start_off_29 = PHI <start_off_102(34), start_off_30(54)>
  # cx_35 = PHI <cx_244(34), cx_36(54)>
  # cy_37 = PHI <cy_243(34), cy_38(54)>
  # sx_39 = PHI <sx_246(34), sx_42(54)>
  # sy_43 = PHI <sy_245(34), sy_46(54)>
  # scx_47 = PHI <scx_242(34), scx_49(54)>
  # scy_50 = PHI <scy_241(34), scy_52(54)>
  if (i_19 >= n_133)
    goto <bb 55>;
  else
    goto <bb 36>;

  <bb 36>:
  _248 = off_145 + i_19;
  _249 = (long unsigned int) _248;
  _250 = _249 * 14;
  _251 = vertices_141 + _250;
  flags_252 = _251->type;
  _253 = off_145 + i_19;
  _254 = (long unsigned int) _253;
  _255 = _254 * 14;
  _256 = vertices_141 + _255;
  _257 = _256->x;
  x_258 = (stbtt_int32) _257;
  _259 = off_145 + i_19;
  _260 = (long unsigned int) _259;
  _261 = _260 * 14;
  _262 = vertices_141 + _261;
  _263 = _262->y;
  y_264 = (stbtt_int32) _263;
  if (next_move_25 == i_19)
    goto <bb 37>;
  else
    goto <bb 46>;

  <bb 37>:
  if (i_19 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  num_vertices_266 = stbtt__close_shape (vertices_141, num_vertices_4, was_off_27, start_off_29, sx_39, sy_43, scx_47, scy_50, cx_35, cy_37);

  <bb 39>:
  # num_vertices_5 = PHI <num_vertices_4(37), num_vertices_266(38)>
  _267 = (int) flags_252;
  _268 = _267 & 1;
  _269 = _268 == 0;
  start_off_270 = (stbtt_int32) _269;
  if (start_off_270 != 0)
    goto <bb 40>;
  else
    goto <bb 44>;

  <bb 40>:
  scx_271 = x_258;
  scy_272 = y_264;
  _273 = off_145 + i_19;
  _274 = (sizetype) _273;
  _275 = _274 + 1;
  _276 = _275 * 14;
  _277 = vertices_141 + _276;
  _278 = _277->type;
  _279 = (int) _278;
  _280 = _279 & 1;
  if (_280 == 0)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  _281 = off_145 + i_19;
  _282 = (sizetype) _281;
  _283 = _282 + 1;
  _284 = _283 * 14;
  _285 = vertices_141 + _284;
  _286 = _285->x;
  _287 = (int) _286;
  _288 = _287 + x_258;
  sx_289 = _288 >> 1;
  _290 = off_145 + i_19;
  _291 = (sizetype) _290;
  _292 = _291 + 1;
  _293 = _292 * 14;
  _294 = vertices_141 + _293;
  _295 = _294->y;
  _296 = (int) _295;
  _297 = _296 + y_264;
  sy_298 = _297 >> 1;
  goto <bb 43>;

  <bb 42>:
  _299 = off_145 + i_19;
  _300 = (sizetype) _299;
  _301 = _300 + 1;
  _302 = _301 * 14;
  _303 = vertices_141 + _302;
  _304 = _303->x;
  sx_305 = (stbtt_int32) _304;
  _306 = off_145 + i_19;
  _307 = (sizetype) _306;
  _308 = _307 + 1;
  _309 = _308 * 14;
  _310 = vertices_141 + _309;
  _311 = _310->y;
  sy_312 = (stbtt_int32) _311;
  i_313 = i_19 + 1;

  <bb 43>:
  # i_20 = PHI <i_19(41), i_313(42)>
  # sx_40 = PHI <sx_289(41), sx_305(42)>
  # sy_44 = PHI <sy_298(41), sy_312(42)>
  goto <bb 45>;

  <bb 44>:
  sx_314 = x_258;
  sy_315 = y_264;

  <bb 45>:
  # i_21 = PHI <i_20(43), i_19(44)>
  # sx_41 = PHI <sx_40(43), sx_314(44)>
  # sy_45 = PHI <sy_44(43), sy_315(44)>
  # scx_48 = PHI <scx_271(43), scx_47(44)>
  # scy_51 = PHI <scy_272(43), scy_50(44)>
  num_vertices.111_316 = num_vertices_5;
  num_vertices_317 = num_vertices.111_316 + 1;
  _318 = (long unsigned int) num_vertices.111_316;
  _319 = _318 * 14;
  _320 = vertices_141 + _319;
  stbtt_setvertex (_320, 1, sx_41, sy_45, 0, 0);
  was_off_322 = 0;
  _323 = j_23 * 2;
  _324 = (sizetype) _323;
  _325 = endPtsOfContours_105 + _324;
  _327 = ttUSHORT (_325);
  _328 = (int) _327;
  next_move_329 = _328 + 1;
  j_330 = j_23 + 1;
  goto <bb 54>;

  <bb 46>:
  _331 = (int) flags_252;
  _332 = _331 & 1;
  if (_332 == 0)
    goto <bb 47>;
  else
    goto <bb 50>;

  <bb 47>:
  if (was_off_27 != 0)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  _333 = cy_37 + y_264;
  _334 = _333 >> 1;
  _335 = cx_35 + x_258;
  _336 = _335 >> 1;
  num_vertices.112_337 = num_vertices_4;
  num_vertices_338 = num_vertices.112_337 + 1;
  _339 = (long unsigned int) num_vertices.112_337;
  _340 = _339 * 14;
  _341 = vertices_141 + _340;
  stbtt_setvertex (_341, 3, _336, _334, cx_35, cy_37);

  <bb 49>:
  # num_vertices_6 = PHI <num_vertices_4(47), num_vertices_338(48)>
  cx_343 = x_258;
  cy_344 = y_264;
  was_off_345 = 1;
  goto <bb 54>;

  <bb 50>:
  if (was_off_27 != 0)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  num_vertices.113_346 = num_vertices_4;
  num_vertices_347 = num_vertices.113_346 + 1;
  _348 = (long unsigned int) num_vertices.113_346;
  _349 = _348 * 14;
  _350 = vertices_141 + _349;
  stbtt_setvertex (_350, 3, x_258, y_264, cx_35, cy_37);
  goto <bb 53>;

  <bb 52>:
  num_vertices.114_352 = num_vertices_4;
  num_vertices_353 = num_vertices.114_352 + 1;
  _354 = (long unsigned int) num_vertices.114_352;
  _355 = _354 * 14;
  _356 = vertices_141 + _355;
  stbtt_setvertex (_356, 2, x_258, y_264, 0, 0);

  <bb 53>:
  # num_vertices_7 = PHI <num_vertices_347(51), num_vertices_353(52)>
  was_off_358 = 0;

  <bb 54>:
  # num_vertices_8 = PHI <num_vertices_317(45), num_vertices_6(49), num_vertices_7(53)>
  # i_22 = PHI <i_21(45), i_19(49), i_19(53)>
  # j_24 = PHI <j_330(45), j_23(49), j_23(53)>
  # next_move_26 = PHI <next_move_329(45), next_move_25(49), next_move_25(53)>
  # was_off_28 = PHI <was_off_322(45), was_off_345(49), was_off_358(53)>
  # start_off_30 = PHI <start_off_270(45), start_off_29(49), start_off_29(53)>
  # cx_36 = PHI <cx_35(45), cx_343(49), cx_35(53)>
  # cy_38 = PHI <cy_37(45), cy_344(49), cy_37(53)>
  # sx_42 = PHI <sx_41(45), sx_39(49), sx_39(53)>
  # sy_46 = PHI <sy_45(45), sy_43(49), sy_43(53)>
  # scx_49 = PHI <scx_48(45), scx_47(49), scx_47(53)>
  # scy_52 = PHI <scy_51(45), scy_50(49), scy_50(53)>
  i_359 = i_22 + 1;
  goto <bb 35>;

  <bb 55>:
  num_vertices_361 = stbtt__close_shape (vertices_141, num_vertices_4, was_off_27, start_off_29, sx_39, sy_43, scx_47, scy_50, cx_35, cy_37);
  goto <bb 96>;

  <bb 56>:
  if (numberOfContours_98 == -1)
    goto <bb 57>;
  else
    goto <bb 94>;

  <bb 57>:
  more_362 = 1;
  _363 = (sizetype) g_91;
  _364 = _363 + 10;
  comp.115_365 = data_86 + _364;
  comp = comp.115_365;
  num_vertices_367 = 0;
  vertices_368 = 0B;

  <bb 58>:
  # vertices_1 = PHI <vertices_368(57), vertices_2(92)>
  # num_vertices_9 = PHI <num_vertices_367(57), num_vertices_10(92)>
  # more_59 = PHI <more_362(57), more_526(92)>
  if (more_59 == 0)
    goto <bb 93>;
  else
    goto <bb 59>;

  <bb 59>:
  comp_num_verts_369 = 0;
  comp_verts = 0B;
  tmp_371 = 0B;
  mtx[0] = 1.0e+0;
  mtx[1] = 0.0;
  mtx[2] = 0.0;
  mtx[3] = 1.0e+0;
  mtx[4] = 0.0;
  mtx[5] = 0.0;
  comp.116_378 = comp;
  _380 = ttSHORT (comp.116_378);
  flags_381 = (stbtt_uint16) _380;
  comp.117_382 = comp;
  comp.118_383 = comp.117_382 + 2;
  comp = comp.118_383;
  comp.119_385 = comp;
  _387 = ttSHORT (comp.119_385);
  gidx_388 = (stbtt_uint16) _387;
  comp.120_389 = comp;
  comp.121_390 = comp.120_389 + 2;
  comp = comp.121_390;
  _392 = (int) flags_381;
  _393 = _392 & 2;
  if (_393 != 0)
    goto <bb 60>;
  else
    goto <bb 64>;

  <bb 60>:
  _394 = (int) flags_381;
  _395 = _394 & 1;
  if (_395 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  comp.122_396 = comp;
  _398 = ttSHORT (comp.122_396);
  _399 = (float) _398;
  mtx[4] = _399;
  comp.123_401 = comp;
  comp.124_402 = comp.123_401 + 2;
  comp = comp.124_402;
  comp.125_404 = comp;
  _406 = ttSHORT (comp.125_404);
  _407 = (float) _406;
  mtx[5] = _407;
  comp.126_409 = comp;
  comp.127_410 = comp.126_409 + 2;
  comp = comp.127_410;
  goto <bb 63>;

  <bb 62>:
  comp.128_412 = comp;
  _413 = MEM[(stbtt_int8 *)comp.128_412];
  _414 = (float) _413;
  mtx[4] = _414;
  comp.129_416 = comp;
  comp.130_417 = comp.129_416 + 1;
  comp = comp.130_417;
  comp.131_419 = comp;
  _420 = MEM[(stbtt_int8 *)comp.131_419];
  _421 = (float) _420;
  mtx[5] = _421;
  comp.132_423 = comp;
  comp.133_424 = comp.132_423 + 1;
  comp = comp.133_424;

  <bb 63>:
  goto <bb 65>;

  <bb 64>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1787, &__PRETTY_FUNCTION__);

  <bb 65>:
  _426 = (int) flags_381;
  _427 = _426 & 8;
  if (_427 != 0)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  comp.134_428 = comp;
  _430 = ttSHORT (comp.134_428);
  _431 = (float) _430;
  _432 = _431 / 1.6384e+4;
  mtx[3] = _432;
  _434 = mtx[3];
  mtx[0] = _434;
  comp.135_436 = comp;
  comp.136_437 = comp.135_436 + 2;
  comp = comp.136_437;
  mtx[2] = 0.0;
  _440 = mtx[2];
  mtx[1] = _440;
  goto <bb 71>;

  <bb 67>:
  _442 = (int) flags_381;
  _443 = _442 & 64;
  if (_443 != 0)
    goto <bb 68>;
  else
    goto <bb 69>;

  <bb 68>:
  comp.137_444 = comp;
  _446 = ttSHORT (comp.137_444);
  _447 = (float) _446;
  _448 = _447 / 1.6384e+4;
  mtx[0] = _448;
  comp.138_450 = comp;
  comp.139_451 = comp.138_450 + 2;
  comp = comp.139_451;
  mtx[2] = 0.0;
  _454 = mtx[2];
  mtx[1] = _454;
  comp.140_456 = comp;
  _458 = ttSHORT (comp.140_456);
  _459 = (float) _458;
  _460 = _459 / 1.6384e+4;
  mtx[3] = _460;
  comp.141_462 = comp;
  comp.142_463 = comp.141_462 + 2;
  comp = comp.142_463;
  goto <bb 71>;

  <bb 69>:
  _465 = (int) flags_381;
  _466 = _465 & 128;
  if (_466 != 0)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  comp.143_467 = comp;
  _469 = ttSHORT (comp.143_467);
  _470 = (float) _469;
  _471 = _470 / 1.6384e+4;
  mtx[0] = _471;
  comp.144_473 = comp;
  comp.145_474 = comp.144_473 + 2;
  comp = comp.145_474;
  comp.146_476 = comp;
  _478 = ttSHORT (comp.146_476);
  _479 = (float) _478;
  _480 = _479 / 1.6384e+4;
  mtx[1] = _480;
  comp.147_482 = comp;
  comp.148_483 = comp.147_482 + 2;
  comp = comp.148_483;
  comp.149_485 = comp;
  _487 = ttSHORT (comp.149_485);
  _488 = (float) _487;
  _489 = _488 / 1.6384e+4;
  mtx[2] = _489;
  comp.150_491 = comp;
  comp.151_492 = comp.150_491 + 2;
  comp = comp.151_492;
  comp.152_494 = comp;
  _496 = ttSHORT (comp.152_494);
  _497 = (float) _496;
  _498 = _497 / 1.6384e+4;
  mtx[3] = _498;
  comp.153_500 = comp;
  comp.154_501 = comp.153_500 + 2;
  comp = comp.154_501;

  <bb 71>:
  _503 = mtx[0];
  _504 = mtx[0];
  _505 = _503 * _504;
  _506 = mtx[1];
  _507 = mtx[1];
  _508 = _506 * _507;
  _509 = _505 + _508;
  m_511 = std::sqrt (_509);
  _512 = mtx[2];
  _513 = mtx[2];
  _514 = _512 * _513;
  _515 = mtx[3];
  _516 = mtx[3];
  _517 = _515 * _516;
  _518 = _514 + _517;
  n_520 = std::sqrt (_518);
  _521 = (int) gidx_388;
  _523 = stbtt_GetGlyphShape (info_85(D), _521, &comp_verts);

  <bb 72>:
  comp_num_verts_524 = _523;
  if (comp_num_verts_524 > 0)
    goto <bb 73>;
  else
    goto <bb 92>;

  <bb 73>:
  i_529 = 0;

  <bb 74>:
  # i_60 = PHI <i_529(73), i_586(75)>
  if (i_60 >= comp_num_verts_524)
    goto <bb 76>;
  else
    goto <bb 75>;

  <bb 75>:
  comp_verts.155_530 = comp_verts;
  _531 = (long unsigned int) i_60;
  _532 = _531 * 14;
  v_533 = comp_verts.155_530 + _532;
  x_534 = v_533->x;
  y_535 = v_533->y;
  _536 = mtx[0];
  _537 = (float) x_534;
  _538 = _536 * _537;
  _539 = mtx[2];
  _540 = (float) y_535;
  _541 = _539 * _540;
  _542 = _538 + _541;
  _543 = mtx[4];
  _544 = _542 + _543;
  _545 = _544 * m_511;
  _546 = (short int) _545;
  v_533->x = _546;
  _548 = mtx[1];
  _549 = (float) x_534;
  _550 = _548 * _549;
  _551 = mtx[3];
  _552 = (float) y_535;
  _553 = _551 * _552;
  _554 = _550 + _553;
  _555 = mtx[5];
  _556 = _554 + _555;
  _557 = _556 * n_520;
  _558 = (short int) _557;
  v_533->y = _558;
  x_560 = v_533->cx;
  y_561 = v_533->cy;
  _562 = mtx[0];
  _563 = (float) x_560;
  _564 = _562 * _563;
  _565 = mtx[2];
  _566 = (float) y_561;
  _567 = _565 * _566;
  _568 = _564 + _567;
  _569 = mtx[4];
  _570 = _568 + _569;
  _571 = _570 * m_511;
  _572 = (short int) _571;
  v_533->cx = _572;
  _574 = mtx[1];
  _575 = (float) x_560;
  _576 = _574 * _575;
  _577 = mtx[3];
  _578 = (float) y_561;
  _579 = _577 * _578;
  _580 = _576 + _579;
  _581 = mtx[5];
  _582 = _580 + _581;
  _583 = _582 * n_520;
  _584 = (short int) _583;
  v_533->cy = _584;
  i_586 = i_60 + 1;
  goto <bb 74>;

  <bb 76>:
  _587 = num_vertices_9 + comp_num_verts_524;
  _588 = (long unsigned int) _587;
  _589 = _588 * 14;
  _591 = ImGui::MemAlloc (_589);

  <bb 77>:
  tmp_592 = _591;
  if (tmp_592 == 0B)
    goto <bb 78>;
  else
    goto <bb 85>;

  <bb 78>:
  if (vertices_1 != 0B)
    goto <bb 79>;
  else
    goto <bb 81>;

  <bb 79>:
  ImGui::MemFree (vertices_1);

  <bb 80>:

  <bb 81>:
  comp_verts.156_609 = comp_verts;
  if (comp_verts.156_609 != 0B)
    goto <bb 82>;
  else
    goto <bb 84>;

  <bb 82>:
  comp_verts.157_610 = comp_verts;
  ImGui::MemFree (comp_verts.157_610);

  <bb 83>:

  <bb 84>:
  _612 = 0;
  comp_verts ={v} {CLOBBER};
  mtx ={v} {CLOBBER};
  comp ={v} {CLOBBER};
  goto <bb 97> (<L118>);

  <bb 85>:
  if (num_vertices_9 > 0)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  _593 = (long unsigned int) num_vertices_9;
  _594 = _593 * 14;
  memcpy (tmp_592, vertices_1, _594);

  <bb 87>:
  _596 = (long unsigned int) comp_num_verts_524;
  _597 = _596 * 14;
  comp_verts.158_598 = comp_verts;
  _599 = (long unsigned int) num_vertices_9;
  _600 = _599 * 14;
  _601 = tmp_592 + _600;
  memcpy (_601, comp_verts.158_598, _597);
  if (vertices_1 != 0B)
    goto <bb 88>;
  else
    goto <bb 90>;

  <bb 88>:
  ImGui::MemFree (vertices_1);

  <bb 89>:

  <bb 90>:
  vertices_604 = tmp_592;
  comp_verts.159_605 = comp_verts;
  ImGui::MemFree (comp_verts.159_605);

  <bb 91>:
  num_vertices_607 = num_vertices_9 + comp_num_verts_524;

  <bb 92>:
  # vertices_2 = PHI <vertices_1(72), vertices_604(91)>
  # num_vertices_10 = PHI <num_vertices_9(72), num_vertices_607(91)>
  _525 = (int) flags_381;
  more_526 = _525 & 32;
  comp_verts ={v} {CLOBBER};
  mtx ={v} {CLOBBER};
  goto <bb 58>;

  <bb 93>:
  comp ={v} {CLOBBER};
  goto <bb 96>;

  <bb 94>:
  if (numberOfContours_98 < 0)
    goto <bb 95>;
  else
    goto <bb 96>;

  <bb 95>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 1840, &__PRETTY_FUNCTION__);

  <bb 96>:
  # vertices_3 = PHI <vertices_141(55), vertices_1(93), vertices_87(94)>
  # num_vertices_11 = PHI <num_vertices_361(55), num_vertices_9(93), num_vertices_88(94)>
  *pvertices_92(D) = vertices_3;
  _623 = num_vertices_11;

  # _61 = PHI <_94(3), _142(6), _612(84), _623(96)>
<L118>:
  return _61;

<L119>:
  _616 = __builtin_eh_pointer (1);
  __builtin_unwind_resume (_616);

}



;; Function void stbtt__track_vertex(stbtt__csctx*, stbtt_int32, stbtt_int32) (_ZL19stbtt__track_vertexP12stbtt__csctxii, funcdef_no=595, decl_uid=16014, cgraph_uid=494, symbol_order=494)

void stbtt__track_vertex(stbtt__csctx*, stbtt_int32, stbtt_int32) (struct stbtt__csctx * c, stbtt_int32 x, stbtt_int32 y)
{
  int D.21921;
  int D.21919;
  int D.21916;
  int D.21914;
  int D.21911;
  int D.21909;
  int D.21906;
  int D.21904;
  int _7;
  int _9;
  int _11;
  int _13;
  int _15;
  int _16;
  int _18;
  int _19;

  <bb 2>:
  _7 = c_6(D)->max_x;
  if (_7 < x_8(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _9 = c_6(D)->started;
  if (_9 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  c_6(D)->max_x = x_8(D);

  <bb 5>:
  _11 = c_6(D)->max_y;
  if (_11 < y_12(D))
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  _13 = c_6(D)->started;
  if (_13 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  c_6(D)->max_y = y_12(D);

  <bb 8>:
  _15 = c_6(D)->min_x;
  if (_15 > x_8(D))
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  _16 = c_6(D)->started;
  if (_16 == 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  c_6(D)->min_x = x_8(D);

  <bb 11>:
  _18 = c_6(D)->min_y;
  if (_18 > y_12(D))
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  _19 = c_6(D)->started;
  if (_19 == 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  c_6(D)->min_y = y_12(D);

  <bb 14>:
  c_6(D)->started = 1;
  return;

}



;; Function void stbtt__csctx_v(stbtt__csctx*, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32) (_ZL14stbtt__csctx_vP12stbtt__csctxhiiiiii, funcdef_no=596, decl_uid=16024, cgraph_uid=495, symbol_order=495)

void stbtt__csctx_v(stbtt__csctx*, stbtt_uint8, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32, stbtt_int32) (struct stbtt__csctx * c, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbtt_int32 cx, stbtt_int32 cy, stbtt_int32 cx1, stbtt_int32 cy1)
{
  int D.21948;
  int D.21947;
  short int D.21946;
  struct stbtt_vertex * D.21945;
  long unsigned int D.21944;
  long unsigned int D.21943;
  int D.21942;
  struct stbtt_vertex * D.21941;
  short int D.21940;
  struct stbtt_vertex * D.21939;
  long unsigned int D.21938;
  long unsigned int D.21937;
  int D.21936;
  struct stbtt_vertex * D.21935;
  struct stbtt_vertex * D.21934;
  long unsigned int D.21933;
  long unsigned int D.21932;
  int D.21931;
  struct stbtt_vertex * D.21930;
  int D.21929;
  int D.21922;
  int _4;
  int _15;
  struct stbtt_vertex * _16;
  int _17;
  long unsigned int _18;
  long unsigned int _19;
  struct stbtt_vertex * _20;
  struct stbtt_vertex * _22;
  int _23;
  long unsigned int _24;
  long unsigned int _25;
  struct stbtt_vertex * _26;
  short int _27;
  struct stbtt_vertex * _29;
  int _30;
  long unsigned int _31;
  long unsigned int _32;
  struct stbtt_vertex * _33;
  short int _34;
  int _36;
  int _37;

  <bb 2>:
  _4 = c_3(D)->bounds;
  if (_4 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  stbtt__track_vertex (c_3(D), x_5(D), y_6(D));
  if (type_8(D) == 4)
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 4>:
  stbtt__track_vertex (c_3(D), cx_9(D), cy_10(D));
  stbtt__track_vertex (c_3(D), cx1_12(D), cy1_13(D));
  goto <bb 6>;

  <bb 5>:
  _15 = (int) type_8(D);
  _16 = c_3(D)->pvertices;
  _17 = c_3(D)->num_vertices;
  _18 = (long unsigned int) _17;
  _19 = _18 * 14;
  _20 = _16 + _19;
  stbtt_setvertex (_20, _15, x_5(D), y_6(D), cx_9(D), cy_10(D));
  _22 = c_3(D)->pvertices;
  _23 = c_3(D)->num_vertices;
  _24 = (long unsigned int) _23;
  _25 = _24 * 14;
  _26 = _22 + _25;
  _27 = (short int) cx1_12(D);
  _26->cx1 = _27;
  _29 = c_3(D)->pvertices;
  _30 = c_3(D)->num_vertices;
  _31 = (long unsigned int) _30;
  _32 = _31 * 14;
  _33 = _29 + _32;
  _34 = (short int) cy1_13(D);
  _33->cy1 = _34;

  <bb 6>:
  _36 = c_3(D)->num_vertices;
  _37 = _36 + 1;
  c_3(D)->num_vertices = _37;
  return;

}



;; Function void stbtt__csctx_close_shape(stbtt__csctx*) (_ZL24stbtt__csctx_close_shapeP12stbtt__csctx, funcdef_no=597, decl_uid=16027, cgraph_uid=496, symbol_order=496)

void stbtt__csctx_close_shape(stbtt__csctx*) (struct stbtt__csctx * ctx)
{
  int D.21959;
  float D.21958;
  int D.21957;
  float D.21956;
  float D.21955;
  float D.21954;
  float D.21952;
  float D.21951;
  float _4;
  float _5;
  float _6;
  float _7;
  float _8;
  int _9;
  float _10;
  int _11;

  <bb 2>:
  _4 = ctx_3(D)->first_x;
  _5 = ctx_3(D)->x;
  if (_4 != _5)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _6 = ctx_3(D)->first_y;
  _7 = ctx_3(D)->y;
  if (_6 != _7)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _8 = ctx_3(D)->first_y;
  _9 = (int) _8;
  _10 = ctx_3(D)->first_x;
  _11 = (int) _10;
  stbtt__csctx_v (ctx_3(D), 2, _11, _9, 0, 0, 0, 0);

  <bb 5>:
  return;

}



;; Function void stbtt__csctx_rmove_to(stbtt__csctx*, float, float) (_ZL21stbtt__csctx_rmove_toP12stbtt__csctxff, funcdef_no=598, decl_uid=16032, cgraph_uid=497, symbol_order=497)

void stbtt__csctx_rmove_to(stbtt__csctx*, float, float) (struct stbtt__csctx * ctx, float dx, float dy)
{
  int D.21969;
  float D.21968;
  int D.21967;
  float D.21966;
  float D.21965;
  float D.21964;
  float D.21963;
  float D.21962;
  float D.21961;
  float D.21960;
  float _4;
  float _6;
  float _8;
  float _10;
  float _12;
  float _14;
  float _16;
  int _17;
  float _18;
  int _19;

  <bb 2>:
  stbtt__csctx_close_shape (ctx_2(D));
  _4 = ctx_2(D)->x;
  _6 = _4 + dx_5(D);
  ctx_2(D)->x = _6;
  _8 = ctx_2(D)->x;
  ctx_2(D)->first_x = _8;
  _10 = ctx_2(D)->y;
  _12 = _10 + dy_11(D);
  ctx_2(D)->y = _12;
  _14 = ctx_2(D)->y;
  ctx_2(D)->first_y = _14;
  _16 = ctx_2(D)->y;
  _17 = (int) _16;
  _18 = ctx_2(D)->x;
  _19 = (int) _18;
  stbtt__csctx_v (ctx_2(D), 1, _19, _17, 0, 0, 0, 0);
  return;

}



;; Function void stbtt__csctx_rline_to(stbtt__csctx*, float, float) (_ZL21stbtt__csctx_rline_toP12stbtt__csctxff, funcdef_no=599, decl_uid=16037, cgraph_uid=498, symbol_order=498)

void stbtt__csctx_rline_to(stbtt__csctx*, float, float) (struct stbtt__csctx * ctx, float dx, float dy)
{
  int D.21977;
  float D.21976;
  int D.21975;
  float D.21974;
  float D.21973;
  float D.21972;
  float D.21971;
  float D.21970;
  float _3;
  float _5;
  float _7;
  float _9;
  float _11;
  int _12;
  float _13;
  int _14;

  <bb 2>:
  _3 = ctx_2(D)->x;
  _5 = _3 + dx_4(D);
  ctx_2(D)->x = _5;
  _7 = ctx_2(D)->y;
  _9 = _7 + dy_8(D);
  ctx_2(D)->y = _9;
  _11 = ctx_2(D)->y;
  _12 = (int) _11;
  _13 = ctx_2(D)->x;
  _14 = (int) _13;
  stbtt__csctx_v (ctx_2(D), 2, _14, _12, 0, 0, 0, 0);
  return;

}



;; Function void stbtt__csctx_rccurve_to(stbtt__csctx*, float, float, float, float, float, float) (_ZL23stbtt__csctx_rccurve_toP12stbtt__csctxffffff, funcdef_no=600, decl_uid=16046, cgraph_uid=499, symbol_order=499)

void stbtt__csctx_rccurve_to(stbtt__csctx*, float, float, float, float, float, float) (struct stbtt__csctx * ctx, float dx1, float dy1, float dx2, float dy2, float dx3, float dy3)
{
  float cy2;
  float cx2;
  float cy1;
  float cx1;
  int D.21989;
  float D.21988;
  int D.21987;
  float D.21986;
  int D.21985;
  int D.21984;
  int D.21983;
  int D.21982;
  float D.21981;
  float D.21980;
  float D.21979;
  float D.21978;
  float _3;
  float _6;
  float _14;
  float _17;
  int _19;
  int _20;
  int _21;
  int _22;
  float _23;
  int _24;
  float _25;
  int _26;

  <bb 2>:
  _3 = ctx_2(D)->x;
  cx1_5 = _3 + dx1_4(D);
  _6 = ctx_2(D)->y;
  cy1_8 = _6 + dy1_7(D);
  cx2_10 = cx1_5 + dx2_9(D);
  cy2_12 = cy1_8 + dy2_11(D);
  _14 = cx2_10 + dx3_13(D);
  ctx_2(D)->x = _14;
  _17 = cy2_12 + dy3_16(D);
  ctx_2(D)->y = _17;
  _19 = (int) cy2_12;
  _20 = (int) cx2_10;
  _21 = (int) cy1_8;
  _22 = (int) cx1_5;
  _23 = ctx_2(D)->y;
  _24 = (int) _23;
  _25 = ctx_2(D)->x;
  _26 = (int) _25;
  stbtt__csctx_v (ctx_2(D), 4, _26, _24, _22, _21, _20, _19);
  return;

}



;; Function stbtt__buf stbtt__get_subr(stbtt__buf, int) (_ZL15stbtt__get_subr10stbtt__bufi, funcdef_no=601, decl_uid=16054, cgraph_uid=500, symbol_order=500)

stbtt__buf stbtt__get_subr(stbtt__buf, int) (struct stbtt__buf idx, int n)
{
  int bias;
  int count;
  struct stbtt__buf D.21999;

  <bb 2>:
  count_5 = stbtt__cff_index_count (&idx);
  bias_6 = 107;
  if (count_5 > 33899)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  bias_7 = 32768;
  goto <bb 6>;

  <bb 4>:
  if (count_5 > 1239)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  bias_8 = 1131;

  <bb 6>:
  # bias_1 = PHI <bias_7(3), bias_6(4), bias_8(5)>
  n_10 = n_9(D) + bias_1;
  if (n_10 < 0)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  if (n_10 >= count_5)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  D.21999 = stbtt__new_buf (0B, 0);
  goto <bb 10> (<L9>);

  <bb 9>:
  D.21999 = stbtt__cff_index_get (idx, n_10);

<L9>:
  return D.21999;

}



;; Function stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo*, int) (_ZL26stbtt__cid_get_glyph_subrsPK14stbtt_fontinfoi, funcdef_no=602, decl_uid=16063, cgraph_uid=501, symbol_order=501)

stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo*, int) (const struct stbtt_fontinfo * info, int glyph_index)
{
  int i;
  int fdselector;
  int fmt;
  int v;
  int end;
  int start;
  int nranges;
  struct stbtt__buf fdselect;
  struct stbtt__buf D.22023;
  struct stbtt__buf D.22022;
  struct stbtt__buf D.16074;
  unsigned int D.22013;
  unsigned char D.22012;
  unsigned int D.22009;
  unsigned int D.22008;
  unsigned char D.22004;
  unsigned char D.22001;
  unsigned char _15;
  unsigned char _20;
  unsigned int _23;
  unsigned int _26;
  unsigned char _30;
  unsigned int _33;

  <bb 2>:
  fdselect = info_10(D)->fdselect;
  fdselector_12 = -1;
  stbtt__buf_seek (&fdselect, 0);
  _15 = stbtt__buf_get8 (&fdselect);
  fmt_16 = (int) _15;
  if (fmt_16 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  stbtt__buf_skip (&fdselect, glyph_index_17(D));
  _20 = stbtt__buf_get8 (&fdselect);
  fdselector_21 = (int) _20;
  goto <bb 12>;

  <bb 4>:
  if (fmt_16 == 3)
    goto <bb 5>;
  else
    goto <bb 12>;

  <bb 5>:
  _23 = stbtt__buf_get (&fdselect, 2);
  nranges_24 = (int) _23;
  _26 = stbtt__buf_get (&fdselect, 2);
  start_27 = (int) _26;
  i_28 = 0;

  <bb 6>:
  # start_1 = PHI <start_27(5), start_36(10)>
  # i_4 = PHI <i_28(5), i_37(10)>
  if (i_4 >= nranges_24)
    goto <bb 11>;
  else
    goto <bb 7>;

  <bb 7>:
  _30 = stbtt__buf_get8 (&fdselect);
  v_31 = (int) _30;
  _33 = stbtt__buf_get (&fdselect, 2);
  end_34 = (int) _33;
  if (glyph_index_17(D) >= start_1)
    goto <bb 8>;
  else
    goto <bb 10>;

  <bb 8>:
  if (glyph_index_17(D) < end_34)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  fdselector_35 = v_31;
  goto <bb 11>;

  <bb 10>:
  start_36 = end_34;
  i_37 = i_4 + 1;
  goto <bb 6>;

  <bb 11>:
  # fdselector_2 = PHI <fdselector_12(6), fdselector_35(9)>

  <bb 12>:
  # fdselector_3 = PHI <fdselector_21(3), fdselector_12(4), fdselector_2(11)>
  if (fdselector_3 == -1)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  D.16074 = stbtt__new_buf (0B, 0);

  <bb 14>:
  D.22023 = stbtt__cff_index_get (info_10(D)->fontdicts, fdselector_3);
  D.22022 = stbtt__get_subrs (info_10(D)->cff, D.22023);
  fdselect ={v} {CLOBBER};

<L17>:
  return D.22022;

}



;; Function int stbtt__run_charstring(const stbtt_fontinfo*, int, stbtt__csctx*) (_ZL21stbtt__run_charstringPK14stbtt_fontinfoiP12stbtt__csctx, funcdef_no=603, decl_uid=16084, cgraph_uid=502, symbol_order=502)

int stbtt__run_charstring(const stbtt_fontinfo*, int, stbtt__csctx*) (const struct stbtt_fontinfo * info, int glyph_index, struct stbtt__csctx * c)
{
  int b1;
  float dy;
  float dx;
  float dy6;
  float dy5;
  float dy4;
  float dy3;
  float dy2;
  float dy1;
  float dx6;
  float dx5;
  float dx4;
  float dx3;
  float dx2;
  float dx1;
  float f;
  struct stbtt__buf b;
  struct stbtt__buf subrs;
  struct stbtt__buf subr_stack[10];
  float s[48];
  int clear_stack;
  int has_subrs;
  int b0;
  int i;
  int v;
  int sp;
  int subr_stack_height;
  int maskbits;
  int in_header;
  int sp.166;
  short int D.22259;
  unsigned int D.22258;
  float D.22256;
  int D.22255;
  unsigned int D.22254;
  float D.22241;
  float D.22240;
  bool retval.165;
  float D.22238;
  float D.22237;
  float D.22236;
  float D.22235;
  float D.22234;
  float D.22233;
  float D.22230;
  float D.22229;
  float D.22228;
  float D.22223;
  unsigned char D.22220;
  int D.22215;
  const struct stbtt__buf & iftmp.164;
  int subr_stack_height.163;
  int subr_stack_height.162;
  float D.22206;
  int D.22199;
  float D.22196;
  float D.22195;
  int D.22194;
  float D.22193;
  int D.22192;
  float D.22191;
  int D.22190;
  float D.22188;
  float D.22187;
  int D.22186;
  float D.22185;
  int D.22184;
  float D.22183;
  int D.22182;
  int D.22178;
  int D.22173;
  float D.22170;
  float D.22169;
  int D.22168;
  float D.22167;
  int D.22166;
  float D.22165;
  int D.22164;
  float D.22163;
  int D.22162;
  float D.22161;
  int D.22160;
  int D.22157;
  float D.22156;
  float D.22155;
  int D.22154;
  int D.22152;
  int D.22151;
  float D.22147;
  float D.22146;
  int D.22145;
  int D.22142;
  float D.22141;
  float D.22140;
  int D.22139;
  float D.22138;
  int D.22137;
  float D.22136;
  int D.22135;
  float D.22134;
  int D.22133;
  float D.22132;
  int D.22131;
  int D.22129;
  int D.22128;
  float D.22124;
  float D.22123;
  int D.22122;
  float D.22121;
  int D.22120;
  float D.22119;
  int D.22118;
  float D.22117;
  int D.22116;
  float D.22115;
  int D.22114;
  int D.22112;
  float D.22108;
  float D.22107;
  int D.22106;
  float D.22105;
  int D.22104;
  int D.22102;
  int D.22099;
  float iftmp.161;
  float D.22097;
  int D.22096;
  int D.22093;
  float D.22092;
  float D.22091;
  int D.22090;
  float D.22089;
  int D.22088;
  float D.22087;
  int D.22086;
  int D.22084;
  int D.22081;
  float iftmp.160;
  int D.22077;
  float D.22071;
  float D.22068;
  float D.22060;
  float D.22059;
  int D.22058;
  int D.22056;
  float D.22052;
  int D.22051;
  float D.22048;
  int D.22047;
  float D.22044;
  int D.22043;
  float D.22042;
  int D.22041;
  int D.22040;
  int D.22037;
  int D.22036;
  int D.22035;
  int D.22033;
  unsigned char D.22030;
  int D.22028;
  int D.22027;
  int _28;
  float iftmp.160_29;
  float iftmp.161_30;
  const struct stbtt__buf & iftmp.164_31;
  int _61;
  int _62;
  unsigned char _66;
  int _68;
  int _71;
  int _72;
  int _74;
  int _77;
  float _78;
  int _81;
  int _83;
  float _84;
  int _86;
  int _87;
  int _88;
  float _89;
  float _90;
  int _93;
  int _94;
  int _95;
  float _96;
  float _99;
  int _102;
  int _103;
  int _104;
  int _105;
  float _106;
  int _107;
  int _108;
  float iftmp.161_109;
  float iftmp.161_110;
  int _111;
  float _112;
  int _113;
  float _114;
  float _115;
  int _118;
  int _119;
  int _120;
  float iftmp.160_121;
  float iftmp.160_122;
  int _123;
  float _124;
  int _125;
  float _126;
  int _127;
  float _128;
  float _129;
  int _132;
  int _133;
  float _134;
  int _135;
  float _136;
  int _137;
  float _138;
  int _139;
  float _140;
  int _141;
  float _142;
  float _143;
  int _146;
  int _147;
  int _148;
  int _149;
  float _150;
  int _151;
  float _152;
  int _153;
  float _154;
  int _155;
  float _156;
  int _157;
  float _158;
  float _159;
  int _162;
  int _163;
  float _164;
  float _165;
  int _167;
  int _168;
  int _169;
  int _170;
  int _171;
  float _172;
  float _173;
  int _176;
  int _177;
  float _178;
  int _179;
  float _180;
  int _181;
  float _182;
  int _183;
  float _184;
  int _185;
  float _186;
  float _187;
  int _189;
  int _190;
  int _192;
  int _195;
  int _196;
  float _197;
  int _198;
  float _199;
  int _200;
  float _201;
  float _202;
  int _204;
  float _205;
  int _206;
  float _207;
  int _208;
  float _209;
  float _210;
  int _214;
  int _215;
  float _219;
  int subr_stack_height.162_221;
  int subr_stack_height.163_223;
  const struct stbtt__buf & iftmp.164_225;
  const struct stbtt__buf & iftmp.164_226;
  int _228;
  int _231;
  int _232;
  int _233;
  int _237;
  unsigned char _239;
  float _249;
  int _251;
  int _266;
  float _277;
  float _278;
  float _279;
  int _281;
  float _294;
  float _295;
  float _296;
  float _298;
  float _299;
  float _300;
  float _303;
  float _305;
  bool retval.165_306;
  int _311;
  int _312;
  int _313;
  unsigned int _315;
  int _316;
  float _317;
  unsigned int _321;
  short int _322;
  int sp.166_324;
  int _328;
  int _331;
  float _332;
  int _333;
  float _334;
  int _336;
  int _338;
  int _339;

  <bb 2>:
  in_header_51 = 1;
  maskbits_52 = 0;
  subr_stack_height_53 = 0;
  sp_54 = 0;
  has_subrs_55 = 0;
  subrs = info_57(D)->subrs;
  b = stbtt__cff_index_get (info_57(D)->charstrings, glyph_index_59(D));

  <bb 3>:
  # in_header_1 = PHI <in_header_51(2), in_header_2(131)>
  # maskbits_3 = PHI <maskbits_52(2), maskbits_5(131)>
  # subr_stack_height_6 = PHI <subr_stack_height_53(2), subr_stack_height_7(131)>
  # sp_8 = PHI <sp_54(2), sp_10(131)>
  # has_subrs_20 = PHI <has_subrs_55(2), has_subrs_22(131)>
  _61 = b.cursor;
  _62 = b.size;
  if (_61 >= _62)
    goto <bb 132>;
  else
    goto <bb 4>;

  <bb 4>:
  i_63 = 0;
  clear_stack_64 = 1;
  _66 = stbtt__buf_get8 (&b);
  b0_67 = (int) _66;
  switch (b0_67) <default: <L132>, case 1: <L7>, case 3: <L7>, case 4: <L14>, case 5: <L20>, case 6: <L29>, case 7: <L26>, case 8: <L58>, case 10: <L93>, case 11: <L110>, case 12: <L114>, case 14: <L113>, case 18: <L7>, case 19 ... 20: <L2>, case 21: <L11>, case 22: <L17>, case 23: <L7>, case 24: <L64>, case 25: <L72>, case 26 ... 27: <L80>, case 29: <L98>, case 30: <L42>, case 31: <L39>>

<L2>:
  if (in_header_1 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _68 = sp_8 / 2;
  maskbits_69 = _68 + maskbits_3;

  <bb 7>:
  # maskbits_4 = PHI <maskbits_3(5), maskbits_69(6)>
  in_header_70 = 0;
  _71 = maskbits_4 + 7;
  _72 = _71 / 8;
  stbtt__buf_skip (&b, _72);
  goto <bb 129>;

<L7>:
  _74 = sp_8 / 2;
  maskbits_75 = _74 + maskbits_3;
  goto <bb 129>;

<L11>:
  in_header_330 = 0;
  if (sp_8 <= 1)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _336 = 0;
  goto <bb 133>;

  <bb 11>:
  _331 = sp_8 + -1;
  _332 = s[_331];
  _333 = sp_8 + -2;
  _334 = s[_333];
  stbtt__csctx_rmove_to (c_79(D), _334, _332);
  goto <bb 129>;

<L14>:
  in_header_76 = 0;
  if (sp_8 <= 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _81 = 0;
  goto <bb 133>;

  <bb 14>:
  _77 = sp_8 + -1;
  _78 = s[_77];
  stbtt__csctx_rmove_to (c_79(D), 0.0, _78);
  goto <bb 129>;

<L17>:
  in_header_82 = 0;
  if (sp_8 <= 0)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _86 = 0;
  goto <bb 133>;

  <bb 17>:
  _83 = sp_8 + -1;
  _84 = s[_83];
  stbtt__csctx_rmove_to (c_79(D), _84, 0.0);
  goto <bb 129>;

<L20>:
  if (sp_8 <= 1)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _93 = 0;
  goto <bb 133>;

  <bb 20>:
  # i_11 = PHI <i_63(18), i_92(21)>
  _87 = i_11 + 1;
  if (_87 >= sp_8)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  _88 = i_11 + 1;
  _89 = s[_88];
  _90 = s[i_11];
  stbtt__csctx_rline_to (c_79(D), _90, _89);
  i_92 = i_11 + 2;
  goto <bb 20>;

  <bb 22>:
  goto <bb 129>;

<L26>:
  if (sp_8 <= 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _95 = 0;
  goto <bb 133>;

  <bb 25>:
  goto <bb 31> (vlineto);

<L29>:
  if (sp_8 <= 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _94 = 0;
  goto <bb 133>;

  <bb 28>:
  # i_12 = PHI <i_63(26), i_98(33)>
  if (i_12 >= sp_8)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  goto <bb 34>;

  <bb 30>:
  _99 = s[i_12];
  stbtt__csctx_rline_to (c_79(D), _99, 0.0);
  i_101 = i_12 + 1;

  # i_13 = PHI <i_63(25), i_101(30)>
vlineto:
  if (i_13 >= sp_8)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  goto <bb 34>;

  <bb 33>:
  _96 = s[i_13];
  stbtt__csctx_rline_to (c_79(D), 0.0, _96);
  i_98 = i_13 + 1;
  goto <bb 28>;

  <bb 34>:
  goto <bb 129>;

<L39>:
  if (sp_8 <= 3)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  _103 = 0;
  goto <bb 133>;

  <bb 37>:
  goto <bb 46> (hvcurveto);

<L42>:
  if (sp_8 <= 3)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  _102 = 0;
  goto <bb 133>;

  <bb 40>:
  # i_14 = PHI <i_63(38), i_117(51)>
  _118 = i_14 + 3;
  if (_118 >= sp_8)
    goto <bb 41>;
  else
    goto <bb 42>;

  <bb 41>:
  goto <bb 52>;

  <bb 42>:
  _119 = sp_8 - i_14;
  if (_119 == 5)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  _120 = i_14 + 4;
  iftmp.160_121 = s[_120];
  goto <bb 45>;

  <bb 44>:
  iftmp.160_122 = 0.0;

  <bb 45>:
  # iftmp.160_29 = PHI <iftmp.160_121(43), iftmp.160_122(44)>
  _123 = i_14 + 3;
  _124 = s[_123];
  _125 = i_14 + 2;
  _126 = s[_125];
  _127 = i_14 + 1;
  _128 = s[_127];
  _129 = s[i_14];
  stbtt__csctx_rccurve_to (c_79(D), 0.0, _129, _128, _126, _124, iftmp.160_29);
  i_131 = i_14 + 4;

  # i_15 = PHI <i_63(37), i_131(45)>
hvcurveto:
  _104 = i_15 + 3;
  if (_104 >= sp_8)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  goto <bb 52>;

  <bb 48>:
  _105 = i_15 + 3;
  _106 = s[_105];
  _107 = sp_8 - i_15;
  if (_107 == 5)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  _108 = i_15 + 4;
  iftmp.161_109 = s[_108];
  goto <bb 51>;

  <bb 50>:
  iftmp.161_110 = 0.0;

  <bb 51>:
  # iftmp.161_30 = PHI <iftmp.161_109(49), iftmp.161_110(50)>
  _111 = i_15 + 2;
  _112 = s[_111];
  _113 = i_15 + 1;
  _114 = s[_113];
  _115 = s[i_15];
  stbtt__csctx_rccurve_to (c_79(D), _115, 0.0, _114, _112, iftmp.161_30, _106);
  i_117 = i_15 + 4;
  goto <bb 40>;

  <bb 52>:
  goto <bb 129>;

<L58>:
  if (sp_8 <= 5)
    goto <bb 54>;
  else
    goto <bb 55>;

  <bb 54>:
  _146 = 0;
  goto <bb 133>;

  <bb 55>:
  # i_16 = PHI <i_63(53), i_145(56)>
  _132 = i_16 + 5;
  if (_132 >= sp_8)
    goto <bb 57>;
  else
    goto <bb 56>;

  <bb 56>:
  _133 = i_16 + 5;
  _134 = s[_133];
  _135 = i_16 + 4;
  _136 = s[_135];
  _137 = i_16 + 3;
  _138 = s[_137];
  _139 = i_16 + 2;
  _140 = s[_139];
  _141 = i_16 + 1;
  _142 = s[_141];
  _143 = s[i_16];
  stbtt__csctx_rccurve_to (c_79(D), _143, _142, _140, _138, _136, _134);
  i_145 = i_16 + 6;
  goto <bb 55>;

  <bb 57>:
  goto <bb 129>;

<L64>:
  if (sp_8 <= 7)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  _168 = 0;
  goto <bb 133>;

  <bb 60>:
  # i_17 = PHI <i_63(58), i_161(61)>
  _147 = i_17 + 5;
  _148 = sp_8 + -2;
  if (_147 >= _148)
    goto <bb 62>;
  else
    goto <bb 61>;

  <bb 61>:
  _149 = i_17 + 5;
  _150 = s[_149];
  _151 = i_17 + 4;
  _152 = s[_151];
  _153 = i_17 + 3;
  _154 = s[_153];
  _155 = i_17 + 2;
  _156 = s[_155];
  _157 = i_17 + 1;
  _158 = s[_157];
  _159 = s[i_17];
  stbtt__csctx_rccurve_to (c_79(D), _159, _158, _156, _154, _152, _150);
  i_161 = i_17 + 6;
  goto <bb 60>;

  <bb 62>:
  _162 = i_17 + 1;
  if (_162 >= sp_8)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  _167 = 0;
  goto <bb 133>;

  <bb 64>:
  _163 = i_17 + 1;
  _164 = s[_163];
  _165 = s[i_17];
  stbtt__csctx_rline_to (c_79(D), _165, _164);
  goto <bb 129>;

<L72>:
  if (sp_8 <= 7)
    goto <bb 66>;
  else
    goto <bb 67>;

  <bb 66>:
  _190 = 0;
  goto <bb 133>;

  <bb 67>:
  # i_18 = PHI <i_63(65), i_175(68)>
  _169 = i_18 + 1;
  _170 = sp_8 + -6;
  if (_169 >= _170)
    goto <bb 69>;
  else
    goto <bb 68>;

  <bb 68>:
  _171 = i_18 + 1;
  _172 = s[_171];
  _173 = s[i_18];
  stbtt__csctx_rline_to (c_79(D), _173, _172);
  i_175 = i_18 + 2;
  goto <bb 67>;

  <bb 69>:
  _176 = i_18 + 5;
  if (_176 >= sp_8)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  _189 = 0;
  goto <bb 133>;

  <bb 71>:
  _177 = i_18 + 5;
  _178 = s[_177];
  _179 = i_18 + 4;
  _180 = s[_179];
  _181 = i_18 + 3;
  _182 = s[_181];
  _183 = i_18 + 2;
  _184 = s[_183];
  _185 = i_18 + 1;
  _186 = s[_185];
  _187 = s[i_18];
  stbtt__csctx_rccurve_to (c_79(D), _187, _186, _184, _182, _180, _178);
  goto <bb 129>;

<L80>:
  if (sp_8 <= 3)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  _214 = 0;
  goto <bb 133>;

  <bb 74>:
  f_191 = 0.0;
  _192 = sp_8 & 1;
  if (_192 != 0)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  f_193 = s[i_63];
  i_194 = i_63 + 1;

  <bb 76>:
  # i_19 = PHI <i_63(74), i_194(75), i_213(80)>
  # f_24 = PHI <f_191(74), f_193(75), f_212(80)>
  _195 = i_19 + 3;
  if (_195 >= sp_8)
    goto <bb 81>;
  else
    goto <bb 77>;

  <bb 77>:
  if (b0_67 == 27)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  _196 = i_19 + 3;
  _197 = s[_196];
  _198 = i_19 + 2;
  _199 = s[_198];
  _200 = i_19 + 1;
  _201 = s[_200];
  _202 = s[i_19];
  stbtt__csctx_rccurve_to (c_79(D), _202, f_24, _201, _199, _197, 0.0);
  goto <bb 80>;

  <bb 79>:
  _204 = i_19 + 3;
  _205 = s[_204];
  _206 = i_19 + 2;
  _207 = s[_206];
  _208 = i_19 + 1;
  _209 = s[_208];
  _210 = s[i_19];
  stbtt__csctx_rccurve_to (c_79(D), f_24, _210, _209, _207, 0.0, _205);

  <bb 80>:
  f_212 = 0.0;
  i_213 = i_19 + 4;
  goto <bb 76>;

  <bb 81>:
  goto <bb 129>;

<L93>:
  if (has_subrs_20 == 0)
    goto <bb 83>;
  else
    goto <bb 86> (<L98>);

  <bb 83>:
  _215 = info_57(D)->fdselect.size;
  if (_215 != 0)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  subrs = stbtt__cid_get_glyph_subrs (info_57(D), glyph_index_59(D));

  <bb 85>:
  has_subrs_217 = 1;

  # has_subrs_21 = PHI <has_subrs_20(4), has_subrs_20(82), has_subrs_217(85)>
<L98>:
  if (sp_8 <= 0)
    goto <bb 87>;
  else
    goto <bb 88>;

  <bb 87>:
  _233 = 0;
  goto <bb 133>;

  <bb 88>:
  sp_218 = sp_8 + -1;
  _219 = s[sp_218];
  v_220 = (int) _219;
  if (subr_stack_height_6 > 9)
    goto <bb 89>;
  else
    goto <bb 90>;

  <bb 89>:
  _232 = 0;
  goto <bb 133>;

  <bb 90>:
  subr_stack_height.162_221 = subr_stack_height_6;
  subr_stack_height_222 = subr_stack_height.162_221 + 1;
  subr_stack_height.163_223 = subr_stack_height.162_221;
  subr_stack[subr_stack_height.163_223] = b;
  if (b0_67 == 10)
    goto <bb 91>;
  else
    goto <bb 92>;

  <bb 91>:
  iftmp.164_225 = &subrs;
  goto <bb 93>;

  <bb 92>:
  iftmp.164_226 = &info_57(D)->gsubrs;

  <bb 93>:
  # iftmp.164_31 = PHI <iftmp.164_225(91), iftmp.164_226(92)>
  b = stbtt__get_subr (*iftmp.164_31, v_220);
  _228 = b.size;
  if (_228 == 0)
    goto <bb 94>;
  else
    goto <bb 95>;

  <bb 94>:
  _231 = 0;
  goto <bb 133>;

  <bb 95>:
  b.cursor = 0;
  clear_stack_230 = 0;
  goto <bb 129>;

<L110>:
  if (subr_stack_height_6 <= 0)
    goto <bb 97>;
  else
    goto <bb 98>;

  <bb 97>:
  _237 = 0;
  goto <bb 133>;

  <bb 98>:
  subr_stack_height_234 = subr_stack_height_6 + -1;
  b = subr_stack[subr_stack_height_234];
  clear_stack_236 = 0;
  goto <bb 129>;

<L113>:
  stbtt__csctx_close_shape (c_79(D));
  _338 = 1;
  goto <bb 133>;

<L114>:
  _239 = stbtt__buf_get8 (&b);
  b1_240 = (int) _239;
  switch (b1_240) <default: <L130>, case 34: <L115>, case 35: <L118>, case 36: <L121>, case 37: <L124>>

<L115>:
  if (sp_8 <= 6)
    goto <bb 102>;
  else
    goto <bb 103>;

  <bb 102>:
  _251 = 0;
  goto <bb 133>;

  <bb 103>:
  dx1_241 = s[0];
  dx2_242 = s[1];
  dy2_243 = s[2];
  dx3_244 = s[3];
  dx4_245 = s[4];
  dx5_246 = s[5];
  dx6_247 = s[6];
  stbtt__csctx_rccurve_to (c_79(D), dx1_241, 0.0, dx2_242, dy2_243, dx3_244, 0.0);
  _249 = -dy2_243;
  stbtt__csctx_rccurve_to (c_79(D), dx4_245, 0.0, dx5_246, _249, dx6_247, 0.0);
  goto <bb 117>;

<L118>:
  if (sp_8 <= 12)
    goto <bb 105>;
  else
    goto <bb 106>;

  <bb 105>:
  _266 = 0;
  goto <bb 133>;

  <bb 106>:
  dx1_252 = s[0];
  dy1_253 = s[1];
  dx2_254 = s[2];
  dy2_255 = s[3];
  dx3_256 = s[4];
  dy3_257 = s[5];
  dx4_258 = s[6];
  dy4_259 = s[7];
  dx5_260 = s[8];
  dy5_261 = s[9];
  dx6_262 = s[10];
  dy6_263 = s[11];
  stbtt__csctx_rccurve_to (c_79(D), dx1_252, dy1_253, dx2_254, dy2_255, dx3_256, dy3_257);
  stbtt__csctx_rccurve_to (c_79(D), dx4_258, dy4_259, dx5_260, dy5_261, dx6_262, dy6_263);
  goto <bb 117>;

<L121>:
  if (sp_8 <= 8)
    goto <bb 108>;
  else
    goto <bb 109>;

  <bb 108>:
  _281 = 0;
  goto <bb 133>;

  <bb 109>:
  dx1_267 = s[0];
  dy1_268 = s[1];
  dx2_269 = s[2];
  dy2_270 = s[3];
  dx3_271 = s[4];
  dx4_272 = s[5];
  dx5_273 = s[6];
  dy5_274 = s[7];
  dx6_275 = s[8];
  stbtt__csctx_rccurve_to (c_79(D), dx1_267, dy1_268, dx2_269, dy2_270, dx3_271, 0.0);
  _277 = dy1_268 + dy2_270;
  _278 = _277 + dy5_274;
  _279 = -_278;
  stbtt__csctx_rccurve_to (c_79(D), dx4_272, 0.0, dx5_273, dy5_274, dx6_275, _279);
  goto <bb 117>;

<L124>:
  if (sp_8 <= 10)
    goto <bb 111>;
  else
    goto <bb 112>;

  <bb 111>:
  _311 = 0;
  goto <bb 133>;

  <bb 112>:
  dx1_282 = s[0];
  dy1_283 = s[1];
  dx2_284 = s[2];
  dy2_285 = s[3];
  dx3_286 = s[4];
  dy3_287 = s[5];
  dx4_288 = s[6];
  dy4_289 = s[7];
  dx5_290 = s[8];
  dy5_291 = s[9];
  dy6_292 = s[10];
  dx6_293 = dy6_292;
  _294 = dx1_282 + dx2_284;
  _295 = _294 + dx3_286;
  _296 = _295 + dx4_288;
  dx_297 = _296 + dx5_290;
  _298 = dy1_283 + dy2_285;
  _299 = _298 + dy3_287;
  _300 = _299 + dy4_289;
  dy_301 = _300 + dy5_291;
  _303 = std::fabs (dx_297);
  _305 = std::fabs (dy_301);
  retval.165_306 = _303 > _305;
  if (retval.165_306 != 0)
    goto <bb 113>;
  else
    goto <bb 114>;

  <bb 113>:
  dy6_307 = -dy_301;
  goto <bb 115>;

  <bb 114>:
  dx6_308 = -dx_297;

  <bb 115>:
  # dx6_26 = PHI <dx6_293(113), dx6_308(114)>
  # dy6_27 = PHI <dy6_307(113), dy6_292(114)>
  stbtt__csctx_rccurve_to (c_79(D), dx1_282, dy1_283, dx2_284, dy2_285, dx3_286, dy3_287);
  stbtt__csctx_rccurve_to (c_79(D), dx4_288, dy4_289, dx5_290, dy5_291, dx6_26, dy6_27);
  goto <bb 117>;

<L130>:
  _312 = 0;
  goto <bb 133>;

  <bb 117>:
  goto <bb 129>;

<L132>:
  if (b0_67 != 255)
    goto <bb 119>;
  else
    goto <bb 123>;

  <bb 119>:
  if (b0_67 != 28)
    goto <bb 120>;
  else
    goto <bb 123>;

  <bb 120>:
  if (b0_67 <= 31)
    goto <bb 122>;
  else
    goto <bb 121>;

  <bb 121>:
  if (b0_67 > 254)
    goto <bb 122>;
  else
    goto <bb 123>;

  <bb 122>:
  _313 = 0;
  goto <bb 133>;

  <bb 123>:
  if (b0_67 == 255)
    goto <bb 124>;
  else
    goto <bb 125>;

  <bb 124>:
  _315 = stbtt__buf_get (&b, 4);
  _316 = (int) _315;
  _317 = (float) _316;
  f_318 = _317 / 6.5536e+4;
  goto <bb 126>;

  <bb 125>:
  stbtt__buf_skip (&b, -1);
  _321 = stbtt__cff_int (&b);
  _322 = (short int) _321;
  f_323 = (float) _322;

  <bb 126>:
  # f_25 = PHI <f_318(124), f_323(125)>
  if (sp_8 > 47)
    goto <bb 127>;
  else
    goto <bb 128>;

  <bb 127>:
  _328 = 0;
  goto <bb 133>;

  <bb 128>:
  sp.166_324 = sp_8;
  sp_325 = sp.166_324 + 1;
  s[sp.166_324] = f_25;
  clear_stack_327 = 0;

  <bb 129>:
  # in_header_2 = PHI <in_header_70(7), in_header_1(8), in_header_330(11), in_header_76(14), in_header_82(17), in_header_1(22), in_header_1(34), in_header_1(52), in_header_1(57), in_header_1(64), in_header_1(71), in_header_1(81), in_header_1(95), in_header_1(98), in_header_1(117), in_header_1(128)>
  # maskbits_5 = PHI <maskbits_4(7), maskbits_75(8), maskbits_3(11), maskbits_3(14), maskbits_3(17), maskbits_3(22), maskbits_3(34), maskbits_3(52), maskbits_3(57), maskbits_3(64), maskbits_3(71), maskbits_3(81), maskbits_3(95), maskbits_3(98), maskbits_3(117), maskbits_3(128)>
  # subr_stack_height_7 = PHI <subr_stack_height_6(7), subr_stack_height_6(8), subr_stack_height_6(11), subr_stack_height_6(14), subr_stack_height_6(17), subr_stack_height_6(22), subr_stack_height_6(34), subr_stack_height_6(52), subr_stack_height_6(57), subr_stack_height_6(64), subr_stack_height_6(71), subr_stack_height_6(81), subr_stack_height_222(95), subr_stack_height_234(98), subr_stack_height_6(117), subr_stack_height_6(128)>
  # sp_9 = PHI <sp_8(7), sp_8(8), sp_8(11), sp_8(14), sp_8(17), sp_8(22), sp_8(34), sp_8(52), sp_8(57), sp_8(64), sp_8(71), sp_8(81), sp_218(95), sp_8(98), sp_8(117), sp_325(128)>
  # has_subrs_22 = PHI <has_subrs_20(7), has_subrs_20(8), has_subrs_20(11), has_subrs_20(14), has_subrs_20(17), has_subrs_20(22), has_subrs_20(34), has_subrs_20(52), has_subrs_20(57), has_subrs_20(64), has_subrs_20(71), has_subrs_20(81), has_subrs_21(95), has_subrs_20(98), has_subrs_20(117), has_subrs_20(128)>
  # clear_stack_23 = PHI <clear_stack_64(7), clear_stack_64(8), clear_stack_64(11), clear_stack_64(14), clear_stack_64(17), clear_stack_64(22), clear_stack_64(34), clear_stack_64(52), clear_stack_64(57), clear_stack_64(64), clear_stack_64(71), clear_stack_64(81), clear_stack_230(95), clear_stack_236(98), clear_stack_64(117), clear_stack_327(128)>
  if (clear_stack_23 != 0)
    goto <bb 130>;
  else
    goto <bb 131>;

  <bb 130>:
  sp_329 = 0;

  <bb 131>:
  # sp_10 = PHI <sp_9(129), sp_329(130)>
  goto <bb 3>;

  <bb 132>:
  _339 = 0;

  <bb 133>:
  # _28 = PHI <_336(10), _81(13), _86(16), _93(19), _95(24), _94(27), _103(36), _102(39), _146(54), _168(59), _167(63), _190(66), _189(70), _214(73), _233(87), _232(89), _231(94), _237(97), _338(99), _251(102), _266(105), _281(108), _311(111), _312(116), _313(122), _328(127), _339(132)>
  s ={v} {CLOBBER};
  subr_stack ={v} {CLOBBER};
  subrs ={v} {CLOBBER};
  b ={v} {CLOBBER};

<L151>:
  return _28;

}



;; Function int stbtt__GetGlyphShapeT2(const stbtt_fontinfo*, int, stbtt_vertex**) (_ZL22stbtt__GetGlyphShapeT2PK14stbtt_fontinfoiPP12stbtt_vertex, funcdef_no=604, decl_uid=16174, cgraph_uid=503, symbol_order=503)

int stbtt__GetGlyphShapeT2(const stbtt_fontinfo*, int, stbtt_vertex**) (const struct stbtt_fontinfo * info, int glyph_index, struct stbtt_vertex * * pvertices)
{
  void * D.22291;
  static const char __PRETTY_FUNCTION__[71] = "int stbtt__GetGlyphShapeT2(const stbtt_fontinfo*, int, stbtt_vertex**)";
  struct stbtt__csctx output_ctx;
  struct stbtt__csctx count_ctx;
  int D.22288;
  int D.22284;
  int D.22283;
  int D.22280;
  bool retval.168;
  struct stbtt_vertex * D.22278;
  void * D.22277;
  long unsigned int D.22276;
  long unsigned int D.22275;
  int D.22274;
  int D.22271;
  bool retval.167;
  int _1;
  int _11;
  bool retval.167_12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  void * _17;
  void * _18;
  struct stbtt_vertex * _21;
  int _24;
  bool retval.168_25;
  int _26;
  int _27;
  int _28;
  int _33;

  <bb 2>:
  count_ctx = {};
  count_ctx.bounds = 1;
  output_ctx = {};
  _11 = stbtt__run_charstring (info_8(D), glyph_index_9(D), &count_ctx);
  retval.167_12 = _11 != 0;
  if (retval.167_12 != 0)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 3>:
  _13 = count_ctx.num_vertices;
  _14 = (long unsigned int) _13;
  _15 = _14 * 14;
  _17 = ImGui::MemAlloc (_15);
  _18 = _17;
  *pvertices_19(D) = _18;
  _21 = *pvertices_19(D);
  output_ctx.pvertices = _21;
  _24 = stbtt__run_charstring (info_8(D), glyph_index_9(D), &output_ctx);
  retval.168_25 = _24 != 0;
  if (retval.168_25 != 0)
    goto <bb 4>;
  else
    goto <bb 7>;

  <bb 4>:
  _26 = output_ctx.num_vertices;
  _27 = count_ctx.num_vertices;
  if (_26 == _27)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  __assert_fail ("output_ctx.num_vertices == count_ctx.num_vertices", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2230, &__PRETTY_FUNCTION__);

  <bb 6>:
  _28 = output_ctx.num_vertices;
  goto <bb 8>;

  <bb 7>:
  *pvertices_19(D) = 0B;
  _33 = 0;

  <bb 8>:
  # _1 = PHI <_28(6), _33(7)>
  count_ctx ={v} {CLOBBER};
  output_ctx ={v} {CLOBBER};

<L9>:
  return _1;

}



;; Function int stbtt__GetGlyphInfoT2(const stbtt_fontinfo*, int, int*, int*, int*, int*) (_ZL21stbtt__GetGlyphInfoT2PK14stbtt_fontinfoiPiS2_S2_S2_, funcdef_no=605, decl_uid=15897, cgraph_uid=504, symbol_order=504)

int stbtt__GetGlyphInfoT2(const stbtt_fontinfo*, int, int*, int*, int*, int*) (const struct stbtt_fontinfo * info, int glyph_index, int * x0, int * y0, int * x1, int * y1)
{
  int r;
  struct stbtt__csctx c;
  int iftmp.173;
  int D.22322;
  stbtt_int32 iftmp.172;
  stbtt_int32 iftmp.171;
  stbtt_int32 iftmp.170;
  stbtt_int32 iftmp.169;
  stbtt_int32 iftmp.169_1;
  stbtt_int32 iftmp.170_2;
  stbtt_int32 iftmp.171_3;
  stbtt_int32 iftmp.172_4;
  int iftmp.173_5;
  stbtt_int32 iftmp.169_18;
  stbtt_int32 iftmp.169_19;
  stbtt_int32 iftmp.170_22;
  stbtt_int32 iftmp.170_23;
  stbtt_int32 iftmp.171_26;
  stbtt_int32 iftmp.171_27;
  stbtt_int32 iftmp.172_30;
  stbtt_int32 iftmp.172_31;
  int iftmp.173_33;
  int iftmp.173_34;
  int _35;

  <bb 2>:
  c = {};
  c.bounds = 1;
  r_16 = stbtt__run_charstring (info_13(D), glyph_index_14(D), &c);
  if (x0_17(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 3>:
  if (r_16 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  iftmp.169_18 = c.min_x;
  goto <bb 6>;

  <bb 5>:
  iftmp.169_19 = 0;

  <bb 6>:
  # iftmp.169_1 = PHI <iftmp.169_18(4), iftmp.169_19(5)>
  *x0_17(D) = iftmp.169_1;

  <bb 7>:
  if (y0_21(D) != 0B)
    goto <bb 8>;
  else
    goto <bb 12>;

  <bb 8>:
  if (r_16 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  iftmp.170_22 = c.min_y;
  goto <bb 11>;

  <bb 10>:
  iftmp.170_23 = 0;

  <bb 11>:
  # iftmp.170_2 = PHI <iftmp.170_22(9), iftmp.170_23(10)>
  *y0_21(D) = iftmp.170_2;

  <bb 12>:
  if (x1_25(D) != 0B)
    goto <bb 13>;
  else
    goto <bb 17>;

  <bb 13>:
  if (r_16 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  iftmp.171_26 = c.max_x;
  goto <bb 16>;

  <bb 15>:
  iftmp.171_27 = 0;

  <bb 16>:
  # iftmp.171_3 = PHI <iftmp.171_26(14), iftmp.171_27(15)>
  *x1_25(D) = iftmp.171_3;

  <bb 17>:
  if (y1_29(D) != 0B)
    goto <bb 18>;
  else
    goto <bb 22>;

  <bb 18>:
  if (r_16 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  iftmp.172_30 = c.max_y;
  goto <bb 21>;

  <bb 20>:
  iftmp.172_31 = 0;

  <bb 21>:
  # iftmp.172_4 = PHI <iftmp.172_30(19), iftmp.172_31(20)>
  *y1_29(D) = iftmp.172_4;

  <bb 22>:
  if (r_16 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  iftmp.173_33 = c.num_vertices;
  goto <bb 25>;

  <bb 24>:
  iftmp.173_34 = 0;

  <bb 25>:
  # iftmp.173_5 = PHI <iftmp.173_33(23), iftmp.173_34(24)>
  _35 = iftmp.173_5;
  c ={v} {CLOBBER};

<L28>:
  return _35;

}



;; Function int stbtt_GetGlyphShape(const stbtt_fontinfo*, int, stbtt_vertex**) (stbtt_GetGlyphShape, funcdef_no=606, decl_uid=15343, cgraph_uid=505, symbol_order=505)

int stbtt_GetGlyphShape(const stbtt_fontinfo*, int, stbtt_vertex**) (const struct stbtt_fontinfo * info, int glyph_index, struct stbtt_vertex * * pvertices)
{
  int D.22335;
  int D.22334;
  int D.22332;
  int D.22329;
  int _1;
  int _5;
  int _9;
  int _10;
  int _12;
  int _13;

  <bb 2>:
  _5 = info_4(D)->cff.size;
  if (_5 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _9 = stbtt__GetGlyphShapeTT (info_4(D), glyph_index_6(D), pvertices_7(D));
  _10 = _9;
  goto <bb 5> (<L2>);

  <bb 4>:
  _12 = stbtt__GetGlyphShapeT2 (info_4(D), glyph_index_6(D), pvertices_7(D));
  _13 = _12;

  # _1 = PHI <_10(3), _13(4)>
<L2>:
  return _1;

}



;; Function void stbtt_GetGlyphHMetrics(const stbtt_fontinfo*, int, int*, int*) (stbtt_GetGlyphHMetrics, funcdef_no=607, decl_uid=15305, cgraph_uid=506, symbol_order=506)

void stbtt_GetGlyphHMetrics(const stbtt_fontinfo*, int, int*, int*) (const struct stbtt_fontinfo * info, int glyph_index, int * advanceWidth, int * leftSideBearing)
{
  stbtt_uint16 numOfLongHorMetrics;
  int D.22400;
  short int D.22399;
  unsigned char * D.22398;
  sizetype D.22397;
  sizetype D.22396;
  int D.22395;
  int D.22394;
  int D.22393;
  sizetype D.22392;
  sizetype D.22391;
  int D.22390;
  int D.22389;
  sizetype D.22388;
  int D.22387;
  unsigned char * D.22386;
  int D.22382;
  short int D.22381;
  unsigned char * D.22380;
  sizetype D.22379;
  sizetype D.22378;
  int D.22377;
  int D.22376;
  int D.22375;
  sizetype D.22374;
  int D.22373;
  unsigned char * D.22372;
  int D.22367;
  short int D.22366;
  unsigned char * D.22365;
  sizetype D.22364;
  sizetype D.22363;
  sizetype D.22362;
  int D.22361;
  sizetype D.22360;
  int D.22359;
  unsigned char * D.22358;
  int D.22354;
  short int D.22353;
  unsigned char * D.22352;
  sizetype D.22351;
  sizetype D.22350;
  int D.22349;
  sizetype D.22348;
  int D.22347;
  unsigned char * D.22346;
  int D.22341;
  unsigned char * D.22340;
  sizetype D.22339;
  sizetype D.22338;
  int D.22337;
  unsigned char * D.22336;
  unsigned char * _6;
  int _7;
  sizetype _8;
  sizetype _9;
  unsigned char * _10;
  int _13;
  unsigned char * _16;
  int _17;
  sizetype _18;
  int _19;
  sizetype _20;
  sizetype _21;
  unsigned char * _22;
  short int _24;
  int _25;
  unsigned char * _28;
  int _29;
  sizetype _30;
  int _31;
  sizetype _32;
  sizetype _33;
  sizetype _34;
  unsigned char * _35;
  short int _37;
  int _38;
  unsigned char * _40;
  int _41;
  sizetype _42;
  int _43;
  int _44;
  int _45;
  sizetype _46;
  sizetype _47;
  unsigned char * _48;
  short int _50;
  int _51;
  unsigned char * _53;
  int _54;
  sizetype _55;
  int _56;
  int _57;
  sizetype _58;
  sizetype _59;
  int _60;
  int _61;
  int _62;
  sizetype _63;
  sizetype _64;
  unsigned char * _65;
  short int _67;
  int _68;

  <bb 2>:
  _6 = info_5(D)->data;
  _7 = info_5(D)->hhea;
  _8 = (sizetype) _7;
  _9 = _8 + 34;
  _10 = _6 + _9;
  numOfLongHorMetrics_12 = ttUSHORT (_10);
  _13 = (int) numOfLongHorMetrics_12;
  if (_13 > glyph_index_14(D))
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 3>:
  if (advanceWidth_15(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _16 = info_5(D)->data;
  _17 = info_5(D)->hmtx;
  _18 = (sizetype) _17;
  _19 = glyph_index_14(D) * 4;
  _20 = (sizetype) _19;
  _21 = _18 + _20;
  _22 = _16 + _21;
  _24 = ttSHORT (_22);
  _25 = (int) _24;
  *advanceWidth_15(D) = _25;

  <bb 5>:
  if (leftSideBearing_27(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 11>;

  <bb 6>:
  _28 = info_5(D)->data;
  _29 = info_5(D)->hmtx;
  _30 = (sizetype) _29;
  _31 = glyph_index_14(D) * 4;
  _32 = (sizetype) _31;
  _33 = _30 + _32;
  _34 = _33 + 2;
  _35 = _28 + _34;
  _37 = ttSHORT (_35);
  _38 = (int) _37;
  *leftSideBearing_27(D) = _38;
  goto <bb 11>;

  <bb 7>:
  if (advanceWidth_15(D) != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _40 = info_5(D)->data;
  _41 = info_5(D)->hmtx;
  _42 = (sizetype) _41;
  _43 = (int) numOfLongHorMetrics_12;
  _44 = _43 + -1;
  _45 = _44 * 4;
  _46 = (sizetype) _45;
  _47 = _42 + _46;
  _48 = _40 + _47;
  _50 = ttSHORT (_48);
  _51 = (int) _50;
  *advanceWidth_15(D) = _51;

  <bb 9>:
  if (leftSideBearing_27(D) != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _53 = info_5(D)->data;
  _54 = info_5(D)->hmtx;
  _55 = (sizetype) _54;
  _56 = (int) numOfLongHorMetrics_12;
  _57 = _56 * 4;
  _58 = (sizetype) _57;
  _59 = _55 + _58;
  _60 = (int) numOfLongHorMetrics_12;
  _61 = glyph_index_14(D) - _60;
  _62 = _61 * 2;
  _63 = (sizetype) _62;
  _64 = _59 + _63;
  _65 = _53 + _64;
  _67 = ttSHORT (_65);
  _68 = (int) _67;
  *leftSideBearing_27(D) = _68;

  <bb 11>:
  return;

}



;; Function int stbtt__GetGlyphKernInfoAdvance(const stbtt_fontinfo*, int, int) (_ZL30stbtt__GetGlyphKernInfoAdvancePK14stbtt_fontinfoii, funcdef_no=608, decl_uid=16237, cgraph_uid=507, symbol_order=507)

int stbtt__GetGlyphKernInfoAdvance(const stbtt_fontinfo*, int, int) (const struct stbtt_fontinfo * info, int glyph1, int glyph2)
{
  int m;
  int r;
  int l;
  stbtt_uint32 straw;
  stbtt_uint32 needle;
  stbtt_uint8 * data;
  short int D.22442;
  stbtt_uint8 * D.22441;
  sizetype D.22440;
  sizetype D.22439;
  int D.22438;
  stbtt_uint8 * D.22431;
  sizetype D.22430;
  sizetype D.22429;
  int D.22428;
  int D.22427;
  int D.22424;
  int D.22423;
  int D.22422;
  short unsigned int D.22421;
  stbtt_uint8 * D.22420;
  short unsigned int D.22417;
  stbtt_uint8 * D.22416;
  bool retval.175;
  int D.22412;
  short unsigned int D.22411;
  stbtt_uint8 * D.22410;
  bool retval.174;
  int D.22408;
  int D.22405;
  sizetype D.22404;
  int D.22403;
  unsigned char * D.22402;
  int _5;
  unsigned char * _10;
  int _11;
  sizetype _12;
  int _14;
  int _15;
  stbtt_uint8 * _16;
  short unsigned int _18;
  int _19;
  bool retval.174_20;
  int _21;
  stbtt_uint8 * _22;
  short unsigned int _24;
  bool retval.175_25;
  int _26;
  stbtt_uint8 * _28;
  short unsigned int _30;
  int _31;
  int _34;
  int _36;
  int _38;
  int _40;
  sizetype _41;
  sizetype _42;
  stbtt_uint8 * _43;
  int _48;
  sizetype _49;
  sizetype _50;
  stbtt_uint8 * _51;
  short int _53;
  int _54;
  int _55;

  <bb 2>:
  _10 = info_9(D)->data;
  _11 = info_9(D)->kern;
  _12 = (sizetype) _11;
  data_13 = _10 + _12;
  _14 = info_9(D)->kern;
  if (_14 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _15 = 0;
  goto <bb 17> (<L15>);

  <bb 4>:
  _16 = data_13 + 2;
  _18 = ttUSHORT (_16);
  _19 = (int) _18;
  retval.174_20 = _19 <= 0;
  if (retval.174_20 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _21 = 0;
  goto <bb 17> (<L15>);

  <bb 6>:
  _22 = data_13 + 8;
  _24 = ttUSHORT (_22);
  retval.175_25 = _24 != 1;
  if (retval.175_25 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _26 = 0;
  goto <bb 17> (<L15>);

  <bb 8>:
  l_27 = 0;
  _28 = data_13 + 10;
  _30 = ttUSHORT (_28);
  _31 = (int) _30;
  r_32 = _31 + -1;
  _34 = glyph1_33(D) << 16;
  _36 = _34 | glyph2_35(D);
  needle_37 = (stbtt_uint32) _36;

  <bb 9>:
  # l_1 = PHI <l_27(8), l_2(15)>
  # r_3 = PHI <r_32(8), r_4(15)>
  if (l_1 > r_3)
    goto <bb 16>;
  else
    goto <bb 10>;

  <bb 10>:
  _38 = l_1 + r_3;
  m_39 = _38 >> 1;
  _40 = m_39 * 6;
  _41 = (sizetype) _40;
  _42 = _41 + 18;
  _43 = data_13 + _42;
  straw_45 = ttULONG (_43);
  if (needle_37 < straw_45)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  r_46 = m_39 + -1;
  goto <bb 15>;

  <bb 12>:
  if (needle_37 > straw_45)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  l_47 = m_39 + 1;
  goto <bb 15>;

  <bb 14>:
  _48 = m_39 * 6;
  _49 = (sizetype) _48;
  _50 = _49 + 22;
  _51 = data_13 + _50;
  _53 = ttSHORT (_51);
  _54 = (int) _53;
  goto <bb 17> (<L15>);

  <bb 15>:
  # l_2 = PHI <l_1(11), l_47(13)>
  # r_4 = PHI <r_46(11), r_3(13)>
  goto <bb 9>;

  <bb 16>:
  _55 = 0;

  # _5 = PHI <_15(3), _21(5), _26(7), _54(14), _55(16)>
<L15>:
  return _5;

}



;; Function stbtt_int32 stbtt__GetCoverageIndex(stbtt_uint8*, int) (_ZL23stbtt__GetCoverageIndexPhi, funcdef_no=609, decl_uid=16249, cgraph_uid=508, symbol_order=508)

stbtt_int32 stbtt__GetCoverageIndex(stbtt_uint8*, int) (stbtt_uint8 * coverageTable, int glyph)
{
  stbtt_uint16 startCoverageIndex;
  stbtt_uint8 * rangeRecord;
  int needle;
  int strawEnd;
  int strawStart;
  stbtt_int32 m;
  stbtt_int32 r;
  stbtt_int32 l;
  stbtt_uint8 * rangeArray;
  stbtt_uint16 rangeCount;
  stbtt_uint16 glyphID;
  stbtt_uint8 * glyphArray;
  int needle;
  int straw;
  stbtt_int32 m;
  stbtt_int32 r;
  stbtt_int32 l;
  stbtt_uint16 glyphCount;
  static const char __PRETTY_FUNCTION__[55] = "stbtt_int32 stbtt__GetCoverageIndex(stbtt_uint8*, int)";
  stbtt_uint16 coverageFormat;
  int D.22478;
  int D.22477;
  stbtt_uint8 * D.22476;
  short unsigned int D.22469;
  stbtt_uint8 * D.22468;
  short unsigned int D.22467;
  sizetype D.22466;
  int D.22465;
  int D.22464;
  int D.22461;
  stbtt_uint8 * D.22460;
  stbtt_int32 D.22459;
  stbtt_uint8 * D.22452;
  sizetype D.22451;
  int D.22450;
  int D.22449;
  int D.22446;
  stbtt_uint8 * D.22445;
  int D.22444;
  stbtt_int32 _9;
  int _18;
  stbtt_uint8 * _19;
  int _23;
  int _28;
  int _30;
  sizetype _31;
  stbtt_uint8 * _32;
  stbtt_int32 _38;
  stbtt_uint8 * _39;
  int _44;
  int _47;
  int _49;
  sizetype _50;
  short unsigned int _53;
  stbtt_uint8 * _55;
  short unsigned int _57;
  stbtt_uint8 * _61;
  int _64;
  int _65;
  stbtt_int32 _66;
  stbtt_int32 _67;

  <bb 2>:
  coverageFormat_17 = ttUSHORT (coverageTable_15(D));
  _18 = (int) coverageFormat_17;
  switch (_18) <default: <L20>, case 1: <L0>, case 2: <L10>>

<L0>:
  _19 = coverageTable_15(D) + 2;
  glyphCount_21 = ttUSHORT (_19);
  l_22 = 0;
  _23 = (int) glyphCount_21;
  r_24 = _23 + -1;
  needle_26 = glyph_25(D);

  <bb 4>:
  # l_1 = PHI <l_22(3), l_2(10)>
  # r_3 = PHI <r_24(3), r_4(10)>
  if (l_1 > r_3)
    goto <bb 11>;
  else
    goto <bb 5>;

  <bb 5>:
  glyphArray_27 = coverageTable_15(D) + 4;
  _28 = l_1 + r_3;
  m_29 = _28 >> 1;
  _30 = m_29 * 2;
  _31 = (sizetype) _30;
  _32 = glyphArray_27 + _31;
  glyphID_34 = ttUSHORT (_32);
  straw_35 = (int) glyphID_34;
  if (needle_26 < straw_35)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  r_36 = m_29 + -1;
  goto <bb 10>;

  <bb 7>:
  if (needle_26 > straw_35)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  l_37 = m_29 + 1;
  goto <bb 10>;

  <bb 9>:
  _38 = m_29;
  goto <bb 23> (<L25>);

  <bb 10>:
  # l_2 = PHI <l_1(6), l_37(8)>
  # r_4 = PHI <r_36(6), r_3(8)>
  goto <bb 4>;

  <bb 11>:
  goto <bb 22>;

<L10>:
  _39 = coverageTable_15(D) + 2;
  rangeCount_41 = ttUSHORT (_39);
  rangeArray_42 = coverageTable_15(D) + 4;
  l_43 = 0;
  _44 = (int) rangeCount_41;
  r_45 = _44 + -1;
  needle_46 = glyph_25(D);

  <bb 13>:
  # l_5 = PHI <l_43(12), l_6(19)>
  # r_7 = PHI <r_45(12), r_8(19)>
  if (l_5 > r_7)
    goto <bb 20>;
  else
    goto <bb 14>;

  <bb 14>:
  _47 = l_5 + r_7;
  m_48 = _47 >> 1;
  _49 = m_48 * 6;
  _50 = (sizetype) _49;
  rangeRecord_51 = rangeArray_42 + _50;
  _53 = ttUSHORT (rangeRecord_51);
  strawStart_54 = (int) _53;
  _55 = rangeRecord_51 + 2;
  _57 = ttUSHORT (_55);
  strawEnd_58 = (int) _57;
  if (needle_46 < strawStart_54)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  r_59 = m_48 + -1;
  goto <bb 19>;

  <bb 16>:
  if (needle_46 > strawEnd_58)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  l_60 = m_48 + 1;
  goto <bb 19>;

  <bb 18>:
  _61 = rangeRecord_51 + 4;
  startCoverageIndex_63 = ttUSHORT (_61);
  _64 = (int) startCoverageIndex_63;
  _65 = _64 + glyph_25(D);
  _66 = _65 - strawStart_54;
  goto <bb 23> (<L25>);

  <bb 19>:
  # l_6 = PHI <l_5(15), l_60(17)>
  # r_8 = PHI <r_59(15), r_7(17)>
  goto <bb 13>;

  <bb 20>:
  goto <bb 22>;

<L20>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2351, &__PRETTY_FUNCTION__);

  <bb 22>:
  _67 = -1;

  # _9 = PHI <_38(9), _66(18), _67(22)>
<L25>:
  return _9;

}



;; Function stbtt_int32 stbtt__GetGlyphClass(stbtt_uint8*, int) (_ZL20stbtt__GetGlyphClassPhi, funcdef_no=610, decl_uid=16281, cgraph_uid=509, symbol_order=509)

stbtt_int32 stbtt__GetGlyphClass(stbtt_uint8*, int) (stbtt_uint8 * classDefTable, int glyph)
{
  stbtt_uint8 * classRangeRecord;
  int needle;
  int strawEnd;
  int strawStart;
  stbtt_int32 m;
  stbtt_int32 r;
  stbtt_int32 l;
  stbtt_uint8 * classRangeRecords;
  stbtt_uint16 classRangeCount;
  stbtt_uint8 * classDef1ValueArray;
  stbtt_uint16 glyphCount;
  stbtt_uint16 startGlyphID;
  static const char __PRETTY_FUNCTION__[52] = "stbtt_int32 stbtt__GetGlyphClass(stbtt_uint8*, int)";
  stbtt_uint16 classDefFormat;
  sizetype D.22524;
  int D.22523;
  int D.22522;
  short unsigned int D.22521;
  stbtt_uint8 * D.22520;
  short unsigned int D.22513;
  stbtt_uint8 * D.22512;
  short unsigned int D.22511;
  sizetype D.22510;
  int D.22509;
  int D.22508;
  int D.22505;
  stbtt_uint8 * D.22504;
  sizetype D.22503;
  int D.22502;
  int D.22501;
  short unsigned int D.22500;
  stbtt_uint8 * D.22499;
  sizetype D.22498;
  int D.22497;
  int D.22496;
  int D.22495;
  stbtt_int32 D.22494;
  int D.22491;
  int D.22490;
  int D.22489;
  int D.22486;
  stbtt_uint8 * D.22485;
  stbtt_uint8 * D.22484;
  int D.22483;
  stbtt_int32 _5;
  int _13;
  stbtt_uint8 * _14;
  stbtt_uint8 * _17;
  int _21;
  int _23;
  int _24;
  int _25;
  int _26;
  int _27;
  int _28;
  sizetype _29;
  stbtt_uint8 * _30;
  short unsigned int _32;
  stbtt_int32 _33;
  int _34;
  int _35;
  sizetype _36;
  stbtt_uint8 * _38;
  int _43;
  int _46;
  int _48;
  sizetype _49;
  short unsigned int _52;
  stbtt_uint8 * _54;
  short unsigned int _56;
  stbtt_uint8 * _60;
  short unsigned int _62;
  stbtt_int32 _63;
  int _64;
  int _65;
  sizetype _66;
  stbtt_int32 _68;

  <bb 2>:
  classDefFormat_12 = ttUSHORT (classDefTable_10(D));
  _13 = (int) classDefFormat_12;
  switch (_13) <default: <L15>, case 1: <L0>, case 2: <L5>>

<L0>:
  _14 = classDefTable_10(D) + 2;
  startGlyphID_16 = ttUSHORT (_14);
  _17 = classDefTable_10(D) + 4;
  glyphCount_19 = ttUSHORT (_17);
  classDef1ValueArray_20 = classDefTable_10(D) + 6;
  _21 = (int) startGlyphID_16;
  if (_21 <= glyph_22(D))
    goto <bb 4>;
  else
    goto <bb 6>;

  <bb 4>:
  _23 = (int) startGlyphID_16;
  _24 = (int) glyphCount_19;
  _25 = _23 + _24;
  if (_25 > glyph_22(D))
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _26 = (int) startGlyphID_16;
  _27 = glyph_22(D) - _26;
  _28 = _27 * 2;
  _29 = (sizetype) _28;
  _30 = classDef1ValueArray_20 + _29;
  _32 = ttUSHORT (_30);
  _33 = (stbtt_int32) _32;
  goto <bb 18> (<L20>);

  <bb 6>:
  _34 = (int) glyphCount_19;
  _35 = _34 * 2;
  _36 = (sizetype) _35;
  classDefTable_37 = classDef1ValueArray_20 + _36;
  goto <bb 17>;

<L5>:
  _38 = classDefTable_10(D) + 2;
  classRangeCount_40 = ttUSHORT (_38);
  classRangeRecords_41 = classDefTable_10(D) + 4;
  l_42 = 0;
  _43 = (int) classRangeCount_40;
  r_44 = _43 + -1;
  needle_45 = glyph_22(D);

  <bb 8>:
  # l_1 = PHI <l_42(7), l_2(14)>
  # r_3 = PHI <r_44(7), r_4(14)>
  if (l_1 > r_3)
    goto <bb 15>;
  else
    goto <bb 9>;

  <bb 9>:
  _46 = l_1 + r_3;
  m_47 = _46 >> 1;
  _48 = m_47 * 6;
  _49 = (sizetype) _48;
  classRangeRecord_50 = classRangeRecords_41 + _49;
  _52 = ttUSHORT (classRangeRecord_50);
  strawStart_53 = (int) _52;
  _54 = classRangeRecord_50 + 2;
  _56 = ttUSHORT (_54);
  strawEnd_57 = (int) _56;
  if (needle_45 < strawStart_53)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  r_58 = m_47 + -1;
  goto <bb 14>;

  <bb 11>:
  if (needle_45 > strawEnd_57)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  l_59 = m_47 + 1;
  goto <bb 14>;

  <bb 13>:
  _60 = classRangeRecord_50 + 4;
  _62 = ttUSHORT (_60);
  _63 = (stbtt_int32) _62;
  goto <bb 18> (<L20>);

  <bb 14>:
  # l_2 = PHI <l_1(10), l_59(12)>
  # r_4 = PHI <r_58(10), r_3(12)>
  goto <bb 8>;

  <bb 15>:
  _64 = (int) classRangeCount_40;
  _65 = _64 * 6;
  _66 = (sizetype) _65;
  classDefTable_67 = classRangeRecords_41 + _66;
  goto <bb 17>;

<L15>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2400, &__PRETTY_FUNCTION__);

  <bb 17>:
  _68 = -1;

  # _5 = PHI <_33(5), _63(13), _68(17)>
<L20>:
  return _5;

}



;; Function stbtt_int32 stbtt__GetGlyphGPOSInfoAdvance(const stbtt_fontinfo*, int, int) (_ZL30stbtt__GetGlyphGPOSInfoAdvancePK14stbtt_fontinfoii, funcdef_no=611, decl_uid=16306, cgraph_uid=510, symbol_order=510)

stbtt_int32 stbtt__GetGlyphGPOSInfoAdvance(const stbtt_fontinfo*, int, int) (const struct stbtt_fontinfo * info, int glyph1, int glyph2)
{
  stbtt_int16 xAdvance;
  stbtt_uint8 * class2Records;
  stbtt_uint8 * class1Records;
  stbtt_uint16 class2Count;
  stbtt_uint16 class1Count;
  int glyph2class;
  int glyph1class;
  stbtt_uint16 classDef2Offset;
  stbtt_uint16 classDef1Offset;
  stbtt_uint16 valueFormat2;
  stbtt_uint16 valueFormat1;
  stbtt_int16 xAdvance;
  stbtt_uint8 * pairValue;
  stbtt_uint16 secondGlyph;
  stbtt_uint8 * pairValueArray;
  stbtt_uint16 pairValueCount;
  stbtt_uint8 * pairValueTable;
  stbtt_uint16 pairPosOffset;
  stbtt_uint16 pairSetCount;
  stbtt_int32 valueRecordPairSizeInBytes;
  stbtt_uint16 valueFormat2;
  stbtt_uint16 valueFormat1;
  int needle;
  int straw;
  stbtt_int32 m;
  stbtt_int32 r;
  stbtt_int32 l;
  stbtt_int32 coverageIndex;
  stbtt_uint16 coverageOffset;
  stbtt_uint16 posFormat;
  stbtt_uint8 * table;
  stbtt_uint16 subtableOffset;
  stbtt_int32 sti;
  stbtt_uint8 * subTableOffsets;
  stbtt_uint16 subTableCount;
  stbtt_uint16 lookupType;
  stbtt_uint8 * lookupTable;
  stbtt_uint16 lookupOffset;
  static const char __PRETTY_FUNCTION__[76] = "stbtt_int32 stbtt__GetGlyphGPOSInfoAdvance(const stbtt_fontinfo*, int, int)";
  stbtt_int32 i;
  stbtt_uint8 * data;
  stbtt_uint16 lookupCount;
  stbtt_uint8 * lookupList;
  stbtt_uint16 lookupListOffset;
  stbtt_uint8 * D.22638;
  sizetype D.22637;
  int D.22636;
  sizetype D.22635;
  int D.22634;
  int D.22633;
  int D.22632;
  int D.22629;
  int D.22624;
  int D.22614;
  int D.22610;
  stbtt_uint8 * D.22609;
  stbtt_uint8 * D.22608;
  stbtt_uint8 * D.22607;
  sizetype D.22606;
  stbtt_uint8 * D.22605;
  sizetype D.22604;
  stbtt_uint8 * D.22603;
  stbtt_uint8 * D.22602;
  stbtt_uint8 * D.22601;
  stbtt_uint8 * D.22600;
  stbtt_uint8 * D.22599;
  sizetype D.22592;
  int D.22591;
  int D.22590;
  int D.22589;
  int D.22586;
  int D.22582;
  sizetype D.22577;
  stbtt_uint8 * D.22576;
  sizetype D.22575;
  sizetype D.22574;
  int D.22573;
  stbtt_uint8 * D.22572;
  stbtt_uint8 * D.22571;
  stbtt_uint8 * D.22570;
  int D.22569;
  stbtt_uint8 * D.22566;
  sizetype D.22565;
  stbtt_uint8 * D.22564;
  sizetype D.22563;
  stbtt_uint8 * D.22562;
  sizetype D.22561;
  int D.22560;
  int D.22558;
  int D.22556;
  stbtt_uint8 * D.22555;
  sizetype D.22554;
  stbtt_uint8 * D.22553;
  sizetype D.22552;
  sizetype D.22551;
  int D.22550;
  int D.22548;
  sizetype D.22546;
  stbtt_uint8 * D.22545;
  short unsigned int D.22542;
  stbtt_uint8 * D.22541;
  bool retval.177;
  short unsigned int D.22537;
  bool retval.176;
  sizetype D.22535;
  int D.22534;
  unsigned char * D.22533;
  stbtt_int32 D.22532;
  int D.22529;
  stbtt_int32 _7;
  int _16;
  stbtt_int32 _17;
  unsigned char * _18;
  int _19;
  sizetype _20;
  short unsigned int _23;
  bool retval.176_24;
  stbtt_int32 _25;
  stbtt_uint8 * _26;
  short unsigned int _28;
  bool retval.177_29;
  stbtt_int32 _30;
  stbtt_uint8 * _31;
  sizetype _34;
  int _39;
  int _40;
  sizetype _41;
  sizetype _42;
  stbtt_uint8 * _43;
  sizetype _46;
  stbtt_uint8 * _50;
  int _54;
  int _57;
  int _58;
  sizetype _59;
  stbtt_uint8 * _60;
  sizetype _63;
  stbtt_uint8 * _67;
  sizetype _70;
  stbtt_uint8 * _71;
  int _76;
  stbtt_uint8 * _77;
  stbtt_uint8 * _80;
  stbtt_uint8 * _83;
  stbtt_uint8 * _86;
  sizetype _89;
  stbtt_uint8 * _90;
  sizetype _93;
  stbtt_uint8 * _94;
  stbtt_uint8 * _98;
  stbtt_uint8 * _101;
  int _104;
  int _105;
  int _106;
  int _107;
  int _109;
  int _110;
  int _111;
  sizetype _112;
  int _114;
  sizetype _115;
  stbtt_uint8 * _116;
  stbtt_int32 _119;
  stbtt_int32 _120;
  stbtt_int32 _121;
  stbtt_uint8 * _124;
  stbtt_uint8 * _127;
  stbtt_uint8 * _131;
  int _134;
  sizetype _135;
  sizetype _136;
  stbtt_uint8 * _137;
  sizetype _140;
  int _145;
  int _147;
  int _150;
  int _152;
  int _153;
  sizetype _154;
  stbtt_uint8 * _161;
  stbtt_int32 _164;
  stbtt_int32 _166;
  stbtt_int32 _167;
  stbtt_int32 _169;

  <bb 2>:
  _16 = info_15(D)->gpos;
  if (_16 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _17 = 0;
  goto <bb 51> (<L59>);

  <bb 4>:
  _18 = info_15(D)->data;
  _19 = info_15(D)->gpos;
  _20 = (sizetype) _19;
  data_21 = _18 + _20;
  _23 = ttUSHORT (data_21);
  retval.176_24 = _23 != 1;
  if (retval.176_24 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _25 = 0;
  goto <bb 51> (<L59>);

  <bb 6>:
  _26 = data_21 + 2;
  _28 = ttUSHORT (_26);
  retval.177_29 = _28 != 0;
  if (retval.177_29 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _30 = 0;
  goto <bb 51> (<L59>);

  <bb 8>:
  _31 = data_21 + 8;
  lookupListOffset_33 = ttUSHORT (_31);
  _34 = (sizetype) lookupListOffset_33;
  lookupList_35 = data_21 + _34;
  lookupCount_37 = ttUSHORT (lookupList_35);
  i_38 = 0;

  <bb 9>:
  # i_1 = PHI <i_38(8), i_55(49)>
  _39 = (int) lookupCount_37;
  if (_39 <= i_1)
    goto <bb 50>;
  else
    goto <bb 10>;

  <bb 10>:
  _40 = i_1 * 2;
  _41 = (sizetype) _40;
  _42 = _41 + 2;
  _43 = lookupList_35 + _42;
  lookupOffset_45 = ttUSHORT (_43);
  _46 = (sizetype) lookupOffset_45;
  lookupTable_47 = lookupList_35 + _46;
  lookupType_49 = ttUSHORT (lookupTable_47);
  _50 = lookupTable_47 + 4;
  subTableCount_52 = ttUSHORT (_50);
  subTableOffsets_53 = lookupTable_47 + 6;
  _54 = (int) lookupType_49;
  switch (_54) <default: <L56>, case 2: <L8>>

<L8>:
  sti_56 = 0;

  <bb 12>:
  # sti_2 = PHI <sti_56(11), sti_75(46)>
  _57 = (int) subTableCount_52;
  if (_57 <= sti_2)
    goto <bb 47>;
  else
    goto <bb 13>;

  <bb 13>:
  _58 = sti_2 * 2;
  _59 = (sizetype) _58;
  _60 = subTableOffsets_53 + _59;
  subtableOffset_62 = ttUSHORT (_60);
  _63 = (sizetype) subtableOffset_62;
  table_64 = lookupTable_47 + _63;
  posFormat_66 = ttUSHORT (table_64);
  _67 = table_64 + 2;
  coverageOffset_69 = ttUSHORT (_67);
  _70 = (sizetype) coverageOffset_69;
  _71 = table_64 + _70;
  coverageIndex_74 = stbtt__GetCoverageIndex (_71, glyph1_72(D));
  if (coverageIndex_74 == -1)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  goto <bb 46>;

  <bb 15>:
  _76 = (int) posFormat_66;
  switch (_76) <default: <L49>, case 1: <L13>, case 2: <L30>>

<L13>:
  _124 = table_64 + 4;
  valueFormat1_126 = ttUSHORT (_124);
  _127 = table_64 + 6;
  valueFormat2_129 = ttUSHORT (_127);
  valueRecordPairSizeInBytes_130 = 2;
  _131 = table_64 + 8;
  pairSetCount_133 = ttUSHORT (_131);
  _134 = coverageIndex_74 * 2;
  _135 = (sizetype) _134;
  _136 = _135 + 10;
  _137 = table_64 + _136;
  pairPosOffset_139 = ttUSHORT (_137);
  _140 = (sizetype) pairPosOffset_139;
  pairValueTable_141 = table_64 + _140;
  pairValueCount_143 = ttUSHORT (pairValueTable_141);
  pairValueArray_144 = pairValueTable_141 + 2;
  if (valueFormat1_126 != 4)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _167 = 0;
  goto <bb 51> (<L59>);

  <bb 18>:
  if (valueFormat2_129 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _166 = 0;
  goto <bb 51> (<L59>);

  <bb 20>:
  _145 = (int) pairSetCount_133;
  if (_145 > coverageIndex_74)
    goto <bb 22>;
  else
    goto <bb 21>;

  <bb 21>:
  __assert_fail ("coverageIndex < pairSetCount", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2465, &__PRETTY_FUNCTION__);

  <bb 22>:
  needle_146 = glyph2_95(D);
  _147 = (int) pairValueCount_143;
  r_148 = _147 + -1;
  l_149 = 0;

  <bb 23>:
  # l_3 = PHI <l_149(22), l_4(29)>
  # r_5 = PHI <r_148(22), r_6(29)>
  if (l_3 > r_5)
    goto <bb 30>;
  else
    goto <bb 24>;

  <bb 24>:
  _150 = l_3 + r_5;
  m_151 = _150 >> 1;
  _152 = valueRecordPairSizeInBytes_130 + 2;
  _153 = _152 * m_151;
  _154 = (sizetype) _153;
  pairValue_155 = pairValueArray_144 + _154;
  secondGlyph_157 = ttUSHORT (pairValue_155);
  straw_158 = (int) secondGlyph_157;
  if (needle_146 < straw_158)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  r_159 = m_151 + -1;
  goto <bb 29>;

  <bb 26>:
  if (needle_146 > straw_158)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  l_160 = m_151 + 1;
  goto <bb 29>;

  <bb 28>:
  _161 = pairValue_155 + 2;
  xAdvance_163 = ttSHORT (_161);
  _164 = (stbtt_int32) xAdvance_163;
  goto <bb 51> (<L59>);

  <bb 29>:
  # l_4 = PHI <l_3(25), l_160(27)>
  # r_6 = PHI <r_159(25), r_5(27)>
  goto <bb 23>;

  <bb 30>:
  goto <bb 46>;

<L30>:
  _77 = table_64 + 4;
  valueFormat1_79 = ttUSHORT (_77);
  _80 = table_64 + 6;
  valueFormat2_82 = ttUSHORT (_80);
  _83 = table_64 + 8;
  classDef1Offset_85 = ttUSHORT (_83);
  _86 = table_64 + 10;
  classDef2Offset_88 = ttUSHORT (_86);
  _89 = (sizetype) classDef1Offset_85;
  _90 = table_64 + _89;
  glyph1class_92 = stbtt__GetGlyphClass (_90, glyph1_72(D));
  _93 = (sizetype) classDef2Offset_88;
  _94 = table_64 + _93;
  glyph2class_97 = stbtt__GetGlyphClass (_94, glyph2_95(D));
  _98 = table_64 + 12;
  class1Count_100 = ttUSHORT (_98);
  _101 = table_64 + 14;
  class2Count_103 = ttUSHORT (_101);
  _104 = (int) class1Count_100;
  if (_104 > glyph1class_92)
    goto <bb 33>;
  else
    goto <bb 32>;

  <bb 32>:
  __assert_fail ("glyph1class < class1Count", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2502, &__PRETTY_FUNCTION__);

  <bb 33>:
  _105 = (int) class2Count_103;
  if (_105 > glyph2class_97)
    goto <bb 35>;
  else
    goto <bb 34>;

  <bb 34>:
  __assert_fail ("glyph2class < class2Count", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2503, &__PRETTY_FUNCTION__);

  <bb 35>:
  if (valueFormat1_79 != 4)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  _121 = 0;
  goto <bb 51> (<L59>);

  <bb 37>:
  if (valueFormat2_82 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  _120 = 0;
  goto <bb 51> (<L59>);

  <bb 39>:
  if (glyph1class_92 >= 0)
    goto <bb 40>;
  else
    goto <bb 44>;

  <bb 40>:
  _106 = (int) class1Count_100;
  if (_106 > glyph1class_92)
    goto <bb 41>;
  else
    goto <bb 44>;

  <bb 41>:
  if (glyph2class_97 >= 0)
    goto <bb 42>;
  else
    goto <bb 44>;

  <bb 42>:
  _107 = (int) class2Count_103;
  if (_107 > glyph2class_97)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  class1Records_108 = table_64 + 16;
  _109 = (int) class2Count_103;
  _110 = _109 * glyph1class_92;
  _111 = _110 * 2;
  _112 = (sizetype) _111;
  class2Records_113 = class1Records_108 + _112;
  _114 = glyph2class_97 * 2;
  _115 = (sizetype) _114;
  _116 = class2Records_113 + _115;
  xAdvance_118 = ttSHORT (_116);
  _119 = (stbtt_int32) xAdvance_118;
  goto <bb 51> (<L59>);

  <bb 44>:
  goto <bb 46>;

<L49>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2521, &__PRETTY_FUNCTION__);

  <bb 46>:
  sti_75 = sti_2 + 1;
  goto <bb 12>;

  <bb 47>:
  goto <bb 49>;

<L56>:

  <bb 49>:
  i_55 = i_1 + 1;
  goto <bb 9>;

  <bb 50>:
  _169 = 0;

  # _7 = PHI <_17(3), _25(5), _30(7), _167(17), _166(19), _164(28), _121(36), _120(38), _119(43), _169(50)>
<L59>:
  return _7;

}



;; Function int stbtt_GetGlyphKernAdvance(const stbtt_fontinfo*, int, int) (stbtt_GetGlyphKernAdvance, funcdef_no=612, decl_uid=15309, cgraph_uid=511, symbol_order=511)

int stbtt_GetGlyphKernAdvance(const stbtt_fontinfo*, int, int) (const struct stbtt_fontinfo * info, int g1, int g2)
{
  int xAdvance;
  int D.22651;
  int D.16372;
  int D.22647;
  stbtt_int32 D.16371;
  int D.22643;
  int _8;
  stbtt_int32 _12;
  int _14;
  int _16;
  int _18;

  <bb 2>:
  xAdvance_5 = 0;
  _8 = info_7(D)->gpos;
  if (_8 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _12 = stbtt__GetGlyphGPOSInfoAdvance (info_7(D), g1_9(D), g2_10(D));
  xAdvance_13 = xAdvance_5 + _12;

  <bb 4>:
  # xAdvance_1 = PHI <xAdvance_5(2), xAdvance_13(3)>
  _14 = info_7(D)->kern;
  if (_14 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _16 = stbtt__GetGlyphKernInfoAdvance (info_7(D), g1_9(D), g2_10(D));
  xAdvance_17 = xAdvance_1 + _16;

  <bb 6>:
  # xAdvance_2 = PHI <xAdvance_1(4), xAdvance_17(5)>
  _18 = xAdvance_2;

<L6>:
  return _18;

}



;; Function int stbtt_GetCodepointKernAdvance(const stbtt_fontinfo*, int, int) (stbtt_GetCodepointKernAdvance, funcdef_no=613, decl_uid=15293, cgraph_uid=512, symbol_order=512)

int stbtt_GetCodepointKernAdvance(const stbtt_fontinfo*, int, int) (const struct stbtt_fontinfo * info, int ch1, int ch2)
{
  int D.22661;
  int D.22660;
  int D.22659;
  int D.22656;
  int D.22653;
  int _1;
  int _5;
  int _6;
  int _7;
  int _10;
  int _13;
  int _15;

  <bb 2>:
  _5 = info_4(D)->kern;
  if (_5 == 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  _6 = info_4(D)->gpos;
  if (_6 == 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _7 = 0;
  goto <bb 6> (<L4>);

  <bb 5>:
  _10 = stbtt_FindGlyphIndex (info_4(D), ch2_8(D));
  _13 = stbtt_FindGlyphIndex (info_4(D), ch1_11(D));
  _15 = stbtt_GetGlyphKernAdvance (info_4(D), _13, _10);

  # _1 = PHI <_7(4), _15(5)>
<L4>:
  return _1;

}



;; Function void stbtt_GetCodepointHMetrics(const stbtt_fontinfo*, int, int*, int*) (stbtt_GetCodepointHMetrics, funcdef_no=614, decl_uid=15289, cgraph_uid=513, symbol_order=513)

void stbtt_GetCodepointHMetrics(const stbtt_fontinfo*, int, int*, int*) (const struct stbtt_fontinfo * info, int codepoint, int * advanceWidth, int * leftSideBearing)
{
  int D.22663;
  int _5;

  <bb 2>:
  _5 = stbtt_FindGlyphIndex (info_2(D), codepoint_3(D));
  stbtt_GetGlyphHMetrics (info_2(D), _5, advanceWidth_6(D), leftSideBearing_7(D));
  return;

}



;; Function void stbtt_GetFontVMetrics(const stbtt_fontinfo*, int*, int*, int*) (stbtt_GetFontVMetrics, funcdef_no=615, decl_uid=15273, cgraph_uid=514, symbol_order=514)

void stbtt_GetFontVMetrics(const stbtt_fontinfo*, int*, int*, int*) (const struct stbtt_fontinfo * info, int * ascent, int * descent, int * lineGap)
{
  int D.22692;
  short int D.22691;
  unsigned char * D.22690;
  sizetype D.22689;
  sizetype D.22688;
  int D.22687;
  unsigned char * D.22686;
  int D.22682;
  short int D.22681;
  unsigned char * D.22680;
  sizetype D.22679;
  sizetype D.22678;
  int D.22677;
  unsigned char * D.22676;
  int D.22672;
  short int D.22671;
  unsigned char * D.22670;
  sizetype D.22669;
  sizetype D.22668;
  int D.22667;
  unsigned char * D.22666;
  unsigned char * _7;
  int _8;
  sizetype _9;
  sizetype _10;
  unsigned char * _11;
  short int _13;
  int _14;
  unsigned char * _17;
  int _18;
  sizetype _19;
  sizetype _20;
  unsigned char * _21;
  short int _23;
  int _24;
  unsigned char * _27;
  int _28;
  sizetype _29;
  sizetype _30;
  unsigned char * _31;
  short int _33;
  int _34;

  <bb 2>:
  if (ascent_4(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = info_6(D)->data;
  _8 = info_6(D)->hhea;
  _9 = (sizetype) _8;
  _10 = _9 + 4;
  _11 = _7 + _10;
  _13 = ttSHORT (_11);
  _14 = (int) _13;
  *ascent_4(D) = _14;

  <bb 4>:
  if (descent_16(D) != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _17 = info_6(D)->data;
  _18 = info_6(D)->hhea;
  _19 = (sizetype) _18;
  _20 = _19 + 6;
  _21 = _17 + _20;
  _23 = ttSHORT (_21);
  _24 = (int) _23;
  *descent_16(D) = _24;

  <bb 6>:
  if (lineGap_26(D) != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _27 = info_6(D)->data;
  _28 = info_6(D)->hhea;
  _29 = (sizetype) _28;
  _30 = _29 + 8;
  _31 = _27 + _30;
  _33 = ttSHORT (_31);
  _34 = (int) _33;
  *lineGap_26(D) = _34;

  <bb 8>:
  return;

}



;; Function int stbtt_GetFontVMetricsOS2(const stbtt_fontinfo*, int*, int*, int*) (stbtt_GetFontVMetricsOS2, funcdef_no=616, decl_uid=15278, cgraph_uid=515, symbol_order=515)

int stbtt_GetFontVMetricsOS2(const stbtt_fontinfo*, int*, int*, int*) (const struct stbtt_fontinfo * info, int * typoAscent, int * typoDescent, int * typoLineGap)
{
  int tab;
  int D.22726;
  short int D.22725;
  unsigned char * D.22724;
  sizetype D.22723;
  sizetype D.22722;
  unsigned char * D.22721;
  int D.22717;
  short int D.22716;
  unsigned char * D.22715;
  sizetype D.22714;
  sizetype D.22713;
  unsigned char * D.22712;
  int D.22708;
  short int D.22707;
  unsigned char * D.22706;
  sizetype D.22705;
  sizetype D.22704;
  unsigned char * D.22703;
  int D.22700;
  unsigned int D.22697;
  unsigned char * D.22696;
  unsigned int D.22695;
  int D.22694;
  int _1;
  int _8;
  unsigned int _9;
  unsigned char * _10;
  unsigned int _12;
  int _14;
  unsigned char * _16;
  sizetype _17;
  sizetype _18;
  unsigned char * _19;
  short int _21;
  int _22;
  unsigned char * _25;
  sizetype _26;
  sizetype _27;
  unsigned char * _28;
  short int _30;
  int _31;
  unsigned char * _34;
  sizetype _35;
  sizetype _36;
  unsigned char * _37;
  short int _39;
  int _40;
  int _42;

  <bb 2>:
  _8 = info_7(D)->fontstart;
  _9 = (unsigned int) _8;
  _10 = info_7(D)->data;
  _12 = stbtt__find_table (_10, _9, "OS/2");
  tab_13 = (int) _12;
  if (tab_13 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _14 = 0;
  goto <bb 11> (<L11>);

  <bb 4>:
  if (typoAscent_15(D) != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _16 = info_7(D)->data;
  _17 = (sizetype) tab_13;
  _18 = _17 + 68;
  _19 = _16 + _18;
  _21 = ttSHORT (_19);
  _22 = (int) _21;
  *typoAscent_15(D) = _22;

  <bb 6>:
  if (typoDescent_24(D) != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _25 = info_7(D)->data;
  _26 = (sizetype) tab_13;
  _27 = _26 + 70;
  _28 = _25 + _27;
  _30 = ttSHORT (_28);
  _31 = (int) _30;
  *typoDescent_24(D) = _31;

  <bb 8>:
  if (typoLineGap_33(D) != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _34 = info_7(D)->data;
  _35 = (sizetype) tab_13;
  _36 = _35 + 72;
  _37 = _34 + _36;
  _39 = ttSHORT (_37);
  _40 = (int) _39;
  *typoLineGap_33(D) = _40;

  <bb 10>:
  _42 = 1;

  # _1 = PHI <_14(3), _42(10)>
<L11>:
  return _1;

}



;; Function void stbtt_GetFontBoundingBox(const stbtt_fontinfo*, int*, int*, int*, int*) (stbtt_GetFontBoundingBox, funcdef_no=617, decl_uid=15284, cgraph_uid=516, symbol_order=516)

void stbtt_GetFontBoundingBox(const stbtt_fontinfo*, int*, int*, int*, int*) (const struct stbtt_fontinfo * info, int * x0, int * y0, int * x1, int * y1)
{
  int D.22756;
  short int D.22755;
  unsigned char * D.22754;
  sizetype D.22753;
  sizetype D.22752;
  int D.22751;
  unsigned char * D.22750;
  int D.22749;
  short int D.22748;
  unsigned char * D.22747;
  sizetype D.22746;
  sizetype D.22745;
  int D.22744;
  unsigned char * D.22743;
  int D.22742;
  short int D.22741;
  unsigned char * D.22740;
  sizetype D.22739;
  sizetype D.22738;
  int D.22737;
  unsigned char * D.22736;
  int D.22735;
  short int D.22734;
  unsigned char * D.22733;
  sizetype D.22732;
  sizetype D.22731;
  int D.22730;
  unsigned char * D.22729;
  unsigned char * _3;
  int _4;
  sizetype _5;
  sizetype _6;
  unsigned char * _7;
  short int _9;
  int _10;
  unsigned char * _13;
  int _14;
  sizetype _15;
  sizetype _16;
  unsigned char * _17;
  short int _19;
  int _20;
  unsigned char * _23;
  int _24;
  sizetype _25;
  sizetype _26;
  unsigned char * _27;
  short int _29;
  int _30;
  unsigned char * _33;
  int _34;
  sizetype _35;
  sizetype _36;
  unsigned char * _37;
  short int _39;
  int _40;

  <bb 2>:
  _3 = info_2(D)->data;
  _4 = info_2(D)->head;
  _5 = (sizetype) _4;
  _6 = _5 + 36;
  _7 = _3 + _6;
  _9 = ttSHORT (_7);
  _10 = (int) _9;
  *x0_11(D) = _10;
  _13 = info_2(D)->data;
  _14 = info_2(D)->head;
  _15 = (sizetype) _14;
  _16 = _15 + 38;
  _17 = _13 + _16;
  _19 = ttSHORT (_17);
  _20 = (int) _19;
  *y0_21(D) = _20;
  _23 = info_2(D)->data;
  _24 = info_2(D)->head;
  _25 = (sizetype) _24;
  _26 = _25 + 40;
  _27 = _23 + _26;
  _29 = ttSHORT (_27);
  _30 = (int) _29;
  *x1_31(D) = _30;
  _33 = info_2(D)->data;
  _34 = info_2(D)->head;
  _35 = (sizetype) _34;
  _36 = _35 + 42;
  _37 = _33 + _36;
  _39 = ttSHORT (_37);
  _40 = (int) _39;
  *y1_41(D) = _40;
  return;

}



;; Function float stbtt_ScaleForPixelHeight(const stbtt_fontinfo*, float) (stbtt_ScaleForPixelHeight, funcdef_no=618, decl_uid=15265, cgraph_uid=517, symbol_order=517)

float stbtt_ScaleForPixelHeight(const stbtt_fontinfo*, float) (const struct stbtt_fontinfo * info, float height)
{
  int fheight;
  float D.22772;
  float D.22771;
  int D.22770;
  short int D.22769;
  unsigned char * D.22768;
  sizetype D.22767;
  sizetype D.22766;
  int D.22765;
  unsigned char * D.22764;
  int D.22763;
  short int D.22762;
  unsigned char * D.22761;
  sizetype D.22760;
  sizetype D.22759;
  int D.22758;
  unsigned char * D.22757;
  unsigned char * _3;
  int _4;
  sizetype _5;
  sizetype _6;
  unsigned char * _7;
  short int _9;
  int _10;
  unsigned char * _11;
  int _12;
  sizetype _13;
  sizetype _14;
  unsigned char * _15;
  short int _17;
  int _18;
  float _20;
  float _22;

  <bb 2>:
  _3 = info_2(D)->data;
  _4 = info_2(D)->hhea;
  _5 = (sizetype) _4;
  _6 = _5 + 4;
  _7 = _3 + _6;
  _9 = ttSHORT (_7);
  _10 = (int) _9;
  _11 = info_2(D)->data;
  _12 = info_2(D)->hhea;
  _13 = (sizetype) _12;
  _14 = _13 + 6;
  _15 = _11 + _14;
  _17 = ttSHORT (_15);
  _18 = (int) _17;
  fheight_19 = _10 - _18;
  _20 = (float) fheight_19;
  _22 = height_21(D) / _20;

<L0>:
  return _22;

}



;; Function float stbtt_ScaleForMappingEmToPixels(const stbtt_fontinfo*, float) (stbtt_ScaleForMappingEmToPixels, funcdef_no=619, decl_uid=15268, cgraph_uid=518, symbol_order=518)

float stbtt_ScaleForMappingEmToPixels(const stbtt_fontinfo*, float) (const struct stbtt_fontinfo * info, float pixels)
{
  int unitsPerEm;
  float D.22781;
  float D.22780;
  short unsigned int D.22779;
  unsigned char * D.22778;
  sizetype D.22777;
  sizetype D.22776;
  int D.22775;
  unsigned char * D.22774;
  unsigned char * _3;
  int _4;
  sizetype _5;
  sizetype _6;
  unsigned char * _7;
  short unsigned int _9;
  float _11;
  float _13;

  <bb 2>:
  _3 = info_2(D)->data;
  _4 = info_2(D)->head;
  _5 = (sizetype) _4;
  _6 = _5 + 18;
  _7 = _3 + _6;
  _9 = ttUSHORT (_7);
  unitsPerEm_10 = (int) _9;
  _11 = (float) unitsPerEm_10;
  _13 = pixels_12(D) / _11;

<L0>:
  return _13;

}



;; Function void stbtt_FreeShape(const stbtt_fontinfo*, stbtt_vertex*) (stbtt_FreeShape, funcdef_no=620, decl_uid=15346, cgraph_uid=519, symbol_order=519)

void stbtt_FreeShape(const stbtt_fontinfo*, stbtt_vertex*) (const struct stbtt_fontinfo * info, struct stbtt_vertex * v)
{
  <bb 2>:
  ImGui::MemFree (v_2(D));
  return;

}



;; Function void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo*, int, float, float, float, float, int*, int*, int*, int*) (stbtt_GetGlyphBitmapBoxSubpixel, funcdef_no=621, decl_uid=15499, cgraph_uid=520, symbol_order=520)

void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo*, int, float, float, float, float, int*, int*, int*, int*) (const struct stbtt_fontinfo * font, int glyph, float scale_x, float scale_y, float shift_x, float shift_y, int * ix0, int * iy0, int * ix1, int * iy1)
{
  int D.22838;
  int y1;
  int x1;
  int y0;
  int x0;
  int D.22836;
  float D.22835;
  float D.22834;
  float D.22833;
  float D.22832;
  int D.22831;
  int y0.182;
  int D.22826;
  float D.22825;
  float D.22824;
  float D.22823;
  float D.22822;
  int x1.181;
  int D.22817;
  float D.22816;
  float D.22815;
  float D.22814;
  float D.22813;
  int D.22812;
  int y1.180;
  int D.22807;
  float D.22806;
  float D.22805;
  float D.22804;
  float D.22803;
  int x0.179;
  int D.22784;
  bool retval.178;
  int _14;
  int _15;
  bool retval.178_16;
  int x0.179_25;
  float _26;
  float _28;
  float _30;
  float _32;
  int _33;
  int y1.180_35;
  int _36;
  float _37;
  float _39;
  float _41;
  float _43;
  int _44;
  int x1.181_46;
  float _47;
  float _48;
  float _49;
  float _51;
  int _52;
  int y0.182_54;
  int _55;
  float _56;
  float _57;
  float _58;
  float _60;
  int _61;

  <bb 2>:
  x0 = 0;
  y0 = 0;
  _14 = stbtt_GetGlyphBox (font_11(D), glyph_12(D), &x0, &y0, &x1, &y1);
  _15 = _14;
  retval.178_16 = _15 == 0;
  if (retval.178_16 != 0)
    goto <bb 3>;
  else
    goto <bb 11>;

  <bb 3>:
  if (ix0_17(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  *ix0_17(D) = 0;

  <bb 5>:
  if (iy0_19(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  *iy0_19(D) = 0;

  <bb 7>:
  if (ix1_21(D) != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  *ix1_21(D) = 0;

  <bb 9>:
  if (iy1_23(D) != 0B)
    goto <bb 10>;
  else
    goto <bb 19>;

  <bb 10>:
  *iy1_23(D) = 0;
  goto <bb 19>;

  <bb 11>:
  if (ix0_17(D) != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  x0.179_25 = x0;
  _26 = (float) x0.179_25;
  _28 = _26 * scale_x_27(D);
  _30 = _28 + shift_x_29(D);
  _32 = std::floor (_30);
  _33 = (int) _32;
  *ix0_17(D) = _33;

  <bb 13>:
  if (iy0_19(D) != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  y1.180_35 = y1;
  _36 = -y1.180_35;
  _37 = (float) _36;
  _39 = _37 * scale_y_38(D);
  _41 = _39 + shift_y_40(D);
  _43 = std::floor (_41);
  _44 = (int) _43;
  *iy0_19(D) = _44;

  <bb 15>:
  if (ix1_21(D) != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  x1.181_46 = x1;
  _47 = (float) x1.181_46;
  _48 = _47 * scale_x_27(D);
  _49 = _48 + shift_x_29(D);
  _51 = std::ceil (_49);
  _52 = (int) _51;
  *ix1_21(D) = _52;

  <bb 17>:
  if (iy1_23(D) != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  y0.182_54 = y0;
  _55 = -y0.182_54;
  _56 = (float) _55;
  _57 = _56 * scale_y_38(D);
  _58 = _57 + shift_y_40(D);
  _60 = std::ceil (_58);
  _61 = (int) _60;
  *iy1_23(D) = _61;

  <bb 19>:
  x0 ={v} {CLOBBER};
  y0 ={v} {CLOBBER};
  x1 ={v} {CLOBBER};
  y1 ={v} {CLOBBER};
  return;

}



;; Function void stbtt_GetGlyphBitmapBox(const stbtt_fontinfo*, int, float, float, int*, int*, int*, int*) (stbtt_GetGlyphBitmapBox, funcdef_no=622, decl_uid=15488, cgraph_uid=521, symbol_order=521)

void stbtt_GetGlyphBitmapBox(const stbtt_fontinfo*, int, float, float, int*, int*, int*, int*) (const struct stbtt_fontinfo * font, int glyph, float scale_x, float scale_y, int * ix0, int * iy0, int * ix1, int * iy1)
{
  <bb 2>:
  stbtt_GetGlyphBitmapBoxSubpixel (font_2(D), glyph_3(D), scale_x_4(D), scale_y_5(D), 0.0, 0.0, ix0_6(D), iy0_7(D), ix1_8(D), iy1_9(D));
  return;

}



;; Function void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo*, int, float, float, float, float, int*, int*, int*, int*) (stbtt_GetCodepointBitmapBoxSubpixel, funcdef_no=623, decl_uid=15424, cgraph_uid=522, symbol_order=522)

void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo*, int, float, float, float, float, int*, int*, int*, int*) (const struct stbtt_fontinfo * font, int codepoint, float scale_x, float scale_y, float shift_x, float shift_y, int * ix0, int * iy0, int * ix1, int * iy1)
{
  int D.22844;
  int _5;

  <bb 2>:
  _5 = stbtt_FindGlyphIndex (font_2(D), codepoint_3(D));
  stbtt_GetGlyphBitmapBoxSubpixel (font_2(D), _5, scale_x_6(D), scale_y_7(D), shift_x_8(D), shift_y_9(D), ix0_10(D), iy0_11(D), ix1_12(D), iy1_13(D));
  return;

}



;; Function void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo*, int, float, float, int*, int*, int*, int*) (stbtt_GetCodepointBitmapBox, funcdef_no=624, decl_uid=15413, cgraph_uid=523, symbol_order=523)

void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo*, int, float, float, int*, int*, int*, int*) (const struct stbtt_fontinfo * font, int codepoint, float scale_x, float scale_y, int * ix0, int * iy0, int * ix1, int * iy1)
{
  <bb 2>:
  stbtt_GetCodepointBitmapBoxSubpixel (font_2(D), codepoint_3(D), scale_x_4(D), scale_y_5(D), 0.0, 0.0, ix0_6(D), iy0_7(D), ix1_8(D), iy1_9(D));
  return;

}



;; Function void* stbtt__hheap_alloc(stbtt__hheap*, size_t, void*) (_ZL18stbtt__hheap_allocP12stbtt__hheapmPv, funcdef_no=625, decl_uid=16479, cgraph_uid=524, symbol_order=524)

void* stbtt__hheap_alloc(stbtt__hheap*, size_t, void*) (struct stbtt__hheap * hh, size_t size, void * userdata)
{
  struct stbtt__hheap_chunk * D.22876;
  struct stbtt__hheap_chunk * c;
  int count;
  void * p;
  sizetype D.22874;
  long unsigned int D.22873;
  long unsigned int D.22872;
  int D.22871;
  struct stbtt__hheap_chunk * D.22870;
  int D.22869;
  int D.22868;
  struct stbtt__hheap_chunk * D.22866;
  long unsigned int D.22863;
  long unsigned int D.22862;
  long unsigned int D.22861;
  int iftmp.184;
  int iftmp.183;
  int D.22850;
  void * D.22849;
  void * D.22848;
  void * D.22845;
  void * _1;
  int iftmp.183_2;
  int iftmp.184_3;
  void * _8;
  void * _10;
  void * _12;
  int _13;
  int iftmp.184_15;
  int iftmp.184_16;
  int iftmp.183_17;
  int iftmp.183_18;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  struct stbtt__hheap_chunk * _24;
  void * _26;
  struct stbtt__hheap_chunk * _27;
  int _31;
  int _32;
  struct stbtt__hheap_chunk * _34;
  int _35;
  long unsigned int _36;
  long unsigned int _37;
  sizetype _38;
  void * _39;

  <bb 2>:
  _8 = hh_7(D)->first_free;
  if (_8 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  p_9 = hh_7(D)->first_free;
  _10 = MEM[(void * *)p_9];
  hh_7(D)->first_free = _10;
  _12 = p_9;
  goto <bb 15> (<L13>);

  <bb 4>:
  _13 = hh_7(D)->num_remaining_in_head_chunk;
  if (_13 == 0)
    goto <bb 5>;
  else
    goto <bb 14>;

  <bb 5>:
  if (size_14(D) > 31)
    goto <bb 6>;
  else
    goto <bb 10>;

  <bb 6>:
  if (size_14(D) <= 127)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  iftmp.184_15 = 800;
  goto <bb 9>;

  <bb 8>:
  iftmp.184_16 = 100;

  <bb 9>:
  # iftmp.184_3 = PHI <iftmp.184_15(7), iftmp.184_16(8)>
  iftmp.183_17 = iftmp.184_3;
  goto <bb 11>;

  <bb 10>:
  iftmp.183_18 = 2000;

  <bb 11>:
  # iftmp.183_2 = PHI <iftmp.183_17(9), iftmp.183_18(10)>
  count_19 = iftmp.183_2;
  _20 = (long unsigned int) count_19;
  _21 = _20 * size_14(D);
  _22 = _21 + 8;
  _24 = ImGui::MemAlloc (_22);
  c_25 = _24;
  if (c_25 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _26 = 0B;
  goto <bb 15> (<L13>);

  <bb 13>:
  _27 = hh_7(D)->head;
  c_25->next = _27;
  hh_7(D)->head = c_25;
  hh_7(D)->num_remaining_in_head_chunk = count_19;

  <bb 14>:
  _31 = hh_7(D)->num_remaining_in_head_chunk;
  _32 = _31 + -1;
  hh_7(D)->num_remaining_in_head_chunk = _32;
  _34 = hh_7(D)->head;
  _35 = hh_7(D)->num_remaining_in_head_chunk;
  _36 = (long unsigned int) _35;
  _37 = _36 * size_14(D);
  _38 = _37 + 8;
  _39 = _34 + _38;

  # _1 = PHI <_12(3), _26(12), _39(14)>
<L13>:
  return _1;

}



;; Function void stbtt__hheap_free(stbtt__hheap*, void*) (_ZL17stbtt__hheap_freeP12stbtt__hheapPv, funcdef_no=626, decl_uid=16486, cgraph_uid=525, symbol_order=525)

void stbtt__hheap_free(stbtt__hheap*, void*) (struct stbtt__hheap * hh, void * p)
{
  void * D.22877;
  void * _3;

  <bb 2>:
  _3 = hh_2(D)->first_free;
  MEM[(void * *)p_4(D)] = _3;
  hh_2(D)->first_free = p_4(D);
  return;

}



;; Function void stbtt__hheap_cleanup(stbtt__hheap*, void*) (_ZL20stbtt__hheap_cleanupP12stbtt__hheapPv, funcdef_no=627, decl_uid=16490, cgraph_uid=526, symbol_order=526)

void stbtt__hheap_cleanup(stbtt__hheap*, void*) (struct stbtt__hheap * hh, void * userdata)
{
  struct stbtt__hheap_chunk * n;
  struct stbtt__hheap_chunk * c;

  <bb 2>:
  c_5 = hh_4(D)->head;

  <bb 3>:
  # c_1 = PHI <c_5(2), c_8(4)>
  if (c_1 == 0B)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  n_6 = c_1->next;
  ImGui::MemFree (c_1);
  c_8 = n_6;
  goto <bb 3>;

  <bb 5>:
  return;

}



;; Function stbtt__active_edge* stbtt__new_active(stbtt__hheap*, stbtt__edge*, int, float, void*) (_ZL17stbtt__new_activeP12stbtt__hheapP11stbtt__edgeifPv, funcdef_no=628, decl_uid=16519, cgraph_uid=527, symbol_order=527)

stbtt__active_edge* stbtt__new_active(stbtt__hheap*, stbtt__edge*, int, float, void*) (struct stbtt__hheap * hh, struct stbtt__edge * e, int off_x, float start_point, void * userdata)
{
  struct stbtt__active_edge * D.22912;
  static const char __PRETTY_FUNCTION__[86] = "stbtt__active_edge* stbtt__new_active(stbtt__hheap*, stbtt__edge*, int, float, void*)";
  float dxdy;
  struct stbtt__active_edge * z;
  float D.22910;
  float D.22909;
  int D.22905;
  float iftmp.186;
  float D.22903;
  float D.22902;
  float D.22901;
  float D.22900;
  float D.22899;
  float D.22898;
  float D.22897;
  float D.22896;
  float iftmp.185;
  struct stbtt__active_edge * D.22891;
  float D.22885;
  float D.22884;
  float D.22883;
  float D.22882;
  float D.22881;
  float D.22880;
  struct stbtt__active_edge * _1;
  float iftmp.185_2;
  float iftmp.186_3;
  struct stbtt__active_edge * _9;
  float _12;
  float _13;
  float _14;
  float _15;
  float _16;
  float _17;
  struct stbtt__active_edge * _19;
  float iftmp.185_21;
  float iftmp.185_22;
  float _24;
  float _25;
  float _27;
  float _28;
  float _29;
  float _31;
  float _33;
  float _34;
  int _36;
  float iftmp.186_37;
  float iftmp.186_38;
  float _40;
  float _42;
  struct stbtt__active_edge * _45;

  <bb 2>:
  _9 = stbtt__hheap_alloc (hh_6(D), 32, userdata_7(D));
  z_10 = _9;
  _12 = e_11(D)->x1;
  _13 = e_11(D)->x0;
  _14 = _12 - _13;
  _15 = e_11(D)->y1;
  _16 = e_11(D)->y0;
  _17 = _15 - _16;
  dxdy_18 = _14 / _17;
  if (z_10 != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("z != __null", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2751, &__PRETTY_FUNCTION__);

  <bb 4>:
  if (z_10 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _19 = z_10;
  goto <bb 13> (<L11>);

  <bb 6>:
  z_10->fdx = dxdy_18;
  if (dxdy_18 != 0.0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  iftmp.185_21 = 1.0e+0 / dxdy_18;
  goto <bb 9>;

  <bb 8>:
  iftmp.185_22 = 0.0;

  <bb 9>:
  # iftmp.185_2 = PHI <iftmp.185_21(7), iftmp.185_22(8)>
  z_10->fdy = iftmp.185_2;
  _24 = e_11(D)->x0;
  _25 = e_11(D)->y0;
  _27 = start_point_26(D) - _25;
  _28 = _27 * dxdy_18;
  _29 = _24 + _28;
  z_10->fx = _29;
  _31 = z_10->fx;
  _33 = (float) off_x_32(D);
  _34 = _31 - _33;
  z_10->fx = _34;
  _36 = e_11(D)->invert;
  if (_36 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  iftmp.186_37 = 1.0e+0;
  goto <bb 12>;

  <bb 11>:
  iftmp.186_38 = -1.0e+0;

  <bb 12>:
  # iftmp.186_3 = PHI <iftmp.186_37(10), iftmp.186_38(11)>
  z_10->direction = iftmp.186_3;
  _40 = e_11(D)->y0;
  z_10->sy = _40;
  _42 = e_11(D)->y1;
  z_10->ey = _42;
  z_10->next = 0B;
  _45 = z_10;

  # _1 = PHI <_19(5), _45(12)>
<L11>:
  return _1;

}



;; Function void stbtt__handle_clipped_edge(float*, int, stbtt__active_edge*, float, float, float, float) (_ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff, funcdef_no=629, decl_uid=16531, cgraph_uid=528, symbol_order=528)

void stbtt__handle_clipped_edge(float*, int, stbtt__active_edge*, float, float, float, float) (float * scanline, int x, struct stbtt__active_edge * e, float x0, float y0, float x1, float y1)
{
  static const char __PRETTY_FUNCTION__[94] = "void stbtt__handle_clipped_edge(float*, int, stbtt__active_edge*, float, float, float, float)";
  float D.23047;
  float D.23046;
  float D.23045;
  float D.23044;
  float D.23043;
  float D.23042;
  float D.23041;
  float D.23040;
  float D.23039;
  float D.23038;
  float D.23037;
  float D.23036;
  float D.23035;
  float * D.23034;
  long unsigned int D.23033;
  long unsigned int D.23032;
  float * D.23031;
  long unsigned int D.23030;
  long unsigned int D.23029;
  float D.23027;
  int D.23026;
  float D.23024;
  float D.23022;
  int D.23021;
  float D.23019;
  float D.23015;
  int D.23014;
  float D.23012;
  int D.23011;
  float D.23008;
  float D.23007;
  float D.23006;
  float D.23005;
  float D.23004;
  float * D.23003;
  long unsigned int D.23002;
  long unsigned int D.23001;
  float * D.23000;
  long unsigned int D.22999;
  long unsigned int D.22998;
  float D.22996;
  float D.22994;
  float D.22990;
  int D.22989;
  float D.22987;
  float D.22980;
  int D.22979;
  float D.22976;
  int D.22975;
  float D.22970;
  float D.22967;
  float D.22962;
  float D.22959;
  int D.22958;
  float D.22953;
  int D.22952;
  float D.22949;
  float D.22947;
  float D.22946;
  float D.22945;
  float D.22944;
  float D.22943;
  float D.22942;
  float D.22939;
  float D.22937;
  float D.22936;
  float D.22935;
  float D.22934;
  float D.22933;
  float D.22932;
  float D.22929;
  float D.22926;
  float D.22923;
  float D.22919;
  float D.22918;
  float _10;
  float _11;
  float _12;
  float _13;
  float _14;
  float _17;
  float _18;
  float _19;
  float _20;
  float _21;
  float _22;
  float _25;
  float _26;
  float _27;
  float _28;
  float _29;
  float _30;
  float _31;
  float _35;
  int _36;
  float _37;
  int _39;
  float _40;
  float _41;
  float _43;
  float _44;
  int _46;
  float _47;
  int _48;
  float _49;
  float _51;
  int _52;
  float _53;
  float _55;
  float _56;
  long unsigned int _57;
  long unsigned int _58;
  float * _60;
  long unsigned int _61;
  long unsigned int _62;
  float * _63;
  float _64;
  float _65;
  float _66;
  float _67;
  float _68;
  int _70;
  float _71;
  int _72;
  float _73;
  float _74;
  int _75;
  float _76;
  float _77;
  int _78;
  float _79;
  long unsigned int _80;
  long unsigned int _81;
  float * _82;
  long unsigned int _83;
  long unsigned int _84;
  float * _85;
  float _86;
  float _87;
  float _88;
  float _89;
  float _90;
  float _91;
  float _92;
  float _93;
  float _94;
  float _95;
  float _96;
  float _97;
  float _98;

  <bb 2>:
  if (y0_6(D) == y1_7(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 45> (<L60>);

  <bb 4>:
  if (y0_6(D) < y1_7(D))
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  __assert_fail ("y0 < y1", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2921, &__PRETTY_FUNCTION__);

  <bb 6>:
  _10 = e_9(D)->sy;
  _11 = e_9(D)->ey;
  if (_10 <= _11)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  __assert_fail ("e->sy <= e->ey", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2922, &__PRETTY_FUNCTION__);

  <bb 8>:
  _12 = e_9(D)->ey;
  if (_12 < y0_6(D))
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  goto <bb 45> (<L60>);

  <bb 10>:
  _13 = e_9(D)->sy;
  if (_13 > y1_7(D))
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  goto <bb 45> (<L60>);

  <bb 12>:
  _14 = e_9(D)->sy;
  if (_14 > y0_6(D))
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _17 = x1_16(D) - x0_15(D);
  _18 = e_9(D)->sy;
  _19 = _18 - y0_6(D);
  _20 = _17 * _19;
  _21 = y1_7(D) - y0_6(D);
  _22 = _20 / _21;
  x0_23 = _22 + x0_15(D);
  y0_24 = e_9(D)->sy;

  <bb 14>:
  # x0_1 = PHI <x0_15(D)(12), x0_23(13)>
  # y0_2 = PHI <y0_6(D)(12), y0_24(13)>
  _25 = e_9(D)->ey;
  if (_25 < y1_7(D))
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _26 = x1_16(D) - x0_1;
  _27 = e_9(D)->ey;
  _28 = _27 - y1_7(D);
  _29 = _26 * _28;
  _30 = y1_7(D) - y0_2;
  _31 = _29 / _30;
  x1_32 = _31 + x1_16(D);
  y1_33 = e_9(D)->ey;

  <bb 16>:
  # x1_3 = PHI <x1_16(D)(14), x1_32(15)>
  # y1_4 = PHI <y1_7(D)(14), y1_33(15)>
  _35 = (float) x_34(D);
  if (_35 == x0_1)
    goto <bb 17>;
  else
    goto <bb 19>;

  <bb 17>:
  _36 = x_34(D) + 1;
  _37 = (float) _36;
  if (_37 >= x1_3)
    goto <bb 32>;
  else
    goto <bb 18>;

  <bb 18>:
  __assert_fail ("x1 <= x+1", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2935, &__PRETTY_FUNCTION__);

  <bb 19>:
  _39 = x_34(D) + 1;
  _40 = (float) _39;
  if (_40 == x0_1)
    goto <bb 20>;
  else
    goto <bb 22>;

  <bb 20>:
  _41 = (float) x_34(D);
  if (_41 <= x1_3)
    goto <bb 32>;
  else
    goto <bb 21>;

  <bb 21>:
  __assert_fail ("x1 >= x", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2937, &__PRETTY_FUNCTION__);

  <bb 22>:
  _43 = (float) x_34(D);
  if (_43 >= x0_1)
    goto <bb 23>;
  else
    goto <bb 25>;

  <bb 23>:
  _44 = (float) x_34(D);
  if (_44 >= x1_3)
    goto <bb 32>;
  else
    goto <bb 24>;

  <bb 24>:
  __assert_fail ("x1 <= x", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2939, &__PRETTY_FUNCTION__);

  <bb 25>:
  _46 = x_34(D) + 1;
  _47 = (float) _46;
  if (_47 <= x0_1)
    goto <bb 26>;
  else
    goto <bb 28>;

  <bb 26>:
  _48 = x_34(D) + 1;
  _49 = (float) _48;
  if (_49 <= x1_3)
    goto <bb 32>;
  else
    goto <bb 27>;

  <bb 27>:
  __assert_fail ("x1 >= x+1", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2941, &__PRETTY_FUNCTION__);

  <bb 28>:
  _51 = (float) x_34(D);
  if (_51 <= x1_3)
    goto <bb 29>;
  else
    goto <bb 31>;

  <bb 29>:
  _52 = x_34(D) + 1;
  _53 = (float) _52;
  if (_53 >= x1_3)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  goto <bb 32>;

  <bb 31>:
  __assert_fail ("x1 >= x && x1 <= x+1", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2943, &__PRETTY_FUNCTION__);

  <bb 32>:
  _55 = (float) x_34(D);
  if (_55 >= x0_1)
    goto <bb 33>;
  else
    goto <bb 35>;

  <bb 33>:
  _56 = (float) x_34(D);
  if (_56 >= x1_3)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  _57 = (long unsigned int) x_34(D);
  _58 = _57 * 4;
  _60 = scanline_59(D) + _58;
  _61 = (long unsigned int) x_34(D);
  _62 = _61 * 4;
  _63 = scanline_59(D) + _62;
  _64 = *_63;
  _65 = e_9(D)->direction;
  _66 = y1_4 - y0_2;
  _67 = _65 * _66;
  _68 = _64 + _67;
  *_60 = _68;
  goto <bb 45> (<L60>);

  <bb 35>:
  _70 = x_34(D) + 1;
  _71 = (float) _70;
  if (_71 <= x0_1)
    goto <bb 36>;
  else
    goto <bb 38>;

  <bb 36>:
  _72 = x_34(D) + 1;
  _73 = (float) _72;
  if (_73 <= x1_3)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  goto <bb 45> (<L60>);

  <bb 38>:
  _74 = (float) x_34(D);
  if (_74 <= x0_1)
    goto <bb 39>;
  else
    goto <bb 43>;

  <bb 39>:
  _75 = x_34(D) + 1;
  _76 = (float) _75;
  if (_76 >= x0_1)
    goto <bb 40>;
  else
    goto <bb 43>;

  <bb 40>:
  _77 = (float) x_34(D);
  if (_77 <= x1_3)
    goto <bb 41>;
  else
    goto <bb 43>;

  <bb 41>:
  _78 = x_34(D) + 1;
  _79 = (float) _78;
  if (_79 >= x1_3)
    goto <bb 42>;
  else
    goto <bb 43>;

  <bb 42>:
  goto <bb 44>;

  <bb 43>:
  __assert_fail ("x0 >= x && x0 <= x+1 && x1 >= x && x1 <= x+1", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2950, &__PRETTY_FUNCTION__);

  <bb 44>:
  _80 = (long unsigned int) x_34(D);
  _81 = _80 * 4;
  _82 = scanline_59(D) + _81;
  _83 = (long unsigned int) x_34(D);
  _84 = _83 * 4;
  _85 = scanline_59(D) + _84;
  _86 = *_85;
  _87 = e_9(D)->direction;
  _88 = y1_4 - y0_2;
  _89 = _87 * _88;
  _90 = (float) x_34(D);
  _91 = x0_1 - _90;
  _92 = (float) x_34(D);
  _93 = x1_3 - _92;
  _94 = _91 + _93;
  _95 = _94 / 2.0e+0;
  _96 = 1.0e+0 - _95;
  _97 = _89 * _96;
  _98 = _86 + _97;
  *_82 = _98;

<L60>:
  return;

}



;; Function void stbtt__fill_active_edges_new(float*, float*, int, stbtt__active_edge*, float) (_ZL28stbtt__fill_active_edges_newPfS_iP18stbtt__active_edgef, funcdef_no=630, decl_uid=16539, cgraph_uid=529, symbol_order=529)

void stbtt__fill_active_edges_new(float*, float*, int, stbtt__active_edge*, float) (float * scanline, float * scanline_fill, int len, struct stbtt__active_edge * e, float y_top)
{
  float y2;
  float y1;
  float y3;
  float x3;
  float x2;
  float x1;
  float y0;
  int x;
  float t;
  float area;
  float sign;
  float step;
  float y_crossing;
  int x2;
  int x1;
  int x;
  int x;
  float height;
  float dy;
  float sy1;
  float sy0;
  float x_bottom;
  float x_top;
  float xb;
  float dx;
  float x0;
  float x0;
  static const char __PRETTY_FUNCTION__[83] = "void stbtt__fill_active_edges_new(float*, float*, int, stbtt__active_edge*, float)";
  float y_bottom;
  int x.208;
  int x.207;
  int x.206;
  int x.205;
  int x.204;
  int x.203;
  int x.202;
  int x.201;
  int x.200;
  int x.199;
  int x.198;
  int x.197;
  int x.196;
  int x.195;
  int x.194;
  int x.193;
  int x.192;
  float D.23221;
  float D.23220;
  float D.23219;
  int D.23218;
  int x.191;
  float D.23216;
  float D.23215;
  float D.23214;
  int x.190;
  int D.23212;
  int x.189;
  int x.188;
  int x.187;
  float D.23206;
  float D.23205;
  float D.23204;
  float D.23203;
  float * D.23202;
  long unsigned int D.23201;
  long unsigned int D.23200;
  float * D.23199;
  long unsigned int D.23198;
  long unsigned int D.23197;
  float D.23196;
  float D.23195;
  float D.23194;
  float D.23193;
  float D.23192;
  float D.23191;
  float D.23190;
  float D.23189;
  float D.23188;
  float D.23187;
  float D.23186;
  float * D.23185;
  long unsigned int D.23184;
  long unsigned int D.23183;
  float * D.23182;
  long unsigned int D.23181;
  long unsigned int D.23180;
  float D.23176;
  float D.23175;
  float D.23174;
  int D.23173;
  int D.23172;
  float D.23171;
  float D.23170;
  float D.23169;
  float D.23168;
  float * D.23167;
  long unsigned int D.23166;
  long unsigned int D.23165;
  float * D.23164;
  long unsigned int D.23163;
  long unsigned int D.23162;
  float D.23159;
  float D.23158;
  float D.23157;
  float D.23156;
  float D.23155;
  float D.23154;
  float D.23153;
  float D.23152;
  float * D.23151;
  long unsigned int D.23150;
  long unsigned int D.23149;
  float * D.23148;
  long unsigned int D.23147;
  long unsigned int D.23146;
  float D.23145;
  float D.23144;
  float D.23143;
  float D.23142;
  int D.23141;
  float D.23139;
  float D.23138;
  float D.23134;
  float D.23133;
  float D.23132;
  float D.23131;
  float * D.23130;
  long unsigned int D.23129;
  long unsigned int D.23128;
  float * D.23127;
  long unsigned int D.23126;
  long unsigned int D.23125;
  float D.23124;
  float D.23123;
  float D.23122;
  float D.23121;
  float D.23120;
  float D.23119;
  float D.23118;
  float D.23117;
  float D.23116;
  float D.23115;
  float D.23114;
  float D.23113;
  float * D.23112;
  long unsigned int D.23111;
  long unsigned int D.23110;
  float * D.23109;
  long unsigned int D.23108;
  long unsigned int D.23107;
  int D.23100;
  int D.23099;
  float D.23097;
  float D.23095;
  float D.23089;
  float D.23088;
  float D.23087;
  float D.23084;
  float D.23082;
  float D.23081;
  float D.23080;
  float D.23077;
  float D.23075;
  float D.23073;
  float * D.23068;
  float * D.23066;
  int D.23065;
  int D.23064;
  int D.23063;
  float D.23058;
  float D.23055;
  float D.23051;
  float _26;
  float _27;
  float _30;
  int _31;
  int _34;
  int _35;
  float * _37;
  float * _39;
  float _45;
  float _46;
  float _47;
  float _48;
  float _49;
  float _50;
  float _55;
  float _56;
  float _57;
  float _58;
  float _63;
  float _64;
  int _65;
  int _66;
  long unsigned int _69;
  long unsigned int _70;
  float * _71;
  long unsigned int _72;
  long unsigned int _73;
  float * _74;
  float _75;
  float _76;
  float _77;
  float _78;
  float _79;
  float _80;
  float _81;
  float _82;
  float _83;
  float _84;
  float _85;
  float _86;
  long unsigned int _88;
  long unsigned int _89;
  float * _90;
  long unsigned int _91;
  long unsigned int _92;
  float * _93;
  float _94;
  float _95;
  float _96;
  float _97;
  float _100;
  float _102;
  int _117;
  float _118;
  float _119;
  float _120;
  float _123;
  long unsigned int _125;
  long unsigned int _126;
  float * _127;
  long unsigned int _128;
  long unsigned int _129;
  float * _130;
  float _131;
  float _132;
  float _133;
  float _134;
  float _135;
  float _136;
  float _137;
  float _138;
  long unsigned int _142;
  long unsigned int _143;
  float * _144;
  long unsigned int _145;
  long unsigned int _146;
  float * _147;
  float _148;
  float _149;
  float _150;
  float _151;
  int _155;
  int _156;
  float _157;
  float _158;
  float _161;
  long unsigned int _162;
  long unsigned int _163;
  float * _164;
  long unsigned int _165;
  long unsigned int _166;
  float * _167;
  float _168;
  float _169;
  float _170;
  float _171;
  float _172;
  float _173;
  float _174;
  float _175;
  float _176;
  float _177;
  float _178;
  long unsigned int _180;
  long unsigned int _181;
  float * _182;
  long unsigned int _183;
  long unsigned int _184;
  float * _185;
  float _186;
  float _187;
  float _188;
  float _189;
  int x.187_193;
  int x.188_195;
  int x.189_197;
  int _198;
  int x.190_202;
  float _203;
  float _204;
  float _205;
  int x.191_207;
  int _208;
  float _209;
  float _210;
  float _211;
  int x.192_213;
  int x.193_215;
  int x.194_217;
  int x.195_219;
  int x.196_221;
  int x.197_223;
  int x.198_225;
  int x.199_227;
  int x.200_229;
  int x.201_231;
  int x.202_233;
  int x.203_235;
  int x.204_237;
  int x.205_239;
  int x.206_241;
  int x.207_243;
  int x.208_244;

  <bb 2>:
  y_bottom_23 = y_top_22(D) + 1.0e+0;

  <bb 3>:
  # e_1 = PHI <e_24(D)(2), e_248(65)>
  if (e_1 == 0B)
    goto <bb 66>;
  else
    goto <bb 4>;

  <bb 4>:
  _26 = e_1->ey;
  if (_26 >= y_top_22(D))
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  __assert_fail ("e->ey >= y_top", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2963, &__PRETTY_FUNCTION__);

  <bb 6>:
  _27 = e_1->fdx;
  if (_27 == 0.0)
    goto <bb 7>;
  else
    goto <bb 13>;

  <bb 7>:
  x0_28 = e_1->fx;
  _30 = (float) len_29(D);
  if (_30 > x0_28)
    goto <bb 8>;
  else
    goto <bb 12>;

  <bb 8>:
  if (x0_28 >= 0.0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _31 = (int) x0_28;
  stbtt__handle_clipped_edge (scanline_32(D), _31, e_1, x0_28, y_top_22(D), x0_28, y_bottom_23);
  _34 = (int) x0_28;
  _35 = _34 + 1;
  _37 = scanline_fill_36(D) + 18446744073709551612;
  stbtt__handle_clipped_edge (_37, _35, e_1, x0_28, y_top_22(D), x0_28, y_bottom_23);
  goto <bb 11>;

  <bb 10>:
  _39 = scanline_fill_36(D) + 18446744073709551612;
  stbtt__handle_clipped_edge (_39, 0, e_1, x0_28, y_top_22(D), x0_28, y_bottom_23);

  <bb 11>:

  <bb 12>:
  goto <bb 65>;

  <bb 13>:
  x0_41 = e_1->fx;
  dx_42 = e_1->fdx;
  xb_43 = x0_41 + dx_42;
  dy_44 = e_1->fdy;
  _45 = e_1->sy;
  if (_45 <= y_bottom_23)
    goto <bb 14>;
  else
    goto <bb 16>;

  <bb 14>:
  _46 = e_1->ey;
  if (_46 >= y_top_22(D))
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  goto <bb 17>;

  <bb 16>:
  __assert_fail ("e->sy <= y_bottom && e->ey >= y_top", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 2982, &__PRETTY_FUNCTION__);

  <bb 17>:
  _47 = e_1->sy;
  if (_47 > y_top_22(D))
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _48 = e_1->sy;
  _49 = _48 - y_top_22(D);
  _50 = _49 * dx_42;
  x_top_51 = _50 + x0_41;
  sy0_52 = e_1->sy;
  goto <bb 20>;

  <bb 19>:
  x_top_53 = x0_41;
  sy0_54 = y_top_22(D);

  <bb 20>:
  # x_top_3 = PHI <x_top_51(18), x_top_53(19)>
  # sy0_7 = PHI <sy0_52(18), sy0_54(19)>
  _55 = e_1->ey;
  if (_55 < y_bottom_23)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _56 = e_1->ey;
  _57 = _56 - y_top_22(D);
  _58 = _57 * dx_42;
  x_bottom_59 = _58 + x0_41;
  sy1_60 = e_1->ey;
  goto <bb 23>;

  <bb 22>:
  x_bottom_61 = xb_43;
  sy1_62 = y_bottom_23;

  <bb 23>:
  # x_bottom_5 = PHI <x_bottom_59(21), x_bottom_61(22)>
  # sy1_9 = PHI <sy1_60(21), sy1_62(22)>
  if (x_top_3 >= 0.0)
    goto <bb 24>;
  else
    goto <bb 42>;

  <bb 24>:
  if (x_bottom_5 >= 0.0)
    goto <bb 25>;
  else
    goto <bb 42>;

  <bb 25>:
  _63 = (float) len_29(D);
  if (_63 > x_top_3)
    goto <bb 26>;
  else
    goto <bb 42>;

  <bb 26>:
  _64 = (float) len_29(D);
  if (_64 > x_bottom_5)
    goto <bb 27>;
  else
    goto <bb 42>;

  <bb 27>:
  _65 = (int) x_top_3;
  _66 = (int) x_bottom_5;
  if (_65 == _66)
    goto <bb 28>;
  else
    goto <bb 33>;

  <bb 28>:
  x_67 = (int) x_top_3;
  height_68 = sy1_9 - sy0_7;
  if (x_67 >= 0)
    goto <bb 29>;
  else
    goto <bb 31>;

  <bb 29>:
  if (x_67 < len_29(D))
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  goto <bb 32>;

  <bb 31>:
  __assert_fail ("x >= 0 && x < len", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 3010, &__PRETTY_FUNCTION__);

  <bb 32>:
  _69 = (long unsigned int) x_67;
  _70 = _69 * 4;
  _71 = scanline_32(D) + _70;
  _72 = (long unsigned int) x_67;
  _73 = _72 * 4;
  _74 = scanline_32(D) + _73;
  _75 = *_74;
  _76 = e_1->direction;
  _77 = (float) x_67;
  _78 = x_top_3 - _77;
  _79 = (float) x_67;
  _80 = x_bottom_5 - _79;
  _81 = _78 + _80;
  _82 = _81 / 2.0e+0;
  _83 = 1.0e+0 - _82;
  _84 = _76 * _83;
  _85 = _84 * height_68;
  _86 = _75 + _85;
  *_71 = _86;
  _88 = (long unsigned int) x_67;
  _89 = _88 * 4;
  _90 = scanline_fill_36(D) + _89;
  _91 = (long unsigned int) x_67;
  _92 = _91 * 4;
  _93 = scanline_fill_36(D) + _92;
  _94 = *_93;
  _95 = e_1->direction;
  _96 = _95 * height_68;
  _97 = _94 + _96;
  *_90 = _97;
  goto <bb 41>;

  <bb 33>:
  if (x_top_3 > x_bottom_5)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  _100 = sy0_7 - y_top_22(D);
  sy0_101 = y_bottom_23 - _100;
  _102 = sy1_9 - y_top_22(D);
  sy1_103 = y_bottom_23 - _102;
  t_104 = sy0_101;
  sy0_105 = sy1_103;
  sy1_106 = t_104;
  t_107 = x_bottom_5;
  x_bottom_108 = x_top_3;
  x_top_109 = t_107;
  dx_110 = -dx_42;
  dy_111 = -dy_44;
  t_112 = x0_41;
  x0_113 = xb_43;
  xb_114 = t_112;

  <bb 35>:
  # x0_2 = PHI <x0_41(33), x0_113(34)>
  # x_top_4 = PHI <x_top_3(33), x_top_109(34)>
  # x_bottom_6 = PHI <x_bottom_5(33), x_bottom_108(34)>
  # sy0_8 = PHI <sy0_7(33), sy0_105(34)>
  # sy1_10 = PHI <sy1_9(33), sy1_106(34)>
  # dy_11 = PHI <dy_44(33), dy_111(34)>
  x1_115 = (int) x_top_4;
  x2_116 = (int) x_bottom_6;
  _117 = x1_115 + 1;
  _118 = (float) _117;
  _119 = _118 - x0_2;
  _120 = _119 * dy_11;
  y_crossing_121 = _120 + y_top_22(D);
  sign_122 = e_1->direction;
  _123 = y_crossing_121 - sy0_8;
  area_124 = _123 * sign_122;
  _125 = (long unsigned int) x1_115;
  _126 = _125 * 4;
  _127 = scanline_32(D) + _126;
  _128 = (long unsigned int) x1_115;
  _129 = _128 * 4;
  _130 = scanline_32(D) + _129;
  _131 = *_130;
  _132 = (float) x1_115;
  _133 = x_top_4 - _132;
  _134 = _133 + 1.0e+0;
  _135 = _134 / 2.0e+0;
  _136 = 1.0e+0 - _135;
  _137 = _136 * area_124;
  _138 = _131 + _137;
  *_127 = _138;
  step_140 = sign_122 * dy_11;
  x_141 = x1_115 + 1;

  <bb 36>:
  # x_12 = PHI <x_141(35), x_154(37)>
  # area_13 = PHI <area_124(35), area_153(37)>
  if (x_12 >= x2_116)
    goto <bb 38>;
  else
    goto <bb 37>;

  <bb 37>:
  _142 = (long unsigned int) x_12;
  _143 = _142 * 4;
  _144 = scanline_32(D) + _143;
  _145 = (long unsigned int) x_12;
  _146 = _145 * 4;
  _147 = scanline_32(D) + _146;
  _148 = *_147;
  _149 = step_140 / 2.0e+0;
  _150 = _149 + area_13;
  _151 = _148 + _150;
  *_144 = _151;
  area_153 = area_13 + step_140;
  x_154 = x_12 + 1;
  goto <bb 36>;

  <bb 38>:
  _155 = x1_115 + 1;
  _156 = x2_116 - _155;
  _157 = (float) _156;
  _158 = _157 * dy_11;
  y_crossing_159 = _158 + y_crossing_121;
  _161 = std::fabs (area_13);
  if (_161 <= 1.0099999904632568359375e+0)
    goto <bb 40>;
  else
    goto <bb 39>;

  <bb 39>:
  __assert_fail ("fabs(area) <= 1.01f", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 3047, &__PRETTY_FUNCTION__);

  <bb 40>:
  _162 = (long unsigned int) x2_116;
  _163 = _162 * 4;
  _164 = scanline_32(D) + _163;
  _165 = (long unsigned int) x2_116;
  _166 = _165 * 4;
  _167 = scanline_32(D) + _166;
  _168 = *_167;
  _169 = (float) x2_116;
  _170 = x_bottom_6 - _169;
  _171 = _170 + 0.0;
  _172 = _171 / 2.0e+0;
  _173 = 1.0e+0 - _172;
  _174 = _173 * sign_122;
  _175 = sy1_10 - y_crossing_159;
  _176 = _174 * _175;
  _177 = _176 + area_13;
  _178 = _168 + _177;
  *_164 = _178;
  _180 = (long unsigned int) x2_116;
  _181 = _180 * 4;
  _182 = scanline_fill_36(D) + _181;
  _183 = (long unsigned int) x2_116;
  _184 = _183 * 4;
  _185 = scanline_fill_36(D) + _184;
  _186 = *_185;
  _187 = sy1_10 - sy0_8;
  _188 = _187 * sign_122;
  _189 = _186 + _188;
  *_182 = _189;

  <bb 41>:
  goto <bb 65>;

  <bb 42>:
  x = 0;

  <bb 43>:
  x.187_193 = x;
  if (x.187_193 >= len_29(D))
    goto <bb 64>;
  else
    goto <bb 44>;

  <bb 44>:
  y0_194 = y_top_22(D);
  x.188_195 = x;
  x1_196 = (float) x.188_195;
  x.189_197 = x;
  _198 = x.189_197 + 1;
  x2_199 = (float) _198;
  x3_200 = xb_43;
  y3_201 = y_bottom_23;
  x.190_202 = x;
  _203 = (float) x.190_202;
  _204 = _203 - x0_41;
  _205 = _204 / dx_42;
  y1_206 = _205 + y_top_22(D);
  x.191_207 = x;
  _208 = x.191_207 + 1;
  _209 = (float) _208;
  _210 = _209 - x0_41;
  _211 = _210 / dx_42;
  y2_212 = _211 + y_top_22(D);
  if (x0_41 < x1_196)
    goto <bb 45>;
  else
    goto <bb 47>;

  <bb 45>:
  if (x3_200 > x2_199)
    goto <bb 46>;
  else
    goto <bb 47>;

  <bb 46>:
  x.192_213 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.192_213, e_1, x0_41, y0_194, x1_196, y1_206);
  x.193_215 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.193_215, e_1, x1_196, y1_206, x2_199, y2_212);
  x.194_217 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.194_217, e_1, x2_199, y2_212, x3_200, y3_201);
  goto <bb 63>;

  <bb 47>:
  if (x3_200 < x1_196)
    goto <bb 48>;
  else
    goto <bb 50>;

  <bb 48>:
  if (x0_41 > x2_199)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  x.195_219 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.195_219, e_1, x0_41, y0_194, x2_199, y2_212);
  x.196_221 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.196_221, e_1, x2_199, y2_212, x1_196, y1_206);
  x.197_223 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.197_223, e_1, x1_196, y1_206, x3_200, y3_201);
  goto <bb 63>;

  <bb 50>:
  if (x0_41 < x1_196)
    goto <bb 51>;
  else
    goto <bb 53>;

  <bb 51>:
  if (x3_200 > x1_196)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  x.198_225 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.198_225, e_1, x0_41, y0_194, x1_196, y1_206);
  x.199_227 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.199_227, e_1, x1_196, y1_206, x3_200, y3_201);
  goto <bb 63>;

  <bb 53>:
  if (x3_200 < x1_196)
    goto <bb 54>;
  else
    goto <bb 56>;

  <bb 54>:
  if (x0_41 > x1_196)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  x.200_229 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.200_229, e_1, x0_41, y0_194, x1_196, y1_206);
  x.201_231 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.201_231, e_1, x1_196, y1_206, x3_200, y3_201);
  goto <bb 63>;

  <bb 56>:
  if (x0_41 < x2_199)
    goto <bb 57>;
  else
    goto <bb 59>;

  <bb 57>:
  if (x3_200 > x2_199)
    goto <bb 58>;
  else
    goto <bb 59>;

  <bb 58>:
  x.202_233 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.202_233, e_1, x0_41, y0_194, x2_199, y2_212);
  x.203_235 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.203_235, e_1, x2_199, y2_212, x3_200, y3_201);
  goto <bb 63>;

  <bb 59>:
  if (x3_200 < x2_199)
    goto <bb 60>;
  else
    goto <bb 62>;

  <bb 60>:
  if (x0_41 > x2_199)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  x.204_237 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.204_237, e_1, x0_41, y0_194, x2_199, y2_212);
  x.205_239 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.205_239, e_1, x2_199, y2_212, x3_200, y3_201);
  goto <bb 63>;

  <bb 62>:
  x.206_241 = x;
  stbtt__handle_clipped_edge (scanline_32(D), x.206_241, e_1, x0_41, y0_194, x3_200, y3_201);

  <bb 63>:
  x.207_243 = x;
  x.208_244 = x.207_243 + 1;
  x = x.208_244;
  goto <bb 43>;

  <bb 64>:
  x ={v} {CLOBBER};

  <bb 65>:
  e_248 = e_1->next;
  goto <bb 3>;

  <bb 66>:
  return;

}



;; Function void stbtt__rasterize_sorted_edges(stbtt__bitmap*, stbtt__edge*, int, int, int, int, void*) (_ZL29stbtt__rasterize_sorted_edgesP13stbtt__bitmapP11stbtt__edgeiiiiPv, funcdef_no=631, decl_uid=16583, cgraph_uid=530, symbol_order=530)

void stbtt__rasterize_sorted_edges(stbtt__bitmap*, stbtt__edge*, int, int, int, int, void*) (struct stbtt__bitmap * result, struct stbtt__edge * e, int n, int vsubsample, int off_x, int off_y, void * userdata)
{
  struct stbtt__active_edge * D.23365;
  float * D.23364;
  struct stbtt__active_edge * z;
  int m;
  float k;
  float sum;
  struct stbtt__active_edge * z;
  struct stbtt__active_edge * z;
  struct stbtt__active_edge * * step;
  float scan_y_bottom;
  float scan_y_top;
  static const char __PRETTY_FUNCTION__[92] = "void stbtt__rasterize_sorted_edges(stbtt__bitmap*, stbtt__edge*, int, int, int, int, void*)";
  float * scanline2;
  float * scanline;
  float scanline_data[129];
  int i;
  int j;
  int y;
  struct stbtt__active_edge * active;
  struct stbtt__hheap hh;
  void * userdata.213;
  struct stbtt__active_edge * D.23359;
  float D.23358;
  float D.23357;
  float D.23356;
  struct stbtt__active_edge * D.23354;
  unsigned char D.23352;
  unsigned char * D.23351;
  sizetype D.23350;
  int D.23349;
  int D.23348;
  int D.23347;
  unsigned char * D.23346;
  float D.23342;
  float D.23341;
  float D.23340;
  float * D.23339;
  long unsigned int D.23338;
  long unsigned int D.23337;
  float D.23336;
  float * D.23335;
  long unsigned int D.23334;
  long unsigned int D.23333;
  int D.23331;
  float * D.23328;
  int D.23327;
  struct stbtt__active_edge * active.212;
  struct stbtt__active_edge * active.211;
  struct stbtt__active_edge * active.210;
  float D.23316;
  void * userdata.209;
  float D.23310;
  float D.23309;
  float D.23307;
  struct stbtt__active_edge * D.23305;
  float D.23300;
  struct stbtt__active_edge * D.23299;
  float D.23296;
  struct stbtt__active_edge * D.23294;
  long unsigned int D.23292;
  long unsigned int D.23291;
  int D.23290;
  int D.23289;
  long unsigned int D.23288;
  long unsigned int D.23287;
  int D.23286;
  float D.23285;
  float D.23284;
  int D.23282;
  float D.23280;
  float D.23279;
  int D.23278;
  int D.23277;
  struct stbtt__edge * D.23276;
  long unsigned int D.23275;
  long unsigned int D.23274;
  long unsigned int D.23273;
  long unsigned int D.23272;
  int D.23271;
  long unsigned int D.23269;
  long unsigned int D.23268;
  long unsigned int D.23267;
  int D.23266;
  int D.23263;
  int _31;
  int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  float * _37;
  int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _47;
  long unsigned int _48;
  struct stbtt__edge * _50;
  int _51;
  int _52;
  float _53;
  float _54;
  int _56;
  float _57;
  float _59;
  int _62;
  long unsigned int _63;
  long unsigned int _64;
  int _66;
  int _67;
  long unsigned int _68;
  long unsigned int _69;
  struct stbtt__active_edge * _71;
  float _73;
  struct stbtt__active_edge * _74;
  float _76;
  struct stbtt__active_edge * _80;
  float _82;
  float _83;
  float _84;
  void * userdata.209_85;
  struct stbtt__active_edge * _88;
  float _90;
  struct stbtt__active_edge * active.210_91;
  struct stbtt__active_edge * active.211_96;
  struct stbtt__active_edge * active.212_97;
  int _98;
  float * _99;
  int _103;
  long unsigned int _104;
  long unsigned int _105;
  float * _106;
  float _107;
  long unsigned int _109;
  long unsigned int _110;
  float * _111;
  float _112;
  float _115;
  float _116;
  unsigned char * _120;
  int _121;
  int _122;
  int _123;
  sizetype _124;
  unsigned char * _125;
  unsigned char _126;
  struct stbtt__active_edge * _130;
  float _132;
  float _133;
  float _134;
  struct stbtt__active_edge * _136;
  void * userdata.213_140;

  <bb 2>:
  hh.head = 0B;
  hh.first_free = 0B;
  hh.num_remaining_in_head_chunk = 0;
  active = 0B;
  j_29 = 0;
  _31 = result_30(D)->w;
  if (_31 > 64)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _32 = result_30(D)->w;
  _33 = (long unsigned int) _32;
  _34 = _33 * 8;
  _35 = _34 + 4;
  _37 = ImGui::MemAlloc (_35);
  scanline_38 = _37;
  goto <bb 5>;

  <bb 4>:
  scanline_39 = &scanline_data;

  <bb 5>:
  # scanline_6 = PHI <scanline_38(3), scanline_39(4)>
  _40 = result_30(D)->w;
  _41 = (long unsigned int) _40;
  _42 = _41 * 4;
  scanline2_43 = scanline_6 + _42;
  y_45 = off_y_44(D);
  _47 = (long unsigned int) n_46(D);
  _48 = _47 * 20;
  _50 = e_49(D) + _48;
  _51 = result_30(D)->h;
  _52 = _51 + off_y_44(D);
  _53 = (float) _52;
  _54 = _53 + 1.0e+0;
  _50->y0 = _54;

  <bb 6>:
  # e_1 = PHI <e_49(D)(5), e_2(33)>
  # y_3 = PHI <y_45(5), y_138(33)>
  # j_4 = PHI <j_29(5), j_139(33)>
  _56 = result_30(D)->h;
  if (_56 <= j_4)
    goto <bb 34>;
  else
    goto <bb 7>;

  <bb 7>:
  _57 = (float) y_3;
  scan_y_top_58 = _57 + 0.0;
  _59 = (float) y_3;
  scan_y_bottom_60 = _59 + 1.0e+0;
  step_61 = &active;
  _62 = result_30(D)->w;
  _63 = (long unsigned int) _62;
  _64 = _63 * 4;
  memset (scanline_6, 0, _64);
  _66 = result_30(D)->w;
  _67 = _66 + 1;
  _68 = (long unsigned int) _67;
  _69 = _68 * 4;
  memset (scanline2_43, 0, _69);

  <bb 8>:
  # step_7 = PHI <step_61(7), step_8(14)>
  _71 = *step_7;
  if (_71 == 0B)
    goto <bb 15>;
  else
    goto <bb 9>;

  <bb 9>:
  z_72 = *step_7;
  _73 = z_72->ey;
  if (_73 <= scan_y_top_58)
    goto <bb 10>;
  else
    goto <bb 13>;

  <bb 10>:
  _74 = z_72->next;
  *step_7 = _74;
  _76 = z_72->direction;
  if (_76 != 0.0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  __assert_fail ("z->direction", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 3151, &__PRETTY_FUNCTION__);

  <bb 12>:
  z_72->direction = 0.0;
  stbtt__hheap_free (&hh, z_72);
  goto <bb 14>;

  <bb 13>:
  _80 = *step_7;
  step_81 = &_80->next;

  <bb 14>:
  # step_8 = PHI <step_7(12), step_81(13)>
  goto <bb 8>;

  <bb 15>:
  # e_2 = PHI <e_1(8), e_95(22)>
  _82 = e_2->y0;
  if (_82 <= scan_y_bottom_60)
    goto <bb 16>;
  else
    goto <bb 23>;

  <bb 16>:
  _83 = e_2->y0;
  _84 = e_2->y1;
  if (_83 != _84)
    goto <bb 17>;
  else
    goto <bb 22>;

  <bb 17>:
  userdata.209_85 = userdata;
  _88 = stbtt__new_active (&hh, e_2, off_x_86(D), scan_y_top_58, userdata.209_85);
  z_89 = _88;
  if (z_89 != 0B)
    goto <bb 18>;
  else
    goto <bb 21>;

  <bb 18>:
  _90 = z_89->ey;
  if (_90 >= scan_y_top_58)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  __assert_fail ("z->ey >= scan_y_top", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 3164, &__PRETTY_FUNCTION__);

  <bb 20>:
  active.210_91 = active;
  z_89->next = active.210_91;
  active = z_89;

  <bb 21>:

  <bb 22>:
  e_95 = e_2 + 20;
  goto <bb 15>;

  <bb 23>:
  active.211_96 = active;
  if (active.211_96 != 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  active.212_97 = active;
  _98 = result_30(D)->w;
  _99 = scanline2_43 + 4;
  stbtt__fill_active_edges_new (scanline_6, _99, _98, active.212_97, scan_y_top_58);

  <bb 25>:
  sum_101 = 0.0;
  i_102 = 0;

  <bb 26>:
  # i_5 = PHI <i_102(25), i_128(29)>
  # sum_10 = PHI <sum_101(25), sum_108(29)>
  _103 = result_30(D)->w;
  if (_103 <= i_5)
    goto <bb 30>;
  else
    goto <bb 27>;

  <bb 27>:
  _104 = (long unsigned int) i_5;
  _105 = _104 * 4;
  _106 = scanline2_43 + _105;
  _107 = *_106;
  sum_108 = _107 + sum_10;
  _109 = (long unsigned int) i_5;
  _110 = _109 * 4;
  _111 = scanline_6 + _110;
  _112 = *_111;
  k_113 = _112 + sum_108;
  _115 = std::fabs (k_113);
  _116 = _115 * 2.55e+2;
  k_117 = _116 + 5.0e-1;
  m_118 = (int) k_117;
  if (m_118 > 255)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  m_119 = 255;

  <bb 29>:
  # m_11 = PHI <m_118(27), m_119(28)>
  _120 = result_30(D)->pixels;
  _121 = result_30(D)->stride;
  _122 = _121 * j_4;
  _123 = _122 + i_5;
  _124 = (sizetype) _123;
  _125 = _120 + _124;
  _126 = (unsigned char) m_11;
  *_125 = _126;
  i_128 = i_5 + 1;
  goto <bb 26>;

  <bb 30>:
  step_129 = &active;

  <bb 31>:
  # step_9 = PHI <step_129(30), step_137(32)>
  _130 = *step_9;
  if (_130 == 0B)
    goto <bb 33>;
  else
    goto <bb 32>;

  <bb 32>:
  z_131 = *step_9;
  _132 = z_131->fx;
  _133 = z_131->fdx;
  _134 = _132 + _133;
  z_131->fx = _134;
  _136 = *step_9;
  step_137 = &_136->next;
  goto <bb 31>;

  <bb 33>:
  y_138 = y_3 + 1;
  j_139 = j_4 + 1;
  goto <bb 6>;

  <bb 34>:
  userdata.213_140 = userdata;
  stbtt__hheap_cleanup (&hh, userdata.213_140);
  if (&scanline_data != scanline_6)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  ImGui::MemFree (scanline_6);

  <bb 36>:
  hh ={v} {CLOBBER};
  active ={v} {CLOBBER};
  scanline_data ={v} {CLOBBER};
  return;

}



;; Function void stbtt__sort_edges_ins_sort(stbtt__edge*, int) (_ZL26stbtt__sort_edges_ins_sortP11stbtt__edgei, funcdef_no=632, decl_uid=16648, cgraph_uid=531, symbol_order=531)

void stbtt__sort_edges_ins_sort(stbtt__edge*, int) (struct stbtt__edge * p, int n)
{
  int c;
  struct stbtt__edge * b;
  struct stbtt__edge * a;
  struct stbtt__edge t;
  int j;
  int i;
  struct stbtt__edge * D.23396;
  long unsigned int D.23395;
  long unsigned int D.23394;
  struct stbtt__edge * D.23391;
  sizetype D.23390;
  long unsigned int D.23389;
  long unsigned int D.23388;
  struct stbtt__edge * D.23387;
  long unsigned int D.23386;
  long unsigned int D.23385;
  bool D.23382;
  float D.23381;
  struct stbtt__edge * b.216;
  float D.23379;
  struct stbtt__edge * a.215;
  struct stbtt__edge * b.214;
  sizetype D.23376;
  long unsigned int D.23375;
  long unsigned int D.23374;
  struct stbtt__edge * D.23371;
  long unsigned int D.23370;
  long unsigned int D.23369;
  long unsigned int _10;
  long unsigned int _11;
  struct stbtt__edge * _13;
  long unsigned int _17;
  long unsigned int _18;
  sizetype _19;
  struct stbtt__edge * b.214_20;
  struct stbtt__edge * a.215_22;
  float _23;
  struct stbtt__edge * b.216_24;
  float _25;
  bool _26;
  long unsigned int _28;
  long unsigned int _29;
  struct stbtt__edge * _30;
  long unsigned int _31;
  long unsigned int _32;
  sizetype _33;
  struct stbtt__edge * _34;
  long unsigned int _39;
  long unsigned int _40;
  struct stbtt__edge * _41;

  <bb 2>:
  i_7 = 1;

  <bb 3>:
  # i_1 = PHI <i_7(2), i_45(11)>
  if (i_1 >= n_9(D))
    goto <bb 12>;
  else
    goto <bb 4>;

  <bb 4>:
  _10 = (long unsigned int) i_1;
  _11 = _10 * 20;
  _13 = p_12(D) + _11;
  t = MEM[(const struct stbtt__edge &)_13];
  a = &t;
  j_16 = i_1;

  <bb 5>:
  # j_2 = PHI <j_16(4), j_36(8)>
  if (j_2 <= 0)
    goto <bb 9>;
  else
    goto <bb 6>;

  <bb 6>:
  _17 = (long unsigned int) j_2;
  _18 = _17 * 20;
  _19 = _18 + 18446744073709551596;
  b.214_20 = p_12(D) + _19;
  b = b.214_20;
  a.215_22 = a;
  _23 = a.215_22->y0;
  b.216_24 = b;
  _25 = b.216_24->y0;
  _26 = _23 < _25;
  c_27 = (int) _26;
  if (c_27 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  b ={v} {CLOBBER};
  goto <bb 9>;

  <bb 8>:
  _28 = (long unsigned int) j_2;
  _29 = _28 * 20;
  _30 = p_12(D) + _29;
  _31 = (long unsigned int) j_2;
  _32 = _31 * 20;
  _33 = _32 + 18446744073709551596;
  _34 = p_12(D) + _33;
  *_30 = MEM[(const struct stbtt__edge &)_34];
  j_36 = j_2 + -1;
  b ={v} {CLOBBER};
  goto <bb 5>;

  <bb 9>:
  if (i_1 != j_2)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _39 = (long unsigned int) j_2;
  _40 = _39 * 20;
  _41 = p_12(D) + _40;
  *_41 = t;

  <bb 11>:
  t ={v} {CLOBBER};
  a ={v} {CLOBBER};
  i_45 = i_1 + 1;
  goto <bb 3>;

  <bb 12>:
  return;

}



;; Function void stbtt__sort_edges_quicksort(stbtt__edge*, int) (_ZL27stbtt__sort_edges_quicksortP11stbtt__edgei, funcdef_no=633, decl_uid=16702, cgraph_uid=532, symbol_order=532)

void stbtt__sort_edges_quicksort(stbtt__edge*, int) (struct stbtt__edge * p, int n)
{
  int z;
  int j;
  int i;
  int m;
  int c;
  int c12;
  int c01;
  struct stbtt__edge t;
  struct stbtt__edge * D.23494;
  long unsigned int D.23493;
  long unsigned int D.23492;
  int D.23491;
  long unsigned int D.23489;
  long unsigned int D.23488;
  int D.23485;
  struct stbtt__edge * D.23484;
  long unsigned int D.23483;
  long unsigned int D.23482;
  struct stbtt__edge * D.23481;
  long unsigned int D.23480;
  long unsigned int D.23479;
  struct stbtt__edge * D.23478;
  long unsigned int D.23477;
  long unsigned int D.23476;
  struct stbtt__edge * D.23475;
  long unsigned int D.23474;
  long unsigned int D.23473;
  bool D.23468;
  bool D.23467;
  float D.23466;
  struct stbtt__edge * D.23465;
  long unsigned int D.23464;
  long unsigned int D.23463;
  float D.23462;
  bool D.23458;
  bool D.23457;
  float D.23456;
  float D.23455;
  struct stbtt__edge * D.23454;
  long unsigned int D.23453;
  long unsigned int D.23452;
  struct stbtt__edge * D.23449;
  long unsigned int D.23448;
  long unsigned int D.23447;
  struct stbtt__edge * D.23446;
  long unsigned int D.23445;
  long unsigned int D.23444;
  struct stbtt__edge * D.23442;
  long unsigned int D.23441;
  long unsigned int D.23440;
  struct stbtt__edge * D.23439;
  long unsigned int D.23438;
  long unsigned int D.23437;
  struct stbtt__edge * D.23436;
  long unsigned int D.23435;
  long unsigned int D.23434;
  struct stbtt__edge * D.23433;
  long unsigned int D.23432;
  long unsigned int D.23431;
  int iftmp.217;
  bool D.23426;
  float D.23425;
  struct stbtt__edge * D.23424;
  sizetype D.23423;
  long unsigned int D.23422;
  long unsigned int D.23421;
  float D.23420;
  bool D.23417;
  float D.23416;
  struct stbtt__edge * D.23415;
  sizetype D.23414;
  long unsigned int D.23413;
  long unsigned int D.23412;
  float D.23411;
  struct stbtt__edge * D.23410;
  long unsigned int D.23409;
  long unsigned int D.23408;
  bool D.23407;
  float D.23406;
  struct stbtt__edge * D.23405;
  long unsigned int D.23404;
  long unsigned int D.23403;
  float D.23402;
  int iftmp.217_8;
  float _18;
  long unsigned int _19;
  long unsigned int _20;
  struct stbtt__edge * _21;
  float _22;
  bool _23;
  long unsigned int _25;
  long unsigned int _26;
  struct stbtt__edge * _27;
  float _28;
  long unsigned int _29;
  long unsigned int _30;
  sizetype _31;
  struct stbtt__edge * _32;
  float _33;
  bool _34;
  float _36;
  long unsigned int _37;
  long unsigned int _38;
  sizetype _39;
  struct stbtt__edge * _40;
  float _41;
  bool _42;
  int iftmp.217_44;
  int iftmp.217_45;
  long unsigned int _47;
  long unsigned int _48;
  struct stbtt__edge * _49;
  long unsigned int _51;
  long unsigned int _52;
  struct stbtt__edge * _53;
  long unsigned int _54;
  long unsigned int _55;
  struct stbtt__edge * _56;
  long unsigned int _58;
  long unsigned int _59;
  struct stbtt__edge * _60;
  long unsigned int _63;
  long unsigned int _64;
  struct stbtt__edge * _65;
  long unsigned int _67;
  long unsigned int _68;
  struct stbtt__edge * _69;
  long unsigned int _73;
  long unsigned int _74;
  struct stbtt__edge * _75;
  float _76;
  float _77;
  bool _78;
  bool _79;
  float _81;
  long unsigned int _82;
  long unsigned int _83;
  struct stbtt__edge * _84;
  float _85;
  bool _86;
  bool _87;
  long unsigned int _89;
  long unsigned int _90;
  struct stbtt__edge * _91;
  long unsigned int _93;
  long unsigned int _94;
  struct stbtt__edge * _95;
  long unsigned int _96;
  long unsigned int _97;
  struct stbtt__edge * _98;
  long unsigned int _100;
  long unsigned int _101;
  struct stbtt__edge * _102;
  int _106;
  long unsigned int _108;
  long unsigned int _109;
  int _112;
  long unsigned int _113;
  long unsigned int _114;
  struct stbtt__edge * _115;

  <bb 2>:
  # p_1 = PHI <p_14(D)(0), p_2(21)>
  # n_3 = PHI <n_15(D)(0), n_4(21)>
  if (n_3 <= 12)
    goto <bb 22>;
  else
    goto <bb 3>;

  <bb 3>:
  m_17 = n_3 >> 1;
  _18 = p_1->y0;
  _19 = (long unsigned int) m_17;
  _20 = _19 * 20;
  _21 = p_1 + _20;
  _22 = _21->y0;
  _23 = _18 < _22;
  c01_24 = (int) _23;
  _25 = (long unsigned int) m_17;
  _26 = _25 * 20;
  _27 = p_1 + _26;
  _28 = _27->y0;
  _29 = (long unsigned int) n_3;
  _30 = _29 * 20;
  _31 = _30 + 18446744073709551596;
  _32 = p_1 + _31;
  _33 = _32->y0;
  _34 = _28 < _33;
  c12_35 = (int) _34;
  if (c01_24 != c12_35)
    goto <bb 4>;
  else
    goto <bb 8>;

  <bb 4>:
  _36 = p_1->y0;
  _37 = (long unsigned int) n_3;
  _38 = _37 * 20;
  _39 = _38 + 18446744073709551596;
  _40 = p_1 + _39;
  _41 = _40->y0;
  _42 = _36 < _41;
  c_43 = (int) _42;
  if (c_43 != c12_35)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  iftmp.217_44 = n_3 + -1;
  goto <bb 7>;

  <bb 6>:
  iftmp.217_45 = 0;

  <bb 7>:
  # iftmp.217_8 = PHI <iftmp.217_44(5), iftmp.217_45(6)>
  z_46 = iftmp.217_8;
  _47 = (long unsigned int) z_46;
  _48 = _47 * 20;
  _49 = p_1 + _48;
  t = MEM[(const struct stbtt__edge &)_49];
  _51 = (long unsigned int) z_46;
  _52 = _51 * 20;
  _53 = p_1 + _52;
  _54 = (long unsigned int) m_17;
  _55 = _54 * 20;
  _56 = p_1 + _55;
  *_53 = MEM[(const struct stbtt__edge &)_56];
  _58 = (long unsigned int) m_17;
  _59 = _58 * 20;
  _60 = p_1 + _59;
  *_60 = t;

  <bb 8>:
  t = MEM[(const struct stbtt__edge &)p_1];
  _63 = (long unsigned int) m_17;
  _64 = _63 * 20;
  _65 = p_1 + _64;
  *p_1 = MEM[(const struct stbtt__edge &)_65];
  _67 = (long unsigned int) m_17;
  _68 = _67 * 20;
  _69 = p_1 + _68;
  *_69 = t;
  i_71 = 1;
  j_72 = n_3 + -1;

  <bb 9>:
  # i_5 = PHI <i_71(8), i_80(11), i_104(17)>
  # j_6 = PHI <j_72(8), j_6(11), j_105(17)>
  _73 = (long unsigned int) i_5;
  _74 = _73 * 20;
  _75 = p_1 + _74;
  _76 = _75->y0;
  _77 = p_1->y0;
  _78 = _76 < _77;
  _79 = ~_78;
  if (_79 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  goto <bb 12>;

  <bb 11>:
  i_80 = i_5 + 1;
  goto <bb 9>;

  <bb 12>:
  # j_7 = PHI <j_6(10), j_88(14)>
  _81 = p_1->y0;
  _82 = (long unsigned int) j_7;
  _83 = _82 * 20;
  _84 = p_1 + _83;
  _85 = _84->y0;
  _86 = _81 < _85;
  _87 = ~_86;
  if (_87 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  goto <bb 15>;

  <bb 14>:
  j_88 = j_7 + -1;
  goto <bb 12>;

  <bb 15>:
  if (i_5 >= j_7)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  goto <bb 18>;

  <bb 17>:
  _89 = (long unsigned int) i_5;
  _90 = _89 * 20;
  _91 = p_1 + _90;
  t = MEM[(const struct stbtt__edge &)_91];
  _93 = (long unsigned int) i_5;
  _94 = _93 * 20;
  _95 = p_1 + _94;
  _96 = (long unsigned int) j_7;
  _97 = _96 * 20;
  _98 = p_1 + _97;
  *_95 = MEM[(const struct stbtt__edge &)_98];
  _100 = (long unsigned int) j_7;
  _101 = _100 * 20;
  _102 = p_1 + _101;
  *_102 = t;
  i_104 = i_5 + 1;
  j_105 = j_7 + -1;
  goto <bb 9>;

  <bb 18>:
  _106 = n_3 - i_5;
  if (_106 > j_7)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  stbtt__sort_edges_quicksort (p_1, j_7);
  _108 = (long unsigned int) i_5;
  _109 = _108 * 20;
  p_110 = p_1 + _109;
  n_111 = n_3 - i_5;
  goto <bb 21>;

  <bb 20>:
  _112 = n_3 - i_5;
  _113 = (long unsigned int) i_5;
  _114 = _113 * 20;
  _115 = p_1 + _114;
  stbtt__sort_edges_quicksort (_115, _112);
  n_117 = j_7;

  <bb 21>:
  # p_2 = PHI <p_110(19), p_1(20)>
  # n_4 = PHI <n_111(19), n_117(20)>
  t ={v} {CLOBBER};
  goto <bb 2>;

  <bb 22>:
  return;

}



;; Function void stbtt__sort_edges(stbtt__edge*, int) (_ZL17stbtt__sort_edgesP11stbtt__edgei, funcdef_no=634, decl_uid=16722, cgraph_uid=533, symbol_order=533)

void stbtt__sort_edges(stbtt__edge*, int) (struct stbtt__edge * p, int n)
{
  <bb 2>:
  stbtt__sort_edges_quicksort (p_2(D), n_3(D));
  stbtt__sort_edges_ins_sort (p_2(D), n_3(D));
  return;

}



;; Function void stbtt__rasterize(stbtt__bitmap*, stbtt__point*, int*, int, float, float, float, float, int, int, int, void*) (_ZL16stbtt__rasterizeP13stbtt__bitmapP12stbtt__pointPiiffffiiiPv, funcdef_no=635, decl_uid=16741, cgraph_uid=534, symbol_order=534)

void stbtt__rasterize(stbtt__bitmap*, stbtt__point*, int*, int, float, float, float, float, int, int, int, void*) (struct stbtt__bitmap * result, struct stbtt__point * pts, int * wcount, int windings, float scale_x, float scale_y, float shift_x, float shift_y, int off_x, int off_y, int invert, void * userdata)
{
  struct stbtt__edge * D.23611;
  int b;
  int a;
  struct stbtt__point * p;
  int vsubsample;
  int m;
  int k;
  int j;
  int i;
  int n;
  struct stbtt__edge * e;
  float y_scale_inv;
  void * userdata.221;
  int k.220;
  float D.23607;
  float D.23606;
  float D.23605;
  float D.23604;
  float D.23603;
  struct stbtt__point * D.23602;
  long unsigned int D.23601;
  long unsigned int D.23600;
  struct stbtt__edge * D.23599;
  long unsigned int D.23598;
  long unsigned int D.23597;
  float D.23596;
  float D.23595;
  float D.23594;
  struct stbtt__point * D.23593;
  long unsigned int D.23592;
  long unsigned int D.23591;
  struct stbtt__edge * D.23590;
  long unsigned int D.23589;
  long unsigned int D.23588;
  float D.23587;
  float D.23586;
  float D.23585;
  float D.23584;
  float D.23583;
  struct stbtt__point * D.23582;
  long unsigned int D.23581;
  long unsigned int D.23580;
  struct stbtt__edge * D.23579;
  long unsigned int D.23578;
  long unsigned int D.23577;
  float D.23576;
  float D.23575;
  float D.23574;
  struct stbtt__point * D.23573;
  long unsigned int D.23572;
  long unsigned int D.23571;
  struct stbtt__edge * D.23570;
  long unsigned int D.23569;
  long unsigned int D.23568;
  struct stbtt__edge * D.23566;
  long unsigned int D.23565;
  long unsigned int D.23564;
  float D.23561;
  struct stbtt__point * D.23560;
  long unsigned int D.23559;
  long unsigned int D.23558;
  float D.23557;
  struct stbtt__point * D.23556;
  long unsigned int D.23555;
  long unsigned int D.23554;
  float D.23552;
  struct stbtt__point * D.23551;
  long unsigned int D.23550;
  long unsigned int D.23549;
  float D.23548;
  struct stbtt__point * D.23547;
  long unsigned int D.23546;
  long unsigned int D.23545;
  bool iftmp.219;
  struct stbtt__edge * D.23541;
  long unsigned int D.23540;
  long unsigned int D.23539;
  float D.23536;
  struct stbtt__point * D.23535;
  long unsigned int D.23534;
  long unsigned int D.23533;
  float D.23532;
  struct stbtt__point * D.23531;
  long unsigned int D.23530;
  long unsigned int D.23529;
  int D.23527;
  int * D.23526;
  long unsigned int D.23525;
  long unsigned int D.23524;
  int D.23522;
  int * D.23521;
  long unsigned int D.23520;
  long unsigned int D.23519;
  int D.23518;
  int * D.23517;
  long unsigned int D.23516;
  long unsigned int D.23515;
  long unsigned int D.23514;
  long unsigned int D.23513;
  long unsigned int D.23508;
  long unsigned int D.23507;
  int D.23506;
  int D.23505;
  int * D.23504;
  long unsigned int D.23503;
  long unsigned int D.23502;
  float iftmp.218;
  float iftmp.218_12;
  bool iftmp.219_13;
  float iftmp.218_21;
  float iftmp.218_22;
  long unsigned int _28;
  long unsigned int _29;
  int * _31;
  int _33;
  int _36;
  long unsigned int _37;
  long unsigned int _38;
  struct stbtt__edge * _40;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int _49;
  long unsigned int _50;
  int * _51;
  int _52;
  long unsigned int _54;
  long unsigned int _55;
  int * _56;
  int _57;
  long unsigned int _60;
  long unsigned int _61;
  int * _62;
  int _63;
  long unsigned int _66;
  long unsigned int _67;
  struct stbtt__point * _68;
  float _69;
  long unsigned int _70;
  long unsigned int _71;
  struct stbtt__point * _72;
  float _73;
  long unsigned int _74;
  long unsigned int _75;
  struct stbtt__edge * _76;
  long unsigned int _78;
  long unsigned int _79;
  struct stbtt__point * _80;
  float _81;
  long unsigned int _82;
  long unsigned int _83;
  struct stbtt__point * _84;
  float _85;
  bool iftmp.219_86;
  long unsigned int _87;
  long unsigned int _88;
  struct stbtt__point * _89;
  float _90;
  long unsigned int _91;
  long unsigned int _92;
  struct stbtt__point * _93;
  float _94;
  bool iftmp.219_95;
  long unsigned int _96;
  long unsigned int _97;
  struct stbtt__edge * _98;
  long unsigned int _102;
  long unsigned int _103;
  struct stbtt__edge * _104;
  long unsigned int _105;
  long unsigned int _106;
  struct stbtt__point * _107;
  float _108;
  float _110;
  float _112;
  long unsigned int _114;
  long unsigned int _115;
  struct stbtt__edge * _116;
  long unsigned int _117;
  long unsigned int _118;
  struct stbtt__point * _119;
  float _120;
  float _121;
  float _123;
  float _124;
  float _125;
  long unsigned int _127;
  long unsigned int _128;
  struct stbtt__edge * _129;
  long unsigned int _130;
  long unsigned int _131;
  struct stbtt__point * _132;
  float _133;
  float _134;
  float _135;
  long unsigned int _137;
  long unsigned int _138;
  struct stbtt__edge * _139;
  long unsigned int _140;
  long unsigned int _141;
  struct stbtt__point * _142;
  float _143;
  float _144;
  float _145;
  float _146;
  float _147;
  int k.220_150;
  void * userdata.221_155;

  <bb 2>:
  if (invert_19(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.218_21 = -scale_y_20(D);
  goto <bb 5>;

  <bb 4>:
  iftmp.218_22 = scale_y_20(D);

  <bb 5>:
  # iftmp.218_12 = PHI <iftmp.218_21(3), iftmp.218_22(4)>
  y_scale_inv_23 = iftmp.218_12;
  vsubsample_24 = 1;
  n_25 = 0;
  i_26 = 0;

  <bb 6>:
  # n_1 = PHI <n_25(5), n_34(7)>
  # i_5 = PHI <i_26(5), i_35(7)>
  if (i_5 >= windings_27(D))
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _28 = (long unsigned int) i_5;
  _29 = _28 * 4;
  _31 = wcount_30(D) + _29;
  _33 = *_31;
  n_34 = _33 + n_1;
  i_35 = i_5 + 1;
  goto <bb 6>;

  <bb 8>:
  _36 = n_1 + 1;
  _37 = (long unsigned int) _36;
  _38 = _37 * 20;
  _40 = ImGui::MemAlloc (_38);
  e_41 = _40;
  if (e_41 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  goto <bb 25> (<L23>);

  <bb 10>:
  n_42 = 0;
  m_43 = 0;
  i_44 = 0;

  <bb 11>:
  # n_2 = PHI <n_42(10), n_3(23)>
  # i_6 = PHI <i_44(10), i_153(23)>
  # m_9 = PHI <m_43(10), m_53(23)>
  if (i_6 >= windings_27(D))
    goto <bb 24>;
  else
    goto <bb 12>;

  <bb 12>:
  _45 = (long unsigned int) m_9;
  _46 = _45 * 8;
  p_48 = pts_47(D) + _46;
  _49 = (long unsigned int) i_6;
  _50 = _49 * 4;
  _51 = wcount_30(D) + _50;
  _52 = *_51;
  m_53 = _52 + m_9;
  _54 = (long unsigned int) i_6;
  _55 = _54 * 4;
  _56 = wcount_30(D) + _55;
  _57 = *_56;
  j_58 = _57 + -1;
  k_59 = 0;

  <bb 13>:
  # n_3 = PHI <n_2(12), n_4(22)>
  # j_7 = PHI <j_58(12), j_152(22)>
  # k_8 = PHI <k_59(12), k_151(22)>
  _60 = (long unsigned int) i_6;
  _61 = _60 * 4;
  _62 = wcount_30(D) + _61;
  _63 = *_62;
  if (_63 <= k_8)
    goto <bb 23>;
  else
    goto <bb 14>;

  <bb 14>:
  a_64 = k_8;
  b_65 = j_7;
  _66 = (long unsigned int) j_7;
  _67 = _66 * 8;
  _68 = p_48 + _67;
  _69 = _68->y;
  _70 = (long unsigned int) k_8;
  _71 = _70 * 8;
  _72 = p_48 + _71;
  _73 = _72->y;
  if (_69 == _73)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  goto <bb 22>;

  <bb 16>:
  _74 = (long unsigned int) n_3;
  _75 = _74 * 20;
  _76 = e_41 + _75;
  _76->invert = 0;
  if (invert_19(D) != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _78 = (long unsigned int) j_7;
  _79 = _78 * 8;
  _80 = p_48 + _79;
  _81 = _80->y;
  _82 = (long unsigned int) k_8;
  _83 = _82 * 8;
  _84 = p_48 + _83;
  _85 = _84->y;
  iftmp.219_86 = _81 > _85;
  goto <bb 19>;

  <bb 18>:
  _87 = (long unsigned int) j_7;
  _88 = _87 * 8;
  _89 = p_48 + _88;
  _90 = _89->y;
  _91 = (long unsigned int) k_8;
  _92 = _91 * 8;
  _93 = p_48 + _92;
  _94 = _93->y;
  iftmp.219_95 = _90 < _94;

  <bb 19>:
  # iftmp.219_13 = PHI <iftmp.219_86(17), iftmp.219_95(18)>
  if (iftmp.219_13 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _96 = (long unsigned int) n_3;
  _97 = _96 * 20;
  _98 = e_41 + _97;
  _98->invert = 1;
  a_100 = j_7;
  b_101 = k_8;

  <bb 21>:
  # a_10 = PHI <a_64(19), a_100(20)>
  # b_11 = PHI <b_65(19), b_101(20)>
  _102 = (long unsigned int) n_3;
  _103 = _102 * 20;
  _104 = e_41 + _103;
  _105 = (long unsigned int) a_10;
  _106 = _105 * 8;
  _107 = p_48 + _106;
  _108 = _107->x;
  _110 = _108 * scale_x_109(D);
  _112 = _110 + shift_x_111(D);
  _104->x0 = _112;
  _114 = (long unsigned int) n_3;
  _115 = _114 * 20;
  _116 = e_41 + _115;
  _117 = (long unsigned int) a_10;
  _118 = _117 * 8;
  _119 = p_48 + _118;
  _120 = _119->y;
  _121 = _120 * y_scale_inv_23;
  _123 = _121 + shift_y_122(D);
  _124 = (float) vsubsample_24;
  _125 = _123 * _124;
  _116->y0 = _125;
  _127 = (long unsigned int) n_3;
  _128 = _127 * 20;
  _129 = e_41 + _128;
  _130 = (long unsigned int) b_11;
  _131 = _130 * 8;
  _132 = p_48 + _131;
  _133 = _132->x;
  _134 = _133 * scale_x_109(D);
  _135 = _134 + shift_x_111(D);
  _129->x1 = _135;
  _137 = (long unsigned int) n_3;
  _138 = _137 * 20;
  _139 = e_41 + _138;
  _140 = (long unsigned int) b_11;
  _141 = _140 * 8;
  _142 = p_48 + _141;
  _143 = _142->y;
  _144 = _143 * y_scale_inv_23;
  _145 = _144 + shift_y_122(D);
  _146 = (float) vsubsample_24;
  _147 = _145 * _146;
  _139->y1 = _147;
  n_149 = n_3 + 1;

  <bb 22>:
  # n_4 = PHI <n_3(15), n_149(21)>
  k.220_150 = k_8;
  k_151 = k.220_150 + 1;
  j_152 = k.220_150;
  goto <bb 13>;

  <bb 23>:
  i_153 = i_6 + 1;
  goto <bb 11>;

  <bb 24>:
  stbtt__sort_edges (e_41, n_2);
  userdata.221_155 = userdata;
  stbtt__rasterize_sorted_edges (result_156(D), e_41, n_2, vsubsample_24, off_x_157(D), off_y_158(D), userdata.221_155);
  ImGui::MemFree (e_41);

<L23>:
  return;

}



;; Function void stbtt__add_point(stbtt__point*, int, float, float) (_ZL16stbtt__add_pointP12stbtt__pointiff, funcdef_no=636, decl_uid=16764, cgraph_uid=535, symbol_order=535)

void stbtt__add_point(stbtt__point*, int, float, float) (struct stbtt__point * points, int n, float x, float y)
{
  struct stbtt__point * D.23619;
  long unsigned int D.23618;
  long unsigned int D.23617;
  struct stbtt__point * D.23616;
  long unsigned int D.23615;
  long unsigned int D.23614;
  long unsigned int _5;
  long unsigned int _6;
  struct stbtt__point * _7;
  long unsigned int _10;
  long unsigned int _11;
  struct stbtt__point * _12;

  <bb 2>:
  if (points_2(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 5> (<L2>);

  <bb 4>:
  _5 = (long unsigned int) n_4(D);
  _6 = _5 * 8;
  _7 = points_2(D) + _6;
  _7->x = x_8(D);
  _10 = (long unsigned int) n_4(D);
  _11 = _10 * 8;
  _12 = points_2(D) + _11;
  _12->y = y_13(D);

<L2>:
  return;

}



;; Function int stbtt__tesselate_curve(stbtt__point*, int*, float, float, float, float, float, float, float, int) (_ZL22stbtt__tesselate_curveP12stbtt__pointPifffffffi, funcdef_no=637, decl_uid=16776, cgraph_uid=536, symbol_order=536)

int stbtt__tesselate_curve(stbtt__point*, int*, float, float, float, float, float, float, float, int) (struct stbtt__point * points, int * num_points, float x0, float y0, float x1, float y1, float x2, float y2, float objspace_flatness_squared, int n)
{
  float dy;
  float dx;
  float my;
  float mx;
  int D.23652;
  int D.23651;
  int D.23650;
  float D.23648;
  float D.23647;
  float D.23646;
  float D.23645;
  int D.23644;
  float D.23643;
  float D.23642;
  float D.23641;
  float D.23640;
  int D.23639;
  float D.23636;
  float D.23635;
  float D.23634;
  int D.23633;
  float D.23630;
  float D.23629;
  float D.23628;
  float D.23627;
  float D.23626;
  float D.23625;
  float D.23624;
  float D.23623;
  float D.23622;
  float D.23621;
  int _1;
  float _5;
  float _7;
  float _9;
  float _12;
  float _14;
  float _16;
  float _18;
  float _19;
  float _21;
  float _22;
  int _25;
  float _27;
  float _28;
  float _29;
  int _31;
  float _32;
  float _33;
  float _34;
  float _35;
  int _39;
  float _40;
  float _41;
  float _42;
  float _43;
  int _45;
  int _47;
  int _48;
  int _50;

  <bb 2>:
  _5 = x1_4(D) * 2.0e+0;
  _7 = _5 + x0_6(D);
  _9 = _7 + x2_8(D);
  mx_10 = _9 / 4.0e+0;
  _12 = y1_11(D) * 2.0e+0;
  _14 = _12 + y0_13(D);
  _16 = _14 + y2_15(D);
  my_17 = _16 / 4.0e+0;
  _18 = x0_6(D) + x2_8(D);
  _19 = _18 / 2.0e+0;
  dx_20 = _19 - mx_10;
  _21 = y0_13(D) + y2_15(D);
  _22 = _21 / 2.0e+0;
  dy_23 = _22 - my_17;
  if (n_24(D) > 16)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _25 = 1;
  goto <bb 8> (<L5>);

  <bb 4>:
  _27 = dx_20 * dx_20;
  _28 = dy_23 * dy_23;
  _29 = _27 + _28;
  if (_29 > objspace_flatness_squared_30(D))
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _31 = n_24(D) + 1;
  _32 = y0_13(D) + y1_11(D);
  _33 = _32 / 2.0e+0;
  _34 = x0_6(D) + x1_4(D);
  _35 = _34 / 2.0e+0;
  stbtt__tesselate_curve (points_36(D), num_points_37(D), x0_6(D), y0_13(D), _35, _33, mx_10, my_17, objspace_flatness_squared_30(D), _31);
  _39 = n_24(D) + 1;
  _40 = y1_11(D) + y2_15(D);
  _41 = _40 / 2.0e+0;
  _42 = x1_4(D) + x2_8(D);
  _43 = _42 / 2.0e+0;
  stbtt__tesselate_curve (points_36(D), num_points_37(D), mx_10, my_17, _43, _41, x2_8(D), y2_15(D), objspace_flatness_squared_30(D), _39);
  goto <bb 7>;

  <bb 6>:
  _45 = *num_points_37(D);
  stbtt__add_point (points_36(D), _45, x2_8(D), y2_15(D));
  _47 = *num_points_37(D);
  _48 = _47 + 1;
  *num_points_37(D) = _48;

  <bb 7>:
  _50 = 1;

  # _1 = PHI <_25(3), _50(7)>
<L5>:
  return _1;

}



;; Function void stbtt__tesselate_cubic(stbtt__point*, int*, float, float, float, float, float, float, float, float, float, int) (_ZL22stbtt__tesselate_cubicP12stbtt__pointPifffffffffi, funcdef_no=638, decl_uid=16794, cgraph_uid=537, symbol_order=537)

void stbtt__tesselate_cubic(stbtt__point*, int*, float, float, float, float, float, float, float, float, float, int) (struct stbtt__point * points, int * num_points, float x0, float y0, float x1, float y1, float x2, float y2, float x3, float y3, float objspace_flatness_squared, int n)
{
  float my;
  float mx;
  float yb;
  float xb;
  float ya;
  float xa;
  float y23;
  float x23;
  float y12;
  float x12;
  float y01;
  float x01;
  float flatness_squared;
  float shortlen;
  float longlen;
  float dy;
  float dx;
  float dy2;
  float dx2;
  float dy1;
  float dx1;
  float dy0;
  float dx0;
  int D.23693;
  int D.23692;
  int D.23691;
  int D.23689;
  int D.23688;
  float D.23687;
  float D.23686;
  float D.23685;
  float D.23684;
  float D.23683;
  float D.23682;
  float D.23681;
  float D.23680;
  float D.23679;
  float D.23678;
  float D.23677;
  float D.23676;
  float D.23671;
  float D.23670;
  float D.23669;
  float D.23668;
  float D.23667;
  float D.23666;
  float D.23665;
  float D.23664;
  float D.23663;
  float D.23662;
  float D.23661;
  float D.23660;
  float D.23659;
  float D.23658;
  float D.23657;
  float D.23656;
  float D.23655;
  float D.23654;
  float _18;
  float _19;
  float _20;
  float _23;
  float _24;
  float _25;
  float _26;
  float _28;
  float _29;
  float _30;
  float _31;
  float _32;
  float _34;
  float _36;
  float _37;
  float _38;
  float _41;
  float _42;
  float _46;
  float _48;
  float _50;
  float _52;
  float _54;
  float _56;
  float _58;
  float _60;
  float _62;
  float _64;
  float _66;
  float _68;
  int _70;
  int _74;
  int _76;
  int _78;
  int _79;

  <bb 2>:
  dx0_4 = x1_2(D) - x0_3(D);
  dy0_7 = y1_5(D) - y0_6(D);
  dx1_9 = x2_8(D) - x1_2(D);
  dy1_11 = y2_10(D) - y1_5(D);
  dx2_13 = x3_12(D) - x2_8(D);
  dy2_15 = y3_14(D) - y2_10(D);
  dx_16 = x3_12(D) - x0_3(D);
  dy_17 = y3_14(D) - y0_6(D);
  _18 = dx0_4 * dx0_4;
  _19 = dy0_7 * dy0_7;
  _20 = _18 + _19;
  _23 = std::sqrt (_20);
  _24 = dx1_9 * dx1_9;
  _25 = dy1_11 * dy1_11;
  _26 = _24 + _25;
  _28 = std::sqrt (_26);
  _29 = _23 + _28;
  _30 = dx2_13 * dx2_13;
  _31 = dy2_15 * dy2_15;
  _32 = _30 + _31;
  _34 = std::sqrt (_32);
  longlen_35 = _29 + _34;
  _36 = dx_16 * dx_16;
  _37 = dy_17 * dy_17;
  _38 = _36 + _37;
  shortlen_40 = std::sqrt (_38);
  _41 = longlen_35 * longlen_35;
  _42 = shortlen_40 * shortlen_40;
  flatness_squared_43 = _41 - _42;
  if (n_44(D) > 16)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  if (flatness_squared_43 > objspace_flatness_squared_45(D))
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _46 = x0_3(D) + x1_2(D);
  x01_47 = _46 / 2.0e+0;
  _48 = y0_6(D) + y1_5(D);
  y01_49 = _48 / 2.0e+0;
  _50 = x1_2(D) + x2_8(D);
  x12_51 = _50 / 2.0e+0;
  _52 = y1_5(D) + y2_10(D);
  y12_53 = _52 / 2.0e+0;
  _54 = x2_8(D) + x3_12(D);
  x23_55 = _54 / 2.0e+0;
  _56 = y2_10(D) + y3_14(D);
  y23_57 = _56 / 2.0e+0;
  _58 = x01_47 + x12_51;
  xa_59 = _58 / 2.0e+0;
  _60 = y01_49 + y12_53;
  ya_61 = _60 / 2.0e+0;
  _62 = x12_51 + x23_55;
  xb_63 = _62 / 2.0e+0;
  _64 = y12_53 + y23_57;
  yb_65 = _64 / 2.0e+0;
  _66 = xa_59 + xb_63;
  mx_67 = _66 / 2.0e+0;
  _68 = ya_61 + yb_65;
  my_69 = _68 / 2.0e+0;
  _70 = n_44(D) + 1;
  stbtt__tesselate_cubic (points_71(D), num_points_72(D), x0_3(D), y0_6(D), x01_47, y01_49, xa_59, ya_61, mx_67, my_69, objspace_flatness_squared_45(D), _70);
  _74 = n_44(D) + 1;
  stbtt__tesselate_cubic (points_71(D), num_points_72(D), mx_67, my_69, xb_63, yb_65, x23_55, y23_57, x3_12(D), y3_14(D), objspace_flatness_squared_45(D), _74);
  goto <bb 7> (<L5>);

  <bb 6>:
  _76 = *num_points_72(D);
  stbtt__add_point (points_71(D), _76, x3_12(D), y3_14(D));
  _78 = *num_points_72(D);
  _79 = _78 + 1;
  *num_points_72(D) = _79;

<L5>:
  return;

}



;; Function stbtt__point* stbtt_FlattenCurves(stbtt_vertex*, int, float, int**, int*, void*) (_ZL19stbtt_FlattenCurvesP12stbtt_vertexifPPiS1_Pv, funcdef_no=639, decl_uid=16825, cgraph_uid=538, symbol_order=538)

stbtt__point* stbtt_FlattenCurves(stbtt_vertex*, int, float, int**, int*, void*) (struct stbtt_vertex * vertices, int num_verts, float objspace_flatness, int * * contour_lengths, int * num_contours, void * userdata)
{
  struct stbtt__point * D.23837;
  void * D.23836;
  float y;
  float x;
  int pass;
  int start;
  int n;
  int i;
  float objspace_flatness_squared;
  int num_points;
  struct stbtt__point * points;
  int * D.23834;
  int D.23833;
  int num_points.230;
  int * D.23831;
  long unsigned int D.23830;
  long unsigned int D.23829;
  int * D.23828;
  short int D.23826;
  struct stbtt_vertex * D.23825;
  long unsigned int D.23824;
  long unsigned int D.23823;
  short int D.23822;
  struct stbtt_vertex * D.23821;
  long unsigned int D.23820;
  long unsigned int D.23819;
  float D.23818;
  short int D.23817;
  struct stbtt_vertex * D.23816;
  long unsigned int D.23815;
  long unsigned int D.23814;
  float D.23813;
  short int D.23812;
  struct stbtt_vertex * D.23811;
  long unsigned int D.23810;
  long unsigned int D.23809;
  float D.23808;
  short int D.23807;
  struct stbtt_vertex * D.23806;
  long unsigned int D.23805;
  long unsigned int D.23804;
  float D.23803;
  short int D.23802;
  struct stbtt_vertex * D.23801;
  long unsigned int D.23800;
  long unsigned int D.23799;
  float D.23798;
  short int D.23797;
  struct stbtt_vertex * D.23796;
  long unsigned int D.23795;
  long unsigned int D.23794;
  float D.23793;
  short int D.23792;
  struct stbtt_vertex * D.23791;
  long unsigned int D.23790;
  long unsigned int D.23789;
  short int D.23788;
  struct stbtt_vertex * D.23787;
  long unsigned int D.23786;
  long unsigned int D.23785;
  short int D.23784;
  struct stbtt_vertex * D.23783;
  long unsigned int D.23782;
  long unsigned int D.23781;
  float D.23780;
  short int D.23779;
  struct stbtt_vertex * D.23778;
  long unsigned int D.23777;
  long unsigned int D.23776;
  float D.23775;
  short int D.23774;
  struct stbtt_vertex * D.23773;
  long unsigned int D.23772;
  long unsigned int D.23771;
  float D.23770;
  short int D.23769;
  struct stbtt_vertex * D.23768;
  long unsigned int D.23767;
  long unsigned int D.23766;
  float D.23765;
  short int D.23764;
  struct stbtt_vertex * D.23763;
  long unsigned int D.23762;
  long unsigned int D.23761;
  int num_points.229;
  int num_points.228;
  int num_points.227;
  short int D.23757;
  struct stbtt_vertex * D.23756;
  long unsigned int D.23755;
  long unsigned int D.23754;
  short int D.23753;
  struct stbtt_vertex * D.23752;
  long unsigned int D.23751;
  long unsigned int D.23750;
  int num_points.226;
  int num_points.225;
  int num_points.224;
  short int D.23746;
  struct stbtt_vertex * D.23745;
  long unsigned int D.23744;
  long unsigned int D.23743;
  short int D.23742;
  struct stbtt_vertex * D.23741;
  long unsigned int D.23740;
  long unsigned int D.23739;
  int D.23737;
  int num_points.223;
  int * D.23735;
  long unsigned int D.23734;
  long unsigned int D.23733;
  int * D.23732;
  int D.23729;
  unsigned char D.23728;
  struct stbtt_vertex * D.23727;
  long unsigned int D.23726;
  long unsigned int D.23725;
  long unsigned int D.23719;
  long unsigned int D.23718;
  int num_points.222;
  int * D.23710;
  void * D.23709;
  long unsigned int D.23708;
  long unsigned int D.23707;
  struct stbtt__point * D.23706;
  unsigned char D.23700;
  struct stbtt_vertex * D.23699;
  long unsigned int D.23698;
  long unsigned int D.23697;
  struct stbtt__point * _17;
  long unsigned int _34;
  long unsigned int _35;
  struct stbtt_vertex * _37;
  unsigned char _38;
  struct stbtt__point * _43;
  long unsigned int _44;
  long unsigned int _45;
  void * _47;
  void * _48;
  int * _51;
  struct stbtt__point * _53;
  int num_points.222_57;
  long unsigned int _58;
  long unsigned int _59;
  struct stbtt__point * _61;
  int * _64;
  struct stbtt__point * _68;
  long unsigned int _72;
  long unsigned int _73;
  struct stbtt_vertex * _74;
  unsigned char _75;
  int _76;
  int * _77;
  long unsigned int _78;
  long unsigned int _79;
  int * _80;
  int num_points.223_81;
  int _82;
  long unsigned int _86;
  long unsigned int _87;
  struct stbtt_vertex * _88;
  short int _89;
  long unsigned int _91;
  long unsigned int _92;
  struct stbtt_vertex * _93;
  short int _94;
  int num_points.224_96;
  int num_points.225_97;
  int num_points.226_98;
  long unsigned int _101;
  long unsigned int _102;
  struct stbtt_vertex * _103;
  short int _104;
  long unsigned int _106;
  long unsigned int _107;
  struct stbtt_vertex * _108;
  short int _109;
  int num_points.227_111;
  int num_points.228_112;
  int num_points.229_113;
  long unsigned int _116;
  long unsigned int _117;
  struct stbtt_vertex * _118;
  short int _119;
  float _120;
  long unsigned int _121;
  long unsigned int _122;
  struct stbtt_vertex * _123;
  short int _124;
  float _125;
  long unsigned int _126;
  long unsigned int _127;
  struct stbtt_vertex * _128;
  short int _129;
  float _130;
  long unsigned int _131;
  long unsigned int _132;
  struct stbtt_vertex * _133;
  short int _134;
  float _135;
  long unsigned int _137;
  long unsigned int _138;
  struct stbtt_vertex * _139;
  short int _140;
  long unsigned int _142;
  long unsigned int _143;
  struct stbtt_vertex * _144;
  short int _145;
  long unsigned int _147;
  long unsigned int _148;
  struct stbtt_vertex * _149;
  short int _150;
  float _151;
  long unsigned int _152;
  long unsigned int _153;
  struct stbtt_vertex * _154;
  short int _155;
  float _156;
  long unsigned int _157;
  long unsigned int _158;
  struct stbtt_vertex * _159;
  short int _160;
  float _161;
  long unsigned int _162;
  long unsigned int _163;
  struct stbtt_vertex * _164;
  short int _165;
  float _166;
  long unsigned int _167;
  long unsigned int _168;
  struct stbtt_vertex * _169;
  short int _170;
  float _171;
  long unsigned int _172;
  long unsigned int _173;
  struct stbtt_vertex * _174;
  short int _175;
  float _176;
  long unsigned int _178;
  long unsigned int _179;
  struct stbtt_vertex * _180;
  short int _181;
  long unsigned int _183;
  long unsigned int _184;
  struct stbtt_vertex * _185;
  short int _186;
  int * _189;
  long unsigned int _190;
  long unsigned int _191;
  int * _192;
  int num_points.230_193;
  int _194;
  struct stbtt__point * _197;

  <bb 2>:
  points_25 = 0B;
  num_points = 0;
  objspace_flatness_squared_29 = objspace_flatness_28(D) * objspace_flatness_28(D);
  n_30 = 0;
  start_31 = 0;
  i_32 = 0;

  <bb 3>:
  # i_3 = PHI <i_32(2), i_40(6)>
  # n_5 = PHI <n_30(2), n_6(6)>
  if (i_3 >= num_verts_33(D))
    goto <bb 7>;
  else
    goto <bb 4>;

  <bb 4>:
  _34 = (long unsigned int) i_3;
  _35 = _34 * 14;
  _37 = vertices_36(D) + _35;
  _38 = _37->type;
  if (_38 == 1)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  n_39 = n_5 + 1;

  <bb 6>:
  # n_6 = PHI <n_5(4), n_39(5)>
  i_40 = i_3 + 1;
  goto <bb 3>;

  <bb 7>:
  *num_contours_41(D) = n_5;
  if (n_5 == 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _43 = 0B;
  goto <bb 29>;

  <bb 9>:
  _44 = (long unsigned int) n_5;
  _45 = _44 * 4;
  _47 = ImGui::MemAlloc (_45);
  _48 = _47;
  *contour_lengths_49(D) = _48;
  _51 = *contour_lengths_49(D);
  if (_51 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  *num_contours_41(D) = 0;
  _53 = 0B;
  goto <bb 29>;

  <bb 11>:
  pass_54 = 0;

  <bb 12>:
  # points_1 = PHI <points_25(11), points_2(26)>
  # start_9 = PHI <start_31(11), start_10(26)>
  # pass_12 = PHI <pass_54(11), pass_196(26)>
  if (pass_12 > 1)
    goto <bb 27>;
  else
    goto <bb 13>;

  <bb 13>:
  x_55 = 0.0;
  y_56 = 0.0;
  if (pass_12 == 1)
    goto <bb 14>;
  else
    goto <bb 16>;

  <bb 14>:
  num_points.222_57 = num_points;
  _58 = (long unsigned int) num_points.222_57;
  _59 = _58 * 8;
  _61 = ImGui::MemAlloc (_59);
  points_62 = _61;
  if (points_62 == 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  goto <bb 28> (error);

  <bb 16>:
  # points_2 = PHI <points_1(13), points_62(14)>
  num_points = 0;
  n_70 = -1;
  i_71 = 0;

  <bb 17>:
  # i_4 = PHI <i_71(16), i_188(25)>
  # n_7 = PHI <n_70(16), n_8(25)>
  # start_10 = PHI <start_9(16), start_11(25)>
  # x_13 = PHI <x_55(16), x_14(25)>
  # y_15 = PHI <y_56(16), y_16(25)>
  if (i_4 >= num_verts_33(D))
    goto <bb 26>;
  else
    goto <bb 18>;

  <bb 18>:
  _72 = (long unsigned int) i_4;
  _73 = _72 * 14;
  _74 = vertices_36(D) + _73;
  _75 = _74->type;
  _76 = (int) _75;
  switch (_76) <default: <L26>, case 1: <L19>, case 2: <L23>, case 3: <L24>, case 4: <L25>>

<L19>:
  if (n_7 >= 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _77 = *contour_lengths_49(D);
  _78 = (long unsigned int) n_7;
  _79 = _78 * 4;
  _80 = _77 + _79;
  num_points.223_81 = num_points;
  _82 = num_points.223_81 - start_10;
  *_80 = _82;

  <bb 21>:
  n_84 = n_7 + 1;
  start_85 = num_points;
  _86 = (long unsigned int) i_4;
  _87 = _86 * 14;
  _88 = vertices_36(D) + _87;
  _89 = _88->x;
  x_90 = (float) _89;
  _91 = (long unsigned int) i_4;
  _92 = _91 * 14;
  _93 = vertices_36(D) + _92;
  _94 = _93->y;
  y_95 = (float) _94;
  num_points.224_96 = num_points;
  num_points.225_97 = num_points.224_96;
  num_points.226_98 = num_points.225_97 + 1;
  num_points = num_points.226_98;
  stbtt__add_point (points_2, num_points.225_97, x_90, y_95);
  goto <bb 25> (<L26>);

<L23>:
  _101 = (long unsigned int) i_4;
  _102 = _101 * 14;
  _103 = vertices_36(D) + _102;
  _104 = _103->x;
  x_105 = (float) _104;
  _106 = (long unsigned int) i_4;
  _107 = _106 * 14;
  _108 = vertices_36(D) + _107;
  _109 = _108->y;
  y_110 = (float) _109;
  num_points.227_111 = num_points;
  num_points.228_112 = num_points.227_111;
  num_points.229_113 = num_points.228_112 + 1;
  num_points = num_points.229_113;
  stbtt__add_point (points_2, num_points.228_112, x_105, y_110);
  goto <bb 25> (<L26>);

<L24>:
  _116 = (long unsigned int) i_4;
  _117 = _116 * 14;
  _118 = vertices_36(D) + _117;
  _119 = _118->y;
  _120 = (float) _119;
  _121 = (long unsigned int) i_4;
  _122 = _121 * 14;
  _123 = vertices_36(D) + _122;
  _124 = _123->x;
  _125 = (float) _124;
  _126 = (long unsigned int) i_4;
  _127 = _126 * 14;
  _128 = vertices_36(D) + _127;
  _129 = _128->cy;
  _130 = (float) _129;
  _131 = (long unsigned int) i_4;
  _132 = _131 * 14;
  _133 = vertices_36(D) + _132;
  _134 = _133->cx;
  _135 = (float) _134;
  stbtt__tesselate_curve (points_2, &num_points, x_13, y_15, _135, _130, _125, _120, objspace_flatness_squared_29, 0);
  _137 = (long unsigned int) i_4;
  _138 = _137 * 14;
  _139 = vertices_36(D) + _138;
  _140 = _139->x;
  x_141 = (float) _140;
  _142 = (long unsigned int) i_4;
  _143 = _142 * 14;
  _144 = vertices_36(D) + _143;
  _145 = _144->y;
  y_146 = (float) _145;
  goto <bb 25> (<L26>);

<L25>:
  _147 = (long unsigned int) i_4;
  _148 = _147 * 14;
  _149 = vertices_36(D) + _148;
  _150 = _149->y;
  _151 = (float) _150;
  _152 = (long unsigned int) i_4;
  _153 = _152 * 14;
  _154 = vertices_36(D) + _153;
  _155 = _154->x;
  _156 = (float) _155;
  _157 = (long unsigned int) i_4;
  _158 = _157 * 14;
  _159 = vertices_36(D) + _158;
  _160 = _159->cy1;
  _161 = (float) _160;
  _162 = (long unsigned int) i_4;
  _163 = _162 * 14;
  _164 = vertices_36(D) + _163;
  _165 = _164->cx1;
  _166 = (float) _165;
  _167 = (long unsigned int) i_4;
  _168 = _167 * 14;
  _169 = vertices_36(D) + _168;
  _170 = _169->cy;
  _171 = (float) _170;
  _172 = (long unsigned int) i_4;
  _173 = _172 * 14;
  _174 = vertices_36(D) + _173;
  _175 = _174->cx;
  _176 = (float) _175;
  stbtt__tesselate_cubic (points_2, &num_points, x_13, y_15, _176, _171, _166, _161, _156, _151, objspace_flatness_squared_29, 0);
  _178 = (long unsigned int) i_4;
  _179 = _178 * 14;
  _180 = vertices_36(D) + _179;
  _181 = _180->x;
  x_182 = (float) _181;
  _183 = (long unsigned int) i_4;
  _184 = _183 * 14;
  _185 = vertices_36(D) + _184;
  _186 = _185->y;
  y_187 = (float) _186;

  # n_8 = PHI <n_7(18), n_84(21), n_7(22), n_7(23), n_7(24)>
  # start_11 = PHI <start_10(18), start_85(21), start_10(22), start_10(23), start_10(24)>
  # x_14 = PHI <x_13(18), x_90(21), x_105(22), x_141(23), x_182(24)>
  # y_16 = PHI <y_15(18), y_95(21), y_110(22), y_146(23), y_187(24)>
<L26>:
  i_188 = i_4 + 1;
  goto <bb 17>;

  <bb 26>:
  _189 = *contour_lengths_49(D);
  _190 = (long unsigned int) n_7;
  _191 = _190 * 4;
  _192 = _189 + _191;
  num_points.230_193 = num_points;
  _194 = num_points.230_193 - start_10;
  *_192 = _194;
  pass_196 = pass_12 + 1;
  goto <bb 12>;

  <bb 27>:
  _197 = points_1;
  goto <bb 29>;

error:
  ImGui::MemFree (points_62);
  _64 = *contour_lengths_49(D);
  ImGui::MemFree (_64);
  *contour_lengths_49(D) = 0B;
  *num_contours_41(D) = 0;
  _68 = 0B;

  <bb 29>:
  # _17 = PHI <_43(8), _53(10), _197(27), _68(28)>
  num_points ={v} {CLOBBER};

<L32>:
  return _17;

}



;; Function void stbtt_Rasterize(stbtt__bitmap*, float, stbtt_vertex*, int, float, float, float, float, int, int, int, void*) (stbtt_Rasterize, funcdef_no=640, decl_uid=15519, cgraph_uid=539, symbol_order=539)

void stbtt_Rasterize(stbtt__bitmap*, float, stbtt_vertex*, int, float, float, float, float, int, int, int, void*) (struct stbtt__bitmap * result, float flatness_in_pixels, struct stbtt_vertex * vertices, int num_verts, float scale_x, float scale_y, float shift_x, float shift_y, int x_off, int y_off, int invert, void * userdata)
{
  struct stbtt__point * D.23853;
  struct stbtt__point * windings;
  int * winding_lengths;
  int winding_count;
  float scale;
  int * winding_lengths.236;
  int * winding_lengths.235;
  int winding_count.234;
  void * userdata.233;
  float D.23845;
  void * userdata.232;
  float iftmp.231;
  float iftmp.231_1;
  float iftmp.231_6;
  float iftmp.231_7;
  void * userdata.232_12;
  float _14;
  struct stbtt__point * _18;
  void * userdata.233_20;
  int winding_count.234_21;
  int * winding_lengths.235_22;
  int * winding_lengths.236_30;

  <bb 2>:
  if (scale_x_4(D) > scale_y_5(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.231_6 = scale_y_5(D);
  goto <bb 5>;

  <bb 4>:
  iftmp.231_7 = scale_x_4(D);

  <bb 5>:
  # iftmp.231_1 = PHI <iftmp.231_6(3), iftmp.231_7(4)>
  scale_8 = iftmp.231_1;
  winding_count = 0;
  winding_lengths = 0B;
  userdata.232_12 = userdata;
  _14 = flatness_in_pixels_13(D) / scale_8;
  _18 = stbtt_FlattenCurves (vertices_15(D), num_verts_16(D), _14, &winding_lengths, &winding_count, userdata.232_12);
  windings_19 = _18;
  if (windings_19 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  userdata.233_20 = userdata;
  winding_count.234_21 = winding_count;
  winding_lengths.235_22 = winding_lengths;
  stbtt__rasterize (result_23(D), windings_19, winding_lengths.235_22, winding_count.234_21, scale_x_4(D), scale_y_5(D), shift_x_24(D), shift_y_25(D), x_off_26(D), y_off_27(D), invert_28(D), userdata.233_20);
  winding_lengths.236_30 = winding_lengths;
  ImGui::MemFree (winding_lengths.236_30);
  ImGui::MemFree (windings_19);

  <bb 7>:
  winding_count ={v} {CLOBBER};
  winding_lengths ={v} {CLOBBER};
  return;

}



;; Function void stbtt_FreeBitmap(unsigned char*, void*) (stbtt_FreeBitmap, funcdef_no=641, decl_uid=15349, cgraph_uid=540, symbol_order=540)

void stbtt_FreeBitmap(unsigned char*, void*) (unsigned char * bitmap, void * userdata)
{
  <bb 2>:
  ImGui::MemFree (bitmap_2(D));
  return;

}



;; Function unsigned char* stbtt_GetGlyphBitmapSubpixel(const stbtt_fontinfo*, float, float, float, float, int, int*, int*, int*, int*) (stbtt_GetGlyphBitmapSubpixel, funcdef_no=642, decl_uid=15444, cgraph_uid=541, symbol_order=541)

unsigned char* stbtt_GetGlyphBitmapSubpixel(const stbtt_fontinfo*, float, float, float, float, int, int*, int*, int*, int*) (const struct stbtt_fontinfo * info, float scale_x, float scale_y, float shift_x, float shift_y, int glyph, int * width, int * height, int * xoff, int * yoff)
{
  void * D.23911;
  int D.23910;
  int num_verts;
  struct stbtt_vertex * vertices;
  struct stbtt__bitmap gbm;
  int iy1;
  int ix1;
  int iy0;
  int ix0;
  struct stbtt_vertex * vertices.247;
  struct stbtt_vertex * vertices.246;
  int ix0.245;
  int iy0.244;
  void * D.23902;
  int D.23901;
  unsigned char * D.23898;
  void * D.23897;
  long unsigned int D.23896;
  int D.23895;
  int D.23894;
  int D.23893;
  int D.23890;
  int D.23887;
  int iy0.243;
  int ix0.242;
  int D.23877;
  int D.23873;
  int D.23870;
  int iy0.241;
  int iy1.240;
  int D.23867;
  int ix0.239;
  int ix1.238;
  unsigned char * D.23863;
  struct stbtt_vertex * vertices.237;
  unsigned char * _3;
  int _15;
  struct stbtt_vertex * vertices.237_20;
  unsigned char * _22;
  int ix1.238_27;
  int ix0.239_28;
  int _29;
  int iy1.240_31;
  int iy0.241_32;
  int _33;
  int _37;
  int _40;
  int ix0.242_43;
  int iy0.243_46;
  int _48;
  int _49;
  int _50;
  int _51;
  int _52;
  long unsigned int _53;
  void * _55;
  void * _56;
  unsigned char * _58;
  int _59;
  void * _61;
  int iy0.244_62;
  int ix0.245_63;
  struct stbtt_vertex * vertices.246_64;
  struct stbtt_vertex * vertices.247_66;
  unsigned char * _68;

  <bb 2>:
  _15 = stbtt_GetGlyphShape (info_12(D), glyph_13(D), &vertices);
  num_verts_16 = _15;
  if (scale_x_17(D) == 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  scale_x_19 = scale_y_18(D);

  <bb 4>:
  # scale_x_1 = PHI <scale_x_17(D)(2), scale_x_19(3)>
  if (scale_y_18(D) == 0.0)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  if (scale_x_1 == 0.0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  vertices.237_20 = vertices;
  ImGui::MemFree (vertices.237_20);
  _22 = 0B;
  goto <bb 21>;

  <bb 7>:
  scale_y_23 = scale_x_1;

  <bb 8>:
  # scale_y_2 = PHI <scale_y_18(D)(4), scale_y_23(7)>
  stbtt_GetGlyphBitmapBoxSubpixel (info_12(D), glyph_13(D), scale_x_1, scale_y_2, shift_x_24(D), shift_y_25(D), &ix0, &iy0, &ix1, &iy1);
  ix1.238_27 = ix1;
  ix0.239_28 = ix0;
  _29 = ix1.238_27 - ix0.239_28;
  gbm.w = _29;
  iy1.240_31 = iy1;
  iy0.241_32 = iy0;
  _33 = iy1.240_31 - iy0.241_32;
  gbm.h = _33;
  gbm.pixels = 0B;
  if (width_36(D) != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _37 = gbm.w;
  *width_36(D) = _37;

  <bb 10>:
  if (height_39(D) != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _40 = gbm.h;
  *height_39(D) = _40;

  <bb 12>:
  if (xoff_42(D) != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  ix0.242_43 = ix0;
  *xoff_42(D) = ix0.242_43;

  <bb 14>:
  if (yoff_45(D) != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  iy0.243_46 = iy0;
  *yoff_45(D) = iy0.243_46;

  <bb 16>:
  _48 = gbm.w;
  if (_48 != 0)
    goto <bb 17>;
  else
    goto <bb 20>;

  <bb 17>:
  _49 = gbm.h;
  if (_49 != 0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:
  _50 = gbm.w;
  _51 = gbm.h;
  _52 = _50 * _51;
  _53 = (long unsigned int) _52;
  _55 = ImGui::MemAlloc (_53);
  _56 = _55;
  gbm.pixels = _56;
  _58 = gbm.pixels;
  if (_58 != 0B)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _59 = gbm.w;
  gbm.stride = _59;
  _61 = info_12(D)->userdata;
  iy0.244_62 = iy0;
  ix0.245_63 = ix0;
  vertices.246_64 = vertices;
  stbtt_Rasterize (&gbm, 3.499999940395355224609375e-1, vertices.246_64, num_verts_16, scale_x_1, scale_y_2, shift_x_24(D), shift_y_25(D), ix0.245_63, iy0.244_62, 1, _61);

  <bb 20>:
  vertices.247_66 = vertices;
  ImGui::MemFree (vertices.247_66);
  _68 = gbm.pixels;

  <bb 21>:
  # _3 = PHI <_22(6), _68(20)>
  ix0 ={v} {CLOBBER};
  iy0 ={v} {CLOBBER};
  ix1 ={v} {CLOBBER};
  iy1 ={v} {CLOBBER};
  gbm ={v} {CLOBBER};
  vertices ={v} {CLOBBER};

<L29>:
  return _3;

}



;; Function unsigned char* stbtt_GetGlyphBitmap(const stbtt_fontinfo*, float, float, int, int*, int*, int*, int*) (stbtt_GetGlyphBitmap, funcdef_no=643, decl_uid=15433, cgraph_uid=542, symbol_order=542)

unsigned char* stbtt_GetGlyphBitmap(const stbtt_fontinfo*, float, float, int, int*, int*, int*, int*) (const struct stbtt_fontinfo * info, float scale_x, float scale_y, int glyph, int * width, int * height, int * xoff, int * yoff)
{
  unsigned char * D.23916;
  unsigned char * D.23914;
  unsigned char * _11;
  unsigned char * _12;

  <bb 2>:
  _11 = stbtt_GetGlyphBitmapSubpixel (info_2(D), scale_x_3(D), scale_y_4(D), 0.0, 0.0, glyph_5(D), width_6(D), height_7(D), xoff_8(D), yoff_9(D));
  _12 = _11;

<L0>:
  return _12;

}



;; Function void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, float, float, int) (stbtt_MakeGlyphBitmapSubpixel, funcdef_no=644, decl_uid=15464, cgraph_uid=543, symbol_order=543)

void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, float, float, int) (const struct stbtt_fontinfo * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int glyph)
{
  int D.23929;
  struct stbtt__bitmap gbm;
  int num_verts;
  struct stbtt_vertex * vertices;
  int iy0;
  int ix0;
  struct stbtt_vertex * vertices.251;
  struct stbtt_vertex * vertices.250;
  int ix0.249;
  int iy0.248;
  void * D.23923;
  int D.23920;
  int D.23917;
  int _7;
  int _22;
  int _23;
  void * _24;
  int iy0.248_25;
  int ix0.249_26;
  struct stbtt_vertex * vertices.250_27;
  struct stbtt_vertex * vertices.251_29;

  <bb 2>:
  _7 = stbtt_GetGlyphShape (info_4(D), glyph_5(D), &vertices);
  num_verts_8 = _7;
  stbtt_GetGlyphBitmapBoxSubpixel (info_4(D), glyph_5(D), scale_x_9(D), scale_y_10(D), shift_x_11(D), shift_y_12(D), &ix0, &iy0, 0B, 0B);
  gbm.pixels = output_14(D);
  gbm.w = out_w_16(D);
  gbm.h = out_h_18(D);
  gbm.stride = out_stride_20(D);
  _22 = gbm.w;
  if (_22 != 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  _23 = gbm.h;
  if (_23 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _24 = info_4(D)->userdata;
  iy0.248_25 = iy0;
  ix0.249_26 = ix0;
  vertices.250_27 = vertices;
  stbtt_Rasterize (&gbm, 3.499999940395355224609375e-1, vertices.250_27, num_verts_8, scale_x_9(D), scale_y_10(D), shift_x_11(D), shift_y_12(D), ix0.249_26, iy0.248_25, 1, _24);

  <bb 5>:
  vertices.251_29 = vertices;
  ImGui::MemFree (vertices.251_29);
  ix0 ={v} {CLOBBER};
  iy0 ={v} {CLOBBER};
  vertices ={v} {CLOBBER};
  gbm ={v} {CLOBBER};
  return;

}



;; Function void stbtt_MakeGlyphBitmap(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, int) (stbtt_MakeGlyphBitmap, funcdef_no=645, decl_uid=15453, cgraph_uid=544, symbol_order=544)

void stbtt_MakeGlyphBitmap(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, int) (const struct stbtt_fontinfo * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int glyph)
{
  <bb 2>:
  stbtt_MakeGlyphBitmapSubpixel (info_2(D), output_3(D), out_w_4(D), out_h_5(D), out_stride_6(D), scale_x_7(D), scale_y_8(D), 0.0, 0.0, glyph_9(D));
  return;

}



;; Function unsigned char* stbtt_GetCodepointBitmapSubpixel(const stbtt_fontinfo*, float, float, float, float, int, int*, int*, int*, int*) (stbtt_GetCodepointBitmapSubpixel, funcdef_no=646, decl_uid=15369, cgraph_uid=545, symbol_order=545)

unsigned char* stbtt_GetCodepointBitmapSubpixel(const stbtt_fontinfo*, float, float, float, float, int, int*, int*, int*, int*) (const struct stbtt_fontinfo * info, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint, int * width, int * height, int * xoff, int * yoff)
{
  unsigned char * D.23934;
  int D.23932;
  unsigned char * D.23931;
  int _5;
  unsigned char * _15;
  unsigned char * _16;

  <bb 2>:
  _5 = stbtt_FindGlyphIndex (info_2(D), codepoint_3(D));
  _15 = stbtt_GetGlyphBitmapSubpixel (info_2(D), scale_x_6(D), scale_y_7(D), shift_x_8(D), shift_y_9(D), _5, width_10(D), height_11(D), xoff_12(D), yoff_13(D));
  _16 = _15;

<L0>:
  return _16;

}



;; Function void stbtt_MakeCodepointBitmapSubpixelPrefilter(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, float, float, int, int, float*, float*, int) (stbtt_MakeCodepointBitmapSubpixelPrefilter, funcdef_no=647, decl_uid=15404, cgraph_uid=546, symbol_order=546)

void stbtt_MakeCodepointBitmapSubpixelPrefilter(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, float, float, int, int, float*, float*, int) (const struct stbtt_fontinfo * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int oversample_x, int oversample_y, float * sub_x, float * sub_y, int codepoint)
{
  int D.23935;
  int _5;

  <bb 2>:
  _5 = stbtt_FindGlyphIndex (info_2(D), codepoint_3(D));
  stbtt_MakeGlyphBitmapSubpixelPrefilter (info_2(D), output_6(D), out_w_7(D), out_h_8(D), out_stride_9(D), scale_x_10(D), scale_y_11(D), shift_x_12(D), shift_y_13(D), oversample_x_14(D), oversample_y_15(D), sub_x_16(D), sub_y_17(D), _5);
  return;

}



;; Function void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, float, float, int) (stbtt_MakeCodepointBitmapSubpixel, funcdef_no=648, decl_uid=15389, cgraph_uid=547, symbol_order=547)

void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, float, float, int) (const struct stbtt_fontinfo * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint)
{
  int D.23936;
  int _5;

  <bb 2>:
  _5 = stbtt_FindGlyphIndex (info_2(D), codepoint_3(D));
  stbtt_MakeGlyphBitmapSubpixel (info_2(D), output_6(D), out_w_7(D), out_h_8(D), out_stride_9(D), scale_x_10(D), scale_y_11(D), shift_x_12(D), shift_y_13(D), _5);
  return;

}



;; Function unsigned char* stbtt_GetCodepointBitmap(const stbtt_fontinfo*, float, float, int, int*, int*, int*, int*) (stbtt_GetCodepointBitmap, funcdef_no=649, decl_uid=15358, cgraph_uid=548, symbol_order=548)

unsigned char* stbtt_GetCodepointBitmap(const stbtt_fontinfo*, float, float, int, int*, int*, int*, int*) (const struct stbtt_fontinfo * info, float scale_x, float scale_y, int codepoint, int * width, int * height, int * xoff, int * yoff)
{
  unsigned char * D.23939;
  unsigned char * D.23937;
  unsigned char * _11;
  unsigned char * _12;

  <bb 2>:
  _11 = stbtt_GetCodepointBitmapSubpixel (info_2(D), scale_x_3(D), scale_y_4(D), 0.0, 0.0, codepoint_5(D), width_6(D), height_7(D), xoff_8(D), yoff_9(D));
  _12 = _11;

<L0>:
  return _12;

}



;; Function void stbtt_MakeCodepointBitmap(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, int) (stbtt_MakeCodepointBitmap, funcdef_no=650, decl_uid=15378, cgraph_uid=549, symbol_order=549)

void stbtt_MakeCodepointBitmap(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, int) (const struct stbtt_fontinfo * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int codepoint)
{
  <bb 2>:
  stbtt_MakeCodepointBitmapSubpixel (info_2(D), output_3(D), out_w_4(D), out_h_5(D), out_stride_6(D), scale_x_7(D), scale_y_8(D), 0.0, 0.0, codepoint_9(D));
  return;

}



;; Function int stbtt_BakeFontBitmap_internal(unsigned char*, int, float, unsigned char*, int, int, int, int, stbtt_bakedchar*) (_ZL29stbtt_BakeFontBitmap_internalPhifS_iiiiP15stbtt_bakedchar, funcdef_no=651, decl_uid=17028, cgraph_uid=550, symbol_order=550)

int stbtt_BakeFontBitmap_internal(unsigned char*, int, float, unsigned char*, int, int, int, int, stbtt_bakedchar*) (unsigned char * data, int offset, float pixel_height, unsigned char * pixels, int pw, int ph, int first_char, int num_chars, struct stbtt_bakedchar * chardata)
{
  void * D.32644;
  int g;
  int gh;
  int gw;
  int y1;
  int x1;
  int y0;
  int x0;
  int lsb;
  int advance;
  static const char __PRETTY_FUNCTION__[116] = "int stbtt_BakeFontBitmap_internal(unsigned char*, int, float, unsigned char*, int, int, int, int, stbtt_bakedchar*)";
  struct stbtt_fontinfo f;
  int i;
  int bottom_y;
  int y;
  int x;
  float scale;
  int D.24017;
  int D.24014;
  int D.24013;
  int D.24012;
  float D.24011;
  int y0.259;
  struct stbtt_bakedchar * D.24009;
  long unsigned int D.24008;
  long unsigned int D.24007;
  float D.24006;
  int x0.258;
  struct stbtt_bakedchar * D.24004;
  long unsigned int D.24003;
  long unsigned int D.24002;
  float D.24001;
  float D.24000;
  int advance.257;
  struct stbtt_bakedchar * D.23998;
  long unsigned int D.23997;
  long unsigned int D.23996;
  unsigned short D.23995;
  unsigned short D.23994;
  unsigned short D.23993;
  struct stbtt_bakedchar * D.23992;
  long unsigned int D.23991;
  long unsigned int D.23990;
  unsigned short D.23989;
  unsigned short D.23988;
  unsigned short D.23987;
  struct stbtt_bakedchar * D.23986;
  long unsigned int D.23985;
  long unsigned int D.23984;
  short unsigned int D.23983;
  struct stbtt_bakedchar * D.23982;
  long unsigned int D.23981;
  long unsigned int D.23980;
  short unsigned int D.23979;
  struct stbtt_bakedchar * D.23978;
  long unsigned int D.23977;
  long unsigned int D.23976;
  unsigned char * D.23975;
  sizetype D.23974;
  sizetype D.23973;
  int D.23972;
  sizetype D.23971;
  int D.23967;
  int D.23963;
  int D.23960;
  int D.23959;
  int D.23955;
  int D.23954;
  int y0.256;
  int y1.255;
  int x0.254;
  int x1.253;
  int D.23949;
  long unsigned int D.23946;
  int D.23945;
  int D.23944;
  int D.23941;
  bool retval.252;
  int _8;
  int _17;
  bool retval.252_18;
  int _19;
  int _22;
  long unsigned int _23;
  int _35;
  int x1.253_40;
  int x0.254_41;
  int y1.255_43;
  int y0.256_44;
  int _46;
  int _47;
  int _50;
  int _51;
  int _52;
  int _53;
  sizetype _54;
  int _55;
  sizetype _56;
  sizetype _57;
  unsigned char * _58;
  long unsigned int _60;
  long unsigned int _61;
  struct stbtt_bakedchar * _63;
  short unsigned int _64;
  long unsigned int _66;
  long unsigned int _67;
  struct stbtt_bakedchar * _68;
  short unsigned int _69;
  long unsigned int _71;
  long unsigned int _72;
  struct stbtt_bakedchar * _73;
  unsigned short _74;
  unsigned short _75;
  unsigned short _76;
  long unsigned int _78;
  long unsigned int _79;
  struct stbtt_bakedchar * _80;
  unsigned short _81;
  unsigned short _82;
  unsigned short _83;
  long unsigned int _85;
  long unsigned int _86;
  struct stbtt_bakedchar * _87;
  int advance.257_88;
  float _89;
  float _90;
  long unsigned int _92;
  long unsigned int _93;
  struct stbtt_bakedchar * _94;
  int x0.258_95;
  float _96;
  long unsigned int _98;
  long unsigned int _99;
  struct stbtt_bakedchar * _100;
  int y0.259_101;
  float _102;
  int _104;
  int _106;
  int _107;
  int _108;
  int _119;
  int _133;

  <bb 2>:
  f.userdata = 0B;
  _17 = stbtt_InitFont (&f, data_14(D), offset_15(D));
  retval.252_18 = _17 == 0;
  if (retval.252_18 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _19 = -1;
  goto <bb 19>;

  <bb 4>:
  _22 = pw_20(D) * ph_21(D);
  _23 = (long unsigned int) _22;
  memset (pixels_24(D), 0, _23);
  y_26 = 1;
  x_27 = y_26;
  bottom_y_28 = 1;
  scale_31 = stbtt_ScaleForPixelHeight (&f, pixel_height_29(D));
  i_32 = 0;

  <bb 5>:
  # x_1 = PHI <x_27(4), x_105(17)>
  # y_3 = PHI <y_26(4), y_4(17)>
  # bottom_y_5 = PHI <bottom_y_28(4), bottom_y_6(17)>
  # i_7 = PHI <i_32(4), i_116(17)>
  if (i_7 >= num_chars_33(D))
    goto <bb 18>;
  else
    goto <bb 6>;

  <bb 6>:
  _35 = first_char_34(D) + i_7;
  g_37 = stbtt_FindGlyphIndex (&f, _35);
  stbtt_GetGlyphHMetrics (&f, g_37, &advance, &lsb);
  stbtt_GetGlyphBitmapBox (&f, g_37, scale_31, scale_31, &x0, &y0, &x1, &y1);
  x1.253_40 = x1;
  x0.254_41 = x0;
  gw_42 = x1.253_40 - x0.254_41;
  y1.255_43 = y1;
  y0.256_44 = y0;
  gh_45 = y1.255_43 - y0.256_44;
  _46 = x_1 + gw_42;
  _47 = _46 + 1;
  if (_47 >= pw_20(D))
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  y_48 = bottom_y_5;
  x_49 = 1;

  <bb 8>:
  # x_2 = PHI <x_1(6), x_49(7)>
  # y_4 = PHI <y_3(6), y_48(7)>
  _50 = y_4 + gh_45;
  _51 = _50 + 1;
  if (_51 >= ph_21(D))
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _119 = -i_7;
  advance ={v} {CLOBBER};
  lsb ={v} {CLOBBER};
  x0 ={v} {CLOBBER};
  y0 ={v} {CLOBBER};
  x1 ={v} {CLOBBER};
  y1 ={v} {CLOBBER};
  goto <bb 19>;

  <bb 10>:
  _52 = x_2 + gw_42;
  if (_52 < pw_20(D))
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  __assert_fail ("x+gw < pw", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 3656, &__PRETTY_FUNCTION__);

  <bb 12>:
  _53 = y_4 + gh_45;
  if (_53 < ph_21(D))
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  __assert_fail ("y+gh < ph", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 3657, &__PRETTY_FUNCTION__);

  <bb 14>:
  _54 = (sizetype) x_2;
  _55 = y_4 * pw_20(D);
  _56 = (sizetype) _55;
  _57 = _54 + _56;
  _58 = pixels_24(D) + _57;
  stbtt_MakeGlyphBitmap (&f, _58, gw_42, gh_45, pw_20(D), scale_31, scale_31, g_37);

  <bb 15>:
  _60 = (long unsigned int) i_7;
  _61 = _60 * 20;
  _63 = chardata_62(D) + _61;
  _64 = (short unsigned int) x_2;
  _63->x0 = _64;
  _66 = (long unsigned int) i_7;
  _67 = _66 * 20;
  _68 = chardata_62(D) + _67;
  _69 = (short unsigned int) y_4;
  _68->y0 = _69;
  _71 = (long unsigned int) i_7;
  _72 = _71 * 20;
  _73 = chardata_62(D) + _72;
  _74 = (unsigned short) x_2;
  _75 = (unsigned short) gw_42;
  _76 = _74 + _75;
  _73->x1 = _76;
  _78 = (long unsigned int) i_7;
  _79 = _78 * 20;
  _80 = chardata_62(D) + _79;
  _81 = (unsigned short) y_4;
  _82 = (unsigned short) gh_45;
  _83 = _81 + _82;
  _80->y1 = _83;
  _85 = (long unsigned int) i_7;
  _86 = _85 * 20;
  _87 = chardata_62(D) + _86;
  advance.257_88 = advance;
  _89 = (float) advance.257_88;
  _90 = _89 * scale_31;
  _87->xadvance = _90;
  _92 = (long unsigned int) i_7;
  _93 = _92 * 20;
  _94 = chardata_62(D) + _93;
  x0.258_95 = x0;
  _96 = (float) x0.258_95;
  _94->xoff = _96;
  _98 = (long unsigned int) i_7;
  _99 = _98 * 20;
  _100 = chardata_62(D) + _99;
  y0.259_101 = y0;
  _102 = (float) y0.259_101;
  _100->yoff = _102;
  _104 = x_2 + gw_42;
  x_105 = _104 + 1;
  _106 = y_4 + gh_45;
  _107 = _106 + 1;
  if (_107 > bottom_y_5)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _108 = y_4 + gh_45;
  bottom_y_109 = _108 + 1;

  <bb 17>:
  # bottom_y_6 = PHI <bottom_y_5(15), bottom_y_109(16)>
  advance ={v} {CLOBBER};
  lsb ={v} {CLOBBER};
  x0 ={v} {CLOBBER};
  y0 ={v} {CLOBBER};
  x1 ={v} {CLOBBER};
  y1 ={v} {CLOBBER};
  i_116 = i_7 + 1;
  goto <bb 5>;

  <bb 18>:
  _133 = bottom_y_5;

  <bb 19>:
  # _8 = PHI <_19(3), _119(9), _133(18)>
  f ={v} {CLOBBER};

<L22>:
  return _8;

<L23>:
  _126 = __builtin_eh_pointer (1);
  __builtin_unwind_resume (_126);

}



;; Function void stbtt_GetBakedQuad(const stbtt_bakedchar*, int, int, int, float*, float*, stbtt_aligned_quad*, int) (stbtt_GetBakedQuad, funcdef_no=652, decl_uid=15140, cgraph_uid=551, symbol_order=551)

void stbtt_GetBakedQuad(const stbtt_bakedchar*, int, int, int, float*, float*, stbtt_aligned_quad*, int) (const struct stbtt_bakedchar * chardata, int pw, int ph, int char_index, float * xpos, float * ypos, struct stbtt_aligned_quad * q, int opengl_fillrule)
{
  int round_y;
  int round_x;
  const struct stbtt_bakedchar * b;
  float iph;
  float ipw;
  float d3d_bias;
  float D.24081;
  float D.24080;
  float D.24079;
  float D.24078;
  float D.24077;
  int D.24076;
  short unsigned int D.24075;
  float D.24074;
  float D.24073;
  int D.24072;
  short unsigned int D.24071;
  float D.24070;
  float D.24069;
  int D.24068;
  short unsigned int D.24067;
  float D.24066;
  float D.24065;
  int D.24064;
  short unsigned int D.24063;
  float D.24062;
  float D.24061;
  int D.24060;
  int D.24059;
  short unsigned int D.24058;
  int D.24057;
  int D.24056;
  short unsigned int D.24055;
  float D.24054;
  float D.24053;
  int D.24052;
  int D.24051;
  short unsigned int D.24050;
  int D.24049;
  int D.24048;
  short unsigned int D.24047;
  float D.24046;
  float D.24045;
  float D.24044;
  float D.24043;
  float D.24042;
  float D.24041;
  float D.24040;
  float D.24039;
  float D.24038;
  float D.24037;
  float D.24036;
  float D.24035;
  float D.24034;
  float D.24033;
  long unsigned int D.24032;
  long unsigned int D.24031;
  float D.24030;
  float D.24029;
  float iftmp.260;
  float iftmp.260_1;
  float iftmp.260_3;
  float iftmp.260_4;
  float _7;
  float _10;
  long unsigned int _13;
  long unsigned int _14;
  float _19;
  float _20;
  float _21;
  float _22;
  float _24;
  float _27;
  float _28;
  float _29;
  float _30;
  float _32;
  float _34;
  float _35;
  float _38;
  float _39;
  short unsigned int _41;
  int _42;
  int _43;
  short unsigned int _44;
  int _45;
  int _46;
  float _47;
  float _48;
  short unsigned int _50;
  int _51;
  int _52;
  short unsigned int _53;
  int _54;
  int _55;
  float _56;
  float _57;
  short unsigned int _59;
  int _60;
  float _61;
  float _62;
  short unsigned int _64;
  int _65;
  float _66;
  float _67;
  short unsigned int _69;
  int _70;
  float _71;
  float _72;
  short unsigned int _74;
  int _75;
  float _76;
  float _77;
  float _79;
  float _80;
  float _81;

  <bb 2>:
  if (opengl_fillrule_2(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.260_3 = 0.0;
  goto <bb 5>;

  <bb 4>:
  iftmp.260_4 = -5.0e-1;

  <bb 5>:
  # iftmp.260_1 = PHI <iftmp.260_3(3), iftmp.260_4(4)>
  d3d_bias_5 = iftmp.260_1;
  _7 = (float) pw_6(D);
  ipw_8 = 1.0e+0 / _7;
  _10 = (float) ph_9(D);
  iph_11 = 1.0e+0 / _10;
  _13 = (long unsigned int) char_index_12(D);
  _14 = _13 * 20;
  b_16 = chardata_15(D) + _14;
  _19 = *xpos_18(D);
  _20 = b_16->xoff;
  _21 = _19 + _20;
  _22 = _21 + 5.0e-1;
  _24 = std::floor (_22);
  round_x_25 = (int) _24;
  _27 = *ypos_26(D);
  _28 = b_16->yoff;
  _29 = _27 + _28;
  _30 = _29 + 5.0e-1;
  _32 = std::floor (_30);
  round_y_33 = (int) _32;
  _34 = (float) round_x_25;
  _35 = _34 + d3d_bias_5;
  q_36(D)->x0 = _35;
  _38 = (float) round_y_33;
  _39 = _38 + d3d_bias_5;
  q_36(D)->y0 = _39;
  _41 = b_16->x1;
  _42 = (int) _41;
  _43 = _42 + round_x_25;
  _44 = b_16->x0;
  _45 = (int) _44;
  _46 = _43 - _45;
  _47 = (float) _46;
  _48 = _47 + d3d_bias_5;
  q_36(D)->x1 = _48;
  _50 = b_16->y1;
  _51 = (int) _50;
  _52 = _51 + round_y_33;
  _53 = b_16->y0;
  _54 = (int) _53;
  _55 = _52 - _54;
  _56 = (float) _55;
  _57 = _56 + d3d_bias_5;
  q_36(D)->y1 = _57;
  _59 = b_16->x0;
  _60 = (int) _59;
  _61 = (float) _60;
  _62 = _61 * ipw_8;
  q_36(D)->s0 = _62;
  _64 = b_16->y0;
  _65 = (int) _64;
  _66 = (float) _65;
  _67 = _66 * iph_11;
  q_36(D)->t0 = _67;
  _69 = b_16->x1;
  _70 = (int) _69;
  _71 = (float) _70;
  _72 = _71 * ipw_8;
  q_36(D)->s1 = _72;
  _74 = b_16->y1;
  _75 = (int) _74;
  _76 = (float) _75;
  _77 = _76 * iph_11;
  q_36(D)->t1 = _77;
  _79 = *xpos_18(D);
  _80 = b_16->xadvance;
  _81 = _79 + _80;
  *xpos_18(D) = _81;
  return;

}



;; Function int stbtt_PackBegin(stbtt_pack_context*, unsigned char*, int, int, int, int, void*) (stbtt_PackBegin, funcdef_no=653, decl_uid=15164, cgraph_uid=552, symbol_order=552)

int stbtt_PackBegin(stbtt_pack_context*, unsigned char*, int, int, int, int, void*) (struct stbtt_pack_context * spc, unsigned char * pixels, int pw, int ph, int stride_in_bytes, int padding, void * alloc_context)
{
  struct stbrp_node * D.24108;
  struct stbrp_context * D.24107;
  struct stbrp_node * nodes;
  int num_nodes;
  struct stbrp_context * context;
  long unsigned int D.24104;
  int D.24103;
  int D.24100;
  int D.24099;
  int iftmp.262;
  void * alloc_context.261;
  int D.24093;
  long unsigned int D.24083;
  long unsigned int D.24082;
  int _1;
  int iftmp.262_2;
  struct stbrp_context * _9;
  long unsigned int _14;
  long unsigned int _15;
  struct stbrp_node * _17;
  void * alloc_context.261_19;
  int iftmp.262_31;
  int iftmp.262_32;
  int _36;
  int _37;
  int _39;
  long unsigned int _40;
  int _42;
  int _45;

  <bb 2>:
  _9 = ImGui::MemAlloc (72);
  context_10 = _9;
  num_nodes_13 = pw_11(D) - padding_12(D);
  _14 = (long unsigned int) num_nodes_13;
  _15 = _14 * 16;
  _17 = ImGui::MemAlloc (_15);
  nodes_18 = _17;
  if (context_10 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  if (nodes_18 == 0B)
    goto <bb 4>;
  else
    goto <bb 9>;

  <bb 4>:
  if (context_10 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  ImGui::MemFree (context_10);

  <bb 6>:
  if (nodes_18 != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  ImGui::MemFree (nodes_18);

  <bb 8>:
  _45 = 0;
  goto <bb 15> (<L15>);

  <bb 9>:
  alloc_context.261_19 = alloc_context;
  spc_20(D)->user_allocator_context = alloc_context.261_19;
  spc_20(D)->width = pw_11(D);
  spc_20(D)->height = ph_23(D);
  spc_20(D)->pixels = pixels_25(D);
  spc_20(D)->pack_info = context_10;
  spc_20(D)->nodes = nodes_18;
  spc_20(D)->padding = padding_12(D);
  if (stride_in_bytes_30(D) != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  iftmp.262_31 = stride_in_bytes_30(D);
  goto <bb 12>;

  <bb 11>:
  iftmp.262_32 = pw_11(D);

  <bb 12>:
  # iftmp.262_2 = PHI <iftmp.262_31(10), iftmp.262_32(11)>
  spc_20(D)->stride_in_bytes = iftmp.262_2;
  spc_20(D)->h_oversample = 1;
  spc_20(D)->v_oversample = 1;
  _36 = ph_23(D) - padding_12(D);
  _37 = pw_11(D) - padding_12(D);
  stbrp_init_target (context_10, _37, _36, nodes_18, num_nodes_13);
  if (pixels_25(D) != 0B)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _39 = pw_11(D) * ph_23(D);
  _40 = (long unsigned int) _39;
  memset (pixels_25(D), 0, _40);

  <bb 14>:
  _42 = 1;

  # _1 = PHI <_45(8), _42(14)>
<L15>:
  return _1;

}



;; Function void stbtt_PackEnd(stbtt_pack_context*) (stbtt_PackEnd, funcdef_no=654, decl_uid=15166, cgraph_uid=553, symbol_order=553)

void stbtt_PackEnd(stbtt_pack_context*) (struct stbtt_pack_context * spc)
{
  void * D.24110;
  void * D.24109;
  void * _3;
  void * _5;

  <bb 2>:
  _3 = spc_2(D)->nodes;
  ImGui::MemFree (_3);
  _5 = spc_2(D)->pack_info;
  ImGui::MemFree (_5);
  return;

}



;; Function void stbtt_PackSetOversampling(stbtt_pack_context*, unsigned int, unsigned int) (stbtt_PackSetOversampling, funcdef_no=655, decl_uid=15194, cgraph_uid=554, symbol_order=554)

void stbtt_PackSetOversampling(stbtt_pack_context*, unsigned int, unsigned int) (struct stbtt_pack_context * spc, unsigned int h_oversample, unsigned int v_oversample)
{
  static const char __PRETTY_FUNCTION__[80] = "void stbtt_PackSetOversampling(stbtt_pack_context*, unsigned int, unsigned int)";

  <bb 2>:
  if (h_oversample_3(D) <= 8)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("h_oversample <= 8", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 3810, &__PRETTY_FUNCTION__);

  <bb 4>:
  if (v_oversample_4(D) <= 8)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  __assert_fail ("v_oversample <= 8", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 3811, &__PRETTY_FUNCTION__);

  <bb 6>:
  if (h_oversample_3(D) <= 8)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  spc_6(D)->h_oversample = h_oversample_3(D);

  <bb 8>:
  if (v_oversample_4(D) <= 8)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  spc_6(D)->v_oversample = v_oversample_4(D);

  <bb 10>:
  return;

}



;; Function void stbtt__h_prefilter(unsigned char*, int, int, int, unsigned int) (_ZL18stbtt__h_prefilterPhiiij, funcdef_no=656, decl_uid=17123, cgraph_uid=555, symbol_order=555)

void stbtt__h_prefilter(unsigned char*, int, int, int, unsigned int) (unsigned char * pixels, int w, int h, int stride_in_bytes, unsigned int kernel_width)
{
  unsigned int total;
  int i;
  static const char __PRETTY_FUNCTION__[69] = "void stbtt__h_prefilter(unsigned char*, int, int, int, unsigned int)";
  int j;
  int safe_w;
  unsigned char buffer[8];
  sizetype D.24248;
  unsigned char D.24247;
  unsigned int D.24246;
  unsigned char * D.24245;
  sizetype D.24244;
  unsigned int D.24243;
  unsigned char D.24242;
  int D.24241;
  unsigned char D.24237;
  unsigned char * D.24236;
  sizetype D.24235;
  unsigned char D.24232;
  unsigned int D.24231;
  unsigned char * D.24230;
  sizetype D.24229;
  unsigned char D.24228;
  unsigned char * D.24227;
  sizetype D.24226;
  unsigned int D.24225;
  unsigned int D.24224;
  unsigned int i.268;
  unsigned int D.24222;
  int D.24221;
  int D.24220;
  unsigned char D.24219;
  int D.24218;
  int D.24217;
  unsigned char D.24216;
  unsigned char * D.24215;
  sizetype D.24214;
  unsigned char D.24211;
  unsigned int D.24210;
  unsigned char * D.24209;
  sizetype D.24208;
  unsigned char D.24207;
  unsigned char * D.24206;
  sizetype D.24205;
  unsigned int D.24204;
  unsigned int D.24203;
  unsigned int i.267;
  unsigned int D.24201;
  int D.24200;
  int D.24199;
  unsigned char D.24198;
  int D.24197;
  int D.24196;
  unsigned char D.24195;
  unsigned char * D.24194;
  sizetype D.24193;
  unsigned char D.24190;
  unsigned int D.24189;
  unsigned char * D.24188;
  sizetype D.24187;
  unsigned char D.24186;
  unsigned char * D.24185;
  sizetype D.24184;
  unsigned int D.24183;
  unsigned int D.24182;
  unsigned int i.266;
  unsigned int D.24180;
  int D.24179;
  int D.24178;
  unsigned char D.24177;
  int D.24176;
  int D.24175;
  unsigned char D.24174;
  unsigned char * D.24173;
  sizetype D.24172;
  unsigned char D.24169;
  unsigned int D.24168;
  unsigned char * D.24167;
  sizetype D.24166;
  unsigned char D.24165;
  unsigned char * D.24164;
  sizetype D.24163;
  unsigned int D.24162;
  unsigned int D.24161;
  unsigned int i.265;
  unsigned int D.24159;
  int D.24158;
  int D.24157;
  unsigned char D.24156;
  int D.24155;
  int D.24154;
  unsigned char D.24153;
  unsigned char * D.24152;
  sizetype D.24151;
  unsigned char D.24148;
  unsigned int D.24147;
  unsigned char * D.24146;
  sizetype D.24145;
  unsigned char D.24144;
  unsigned char * D.24143;
  sizetype D.24142;
  unsigned int D.24141;
  unsigned int D.24140;
  unsigned int i.264;
  unsigned int D.24138;
  int D.24137;
  int D.24136;
  unsigned char D.24135;
  int D.24134;
  int D.24133;
  unsigned char D.24132;
  unsigned char * D.24131;
  sizetype D.24130;
  long unsigned int D.24127;
  unsigned int D.24124;
  unsigned int w.263;
  unsigned int w.263_23;
  unsigned int _25;
  long unsigned int _32;
  sizetype _36;
  unsigned char * _37;
  unsigned char _38;
  int _39;
  int _40;
  unsigned char _41;
  int _42;
  int _43;
  unsigned int _44;
  unsigned int i.264_46;
  unsigned int _47;
  unsigned int _48;
  sizetype _49;
  unsigned char * _50;
  unsigned char _51;
  sizetype _53;
  unsigned char * _54;
  unsigned int _55;
  unsigned char _56;
  sizetype _60;
  unsigned char * _61;
  unsigned char _62;
  int _63;
  int _64;
  unsigned char _65;
  int _66;
  int _67;
  unsigned int _68;
  unsigned int i.265_70;
  unsigned int _71;
  unsigned int _72;
  sizetype _73;
  unsigned char * _74;
  unsigned char _75;
  sizetype _77;
  unsigned char * _78;
  unsigned int _79;
  unsigned char _80;
  sizetype _84;
  unsigned char * _85;
  unsigned char _86;
  int _87;
  int _88;
  unsigned char _89;
  int _90;
  int _91;
  unsigned int _92;
  unsigned int i.266_94;
  unsigned int _95;
  unsigned int _96;
  sizetype _97;
  unsigned char * _98;
  unsigned char _99;
  sizetype _101;
  unsigned char * _102;
  unsigned int _103;
  unsigned char _104;
  sizetype _108;
  unsigned char * _109;
  unsigned char _110;
  int _111;
  int _112;
  unsigned char _113;
  int _114;
  int _115;
  unsigned int _116;
  unsigned int i.267_118;
  unsigned int _119;
  unsigned int _120;
  sizetype _121;
  unsigned char * _122;
  unsigned char _123;
  sizetype _125;
  unsigned char * _126;
  unsigned int _127;
  unsigned char _128;
  sizetype _132;
  unsigned char * _133;
  unsigned char _134;
  int _135;
  int _136;
  unsigned char _137;
  int _138;
  int _139;
  unsigned int _140;
  unsigned int i.268_142;
  unsigned int _143;
  unsigned int _144;
  sizetype _145;
  unsigned char * _146;
  unsigned char _147;
  sizetype _149;
  unsigned char * _150;
  unsigned int _151;
  unsigned char _152;
  sizetype _155;
  unsigned char * _156;
  unsigned char _157;
  int _158;
  unsigned char _159;
  unsigned int _160;
  sizetype _162;
  unsigned char * _163;
  unsigned int _164;
  unsigned char _165;
  sizetype _170;

  <bb 2>:
  w.263_23 = (unsigned int) w_22(D);
  _25 = w.263_23 - kernel_width_24(D);
  safe_w_26 = (int) _25;
  memset (&buffer, 0, 8);
  j_29 = 0;

  <bb 3>:
  # pixels_1 = PHI <pixels_30(D)(2), pixels_171(29)>
  # j_2 = PHI <j_29(2), j_172(29)>
  if (j_2 >= h_31(D))
    goto <bb 30>;
  else
    goto <bb 4>;

  <bb 4>:
  _32 = (long unsigned int) kernel_width_24(D);
  memset (&buffer, 0, _32);
  total_34 = 0;
  switch (kernel_width_24(D)) <default: <L18>, case 2: <L2>, case 3: <L6>, case 4: <L10>, case 5: <L14>>

<L2>:
  i_35 = 0;

  <bb 6>:
  # i_3 = PHI <i_35(5), i_58(7)>
  # total_9 = PHI <total_34(5), total_45(7)>
  if (i_3 > safe_w_26)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _36 = (sizetype) i_3;
  _37 = pixels_1 + _36;
  _38 = *_37;
  _39 = (int) _38;
  _40 = i_3 & 7;
  _41 = buffer[_40];
  _42 = (int) _41;
  _43 = _39 - _42;
  _44 = (unsigned int) _43;
  total_45 = _44 + total_9;
  i.264_46 = (unsigned int) i_3;
  _47 = i.264_46 + kernel_width_24(D);
  _48 = _47 & 7;
  _49 = (sizetype) i_3;
  _50 = pixels_1 + _49;
  _51 = *_50;
  buffer[_48] = _51;
  _53 = (sizetype) i_3;
  _54 = pixels_1 + _53;
  _55 = total_45 / 2;
  _56 = (unsigned char) _55;
  *_54 = _56;
  i_58 = i_3 + 1;
  goto <bb 6>;

  <bb 8>:
  goto <bb 25>;

<L6>:
  i_59 = 0;

  <bb 10>:
  # i_4 = PHI <i_59(9), i_82(11)>
  # total_10 = PHI <total_34(9), total_69(11)>
  if (i_4 > safe_w_26)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  _60 = (sizetype) i_4;
  _61 = pixels_1 + _60;
  _62 = *_61;
  _63 = (int) _62;
  _64 = i_4 & 7;
  _65 = buffer[_64];
  _66 = (int) _65;
  _67 = _63 - _66;
  _68 = (unsigned int) _67;
  total_69 = _68 + total_10;
  i.265_70 = (unsigned int) i_4;
  _71 = i.265_70 + kernel_width_24(D);
  _72 = _71 & 7;
  _73 = (sizetype) i_4;
  _74 = pixels_1 + _73;
  _75 = *_74;
  buffer[_72] = _75;
  _77 = (sizetype) i_4;
  _78 = pixels_1 + _77;
  _79 = total_69 / 3;
  _80 = (unsigned char) _79;
  *_78 = _80;
  i_82 = i_4 + 1;
  goto <bb 10>;

  <bb 12>:
  goto <bb 25>;

<L10>:
  i_83 = 0;

  <bb 14>:
  # i_5 = PHI <i_83(13), i_106(15)>
  # total_11 = PHI <total_34(13), total_93(15)>
  if (i_5 > safe_w_26)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  _84 = (sizetype) i_5;
  _85 = pixels_1 + _84;
  _86 = *_85;
  _87 = (int) _86;
  _88 = i_5 & 7;
  _89 = buffer[_88];
  _90 = (int) _89;
  _91 = _87 - _90;
  _92 = (unsigned int) _91;
  total_93 = _92 + total_11;
  i.266_94 = (unsigned int) i_5;
  _95 = i.266_94 + kernel_width_24(D);
  _96 = _95 & 7;
  _97 = (sizetype) i_5;
  _98 = pixels_1 + _97;
  _99 = *_98;
  buffer[_96] = _99;
  _101 = (sizetype) i_5;
  _102 = pixels_1 + _101;
  _103 = total_93 / 4;
  _104 = (unsigned char) _103;
  *_102 = _104;
  i_106 = i_5 + 1;
  goto <bb 14>;

  <bb 16>:
  goto <bb 25>;

<L14>:
  i_107 = 0;

  <bb 18>:
  # i_6 = PHI <i_107(17), i_130(19)>
  # total_12 = PHI <total_34(17), total_117(19)>
  if (i_6 > safe_w_26)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  _108 = (sizetype) i_6;
  _109 = pixels_1 + _108;
  _110 = *_109;
  _111 = (int) _110;
  _112 = i_6 & 7;
  _113 = buffer[_112];
  _114 = (int) _113;
  _115 = _111 - _114;
  _116 = (unsigned int) _115;
  total_117 = _116 + total_12;
  i.267_118 = (unsigned int) i_6;
  _119 = i.267_118 + kernel_width_24(D);
  _120 = _119 & 7;
  _121 = (sizetype) i_6;
  _122 = pixels_1 + _121;
  _123 = *_122;
  buffer[_120] = _123;
  _125 = (sizetype) i_6;
  _126 = pixels_1 + _125;
  _127 = total_117 / 5;
  _128 = (unsigned char) _127;
  *_126 = _128;
  i_130 = i_6 + 1;
  goto <bb 18>;

  <bb 20>:
  goto <bb 25>;

<L18>:
  i_131 = 0;

  <bb 22>:
  # i_7 = PHI <i_131(21), i_154(23)>
  # total_13 = PHI <total_34(21), total_141(23)>
  if (i_7 > safe_w_26)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  _132 = (sizetype) i_7;
  _133 = pixels_1 + _132;
  _134 = *_133;
  _135 = (int) _134;
  _136 = i_7 & 7;
  _137 = buffer[_136];
  _138 = (int) _137;
  _139 = _135 - _138;
  _140 = (unsigned int) _139;
  total_141 = _140 + total_13;
  i.268_142 = (unsigned int) i_7;
  _143 = i.268_142 + kernel_width_24(D);
  _144 = _143 & 7;
  _145 = (sizetype) i_7;
  _146 = pixels_1 + _145;
  _147 = *_146;
  buffer[_144] = _147;
  _149 = (sizetype) i_7;
  _150 = pixels_1 + _149;
  _151 = total_141 / kernel_width_24(D);
  _152 = (unsigned char) _151;
  *_150 = _152;
  i_154 = i_7 + 1;
  goto <bb 22>;

  <bb 24>:

  <bb 25>:
  # i_8 = PHI <i_3(8), i_4(12), i_5(16), i_6(20), i_7(24), i_167(28)>
  # total_14 = PHI <total_9(8), total_10(12), total_11(16), total_12(20), total_13(24), total_161(28)>
  if (i_8 >= w_22(D))
    goto <bb 29>;
  else
    goto <bb 26>;

  <bb 26>:
  _155 = (sizetype) i_8;
  _156 = pixels_1 + _155;
  _157 = *_156;
  if (_157 == 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  __assert_fail ("pixels[i] == 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 3873, &__PRETTY_FUNCTION__);

  <bb 28>:
  _158 = i_8 & 7;
  _159 = buffer[_158];
  _160 = (unsigned int) _159;
  total_161 = total_14 - _160;
  _162 = (sizetype) i_8;
  _163 = pixels_1 + _162;
  _164 = total_161 / kernel_width_24(D);
  _165 = (unsigned char) _164;
  *_163 = _165;
  i_167 = i_8 + 1;
  goto <bb 25>;

  <bb 29>:
  _170 = (sizetype) stride_in_bytes_169(D);
  pixels_171 = pixels_1 + _170;
  j_172 = j_2 + 1;
  goto <bb 3>;

  <bb 30>:
  buffer ={v} {CLOBBER};
  return;

}



;; Function void stbtt__v_prefilter(unsigned char*, int, int, int, unsigned int) (_ZL18stbtt__v_prefilterPhiiij, funcdef_no=657, decl_uid=17156, cgraph_uid=556, symbol_order=556)

void stbtt__v_prefilter(unsigned char*, int, int, int, unsigned int) (unsigned char * pixels, int w, int h, int stride_in_bytes, unsigned int kernel_width)
{
  unsigned int total;
  int i;
  static const char __PRETTY_FUNCTION__[69] = "void stbtt__v_prefilter(unsigned char*, int, int, int, unsigned int)";
  int j;
  int safe_h;
  unsigned char buffer[8];
  unsigned char D.24390;
  unsigned int D.24389;
  unsigned char * D.24388;
  sizetype D.24387;
  int D.24386;
  unsigned int D.24385;
  unsigned char D.24384;
  int D.24383;
  unsigned char D.24379;
  unsigned char * D.24378;
  sizetype D.24377;
  int D.24376;
  unsigned char D.24373;
  unsigned int D.24372;
  unsigned char * D.24371;
  sizetype D.24370;
  int D.24369;
  unsigned char D.24368;
  unsigned char * D.24367;
  sizetype D.24366;
  int D.24365;
  unsigned int D.24364;
  unsigned int D.24363;
  unsigned int i.274;
  unsigned int D.24361;
  int D.24360;
  int D.24359;
  unsigned char D.24358;
  int D.24357;
  int D.24356;
  unsigned char D.24355;
  unsigned char * D.24354;
  sizetype D.24353;
  int D.24352;
  unsigned char D.24349;
  unsigned int D.24348;
  unsigned char * D.24347;
  sizetype D.24346;
  int D.24345;
  unsigned char D.24344;
  unsigned char * D.24343;
  sizetype D.24342;
  int D.24341;
  unsigned int D.24340;
  unsigned int D.24339;
  unsigned int i.273;
  unsigned int D.24337;
  int D.24336;
  int D.24335;
  unsigned char D.24334;
  int D.24333;
  int D.24332;
  unsigned char D.24331;
  unsigned char * D.24330;
  sizetype D.24329;
  int D.24328;
  unsigned char D.24325;
  unsigned int D.24324;
  unsigned char * D.24323;
  sizetype D.24322;
  int D.24321;
  unsigned char D.24320;
  unsigned char * D.24319;
  sizetype D.24318;
  int D.24317;
  unsigned int D.24316;
  unsigned int D.24315;
  unsigned int i.272;
  unsigned int D.24313;
  int D.24312;
  int D.24311;
  unsigned char D.24310;
  int D.24309;
  int D.24308;
  unsigned char D.24307;
  unsigned char * D.24306;
  sizetype D.24305;
  int D.24304;
  unsigned char D.24301;
  unsigned int D.24300;
  unsigned char * D.24299;
  sizetype D.24298;
  int D.24297;
  unsigned char D.24296;
  unsigned char * D.24295;
  sizetype D.24294;
  int D.24293;
  unsigned int D.24292;
  unsigned int D.24291;
  unsigned int i.271;
  unsigned int D.24289;
  int D.24288;
  int D.24287;
  unsigned char D.24286;
  int D.24285;
  int D.24284;
  unsigned char D.24283;
  unsigned char * D.24282;
  sizetype D.24281;
  int D.24280;
  unsigned char D.24277;
  unsigned int D.24276;
  unsigned char * D.24275;
  sizetype D.24274;
  int D.24273;
  unsigned char D.24272;
  unsigned char * D.24271;
  sizetype D.24270;
  int D.24269;
  unsigned int D.24268;
  unsigned int D.24267;
  unsigned int i.270;
  unsigned int D.24265;
  int D.24264;
  int D.24263;
  unsigned char D.24262;
  int D.24261;
  int D.24260;
  unsigned char D.24259;
  unsigned char * D.24258;
  sizetype D.24257;
  int D.24256;
  long unsigned int D.24253;
  unsigned int D.24250;
  unsigned int h.269;
  unsigned int h.269_23;
  unsigned int _25;
  long unsigned int _32;
  int _37;
  sizetype _38;
  unsigned char * _39;
  unsigned char _40;
  int _41;
  int _42;
  unsigned char _43;
  int _44;
  int _45;
  unsigned int _46;
  unsigned int i.270_48;
  unsigned int _49;
  unsigned int _50;
  int _51;
  sizetype _52;
  unsigned char * _53;
  unsigned char _54;
  int _56;
  sizetype _57;
  unsigned char * _58;
  unsigned int _59;
  unsigned char _60;
  int _64;
  sizetype _65;
  unsigned char * _66;
  unsigned char _67;
  int _68;
  int _69;
  unsigned char _70;
  int _71;
  int _72;
  unsigned int _73;
  unsigned int i.271_75;
  unsigned int _76;
  unsigned int _77;
  int _78;
  sizetype _79;
  unsigned char * _80;
  unsigned char _81;
  int _83;
  sizetype _84;
  unsigned char * _85;
  unsigned int _86;
  unsigned char _87;
  int _91;
  sizetype _92;
  unsigned char * _93;
  unsigned char _94;
  int _95;
  int _96;
  unsigned char _97;
  int _98;
  int _99;
  unsigned int _100;
  unsigned int i.272_102;
  unsigned int _103;
  unsigned int _104;
  int _105;
  sizetype _106;
  unsigned char * _107;
  unsigned char _108;
  int _110;
  sizetype _111;
  unsigned char * _112;
  unsigned int _113;
  unsigned char _114;
  int _118;
  sizetype _119;
  unsigned char * _120;
  unsigned char _121;
  int _122;
  int _123;
  unsigned char _124;
  int _125;
  int _126;
  unsigned int _127;
  unsigned int i.273_129;
  unsigned int _130;
  unsigned int _131;
  int _132;
  sizetype _133;
  unsigned char * _134;
  unsigned char _135;
  int _137;
  sizetype _138;
  unsigned char * _139;
  unsigned int _140;
  unsigned char _141;
  int _145;
  sizetype _146;
  unsigned char * _147;
  unsigned char _148;
  int _149;
  int _150;
  unsigned char _151;
  int _152;
  int _153;
  unsigned int _154;
  unsigned int i.274_156;
  unsigned int _157;
  unsigned int _158;
  int _159;
  sizetype _160;
  unsigned char * _161;
  unsigned char _162;
  int _164;
  sizetype _165;
  unsigned char * _166;
  unsigned int _167;
  unsigned char _168;
  int _171;
  sizetype _172;
  unsigned char * _173;
  unsigned char _174;
  int _175;
  unsigned char _176;
  unsigned int _177;
  int _179;
  sizetype _180;
  unsigned char * _181;
  unsigned int _182;
  unsigned char _183;

  <bb 2>:
  h.269_23 = (unsigned int) h_22(D);
  _25 = h.269_23 - kernel_width_24(D);
  safe_h_26 = (int) _25;
  memset (&buffer, 0, 8);
  j_29 = 0;

  <bb 3>:
  # pixels_1 = PHI <pixels_30(D)(2), pixels_187(29)>
  # j_2 = PHI <j_29(2), j_188(29)>
  if (j_2 >= w_31(D))
    goto <bb 30>;
  else
    goto <bb 4>;

  <bb 4>:
  _32 = (long unsigned int) kernel_width_24(D);
  memset (&buffer, 0, _32);
  total_34 = 0;
  switch (kernel_width_24(D)) <default: <L18>, case 2: <L2>, case 3: <L6>, case 4: <L10>, case 5: <L14>>

<L2>:
  i_35 = 0;

  <bb 6>:
  # i_3 = PHI <i_35(5), i_62(7)>
  # total_9 = PHI <total_34(5), total_47(7)>
  if (i_3 > safe_h_26)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _37 = i_3 * stride_in_bytes_36(D);
  _38 = (sizetype) _37;
  _39 = pixels_1 + _38;
  _40 = *_39;
  _41 = (int) _40;
  _42 = i_3 & 7;
  _43 = buffer[_42];
  _44 = (int) _43;
  _45 = _41 - _44;
  _46 = (unsigned int) _45;
  total_47 = _46 + total_9;
  i.270_48 = (unsigned int) i_3;
  _49 = i.270_48 + kernel_width_24(D);
  _50 = _49 & 7;
  _51 = i_3 * stride_in_bytes_36(D);
  _52 = (sizetype) _51;
  _53 = pixels_1 + _52;
  _54 = *_53;
  buffer[_50] = _54;
  _56 = i_3 * stride_in_bytes_36(D);
  _57 = (sizetype) _56;
  _58 = pixels_1 + _57;
  _59 = total_47 / 2;
  _60 = (unsigned char) _59;
  *_58 = _60;
  i_62 = i_3 + 1;
  goto <bb 6>;

  <bb 8>:
  goto <bb 25>;

<L6>:
  i_63 = 0;

  <bb 10>:
  # i_4 = PHI <i_63(9), i_89(11)>
  # total_10 = PHI <total_34(9), total_74(11)>
  if (i_4 > safe_h_26)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  _64 = i_4 * stride_in_bytes_36(D);
  _65 = (sizetype) _64;
  _66 = pixels_1 + _65;
  _67 = *_66;
  _68 = (int) _67;
  _69 = i_4 & 7;
  _70 = buffer[_69];
  _71 = (int) _70;
  _72 = _68 - _71;
  _73 = (unsigned int) _72;
  total_74 = _73 + total_10;
  i.271_75 = (unsigned int) i_4;
  _76 = i.271_75 + kernel_width_24(D);
  _77 = _76 & 7;
  _78 = i_4 * stride_in_bytes_36(D);
  _79 = (sizetype) _78;
  _80 = pixels_1 + _79;
  _81 = *_80;
  buffer[_77] = _81;
  _83 = i_4 * stride_in_bytes_36(D);
  _84 = (sizetype) _83;
  _85 = pixels_1 + _84;
  _86 = total_74 / 3;
  _87 = (unsigned char) _86;
  *_85 = _87;
  i_89 = i_4 + 1;
  goto <bb 10>;

  <bb 12>:
  goto <bb 25>;

<L10>:
  i_90 = 0;

  <bb 14>:
  # i_5 = PHI <i_90(13), i_116(15)>
  # total_11 = PHI <total_34(13), total_101(15)>
  if (i_5 > safe_h_26)
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  _91 = i_5 * stride_in_bytes_36(D);
  _92 = (sizetype) _91;
  _93 = pixels_1 + _92;
  _94 = *_93;
  _95 = (int) _94;
  _96 = i_5 & 7;
  _97 = buffer[_96];
  _98 = (int) _97;
  _99 = _95 - _98;
  _100 = (unsigned int) _99;
  total_101 = _100 + total_11;
  i.272_102 = (unsigned int) i_5;
  _103 = i.272_102 + kernel_width_24(D);
  _104 = _103 & 7;
  _105 = i_5 * stride_in_bytes_36(D);
  _106 = (sizetype) _105;
  _107 = pixels_1 + _106;
  _108 = *_107;
  buffer[_104] = _108;
  _110 = i_5 * stride_in_bytes_36(D);
  _111 = (sizetype) _110;
  _112 = pixels_1 + _111;
  _113 = total_101 / 4;
  _114 = (unsigned char) _113;
  *_112 = _114;
  i_116 = i_5 + 1;
  goto <bb 14>;

  <bb 16>:
  goto <bb 25>;

<L14>:
  i_117 = 0;

  <bb 18>:
  # i_6 = PHI <i_117(17), i_143(19)>
  # total_12 = PHI <total_34(17), total_128(19)>
  if (i_6 > safe_h_26)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  _118 = i_6 * stride_in_bytes_36(D);
  _119 = (sizetype) _118;
  _120 = pixels_1 + _119;
  _121 = *_120;
  _122 = (int) _121;
  _123 = i_6 & 7;
  _124 = buffer[_123];
  _125 = (int) _124;
  _126 = _122 - _125;
  _127 = (unsigned int) _126;
  total_128 = _127 + total_12;
  i.273_129 = (unsigned int) i_6;
  _130 = i.273_129 + kernel_width_24(D);
  _131 = _130 & 7;
  _132 = i_6 * stride_in_bytes_36(D);
  _133 = (sizetype) _132;
  _134 = pixels_1 + _133;
  _135 = *_134;
  buffer[_131] = _135;
  _137 = i_6 * stride_in_bytes_36(D);
  _138 = (sizetype) _137;
  _139 = pixels_1 + _138;
  _140 = total_128 / 5;
  _141 = (unsigned char) _140;
  *_139 = _141;
  i_143 = i_6 + 1;
  goto <bb 18>;

  <bb 20>:
  goto <bb 25>;

<L18>:
  i_144 = 0;

  <bb 22>:
  # i_7 = PHI <i_144(21), i_170(23)>
  # total_13 = PHI <total_34(21), total_155(23)>
  if (i_7 > safe_h_26)
    goto <bb 24>;
  else
    goto <bb 23>;

  <bb 23>:
  _145 = i_7 * stride_in_bytes_36(D);
  _146 = (sizetype) _145;
  _147 = pixels_1 + _146;
  _148 = *_147;
  _149 = (int) _148;
  _150 = i_7 & 7;
  _151 = buffer[_150];
  _152 = (int) _151;
  _153 = _149 - _152;
  _154 = (unsigned int) _153;
  total_155 = _154 + total_13;
  i.274_156 = (unsigned int) i_7;
  _157 = i.274_156 + kernel_width_24(D);
  _158 = _157 & 7;
  _159 = i_7 * stride_in_bytes_36(D);
  _160 = (sizetype) _159;
  _161 = pixels_1 + _160;
  _162 = *_161;
  buffer[_158] = _162;
  _164 = i_7 * stride_in_bytes_36(D);
  _165 = (sizetype) _164;
  _166 = pixels_1 + _165;
  _167 = total_155 / kernel_width_24(D);
  _168 = (unsigned char) _167;
  *_166 = _168;
  i_170 = i_7 + 1;
  goto <bb 22>;

  <bb 24>:

  <bb 25>:
  # i_8 = PHI <i_3(8), i_4(12), i_5(16), i_6(20), i_7(24), i_185(28)>
  # total_14 = PHI <total_9(8), total_10(12), total_11(16), total_12(20), total_13(24), total_178(28)>
  if (i_8 >= h_22(D))
    goto <bb 29>;
  else
    goto <bb 26>;

  <bb 26>:
  _171 = i_8 * stride_in_bytes_36(D);
  _172 = (sizetype) _171;
  _173 = pixels_1 + _172;
  _174 = *_173;
  if (_174 == 0)
    goto <bb 28>;
  else
    goto <bb 27>;

  <bb 27>:
  __assert_fail ("pixels[i*stride_in_bytes] == 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 3935, &__PRETTY_FUNCTION__);

  <bb 28>:
  _175 = i_8 & 7;
  _176 = buffer[_175];
  _177 = (unsigned int) _176;
  total_178 = total_14 - _177;
  _179 = i_8 * stride_in_bytes_36(D);
  _180 = (sizetype) _179;
  _181 = pixels_1 + _180;
  _182 = total_178 / kernel_width_24(D);
  _183 = (unsigned char) _182;
  *_181 = _183;
  i_185 = i_8 + 1;
  goto <bb 25>;

  <bb 29>:
  pixels_187 = pixels_1 + 1;
  j_188 = j_2 + 1;
  goto <bb 3>;

  <bb 30>:
  buffer ={v} {CLOBBER};
  return;

}



;; Function float stbtt__oversample_shift(int) (_ZL23stbtt__oversample_shifti, funcdef_no=658, decl_uid=17185, cgraph_uid=557, symbol_order=557)

float stbtt__oversample_shift(int) (int oversample)
{
  float D.24397;
  float D.24396;
  float D.24395;
  int D.24394;
  float D.24393;
  float _1;
  float _3;
  int _4;
  float _5;
  float _6;
  float _7;
  float _8;

  <bb 2>:
  if (oversample_2(D) == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _3 = 0.0;
  goto <bb 5> (<L2>);

  <bb 4>:
  _4 = 1 - oversample_2(D);
  _5 = (float) _4;
  _6 = (float) oversample_2(D);
  _7 = _6 * 2.0e+0;
  _8 = _5 / _7;

  # _1 = PHI <_3(3), _8(4)>
<L2>:
  return _1;

}



;; Function int stbtt_PackFontRangesGatherRects(stbtt_pack_context*, const stbtt_fontinfo*, stbtt_pack_range*, int, stbrp_rect*) (stbtt_PackFontRangesGatherRects, funcdef_no=659, decl_uid=15209, cgraph_uid=558, symbol_order=558)

int stbtt_PackFontRangesGatherRects(stbtt_pack_context*, const stbtt_fontinfo*, stbtt_pack_range*, int, stbrp_rect*) (struct stbtt_pack_context * spc, const struct stbtt_fontinfo * info, struct stbtt_pack_range * ranges, int num_ranges, struct stbrp_rect * rects)
{
  int glyph;
  int codepoint;
  int y1;
  int x1;
  int y0;
  int x0;
  float scale;
  float fh;
  int k;
  int j;
  int i;
  int D.24480;
  short unsigned int D.24479;
  short unsigned int D.24478;
  short unsigned int D.24477;
  unsigned int D.24476;
  short unsigned int D.24475;
  short unsigned int D.24474;
  int D.24473;
  short unsigned int D.24472;
  short unsigned int D.24471;
  int y0.280;
  short unsigned int D.24469;
  int y1.279;
  struct stbrp_rect * D.24467;
  long unsigned int D.24466;
  long unsigned int D.24465;
  short unsigned int D.24464;
  short unsigned int D.24463;
  short unsigned int D.24462;
  unsigned int D.24461;
  short unsigned int D.24460;
  short unsigned int D.24459;
  int D.24458;
  short unsigned int D.24457;
  short unsigned int D.24456;
  int x0.278;
  short unsigned int D.24454;
  int x1.277;
  struct stbrp_rect * D.24452;
  long unsigned int D.24451;
  long unsigned int D.24450;
  float D.24449;
  float D.24448;
  unsigned int D.24447;
  float D.24446;
  float D.24445;
  unsigned int D.24444;
  int * D.24443;
  long unsigned int D.24442;
  long unsigned int D.24441;
  int * D.24440;
  struct stbtt_pack_range * D.24439;
  long unsigned int D.24438;
  long unsigned int D.24437;
  int D.24435;
  struct stbtt_pack_range * D.24434;
  long unsigned int D.24433;
  long unsigned int D.24432;
  int * D.24429;
  struct stbtt_pack_range * D.24428;
  long unsigned int D.24427;
  long unsigned int D.24426;
  int iftmp.276;
  int D.24423;
  struct stbtt_pack_range * D.24422;
  long unsigned int D.24421;
  long unsigned int D.24420;
  unsigned char D.24418;
  unsigned int D.24417;
  struct stbtt_pack_range * D.24416;
  long unsigned int D.24415;
  long unsigned int D.24414;
  unsigned char D.24413;
  unsigned int D.24412;
  struct stbtt_pack_range * D.24411;
  long unsigned int D.24410;
  long unsigned int D.24409;
  float D.24408;
  float iftmp.275;
  struct stbtt_pack_range * D.24403;
  long unsigned int D.24402;
  long unsigned int D.24401;
  float iftmp.275_5;
  int iftmp.276_6;
  long unsigned int _14;
  long unsigned int _15;
  struct stbtt_pack_range * _17;
  float iftmp.275_21;
  float _22;
  float iftmp.275_24;
  long unsigned int _26;
  long unsigned int _27;
  struct stbtt_pack_range * _28;
  unsigned int _30;
  unsigned char _31;
  long unsigned int _33;
  long unsigned int _34;
  struct stbtt_pack_range * _35;
  unsigned int _36;
  unsigned char _37;
  long unsigned int _40;
  long unsigned int _41;
  struct stbtt_pack_range * _42;
  int _43;
  long unsigned int _44;
  long unsigned int _45;
  struct stbtt_pack_range * _46;
  int * _47;
  long unsigned int _48;
  long unsigned int _49;
  struct stbtt_pack_range * _50;
  int _51;
  int iftmp.276_52;
  long unsigned int _53;
  long unsigned int _54;
  struct stbtt_pack_range * _55;
  int * _56;
  long unsigned int _57;
  long unsigned int _58;
  int * _59;
  int iftmp.276_60;
  unsigned int _64;
  float _65;
  float _66;
  unsigned int _67;
  float _68;
  float _69;
  long unsigned int _71;
  long unsigned int _72;
  struct stbrp_rect * _74;
  int x1.277_75;
  short unsigned int _76;
  int x0.278_77;
  short unsigned int _78;
  short unsigned int _79;
  int _80;
  short unsigned int _81;
  short unsigned int _82;
  unsigned int _83;
  short unsigned int _84;
  short unsigned int _85;
  short unsigned int _86;
  long unsigned int _88;
  long unsigned int _89;
  struct stbrp_rect * _90;
  int y1.279_91;
  short unsigned int _92;
  int y0.280_93;
  short unsigned int _94;
  short unsigned int _95;
  int _96;
  short unsigned int _97;
  short unsigned int _98;
  unsigned int _99;
  short unsigned int _100;
  short unsigned int _101;
  short unsigned int _102;
  int _115;

  <bb 2>:
  k_10 = 0;
  i_11 = 0;

  <bb 3>:
  # i_1 = PHI <i_11(2), i_114(13)>
  # k_3 = PHI <k_10(2), k_4(13)>
  if (i_1 >= num_ranges_13(D))
    goto <bb 14>;
  else
    goto <bb 4>;

  <bb 4>:
  _14 = (long unsigned int) i_1;
  _15 = _14 * 40;
  _17 = ranges_16(D) + _15;
  fh_18 = _17->font_size;
  if (fh_18 > 0.0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  iftmp.275_21 = stbtt_ScaleForPixelHeight (info_19(D), fh_18);
  goto <bb 7>;

  <bb 6>:
  _22 = -fh_18;
  iftmp.275_24 = stbtt_ScaleForMappingEmToPixels (info_19(D), _22);

  <bb 7>:
  # iftmp.275_5 = PHI <iftmp.275_21(5), iftmp.275_24(6)>
  scale_25 = iftmp.275_5;
  _26 = (long unsigned int) i_1;
  _27 = _26 * 40;
  _28 = ranges_16(D) + _27;
  _30 = spc_29(D)->h_oversample;
  _31 = (unsigned char) _30;
  _28->h_oversample = _31;
  _33 = (long unsigned int) i_1;
  _34 = _33 * 40;
  _35 = ranges_16(D) + _34;
  _36 = spc_29(D)->v_oversample;
  _37 = (unsigned char) _36;
  _35->v_oversample = _37;
  j_39 = 0;

  <bb 8>:
  # j_2 = PHI <j_39(7), j_109(12)>
  # k_4 = PHI <k_3(7), k_104(12)>
  _40 = (long unsigned int) i_1;
  _41 = _40 * 40;
  _42 = ranges_16(D) + _41;
  _43 = _42->num_chars;
  if (_43 <= j_2)
    goto <bb 13>;
  else
    goto <bb 9>;

  <bb 9>:
  _44 = (long unsigned int) i_1;
  _45 = _44 * 40;
  _46 = ranges_16(D) + _45;
  _47 = _46->array_of_unicode_codepoints;
  if (_47 == 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _48 = (long unsigned int) i_1;
  _49 = _48 * 40;
  _50 = ranges_16(D) + _49;
  _51 = _50->first_unicode_codepoint_in_range;
  iftmp.276_52 = _51 + j_2;
  goto <bb 12>;

  <bb 11>:
  _53 = (long unsigned int) i_1;
  _54 = _53 * 40;
  _55 = ranges_16(D) + _54;
  _56 = _55->array_of_unicode_codepoints;
  _57 = (long unsigned int) j_2;
  _58 = _57 * 4;
  _59 = _56 + _58;
  iftmp.276_60 = *_59;

  <bb 12>:
  # iftmp.276_6 = PHI <iftmp.276_52(10), iftmp.276_60(11)>
  codepoint_61 = iftmp.276_6;
  glyph_63 = stbtt_FindGlyphIndex (info_19(D), codepoint_61);
  _64 = spc_29(D)->v_oversample;
  _65 = (float) _64;
  _66 = _65 * scale_25;
  _67 = spc_29(D)->h_oversample;
  _68 = (float) _67;
  _69 = _68 * scale_25;
  stbtt_GetGlyphBitmapBoxSubpixel (info_19(D), glyph_63, _69, _66, 0.0, 0.0, &x0, &y0, &x1, &y1);
  _71 = (long unsigned int) k_4;
  _72 = _71 * 16;
  _74 = rects_73(D) + _72;
  x1.277_75 = x1;
  _76 = (short unsigned int) x1.277_75;
  x0.278_77 = x0;
  _78 = (short unsigned int) x0.278_77;
  _79 = _76 - _78;
  _80 = spc_29(D)->padding;
  _81 = (short unsigned int) _80;
  _82 = _79 + _81;
  _83 = spc_29(D)->h_oversample;
  _84 = (short unsigned int) _83;
  _85 = _82 + _84;
  _86 = _85 + 65535;
  _74->w = _86;
  _88 = (long unsigned int) k_4;
  _89 = _88 * 16;
  _90 = rects_73(D) + _89;
  y1.279_91 = y1;
  _92 = (short unsigned int) y1.279_91;
  y0.280_93 = y0;
  _94 = (short unsigned int) y0.280_93;
  _95 = _92 - _94;
  _96 = spc_29(D)->padding;
  _97 = (short unsigned int) _96;
  _98 = _95 + _97;
  _99 = spc_29(D)->v_oversample;
  _100 = (short unsigned int) _99;
  _101 = _98 + _100;
  _102 = _101 + 65535;
  _90->h = _102;
  k_104 = k_4 + 1;
  x0 ={v} {CLOBBER};
  y0 ={v} {CLOBBER};
  x1 ={v} {CLOBBER};
  y1 ={v} {CLOBBER};
  j_109 = j_2 + 1;
  goto <bb 8>;

  <bb 13>:
  i_114 = i_1 + 1;
  goto <bb 3>;

  <bb 14>:
  _115 = k_3;

<L12>:
  return _115;

}



;; Function void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, float, float, int, int, float*, float*, int) (stbtt_MakeGlyphBitmapSubpixelPrefilter, funcdef_no=660, decl_uid=15479, cgraph_uid=559, symbol_order=559)

void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo*, unsigned char*, int, int, int, float, float, float, float, int, int, float*, float*, int) (const struct stbtt_fontinfo * info, unsigned char * output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int prefilter_x, int prefilter_y, float * sub_x, float * sub_y, int glyph)
{
  float D.24496;
  float D.24495;
  unsigned int prefilter_y.282;
  unsigned int prefilter_x.281;
  int D.24486;
  int D.24485;
  int D.24484;
  int D.24483;
  int _4;
  int _6;
  int _8;
  int _10;
  unsigned int prefilter_x.281_21;
  unsigned int prefilter_y.282_23;
  float _26;
  float _30;

  <bb 2>:
  _4 = prefilter_y_3(D) + -1;
  _6 = out_h_5(D) - _4;
  _8 = prefilter_x_7(D) + -1;
  _10 = out_w_9(D) - _8;
  stbtt_MakeGlyphBitmapSubpixel (info_12(D), output_13(D), _10, _6, out_stride_14(D), scale_x_15(D), scale_y_16(D), shift_x_17(D), shift_y_18(D), glyph_19(D));
  if (prefilter_x_7(D) > 1)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  prefilter_x.281_21 = (unsigned int) prefilter_x_7(D);
  stbtt__h_prefilter (output_13(D), out_w_9(D), out_h_5(D), out_stride_14(D), prefilter_x.281_21);

  <bb 4>:
  if (prefilter_y_3(D) > 1)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  prefilter_y.282_23 = (unsigned int) prefilter_y_3(D);
  stbtt__v_prefilter (output_13(D), out_w_9(D), out_h_5(D), out_stride_14(D), prefilter_y.282_23);

  <bb 6>:
  _26 = stbtt__oversample_shift (prefilter_x_7(D));
  *sub_x_27(D) = _26;
  _30 = stbtt__oversample_shift (prefilter_y_3(D));
  *sub_y_31(D) = _30;
  return;

}



;; Function int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context*, const stbtt_fontinfo*, stbtt_pack_range*, int, stbrp_rect*) (stbtt_PackFontRangesRenderIntoRects, funcdef_no=661, decl_uid=15219, cgraph_uid=560, symbol_order=560)

int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context*, const stbtt_fontinfo*, stbtt_pack_range*, int, stbrp_rect*) (struct stbtt_pack_context * spc, const struct stbtt_fontinfo * info, struct stbtt_pack_range * ranges, int num_ranges, struct stbrp_rect * rects)
{
  stbrp_coord pad;
  int glyph;
  int codepoint;
  int y1;
  int x1;
  int y0;
  int x0;
  int lsb;
  int advance;
  struct stbtt_packedchar * bc;
  struct stbrp_rect * r;
  float sub_y;
  float sub_x;
  float recip_v;
  float recip_h;
  float scale;
  float fh;
  int old_v_over;
  int old_h_over;
  int return_value;
  int k;
  int j;
  int i;
  int D.24683;
  unsigned int old_v_over.291;
  unsigned int old_h_over.290;
  float D.24679;
  float D.24678;
  float D.24677;
  int D.24676;
  int y0.289;
  int D.24674;
  short unsigned int D.24673;
  float D.24672;
  float D.24671;
  float D.24670;
  int D.24669;
  int x0.288;
  int D.24667;
  short unsigned int D.24666;
  float D.24665;
  float D.24664;
  float D.24663;
  int y0.287;
  float D.24661;
  float D.24660;
  float D.24659;
  int x0.286;
  float D.24657;
  float D.24656;
  int advance.285;
  unsigned short D.24654;
  short unsigned int D.24653;
  short unsigned int D.24652;
  unsigned short D.24651;
  short unsigned int D.24650;
  short unsigned int D.24649;
  short unsigned int D.24648;
  short unsigned int D.24647;
  unsigned char * D.24645;
  sizetype D.24644;
  sizetype D.24643;
  int D.24642;
  int D.24641;
  int D.24640;
  short unsigned int D.24639;
  sizetype D.24638;
  short unsigned int D.24637;
  unsigned char * D.24636;
  int D.24635;
  short unsigned int D.24634;
  int D.24633;
  short unsigned int D.24632;
  int D.24631;
  unsigned int D.24630;
  unsigned int D.24627;
  unsigned char * D.24625;
  sizetype D.24624;
  sizetype D.24623;
  int D.24622;
  int D.24621;
  int D.24620;
  short unsigned int D.24619;
  sizetype D.24618;
  short unsigned int D.24617;
  unsigned char * D.24616;
  int D.24615;
  short unsigned int D.24614;
  int D.24613;
  short unsigned int D.24612;
  int D.24611;
  unsigned int D.24610;
  unsigned int D.24607;
  unsigned char * D.24606;
  sizetype D.24605;
  sizetype D.24604;
  int D.24603;
  int D.24602;
  int D.24601;
  short unsigned int D.24600;
  sizetype D.24599;
  short unsigned int D.24598;
  unsigned char * D.24597;
  int D.24596;
  unsigned int D.24595;
  unsigned int D.24594;
  unsigned int D.24593;
  unsigned int D.24592;
  short unsigned int D.24591;
  int D.24590;
  unsigned int D.24589;
  unsigned int D.24588;
  unsigned int D.24587;
  unsigned int D.24586;
  short unsigned int D.24585;
  int D.24584;
  float D.24583;
  float D.24582;
  unsigned int D.24581;
  float D.24580;
  float D.24579;
  unsigned int D.24578;
  float D.24577;
  float D.24576;
  unsigned int D.24575;
  float D.24574;
  float D.24573;
  unsigned int D.24572;
  short unsigned int D.24571;
  short unsigned int D.24570;
  short unsigned int D.24569;
  short unsigned int D.24568;
  short unsigned int D.24567;
  short unsigned int D.24566;
  short unsigned int D.24565;
  short unsigned int D.24564;
  int D.24563;
  int * D.24562;
  long unsigned int D.24561;
  long unsigned int D.24560;
  int * D.24559;
  struct stbtt_pack_range * D.24558;
  long unsigned int D.24557;
  long unsigned int D.24556;
  int D.24554;
  struct stbtt_pack_range * D.24553;
  long unsigned int D.24552;
  long unsigned int D.24551;
  int * D.24548;
  struct stbtt_pack_range * D.24547;
  long unsigned int D.24546;
  long unsigned int D.24545;
  int iftmp.284;
  long unsigned int D.24543;
  long unsigned int D.24542;
  struct stbtt_packedchar * D.24541;
  struct stbtt_pack_range * D.24540;
  long unsigned int D.24539;
  long unsigned int D.24538;
  int D.24535;
  long unsigned int D.24534;
  long unsigned int D.24533;
  int D.24531;
  struct stbtt_pack_range * D.24530;
  long unsigned int D.24529;
  long unsigned int D.24528;
  int D.24526;
  unsigned int D.24525;
  int D.24524;
  unsigned int D.24523;
  float D.24522;
  unsigned int D.24521;
  float D.24520;
  unsigned int D.24519;
  unsigned int D.24518;
  unsigned char D.24517;
  struct stbtt_pack_range * D.24516;
  long unsigned int D.24515;
  long unsigned int D.24514;
  unsigned int D.24513;
  unsigned char D.24512;
  struct stbtt_pack_range * D.24511;
  long unsigned int D.24510;
  long unsigned int D.24509;
  float D.24508;
  float iftmp.283;
  struct stbtt_pack_range * D.24503;
  long unsigned int D.24502;
  long unsigned int D.24501;
  unsigned int D.24498;
  unsigned int D.24497;
  float iftmp.283_8;
  int iftmp.284_9;
  unsigned int _20;
  unsigned int _22;
  long unsigned int _27;
  long unsigned int _28;
  struct stbtt_pack_range * _30;
  float iftmp.283_34;
  float _35;
  float iftmp.283_37;
  long unsigned int _39;
  long unsigned int _40;
  struct stbtt_pack_range * _41;
  unsigned char _42;
  unsigned int _43;
  long unsigned int _45;
  long unsigned int _46;
  struct stbtt_pack_range * _47;
  unsigned char _48;
  unsigned int _49;
  unsigned int _51;
  float _52;
  unsigned int _54;
  float _55;
  unsigned int _57;
  int _58;
  unsigned int _61;
  int _62;
  long unsigned int _66;
  long unsigned int _67;
  struct stbtt_pack_range * _68;
  int _69;
  long unsigned int _70;
  long unsigned int _71;
  int _74;
  long unsigned int _75;
  long unsigned int _76;
  struct stbtt_pack_range * _77;
  struct stbtt_packedchar * _78;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _82;
  long unsigned int _83;
  struct stbtt_pack_range * _84;
  int * _85;
  long unsigned int _86;
  long unsigned int _87;
  struct stbtt_pack_range * _88;
  int _89;
  int iftmp.284_90;
  long unsigned int _91;
  long unsigned int _92;
  struct stbtt_pack_range * _93;
  int * _94;
  long unsigned int _95;
  long unsigned int _96;
  int * _97;
  int iftmp.284_98;
  int _102;
  short unsigned int _104;
  short unsigned int _105;
  short unsigned int _107;
  short unsigned int _108;
  short unsigned int _110;
  short unsigned int _111;
  short unsigned int _113;
  short unsigned int _114;
  unsigned int _117;
  float _118;
  float _119;
  unsigned int _120;
  float _121;
  float _122;
  unsigned int _124;
  float _125;
  float _126;
  unsigned int _127;
  float _128;
  float _129;
  int _130;
  short unsigned int _131;
  unsigned int _132;
  unsigned int _133;
  unsigned int _134;
  unsigned int _135;
  int _136;
  short unsigned int _137;
  unsigned int _138;
  unsigned int _139;
  unsigned int _140;
  unsigned int _141;
  int _142;
  unsigned char * _143;
  short unsigned int _144;
  sizetype _145;
  short unsigned int _146;
  int _147;
  int _148;
  int _149;
  sizetype _150;
  sizetype _151;
  unsigned char * _152;
  unsigned int _154;
  unsigned int _155;
  int _156;
  short unsigned int _157;
  int _158;
  short unsigned int _159;
  int _160;
  unsigned char * _161;
  short unsigned int _162;
  sizetype _163;
  short unsigned int _164;
  int _165;
  int _166;
  int _167;
  sizetype _168;
  sizetype _169;
  unsigned char * _170;
  unsigned int _172;
  unsigned int _173;
  int _174;
  short unsigned int _175;
  int _176;
  short unsigned int _177;
  int _178;
  unsigned char * _179;
  short unsigned int _180;
  sizetype _181;
  short unsigned int _182;
  int _183;
  int _184;
  int _185;
  sizetype _186;
  sizetype _187;
  unsigned char * _188;
  short unsigned int _190;
  short unsigned int _192;
  short unsigned int _194;
  short unsigned int _195;
  unsigned short _196;
  short unsigned int _198;
  short unsigned int _199;
  unsigned short _200;
  int advance.285_202;
  float _203;
  float _204;
  int x0.286_206;
  float _207;
  float _208;
  float _209;
  int y0.287_211;
  float _212;
  float _213;
  float _214;
  short unsigned int _216;
  int _217;
  int x0.288_218;
  int _219;
  float _220;
  float _221;
  float _222;
  short unsigned int _224;
  int _225;
  int y0.289_226;
  int _227;
  float _228;
  float _229;
  float _230;
  unsigned int old_h_over.290_248;
  unsigned int old_v_over.291_250;
  int _252;

  <bb 2>:
  return_value_17 = 1;
  _20 = spc_19(D)->h_oversample;
  old_h_over_21 = (int) _20;
  _22 = spc_19(D)->v_oversample;
  old_v_over_23 = (int) _22;
  k_24 = 0;
  i_25 = 0;

  <bb 3>:
  # i_1 = PHI <i_25(2), i_247(20)>
  # k_3 = PHI <k_24(2), k_4(20)>
  # return_value_5 = PHI <return_value_17(2), return_value_6(20)>
  if (i_1 >= num_ranges_26(D))
    goto <bb 21>;
  else
    goto <bb 4>;

  <bb 4>:
  _27 = (long unsigned int) i_1;
  _28 = _27 * 40;
  _30 = ranges_29(D) + _28;
  fh_31 = _30->font_size;
  if (fh_31 > 0.0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  iftmp.283_34 = stbtt_ScaleForPixelHeight (info_32(D), fh_31);
  goto <bb 7>;

  <bb 6>:
  _35 = -fh_31;
  iftmp.283_37 = stbtt_ScaleForMappingEmToPixels (info_32(D), _35);

  <bb 7>:
  # iftmp.283_8 = PHI <iftmp.283_34(5), iftmp.283_37(6)>
  scale_38 = iftmp.283_8;
  _39 = (long unsigned int) i_1;
  _40 = _39 * 40;
  _41 = ranges_29(D) + _40;
  _42 = _41->h_oversample;
  _43 = (unsigned int) _42;
  spc_19(D)->h_oversample = _43;
  _45 = (long unsigned int) i_1;
  _46 = _45 * 40;
  _47 = ranges_29(D) + _46;
  _48 = _47->v_oversample;
  _49 = (unsigned int) _48;
  spc_19(D)->v_oversample = _49;
  _51 = spc_19(D)->h_oversample;
  _52 = (float) _51;
  recip_h_53 = 1.0e+0 / _52;
  _54 = spc_19(D)->v_oversample;
  _55 = (float) _54;
  recip_v_56 = 1.0e+0 / _55;
  _57 = spc_19(D)->h_oversample;
  _58 = (int) _57;
  sub_x_60 = stbtt__oversample_shift (_58);
  _61 = spc_19(D)->v_oversample;
  _62 = (int) _61;
  sub_y_64 = stbtt__oversample_shift (_62);
  j_65 = 0;

  <bb 8>:
  # j_2 = PHI <j_65(7), j_246(19)>
  # k_4 = PHI <k_3(7), k_245(19)>
  # return_value_6 = PHI <return_value_5(7), return_value_7(19)>
  _66 = (long unsigned int) i_1;
  _67 = _66 * 40;
  _68 = ranges_29(D) + _67;
  _69 = _68->num_chars;
  if (_69 <= j_2)
    goto <bb 20>;
  else
    goto <bb 9>;

  <bb 9>:
  _70 = (long unsigned int) k_4;
  _71 = _70 * 16;
  r_73 = rects_72(D) + _71;
  _74 = r_73->was_packed;
  if (_74 != 0)
    goto <bb 10>;
  else
    goto <bb 18>;

  <bb 10>:
  _75 = (long unsigned int) i_1;
  _76 = _75 * 40;
  _77 = ranges_29(D) + _76;
  _78 = _77->chardata_for_range;
  _79 = (long unsigned int) j_2;
  _80 = _79 * 28;
  bc_81 = _78 + _80;
  _82 = (long unsigned int) i_1;
  _83 = _82 * 40;
  _84 = ranges_29(D) + _83;
  _85 = _84->array_of_unicode_codepoints;
  if (_85 == 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _86 = (long unsigned int) i_1;
  _87 = _86 * 40;
  _88 = ranges_29(D) + _87;
  _89 = _88->first_unicode_codepoint_in_range;
  iftmp.284_90 = _89 + j_2;
  goto <bb 13>;

  <bb 12>:
  _91 = (long unsigned int) i_1;
  _92 = _91 * 40;
  _93 = ranges_29(D) + _92;
  _94 = _93->array_of_unicode_codepoints;
  _95 = (long unsigned int) j_2;
  _96 = _95 * 4;
  _97 = _94 + _96;
  iftmp.284_98 = *_97;

  <bb 13>:
  # iftmp.284_9 = PHI <iftmp.284_90(11), iftmp.284_98(12)>
  codepoint_99 = iftmp.284_9;
  glyph_101 = stbtt_FindGlyphIndex (info_32(D), codepoint_99);
  _102 = spc_19(D)->padding;
  pad_103 = (stbrp_coord) _102;
  _104 = r_73->x;
  _105 = _104 + pad_103;
  r_73->x = _105;
  _107 = r_73->y;
  _108 = _107 + pad_103;
  r_73->y = _108;
  _110 = r_73->w;
  _111 = _110 - pad_103;
  r_73->w = _111;
  _113 = r_73->h;
  _114 = _113 - pad_103;
  r_73->h = _114;
  stbtt_GetGlyphHMetrics (info_32(D), glyph_101, &advance, &lsb);
  _117 = spc_19(D)->v_oversample;
  _118 = (float) _117;
  _119 = _118 * scale_38;
  _120 = spc_19(D)->h_oversample;
  _121 = (float) _120;
  _122 = _121 * scale_38;
  stbtt_GetGlyphBitmapBox (info_32(D), glyph_101, _122, _119, &x0, &y0, &x1, &y1);
  _124 = spc_19(D)->v_oversample;
  _125 = (float) _124;
  _126 = _125 * scale_38;
  _127 = spc_19(D)->h_oversample;
  _128 = (float) _127;
  _129 = _128 * scale_38;
  _130 = spc_19(D)->stride_in_bytes;
  _131 = r_73->h;
  _132 = (unsigned int) _131;
  _133 = spc_19(D)->v_oversample;
  _134 = _132 - _133;
  _135 = _134 + 1;
  _136 = (int) _135;
  _137 = r_73->w;
  _138 = (unsigned int) _137;
  _139 = spc_19(D)->h_oversample;
  _140 = _138 - _139;
  _141 = _140 + 1;
  _142 = (int) _141;
  _143 = spc_19(D)->pixels;
  _144 = r_73->x;
  _145 = (sizetype) _144;
  _146 = r_73->y;
  _147 = (int) _146;
  _148 = spc_19(D)->stride_in_bytes;
  _149 = _147 * _148;
  _150 = (sizetype) _149;
  _151 = _145 + _150;
  _152 = _143 + _151;
  stbtt_MakeGlyphBitmapSubpixel (info_32(D), _152, _142, _136, _130, _129, _126, 0.0, 0.0, glyph_101);
  _154 = spc_19(D)->h_oversample;
  if (_154 > 1)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _155 = spc_19(D)->h_oversample;
  _156 = spc_19(D)->stride_in_bytes;
  _157 = r_73->h;
  _158 = (int) _157;
  _159 = r_73->w;
  _160 = (int) _159;
  _161 = spc_19(D)->pixels;
  _162 = r_73->x;
  _163 = (sizetype) _162;
  _164 = r_73->y;
  _165 = (int) _164;
  _166 = spc_19(D)->stride_in_bytes;
  _167 = _165 * _166;
  _168 = (sizetype) _167;
  _169 = _163 + _168;
  _170 = _161 + _169;
  stbtt__h_prefilter (_170, _160, _158, _156, _155);

  <bb 15>:
  _172 = spc_19(D)->v_oversample;
  if (_172 > 1)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _173 = spc_19(D)->v_oversample;
  _174 = spc_19(D)->stride_in_bytes;
  _175 = r_73->h;
  _176 = (int) _175;
  _177 = r_73->w;
  _178 = (int) _177;
  _179 = spc_19(D)->pixels;
  _180 = r_73->x;
  _181 = (sizetype) _180;
  _182 = r_73->y;
  _183 = (int) _182;
  _184 = spc_19(D)->stride_in_bytes;
  _185 = _183 * _184;
  _186 = (sizetype) _185;
  _187 = _181 + _186;
  _188 = _179 + _187;
  stbtt__v_prefilter (_188, _178, _176, _174, _173);

  <bb 17>:
  _190 = r_73->x;
  bc_81->x0 = _190;
  _192 = r_73->y;
  bc_81->y0 = _192;
  _194 = r_73->x;
  _195 = r_73->w;
  _196 = _194 + _195;
  bc_81->x1 = _196;
  _198 = r_73->y;
  _199 = r_73->h;
  _200 = _198 + _199;
  bc_81->y1 = _200;
  advance.285_202 = advance;
  _203 = (float) advance.285_202;
  _204 = _203 * scale_38;
  bc_81->xadvance = _204;
  x0.286_206 = x0;
  _207 = (float) x0.286_206;
  _208 = _207 * recip_h_53;
  _209 = _208 + sub_x_60;
  bc_81->xoff = _209;
  y0.287_211 = y0;
  _212 = (float) y0.287_211;
  _213 = _212 * recip_v_56;
  _214 = _213 + sub_y_64;
  bc_81->yoff = _214;
  _216 = r_73->w;
  _217 = (int) _216;
  x0.288_218 = x0;
  _219 = _217 + x0.288_218;
  _220 = (float) _219;
  _221 = _220 * recip_h_53;
  _222 = _221 + sub_x_60;
  bc_81->xoff2 = _222;
  _224 = r_73->h;
  _225 = (int) _224;
  y0.289_226 = y0;
  _227 = _225 + y0.289_226;
  _228 = (float) _227;
  _229 = _228 * recip_v_56;
  _230 = _229 + sub_y_64;
  bc_81->yoff2 = _230;
  advance ={v} {CLOBBER};
  lsb ={v} {CLOBBER};
  x0 ={v} {CLOBBER};
  y0 ={v} {CLOBBER};
  x1 ={v} {CLOBBER};
  y1 ={v} {CLOBBER};
  goto <bb 19>;

  <bb 18>:
  return_value_244 = 0;

  <bb 19>:
  # return_value_7 = PHI <return_value_6(17), return_value_244(18)>
  k_245 = k_4 + 1;
  j_246 = j_2 + 1;
  goto <bb 8>;

  <bb 20>:
  i_247 = i_1 + 1;
  goto <bb 3>;

  <bb 21>:
  old_h_over.290_248 = (unsigned int) old_h_over_21;
  spc_19(D)->h_oversample = old_h_over.290_248;
  old_v_over.291_250 = (unsigned int) old_v_over_23;
  spc_19(D)->v_oversample = old_v_over.291_250;
  _252 = return_value_5;

<L21>:
  return _252;

}



;; Function void stbtt_PackFontRangesPackRects(stbtt_pack_context*, stbrp_rect*, int) (stbtt_PackFontRangesPackRects, funcdef_no=662, decl_uid=15213, cgraph_uid=561, symbol_order=561)

void stbtt_PackFontRangesPackRects(stbtt_pack_context*, stbrp_rect*, int) (struct stbtt_pack_context * spc, struct stbrp_rect * rects, int num_rects)
{
  void * D.24686;
  void * _3;

  <bb 2>:
  _3 = spc_2(D)->pack_info;
  stbrp_pack_rects (_3, rects_4(D), num_rects_5(D));
  return;

}



;; Function int stbtt_PackFontRanges(stbtt_pack_context*, const unsigned char*, int, stbtt_pack_range*, int) (stbtt_PackFontRanges, funcdef_no=663, decl_uid=15190, cgraph_uid=562, symbol_order=562)

int stbtt_PackFontRanges(stbtt_pack_context*, const unsigned char*, int, stbtt_pack_range*, int) (struct stbtt_pack_context * spc, const unsigned char * fontdata, int font_index, struct stbtt_pack_range * ranges, int num_ranges)
{
  int D.24742;
  int D.24741;
  struct stbrp_rect * D.24740;
  struct stbrp_rect * rects;
  int return_value;
  int n;
  int j;
  int i;
  struct stbtt_fontinfo info;
  int D.24738;
  void * D.24737;
  int D.24736;
  long unsigned int D.24733;
  long unsigned int D.24732;
  int D.24731;
  struct stbtt_pack_range * D.24730;
  long unsigned int D.24729;
  long unsigned int D.24728;
  short unsigned int D.24725;
  short unsigned int D.24724;
  short unsigned int D.24723;
  struct stbtt_packedchar * D.24722;
  long unsigned int D.24721;
  long unsigned int D.24720;
  struct stbtt_packedchar * D.24719;
  struct stbtt_pack_range * D.24718;
  long unsigned int D.24717;
  long unsigned int D.24716;
  struct stbtt_packedchar * D.24715;
  long unsigned int D.24714;
  long unsigned int D.24713;
  struct stbtt_packedchar * D.24712;
  struct stbtt_pack_range * D.24711;
  long unsigned int D.24710;
  long unsigned int D.24709;
  struct stbtt_packedchar * D.24708;
  long unsigned int D.24707;
  long unsigned int D.24706;
  struct stbtt_packedchar * D.24705;
  struct stbtt_pack_range * D.24704;
  long unsigned int D.24703;
  long unsigned int D.24702;
  struct stbtt_packedchar * D.24701;
  long unsigned int D.24700;
  long unsigned int D.24699;
  struct stbtt_packedchar * D.24698;
  struct stbtt_pack_range * D.24697;
  long unsigned int D.24696;
  long unsigned int D.24695;
  int D.24693;
  struct stbtt_pack_range * D.24692;
  long unsigned int D.24691;
  long unsigned int D.24690;
  int _5;
  long unsigned int _15;
  long unsigned int _16;
  struct stbtt_pack_range * _18;
  int _19;
  long unsigned int _20;
  long unsigned int _21;
  struct stbtt_pack_range * _22;
  struct stbtt_packedchar * _23;
  long unsigned int _24;
  long unsigned int _25;
  struct stbtt_packedchar * _26;
  long unsigned int _27;
  long unsigned int _28;
  struct stbtt_pack_range * _29;
  struct stbtt_packedchar * _30;
  long unsigned int _31;
  long unsigned int _32;
  struct stbtt_packedchar * _33;
  long unsigned int _34;
  long unsigned int _35;
  struct stbtt_pack_range * _36;
  struct stbtt_packedchar * _37;
  long unsigned int _38;
  long unsigned int _39;
  struct stbtt_packedchar * _40;
  long unsigned int _41;
  long unsigned int _42;
  struct stbtt_pack_range * _43;
  struct stbtt_packedchar * _44;
  long unsigned int _45;
  long unsigned int _46;
  struct stbtt_packedchar * _47;
  short unsigned int _49;
  short unsigned int _51;
  short unsigned int _53;
  long unsigned int _59;
  long unsigned int _60;
  struct stbtt_pack_range * _61;
  int _62;
  long unsigned int _65;
  long unsigned int _66;
  struct stbrp_rect * _68;
  int _70;
  void * _72;
  int _77;
  int _80;
  int _84;
  int _87;

  <bb 2>:
  return_value_10 = 1;
  i_11 = 0;

  <bb 3>:
  # i_1 = PHI <i_11(2), i_56(7)>
  if (i_1 >= num_ranges_13(D))
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:
  j_14 = 0;

  <bb 5>:
  # j_3 = PHI <j_14(4), j_55(6)>
  _15 = (long unsigned int) i_1;
  _16 = _15 * 40;
  _18 = ranges_17(D) + _16;
  _19 = _18->num_chars;
  if (_19 <= j_3)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  _20 = (long unsigned int) i_1;
  _21 = _20 * 40;
  _22 = ranges_17(D) + _21;
  _23 = _22->chardata_for_range;
  _24 = (long unsigned int) j_3;
  _25 = _24 * 28;
  _26 = _23 + _25;
  _27 = (long unsigned int) i_1;
  _28 = _27 * 40;
  _29 = ranges_17(D) + _28;
  _30 = _29->chardata_for_range;
  _31 = (long unsigned int) j_3;
  _32 = _31 * 28;
  _33 = _30 + _32;
  _34 = (long unsigned int) i_1;
  _35 = _34 * 40;
  _36 = ranges_17(D) + _35;
  _37 = _36->chardata_for_range;
  _38 = (long unsigned int) j_3;
  _39 = _38 * 28;
  _40 = _37 + _39;
  _41 = (long unsigned int) i_1;
  _42 = _41 * 40;
  _43 = ranges_17(D) + _42;
  _44 = _43->chardata_for_range;
  _45 = (long unsigned int) j_3;
  _46 = _45 * 28;
  _47 = _44 + _46;
  _47->y1 = 0;
  _49 = _47->y1;
  _40->x1 = _49;
  _51 = _40->x1;
  _33->y0 = _51;
  _53 = _33->y0;
  _26->x0 = _53;
  j_55 = j_3 + 1;
  goto <bb 5>;

  <bb 7>:
  i_56 = i_1 + 1;
  goto <bb 3>;

  <bb 8>:
  n_57 = 0;
  i_58 = 0;

  <bb 9>:
  # i_2 = PHI <i_58(8), i_64(10)>
  # n_4 = PHI <n_57(8), n_63(10)>
  if (i_2 >= num_ranges_13(D))
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  _59 = (long unsigned int) i_2;
  _60 = _59 * 40;
  _61 = ranges_17(D) + _60;
  _62 = _61->num_chars;
  n_63 = _62 + n_4;
  i_64 = i_2 + 1;
  goto <bb 9>;

  <bb 11>:
  _65 = (long unsigned int) n_4;
  _66 = _65 * 16;
  _68 = ImGui::MemAlloc (_66);
  rects_69 = _68;
  if (rects_69 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _70 = 0;
  goto <bb 14>;

  <bb 13>:
  _72 = spc_71(D)->user_allocator_context;
  info.userdata = _72;
  _77 = stbtt_GetFontOffsetForIndex (fontdata_74(D), font_index_75(D));
  stbtt_InitFont (&info, fontdata_74(D), _77);
  _80 = stbtt_PackFontRangesGatherRects (spc_71(D), &info, ranges_17(D), num_ranges_13(D), rects_69);
  n_81 = _80;
  stbtt_PackFontRangesPackRects (spc_71(D), rects_69, n_81);
  _84 = stbtt_PackFontRangesRenderIntoRects (spc_71(D), &info, ranges_17(D), num_ranges_13(D), rects_69);
  return_value_85 = _84;
  ImGui::MemFree (rects_69);
  _87 = return_value_85;

  <bb 14>:
  # _5 = PHI <_70(12), _87(13)>
  info ={v} {CLOBBER};

<L12>:
  return _5;

}



;; Function int stbtt_PackFontRange(stbtt_pack_context*, const unsigned char*, int, float, int, int, stbtt_packedchar*) (stbtt_PackFontRange, funcdef_no=664, decl_uid=15174, cgraph_uid=563, symbol_order=563)

int stbtt_PackFontRange(stbtt_pack_context*, const unsigned char*, int, float, int, int, stbtt_packedchar*) (struct stbtt_pack_context * spc, const unsigned char * fontdata, int font_index, float font_size, int first_unicode_codepoint_in_range, int num_chars_in_range, struct stbtt_packedchar * chardata_for_range)
{
  int D.24747;
  struct stbtt_pack_range range;
  int D.24745;
  int _15;
  int _16;

  <bb 2>:
  range.first_unicode_codepoint_in_range = first_unicode_codepoint_in_range_2(D);
  range.array_of_unicode_codepoints = 0B;
  range.num_chars = num_chars_in_range_5(D);
  range.chardata_for_range = chardata_for_range_7(D);
  range.font_size = font_size_9(D);
  _15 = stbtt_PackFontRanges (spc_11(D), fontdata_12(D), font_index_13(D), &range, 1);
  _16 = _15;
  range ={v} {CLOBBER};

<L1>:
  return _16;

}



;; Function void stbtt_GetPackedQuad(const stbtt_packedchar*, int, int, int, float*, float*, stbtt_aligned_quad*, int) (stbtt_GetPackedQuad, funcdef_no=665, decl_uid=15203, cgraph_uid=564, symbol_order=564)

void stbtt_GetPackedQuad(const stbtt_packedchar*, int, int, int, float*, float*, stbtt_aligned_quad*, int) (const struct stbtt_packedchar * chardata, int pw, int ph, int char_index, float * xpos, float * ypos, struct stbtt_aligned_quad * q, int align_to_integer)
{
  float y;
  float x;
  const struct stbtt_packedchar * b;
  float iph;
  float ipw;
  float D.24807;
  float D.24806;
  float D.24805;
  float D.24804;
  float D.24803;
  int D.24802;
  short unsigned int D.24801;
  float D.24800;
  float D.24799;
  int D.24798;
  short unsigned int D.24797;
  float D.24796;
  float D.24795;
  int D.24794;
  short unsigned int D.24793;
  float D.24792;
  float D.24791;
  int D.24790;
  short unsigned int D.24789;
  float D.24788;
  float D.24787;
  float D.24786;
  float D.24785;
  float D.24784;
  float D.24783;
  float D.24782;
  float D.24781;
  float D.24780;
  float D.24779;
  float D.24778;
  float D.24777;
  float D.24775;
  float D.24774;
  float D.24773;
  float D.24772;
  float D.24771;
  float D.24770;
  float D.24769;
  float D.24768;
  int D.24767;
  float D.24766;
  float D.24765;
  float D.24764;
  float D.24763;
  float D.24762;
  int D.24761;
  float D.24760;
  float D.24759;
  float D.24758;
  float D.24757;
  float D.24756;
  long unsigned int D.24753;
  long unsigned int D.24752;
  float D.24751;
  float D.24750;
  float _3;
  float _6;
  long unsigned int _9;
  long unsigned int _10;
  float _16;
  float _17;
  float _18;
  float _19;
  float _21;
  int _22;
  float _25;
  float _26;
  float _27;
  float _28;
  float _30;
  int _31;
  float _36;
  float _37;
  float _38;
  float _39;
  float _41;
  float _42;
  float _43;
  float _44;
  float _46;
  float _47;
  float _48;
  float _50;
  float _51;
  float _52;
  float _54;
  float _55;
  float _56;
  float _58;
  float _59;
  float _60;
  short unsigned int _62;
  int _63;
  float _64;
  float _65;
  short unsigned int _67;
  int _68;
  float _69;
  float _70;
  short unsigned int _72;
  int _73;
  float _74;
  float _75;
  short unsigned int _77;
  int _78;
  float _79;
  float _80;
  float _82;
  float _83;
  float _84;

  <bb 2>:
  _3 = (float) pw_2(D);
  ipw_4 = 1.0e+0 / _3;
  _6 = (float) ph_5(D);
  iph_7 = 1.0e+0 / _6;
  _9 = (long unsigned int) char_index_8(D);
  _10 = _9 * 28;
  b_12 = chardata_11(D) + _10;
  if (align_to_integer_13(D) != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _16 = *xpos_15(D);
  _17 = b_12->xoff;
  _18 = _16 + _17;
  _19 = _18 + 5.0e-1;
  _21 = std::floor (_19);
  _22 = (int) _21;
  x_23 = (float) _22;
  _25 = *ypos_24(D);
  _26 = b_12->yoff;
  _27 = _25 + _26;
  _28 = _27 + 5.0e-1;
  _30 = std::floor (_28);
  _31 = (int) _30;
  y_32 = (float) _31;
  q_33(D)->x0 = x_23;
  q_33(D)->y0 = y_32;
  _36 = b_12->xoff2;
  _37 = _36 + x_23;
  _38 = b_12->xoff;
  _39 = _37 - _38;
  q_33(D)->x1 = _39;
  _41 = b_12->yoff2;
  _42 = _41 + y_32;
  _43 = b_12->yoff;
  _44 = _42 - _43;
  q_33(D)->y1 = _44;
  goto <bb 5>;

  <bb 4>:
  _46 = *xpos_15(D);
  _47 = b_12->xoff;
  _48 = _46 + _47;
  q_33(D)->x0 = _48;
  _50 = *ypos_24(D);
  _51 = b_12->yoff;
  _52 = _50 + _51;
  q_33(D)->y0 = _52;
  _54 = *xpos_15(D);
  _55 = b_12->xoff2;
  _56 = _54 + _55;
  q_33(D)->x1 = _56;
  _58 = *ypos_24(D);
  _59 = b_12->yoff2;
  _60 = _58 + _59;
  q_33(D)->y1 = _60;

  <bb 5>:
  _62 = b_12->x0;
  _63 = (int) _62;
  _64 = (float) _63;
  _65 = _64 * ipw_4;
  q_33(D)->s0 = _65;
  _67 = b_12->y0;
  _68 = (int) _67;
  _69 = (float) _68;
  _70 = _69 * iph_7;
  q_33(D)->t0 = _70;
  _72 = b_12->x1;
  _73 = (int) _72;
  _74 = (float) _73;
  _75 = _74 * ipw_4;
  q_33(D)->s1 = _75;
  _77 = b_12->y1;
  _78 = (int) _77;
  _79 = (float) _78;
  _80 = _79 * iph_7;
  q_33(D)->t1 = _80;
  _82 = *xpos_15(D);
  _83 = b_12->xadvance;
  _84 = _82 + _83;
  *xpos_15(D) = _84;
  return;

}



;; Function int stbtt__ray_intersect_bezier(float*, float*, float*, float*, float*, float (*)[2]) (_ZL27stbtt__ray_intersect_bezierPfS_S_S_S_PA2_f, funcdef_no=666, decl_uid=17347, cgraph_uid=565, symbol_order=565)

int stbtt__ray_intersect_bezier(float*, float*, float*, float*, float*, float (*)[2]) (float * orig, float * ray, float * q0, float * q1, float * q2, float[2] * hits)
{
  float q0rd;
  float q20d;
  float q10d;
  float rod;
  float q2d;
  float q1d;
  float q0d;
  float rayn_y;
  float rayn_x;
  float rcp_len2;
  float d;
  float rcpna;
  float discr;
  int num_s;
  float s1;
  float s0;
  float c;
  float b;
  float a;
  float roperp;
  float q2perp;
  float q1perp;
  float q0perp;
  float D.24931;
  float D.24930;
  float[2] * D.24929;
  float D.24928;
  float D.24927;
  float D.24926;
  float D.24925;
  float D.24924;
  float D.24923;
  float D.24922;
  float D.24921;
  float[2] * D.24920;
  float D.24917;
  float D.24916;
  float D.24915;
  float D.24914;
  float D.24913;
  float D.24912;
  float D.24911;
  float D.24910;
  float D.24909;
  float D.24908;
  float D.24907;
  float D.24906;
  float * D.24905;
  float D.24904;
  float D.24903;
  float D.24902;
  float D.24901;
  float * D.24900;
  float D.24899;
  float D.24898;
  float D.24897;
  float D.24896;
  float * D.24895;
  float D.24894;
  float D.24893;
  float D.24892;
  float D.24891;
  float * D.24890;
  float D.24889;
  float D.24888;
  float D.24887;
  float * D.24886;
  float D.24885;
  float D.24884;
  float D.24883;
  float D.24882;
  float * D.24881;
  float D.24880;
  float * D.24879;
  float D.24878;
  float D.24877;
  float D.24876;
  int D.24875;
  float D.24867;
  float D.24849;
  float D.24848;
  float D.24845;
  float D.24844;
  float D.24841;
  float D.24840;
  float D.24839;
  float D.24838;
  float * D.24837;
  float D.24836;
  float D.24835;
  float D.24834;
  float D.24833;
  float * D.24832;
  float D.24831;
  float D.24830;
  float * D.24829;
  float D.24828;
  float D.24827;
  float D.24826;
  float D.24825;
  float * D.24824;
  float D.24823;
  float D.24822;
  float * D.24821;
  float D.24820;
  float D.24819;
  float D.24818;
  float D.24817;
  float * D.24816;
  float D.24815;
  float D.24814;
  float * D.24813;
  float D.24812;
  float D.24811;
  float D.24810;
  float D.24809;
  float * D.24808;
  int _11;
  float * _16;
  float _18;
  float _20;
  float _21;
  float _22;
  float * _23;
  float _24;
  float _25;
  float * _28;
  float _29;
  float _30;
  float _31;
  float _32;
  float * _33;
  float _34;
  float _35;
  float * _38;
  float _39;
  float _40;
  float _41;
  float _42;
  float * _43;
  float _44;
  float _45;
  float * _48;
  float _49;
  float _50;
  float _51;
  float _52;
  float * _53;
  float _54;
  float _55;
  float _57;
  float _58;
  float _65;
  float _66;
  float _71;
  float _73;
  float _78;
  int _81;
  float _82;
  float _83;
  float _84;
  float * _85;
  float _86;
  float * _87;
  float _88;
  float _89;
  float _90;
  float _92;
  float * _94;
  float _95;
  float _97;
  float _98;
  float * _99;
  float _100;
  float _101;
  float _103;
  float _104;
  float * _105;
  float _106;
  float _107;
  float _109;
  float _110;
  float * _111;
  float _112;
  float _113;
  float _115;
  float _116;
  float * _117;
  float _118;
  float _119;
  float _124;
  float _125;
  float _126;
  float _127;
  float _128;
  float _129;
  float _130;
  float _131;
  float _134;
  float _135;
  float[2] * _137;
  float _138;
  float _139;
  float _140;
  float _141;
  float _142;
  float _143;
  float _144;
  float _145;
  float[2] * _147;
  float _148;
  float _149;
  int _151;
  int _152;

  <bb 2>:
  _16 = q0_15(D) + 4;
  _18 = *_16;
  _20 = *ray_19(D);
  _21 = _18 * _20;
  _22 = *q0_15(D);
  _23 = ray_19(D) + 4;
  _24 = *_23;
  _25 = _22 * _24;
  q0perp_26 = _21 - _25;
  _28 = q1_27(D) + 4;
  _29 = *_28;
  _30 = *ray_19(D);
  _31 = _29 * _30;
  _32 = *q1_27(D);
  _33 = ray_19(D) + 4;
  _34 = *_33;
  _35 = _32 * _34;
  q1perp_36 = _31 - _35;
  _38 = q2_37(D) + 4;
  _39 = *_38;
  _40 = *ray_19(D);
  _41 = _39 * _40;
  _42 = *q2_37(D);
  _43 = ray_19(D) + 4;
  _44 = *_43;
  _45 = _42 * _44;
  q2perp_46 = _41 - _45;
  _48 = orig_47(D) + 4;
  _49 = *_48;
  _50 = *ray_19(D);
  _51 = _49 * _50;
  _52 = *orig_47(D);
  _53 = ray_19(D) + 4;
  _54 = *_53;
  _55 = _52 * _54;
  roperp_56 = _51 - _55;
  _57 = q1perp_36 * 2.0e+0;
  _58 = q0perp_26 - _57;
  a_59 = _58 + q2perp_46;
  b_60 = q1perp_36 - q0perp_26;
  c_61 = q0perp_26 - roperp_56;
  s0_62 = 0.0;
  s1_63 = 0.0;
  num_s_64 = 0;
  if (a_59 != 0.0)
    goto <bb 3>;
  else
    goto <bb 15>;

  <bb 3>:
  _65 = b_60 * b_60;
  _66 = a_59 * c_61;
  discr_67 = _65 - _66;
  if (discr_67 > 0.0)
    goto <bb 4>;
  else
    goto <bb 14>;

  <bb 4>:
  rcpna_68 = -1.0e+0 / a_59;
  d_70 = std::sqrt (discr_67);
  _71 = b_60 + d_70;
  s0_72 = _71 * rcpna_68;
  _73 = b_60 - d_70;
  s1_74 = _73 * rcpna_68;
  if (s0_72 >= 0.0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  if (s0_72 <= 1.0e+0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  num_s_75 = 1;

  <bb 7>:
  # num_s_7 = PHI <num_s_64(4), num_s_64(5), num_s_75(6)>
  if (d_70 > 0.0)
    goto <bb 8>;
  else
    goto <bb 13>;

  <bb 8>:
  if (s1_74 >= 0.0)
    goto <bb 9>;
  else
    goto <bb 13>;

  <bb 9>:
  if (s1_74 <= 1.0e+0)
    goto <bb 10>;
  else
    goto <bb 13>;

  <bb 10>:
  if (num_s_7 == 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  s0_76 = s1_74;

  <bb 12>:
  # s0_1 = PHI <s0_72(10), s0_76(11)>
  num_s_77 = num_s_7 + 1;

  <bb 13>:
  # s0_2 = PHI <s0_72(7), s0_72(8), s0_72(9), s0_1(12)>
  # num_s_8 = PHI <num_s_7(7), num_s_7(8), num_s_7(9), num_s_77(12)>

  <bb 14>:
  # s0_3 = PHI <s0_62(3), s0_2(13)>
  # s1_5 = PHI <s1_63(3), s1_74(13)>
  # num_s_9 = PHI <num_s_64(3), num_s_8(13)>
  goto <bb 18>;

  <bb 15>:
  _78 = b_60 * -2.0e+0;
  s0_79 = c_61 / _78;
  if (s0_79 >= 0.0)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 16>:
  if (s0_79 <= 1.0e+0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  num_s_80 = 1;

  <bb 18>:
  # s0_4 = PHI <s0_3(14), s0_79(15), s0_79(16), s0_79(17)>
  # s1_6 = PHI <s1_5(14), s1_63(15), s1_63(16), s1_63(17)>
  # num_s_10 = PHI <num_s_9(14), num_s_64(15), num_s_64(16), num_s_80(17)>
  if (num_s_10 == 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _81 = 0;
  goto <bb 23> (<L30>);

  <bb 20>:
  _82 = *ray_19(D);
  _83 = *ray_19(D);
  _84 = _82 * _83;
  _85 = ray_19(D) + 4;
  _86 = *_85;
  _87 = ray_19(D) + 4;
  _88 = *_87;
  _89 = _86 * _88;
  _90 = _84 + _89;
  rcp_len2_91 = 1.0e+0 / _90;
  _92 = *ray_19(D);
  rayn_x_93 = _92 * rcp_len2_91;
  _94 = ray_19(D) + 4;
  _95 = *_94;
  rayn_y_96 = _95 * rcp_len2_91;
  _97 = *q0_15(D);
  _98 = _97 * rayn_x_93;
  _99 = q0_15(D) + 4;
  _100 = *_99;
  _101 = _100 * rayn_y_96;
  q0d_102 = _98 + _101;
  _103 = *q1_27(D);
  _104 = _103 * rayn_x_93;
  _105 = q1_27(D) + 4;
  _106 = *_105;
  _107 = _106 * rayn_y_96;
  q1d_108 = _104 + _107;
  _109 = *q2_37(D);
  _110 = _109 * rayn_x_93;
  _111 = q2_37(D) + 4;
  _112 = *_111;
  _113 = _112 * rayn_y_96;
  q2d_114 = _110 + _113;
  _115 = *orig_47(D);
  _116 = _115 * rayn_x_93;
  _117 = orig_47(D) + 4;
  _118 = *_117;
  _119 = _118 * rayn_y_96;
  rod_120 = _116 + _119;
  q10d_121 = q1d_108 - q0d_102;
  q20d_122 = q2d_114 - q0d_102;
  q0rd_123 = q0d_102 - rod_120;
  _124 = s0_4 * 2.0e+0;
  _125 = 2.0e+0 - _124;
  _126 = _125 * s0_4;
  _127 = _126 * q10d_121;
  _128 = _127 + q0rd_123;
  _129 = s0_4 * s0_4;
  _130 = _129 * q20d_122;
  _131 = _128 + _130;
  *hits_132(D)[0] = _131;
  _134 = a_59 * s0_4;
  _135 = _134 + b_60;
  *hits_132(D)[1] = _135;
  if (num_s_10 > 1)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _137 = hits_132(D) + 8;
  _138 = s1_6 * 2.0e+0;
  _139 = 2.0e+0 - _138;
  _140 = _139 * s1_6;
  _141 = _140 * q10d_121;
  _142 = _141 + q0rd_123;
  _143 = s1_6 * s1_6;
  _144 = _143 * q20d_122;
  _145 = _142 + _144;
  *_137[0] = _145;
  _147 = hits_132(D) + 8;
  _148 = a_59 * s1_6;
  _149 = _148 + b_60;
  *_147[1] = _149;
  _151 = 2;
  goto <bb 23> (<L30>);

  <bb 22>:
  _152 = 1;

  # _11 = PHI <_81(19), _151(21), _152(22)>
<L30>:
  return _11;

}



;; Function int equal(float*, float*) (_ZL5equalPfS_, funcdef_no=667, decl_uid=17374, cgraph_uid=566, symbol_order=566)

int equal(float*, float*) (float * a, float * b)
{
  float D.24943;
  float * D.24942;
  float D.24941;
  float * D.24940;
  float D.24938;
  float D.24937;
  bool iftmp.292;
  int D.24933;
  bool iftmp.292_1;
  float _4;
  float _6;
  float * _7;
  float _8;
  float * _9;
  float _10;
  bool iftmp.292_11;
  bool iftmp.292_12;
  int _13;

  <bb 2>:
  _4 = *a_3(D);
  _6 = *b_5(D);
  if (_4 == _6)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  _7 = a_3(D) + 4;
  _8 = *_7;
  _9 = b_5(D) + 4;
  _10 = *_9;
  if (_8 == _10)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  iftmp.292_11 = 1;
  goto <bb 6>;

  <bb 5>:
  iftmp.292_12 = 0;

  <bb 6>:
  # iftmp.292_1 = PHI <iftmp.292_11(4), iftmp.292_12(5)>
  _13 = (int) iftmp.292_1;

<L4>:
  return _13;

}



;; Function int stbtt__compute_crossings_x(float, float, int, stbtt_vertex*) (_ZL26stbtt__compute_crossings_xffiP12stbtt_vertex, funcdef_no=668, decl_uid=17380, cgraph_uid=567, symbol_order=567)

int stbtt__compute_crossings_x(float, float, int, stbtt_vertex*) (float x, float y, int nverts, struct stbtt_vertex * verts)
{
  int num_hits;
  float x_inter;
  float hits[2][2];
  float q2[2];
  float q1[2];
  float q0[2];
  int by;
  int ay;
  int ax;
  int y2;
  int x2;
  int y1;
  int x1;
  int y0;
  int x0;
  float x_inter;
  int y1;
  int x1;
  int y0;
  int x0;
  int winding;
  float y_frac;
  float ray[2];
  float orig[2];
  int i;
  int D.25262;
  float D.25254;
  int iftmp.388;
  float D.25250;
  float D.25242;
  int iftmp.387;
  float D.25238;
  int y1.386;
  int y0.385;
  int iftmp.384;
  float D.25224;
  int x0.383;
  float D.25222;
  float D.25221;
  int D.25220;
  int x0.382;
  int x1.381;
  float D.25217;
  float D.25216;
  int D.25215;
  int y0.380;
  int y1.379;
  float D.25212;
  float D.25211;
  int y0.378;
  int x1.377;
  int x0.376;
  int x1.375;
  int x0.374;
  float iftmp.373;
  int y0.372;
  int y1.371;
  int y1.370;
  int y0.369;
  float iftmp.368;
  int y1.367;
  int y0.366;
  int y1.365;
  int y0.364;
  float iftmp.363;
  int y1.362;
  short int D.25178;
  struct stbtt_vertex * D.25177;
  long unsigned int D.25176;
  long unsigned int D.25175;
  int x1.361;
  short int D.25173;
  struct stbtt_vertex * D.25172;
  long unsigned int D.25171;
  long unsigned int D.25170;
  int y0.360;
  short int D.25168;
  struct stbtt_vertex * D.25167;
  sizetype D.25166;
  long unsigned int D.25165;
  long unsigned int D.25164;
  int x0.359;
  short int D.25162;
  struct stbtt_vertex * D.25161;
  sizetype D.25160;
  long unsigned int D.25159;
  long unsigned int D.25158;
  int D.25155;
  int D.25153;
  bool iftmp.358;
  bool retval.357;
  float D.25147;
  int y2.356;
  float D.25145;
  int x2.355;
  float D.25143;
  int y1.354;
  float D.25141;
  int x1.353;
  float D.25139;
  int y0.352;
  float D.25137;
  int x0.351;
  float D.25133;
  float D.25130;
  float D.25127;
  int y2.350;
  int y1.349;
  int iftmp.348;
  int y0.347;
  int y2.346;
  int y1.345;
  int iftmp.344;
  int iftmp.343;
  int y2.342;
  int y1.341;
  int iftmp.340;
  int y0.339;
  int y2.338;
  int y1.337;
  int iftmp.336;
  int iftmp.335;
  int x2.334;
  int x1.333;
  int iftmp.332;
  int x0.331;
  int x2.330;
  int x1.329;
  int iftmp.328;
  int iftmp.327;
  int y2.326;
  short int D.25074;
  struct stbtt_vertex * D.25073;
  long unsigned int D.25072;
  long unsigned int D.25071;
  int x2.325;
  short int D.25069;
  struct stbtt_vertex * D.25068;
  long unsigned int D.25067;
  long unsigned int D.25066;
  int y1.324;
  short int D.25064;
  struct stbtt_vertex * D.25063;
  long unsigned int D.25062;
  long unsigned int D.25061;
  int x1.323;
  short int D.25059;
  struct stbtt_vertex * D.25058;
  long unsigned int D.25057;
  long unsigned int D.25056;
  int y0.322;
  short int D.25054;
  struct stbtt_vertex * D.25053;
  sizetype D.25052;
  long unsigned int D.25051;
  long unsigned int D.25050;
  int x0.321;
  short int D.25048;
  struct stbtt_vertex * D.25047;
  sizetype D.25046;
  long unsigned int D.25045;
  long unsigned int D.25044;
  unsigned char D.25041;
  struct stbtt_vertex * D.25040;
  long unsigned int D.25039;
  long unsigned int D.25038;
  int y1.320;
  int y0.319;
  int iftmp.318;
  float D.25026;
  int x0.317;
  float D.25024;
  float D.25023;
  int D.25022;
  int x0.316;
  int x1.315;
  float D.25019;
  float D.25018;
  int D.25017;
  int y0.314;
  int y1.313;
  float D.25014;
  float D.25013;
  int y0.312;
  int x1.311;
  int x0.310;
  int x1.309;
  int x0.308;
  float iftmp.307;
  int y0.306;
  int y1.305;
  int y1.304;
  int y0.303;
  float iftmp.302;
  int y1.301;
  int y0.300;
  int y1.299;
  int y0.298;
  float iftmp.297;
  int y1.296;
  short int D.24980;
  struct stbtt_vertex * D.24979;
  long unsigned int D.24978;
  long unsigned int D.24977;
  int x1.295;
  short int D.24975;
  struct stbtt_vertex * D.24974;
  long unsigned int D.24973;
  long unsigned int D.24972;
  int y0.294;
  short int D.24970;
  struct stbtt_vertex * D.24969;
  sizetype D.24968;
  long unsigned int D.24967;
  long unsigned int D.24966;
  int x0.293;
  short int D.24964;
  struct stbtt_vertex * D.24963;
  sizetype D.24962;
  long unsigned int D.24961;
  long unsigned int D.24960;
  unsigned char D.24957;
  struct stbtt_vertex * D.24956;
  long unsigned int D.24955;
  long unsigned int D.24954;
  float iftmp.297_13;
  float iftmp.302_14;
  float iftmp.307_15;
  int iftmp.318_16;
  int iftmp.327_17;
  int iftmp.328_18;
  int iftmp.332_19;
  int iftmp.335_20;
  int iftmp.336_21;
  int iftmp.340_22;
  int iftmp.343_23;
  int iftmp.344_24;
  int iftmp.348_25;
  bool iftmp.358_26;
  float iftmp.363_27;
  float iftmp.368_28;
  float iftmp.373_29;
  int iftmp.384_30;
  int iftmp.387_31;
  int iftmp.388_32;
  long unsigned int _55;
  long unsigned int _56;
  struct stbtt_vertex * _58;
  unsigned char _59;
  long unsigned int _60;
  long unsigned int _61;
  sizetype _62;
  struct stbtt_vertex * _63;
  short int _64;
  int x0.293_65;
  long unsigned int _67;
  long unsigned int _68;
  sizetype _69;
  struct stbtt_vertex * _70;
  short int _71;
  int y0.294_72;
  long unsigned int _74;
  long unsigned int _75;
  struct stbtt_vertex * _76;
  short int _77;
  int x1.295_78;
  long unsigned int _80;
  long unsigned int _81;
  struct stbtt_vertex * _82;
  short int _83;
  int y1.296_84;
  int y0.298_86;
  int y1.299_87;
  int y0.300_88;
  float iftmp.297_89;
  int y1.301_90;
  float iftmp.297_91;
  int y0.303_92;
  int y1.304_93;
  int y1.305_94;
  float iftmp.302_95;
  int y0.306_96;
  float iftmp.302_97;
  int x0.308_98;
  int x1.309_99;
  int x0.310_100;
  float iftmp.307_101;
  int x1.311_102;
  float iftmp.307_103;
  int y0.312_104;
  float _105;
  float _106;
  int y1.313_107;
  int y0.314_108;
  int _109;
  float _110;
  float _111;
  int x1.315_112;
  int x0.316_113;
  int _114;
  float _115;
  float _116;
  int x0.317_117;
  float _118;
  int y0.319_120;
  int y1.320_121;
  int iftmp.318_122;
  int iftmp.318_123;
  long unsigned int _129;
  long unsigned int _130;
  struct stbtt_vertex * _131;
  unsigned char _132;
  long unsigned int _133;
  long unsigned int _134;
  sizetype _135;
  struct stbtt_vertex * _136;
  short int _137;
  int x0.321_138;
  long unsigned int _140;
  long unsigned int _141;
  sizetype _142;
  struct stbtt_vertex * _143;
  short int _144;
  int y0.322_145;
  long unsigned int _147;
  long unsigned int _148;
  struct stbtt_vertex * _149;
  short int _150;
  int x1.323_151;
  long unsigned int _153;
  long unsigned int _154;
  struct stbtt_vertex * _155;
  short int _156;
  int y1.324_157;
  long unsigned int _159;
  long unsigned int _160;
  struct stbtt_vertex * _161;
  short int _162;
  int x2.325_163;
  long unsigned int _165;
  long unsigned int _166;
  struct stbtt_vertex * _167;
  short int _168;
  int y2.326_169;
  int x1.329_171;
  int x2.330_172;
  int iftmp.328_173;
  int iftmp.328_174;
  int x0.331_175;
  int x1.333_176;
  int x2.334_177;
  int iftmp.332_178;
  int iftmp.332_179;
  int iftmp.327_180;
  int iftmp.327_181;
  int y1.337_183;
  int y2.338_184;
  int iftmp.336_185;
  int iftmp.336_186;
  int y0.339_187;
  int y1.341_188;
  int y2.342_189;
  int iftmp.340_190;
  int iftmp.340_191;
  int iftmp.335_192;
  int iftmp.335_193;
  int y1.345_195;
  int y2.346_196;
  int iftmp.344_197;
  int iftmp.344_198;
  int y0.347_199;
  int y1.349_200;
  int y2.350_201;
  int iftmp.348_202;
  int iftmp.348_203;
  int iftmp.343_204;
  int iftmp.343_205;
  float _207;
  float _208;
  float _209;
  int x0.351_210;
  float _211;
  int y0.352_213;
  float _214;
  int x1.353_216;
  float _217;
  int y1.354_219;
  float _220;
  int x2.355_222;
  float _223;
  int y2.356_225;
  float _226;
  int _229;
  int _231;
  bool iftmp.358_232;
  bool iftmp.358_233;
  bool retval.357_234;
  long unsigned int _235;
  long unsigned int _236;
  sizetype _237;
  struct stbtt_vertex * _238;
  short int _239;
  int x0.359_240;
  long unsigned int _242;
  long unsigned int _243;
  sizetype _244;
  struct stbtt_vertex * _245;
  short int _246;
  int y0.360_247;
  long unsigned int _249;
  long unsigned int _250;
  struct stbtt_vertex * _251;
  short int _252;
  int x1.361_253;
  long unsigned int _255;
  long unsigned int _256;
  struct stbtt_vertex * _257;
  short int _258;
  int y1.362_259;
  int y0.364_261;
  int y1.365_262;
  int y0.366_263;
  float iftmp.363_264;
  int y1.367_265;
  float iftmp.363_266;
  int y0.369_267;
  int y1.370_268;
  int y1.371_269;
  float iftmp.368_270;
  int y0.372_271;
  float iftmp.368_272;
  int x0.374_273;
  int x1.375_274;
  int x0.376_275;
  float iftmp.373_276;
  int x1.377_277;
  float iftmp.373_278;
  int y0.378_279;
  float _280;
  float _281;
  int y1.379_282;
  int y0.380_283;
  int _284;
  float _285;
  float _286;
  int x1.381_287;
  int x0.382_288;
  int _289;
  float _290;
  float _291;
  int x0.383_292;
  float _293;
  int y0.385_295;
  int y1.386_296;
  int iftmp.384_297;
  int iftmp.384_298;
  float _302;
  float _303;
  int iftmp.387_304;
  int iftmp.387_305;
  float _307;
  float _308;
  int iftmp.388_309;
  int iftmp.388_310;
  int _323;

  <bb 2>:
  ray[0] = 1.0e+0;
  ray[1] = 0.0;
  winding_43 = 0;
  orig[0] = x_44(D);
  orig[1] = y_46(D);
  y_frac_49 = std::fmod (y_46(D), 1.0e+0);
  if (y_frac_49 < 9.99999977648258209228515625e-3)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  y_50 = y_46(D) + 9.99999977648258209228515625e-3;
  goto <bb 6>;

  <bb 4>:
  if (y_frac_49 > 9.900000095367431640625e-1)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  y_51 = y_46(D) - 9.99999977648258209228515625e-3;

  <bb 6>:
  # y_1 = PHI <y_50(3), y_46(D)(4), y_51(5)>
  orig[1] = y_1;
  i_53 = 0;

  <bb 7>:
  # i_2 = PHI <i_53(6), i_322(97)>
  # winding_3 = PHI <winding_43(6), winding_12(97)>
  if (i_2 >= nverts_54(D))
    goto <bb 98>;
  else
    goto <bb 8>;

  <bb 8>:
  _55 = (long unsigned int) i_2;
  _56 = _55 * 14;
  _58 = verts_57(D) + _56;
  _59 = _58->type;
  if (_59 == 2)
    goto <bb 9>;
  else
    goto <bb 28>;

  <bb 9>:
  _60 = (long unsigned int) i_2;
  _61 = _60 * 14;
  _62 = _61 + 18446744073709551602;
  _63 = verts_57(D) + _62;
  _64 = _63->x;
  x0.293_65 = (int) _64;
  x0 = x0.293_65;
  _67 = (long unsigned int) i_2;
  _68 = _67 * 14;
  _69 = _68 + 18446744073709551602;
  _70 = verts_57(D) + _69;
  _71 = _70->y;
  y0.294_72 = (int) _71;
  y0 = y0.294_72;
  _74 = (long unsigned int) i_2;
  _75 = _74 * 14;
  _76 = verts_57(D) + _75;
  _77 = _76->x;
  x1.295_78 = (int) _77;
  x1 = x1.295_78;
  _80 = (long unsigned int) i_2;
  _81 = _80 * 14;
  _82 = verts_57(D) + _81;
  _83 = _82->y;
  y1.296_84 = (int) _83;
  y1 = y1.296_84;
  y0.298_86 = y0;
  y1.299_87 = y1;
  if (y0.298_86 < y1.299_87)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  y0.300_88 = y0;
  iftmp.297_89 = (float) y0.300_88;
  goto <bb 12>;

  <bb 11>:
  y1.301_90 = y1;
  iftmp.297_91 = (float) y1.301_90;

  <bb 12>:
  # iftmp.297_13 = PHI <iftmp.297_89(10), iftmp.297_91(11)>
  if (iftmp.297_13 < y_1)
    goto <bb 13>;
  else
    goto <bb 27>;

  <bb 13>:
  y0.303_92 = y0;
  y1.304_93 = y1;
  if (y0.303_92 < y1.304_93)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  y1.305_94 = y1;
  iftmp.302_95 = (float) y1.305_94;
  goto <bb 16>;

  <bb 15>:
  y0.306_96 = y0;
  iftmp.302_97 = (float) y0.306_96;

  <bb 16>:
  # iftmp.302_14 = PHI <iftmp.302_95(14), iftmp.302_97(15)>
  if (iftmp.302_14 > y_1)
    goto <bb 17>;
  else
    goto <bb 27>;

  <bb 17>:
  x0.308_98 = x0;
  x1.309_99 = x1;
  if (x0.308_98 < x1.309_99)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  x0.310_100 = x0;
  iftmp.307_101 = (float) x0.310_100;
  goto <bb 20>;

  <bb 19>:
  x1.311_102 = x1;
  iftmp.307_103 = (float) x1.311_102;

  <bb 20>:
  # iftmp.307_15 = PHI <iftmp.307_101(18), iftmp.307_103(19)>
  if (iftmp.307_15 < x_44(D))
    goto <bb 21>;
  else
    goto <bb 27>;

  <bb 21>:
  y0.312_104 = y0;
  _105 = (float) y0.312_104;
  _106 = y_1 - _105;
  y1.313_107 = y1;
  y0.314_108 = y0;
  _109 = y1.313_107 - y0.314_108;
  _110 = (float) _109;
  _111 = _106 / _110;
  x1.315_112 = x1;
  x0.316_113 = x0;
  _114 = x1.315_112 - x0.316_113;
  _115 = (float) _114;
  _116 = _111 * _115;
  x0.317_117 = x0;
  _118 = (float) x0.317_117;
  x_inter_119 = _116 + _118;
  if (x_inter_119 < x_44(D))
    goto <bb 22>;
  else
    goto <bb 26>;

  <bb 22>:
  y0.319_120 = y0;
  y1.320_121 = y1;
  if (y0.319_120 < y1.320_121)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  iftmp.318_122 = 1;
  goto <bb 25>;

  <bb 24>:
  iftmp.318_123 = -1;

  <bb 25>:
  # iftmp.318_16 = PHI <iftmp.318_122(23), iftmp.318_123(24)>
  winding_124 = iftmp.318_16 + winding_3;

  <bb 26>:
  # winding_4 = PHI <winding_3(21), winding_124(25)>

  <bb 27>:
  # winding_5 = PHI <winding_3(12), winding_3(16), winding_3(20), winding_4(26)>
  x0 ={v} {CLOBBER};
  y0 ={v} {CLOBBER};
  x1 ={v} {CLOBBER};
  y1 ={v} {CLOBBER};

  <bb 28>:
  # winding_6 = PHI <winding_3(8), winding_5(27)>
  _129 = (long unsigned int) i_2;
  _130 = _129 * 14;
  _131 = verts_57(D) + _130;
  _132 = _131->type;
  if (_132 == 3)
    goto <bb 29>;
  else
    goto <bb 97>;

  <bb 29>:
  _133 = (long unsigned int) i_2;
  _134 = _133 * 14;
  _135 = _134 + 18446744073709551602;
  _136 = verts_57(D) + _135;
  _137 = _136->x;
  x0.321_138 = (int) _137;
  x0 = x0.321_138;
  _140 = (long unsigned int) i_2;
  _141 = _140 * 14;
  _142 = _141 + 18446744073709551602;
  _143 = verts_57(D) + _142;
  _144 = _143->y;
  y0.322_145 = (int) _144;
  y0 = y0.322_145;
  _147 = (long unsigned int) i_2;
  _148 = _147 * 14;
  _149 = verts_57(D) + _148;
  _150 = _149->cx;
  x1.323_151 = (int) _150;
  x1 = x1.323_151;
  _153 = (long unsigned int) i_2;
  _154 = _153 * 14;
  _155 = verts_57(D) + _154;
  _156 = _155->cy;
  y1.324_157 = (int) _156;
  y1 = y1.324_157;
  _159 = (long unsigned int) i_2;
  _160 = _159 * 14;
  _161 = verts_57(D) + _160;
  _162 = _161->x;
  x2.325_163 = (int) _162;
  x2 = x2.325_163;
  _165 = (long unsigned int) i_2;
  _166 = _165 * 14;
  _167 = verts_57(D) + _166;
  _168 = _167->y;
  y2.326_169 = (int) _168;
  y2 = y2.326_169;
  x1.329_171 = x1;
  x2.330_172 = x2;
  if (x1.329_171 < x2.330_172)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  iftmp.328_173 = x1;
  goto <bb 32>;

  <bb 31>:
  iftmp.328_174 = x2;

  <bb 32>:
  # iftmp.328_18 = PHI <iftmp.328_173(30), iftmp.328_174(31)>
  x0.331_175 = x0;
  if (iftmp.328_18 <= x0.331_175)
    goto <bb 33>;
  else
    goto <bb 37>;

  <bb 33>:
  x1.333_176 = x1;
  x2.334_177 = x2;
  if (x1.333_176 < x2.334_177)
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  iftmp.332_178 = x1;
  goto <bb 36>;

  <bb 35>:
  iftmp.332_179 = x2;

  <bb 36>:
  # iftmp.332_19 = PHI <iftmp.332_178(34), iftmp.332_179(35)>
  iftmp.327_180 = iftmp.332_19;
  goto <bb 38>;

  <bb 37>:
  iftmp.327_181 = x0;

  <bb 38>:
  # iftmp.327_17 = PHI <iftmp.327_180(36), iftmp.327_181(37)>
  ax_182 = iftmp.327_17;
  y1.337_183 = y1;
  y2.338_184 = y2;
  if (y1.337_183 < y2.338_184)
    goto <bb 39>;
  else
    goto <bb 40>;

  <bb 39>:
  iftmp.336_185 = y1;
  goto <bb 41>;

  <bb 40>:
  iftmp.336_186 = y2;

  <bb 41>:
  # iftmp.336_21 = PHI <iftmp.336_185(39), iftmp.336_186(40)>
  y0.339_187 = y0;
  if (iftmp.336_21 <= y0.339_187)
    goto <bb 42>;
  else
    goto <bb 46>;

  <bb 42>:
  y1.341_188 = y1;
  y2.342_189 = y2;
  if (y1.341_188 < y2.342_189)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  iftmp.340_190 = y1;
  goto <bb 45>;

  <bb 44>:
  iftmp.340_191 = y2;

  <bb 45>:
  # iftmp.340_22 = PHI <iftmp.340_190(43), iftmp.340_191(44)>
  iftmp.335_192 = iftmp.340_22;
  goto <bb 47>;

  <bb 46>:
  iftmp.335_193 = y0;

  <bb 47>:
  # iftmp.335_20 = PHI <iftmp.335_192(45), iftmp.335_193(46)>
  ay_194 = iftmp.335_20;
  y1.345_195 = y1;
  y2.346_196 = y2;
  if (y1.345_195 < y2.346_196)
    goto <bb 48>;
  else
    goto <bb 49>;

  <bb 48>:
  iftmp.344_197 = y2;
  goto <bb 50>;

  <bb 49>:
  iftmp.344_198 = y1;

  <bb 50>:
  # iftmp.344_24 = PHI <iftmp.344_197(48), iftmp.344_198(49)>
  y0.347_199 = y0;
  if (iftmp.344_24 > y0.347_199)
    goto <bb 51>;
  else
    goto <bb 55>;

  <bb 51>:
  y1.349_200 = y1;
  y2.350_201 = y2;
  if (y1.349_200 < y2.350_201)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  iftmp.348_202 = y2;
  goto <bb 54>;

  <bb 53>:
  iftmp.348_203 = y1;

  <bb 54>:
  # iftmp.348_25 = PHI <iftmp.348_202(52), iftmp.348_203(53)>
  iftmp.343_204 = iftmp.348_25;
  goto <bb 56>;

  <bb 55>:
  iftmp.343_205 = y0;

  <bb 56>:
  # iftmp.343_23 = PHI <iftmp.343_204(54), iftmp.343_205(55)>
  by_206 = iftmp.343_23;
  _207 = (float) ay_194;
  if (_207 < y_1)
    goto <bb 57>;
  else
    goto <bb 96>;

  <bb 57>:
  _208 = (float) by_206;
  if (_208 > y_1)
    goto <bb 58>;
  else
    goto <bb 96>;

  <bb 58>:
  _209 = (float) ax_182;
  if (_209 < x_44(D))
    goto <bb 59>;
  else
    goto <bb 96>;

  <bb 59>:
  x0.351_210 = x0;
  _211 = (float) x0.351_210;
  q0[0] = _211;
  y0.352_213 = y0;
  _214 = (float) y0.352_213;
  q0[1] = _214;
  x1.353_216 = x1;
  _217 = (float) x1.353_216;
  q1[0] = _217;
  y1.354_219 = y1;
  _220 = (float) y1.354_219;
  q1[1] = _220;
  x2.355_222 = x2;
  _223 = (float) x2.355_222;
  q2[0] = _223;
  y2.356_225 = y2;
  _226 = (float) y2.356_225;
  q2[1] = _226;
  _229 = equal (&q0, &q1);
  if (_229 != 0)
    goto <bb 61>;
  else
    goto <bb 60>;

  <bb 60>:
  _231 = equal (&q1, &q2);
  if (_231 != 0)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  iftmp.358_233 = 1;
  goto <bb 63>;

  <bb 62>:
  iftmp.358_232 = 0;

  <bb 63>:
  # iftmp.358_26 = PHI <iftmp.358_233(61), iftmp.358_232(62)>
  retval.357_234 = iftmp.358_26;
  if (retval.357_234 != 0)
    goto <bb 64>;
  else
    goto <bb 83>;

  <bb 64>:
  _235 = (long unsigned int) i_2;
  _236 = _235 * 14;
  _237 = _236 + 18446744073709551602;
  _238 = verts_57(D) + _237;
  _239 = _238->x;
  x0.359_240 = (int) _239;
  x0 = x0.359_240;
  _242 = (long unsigned int) i_2;
  _243 = _242 * 14;
  _244 = _243 + 18446744073709551602;
  _245 = verts_57(D) + _244;
  _246 = _245->y;
  y0.360_247 = (int) _246;
  y0 = y0.360_247;
  _249 = (long unsigned int) i_2;
  _250 = _249 * 14;
  _251 = verts_57(D) + _250;
  _252 = _251->x;
  x1.361_253 = (int) _252;
  x1 = x1.361_253;
  _255 = (long unsigned int) i_2;
  _256 = _255 * 14;
  _257 = verts_57(D) + _256;
  _258 = _257->y;
  y1.362_259 = (int) _258;
  y1 = y1.362_259;
  y0.364_261 = y0;
  y1.365_262 = y1;
  if (y0.364_261 < y1.365_262)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  y0.366_263 = y0;
  iftmp.363_264 = (float) y0.366_263;
  goto <bb 67>;

  <bb 66>:
  y1.367_265 = y1;
  iftmp.363_266 = (float) y1.367_265;

  <bb 67>:
  # iftmp.363_27 = PHI <iftmp.363_264(65), iftmp.363_266(66)>
  if (iftmp.363_27 < y_1)
    goto <bb 68>;
  else
    goto <bb 82>;

  <bb 68>:
  y0.369_267 = y0;
  y1.370_268 = y1;
  if (y0.369_267 < y1.370_268)
    goto <bb 69>;
  else
    goto <bb 70>;

  <bb 69>:
  y1.371_269 = y1;
  iftmp.368_270 = (float) y1.371_269;
  goto <bb 71>;

  <bb 70>:
  y0.372_271 = y0;
  iftmp.368_272 = (float) y0.372_271;

  <bb 71>:
  # iftmp.368_28 = PHI <iftmp.368_270(69), iftmp.368_272(70)>
  if (iftmp.368_28 > y_1)
    goto <bb 72>;
  else
    goto <bb 82>;

  <bb 72>:
  x0.374_273 = x0;
  x1.375_274 = x1;
  if (x0.374_273 < x1.375_274)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  x0.376_275 = x0;
  iftmp.373_276 = (float) x0.376_275;
  goto <bb 75>;

  <bb 74>:
  x1.377_277 = x1;
  iftmp.373_278 = (float) x1.377_277;

  <bb 75>:
  # iftmp.373_29 = PHI <iftmp.373_276(73), iftmp.373_278(74)>
  if (iftmp.373_29 < x_44(D))
    goto <bb 76>;
  else
    goto <bb 82>;

  <bb 76>:
  y0.378_279 = y0;
  _280 = (float) y0.378_279;
  _281 = y_1 - _280;
  y1.379_282 = y1;
  y0.380_283 = y0;
  _284 = y1.379_282 - y0.380_283;
  _285 = (float) _284;
  _286 = _281 / _285;
  x1.381_287 = x1;
  x0.382_288 = x0;
  _289 = x1.381_287 - x0.382_288;
  _290 = (float) _289;
  _291 = _286 * _290;
  x0.383_292 = x0;
  _293 = (float) x0.383_292;
  x_inter_294 = _291 + _293;
  if (x_inter_294 < x_44(D))
    goto <bb 77>;
  else
    goto <bb 81>;

  <bb 77>:
  y0.385_295 = y0;
  y1.386_296 = y1;
  if (y0.385_295 < y1.386_296)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  iftmp.384_297 = 1;
  goto <bb 80>;

  <bb 79>:
  iftmp.384_298 = -1;

  <bb 80>:
  # iftmp.384_30 = PHI <iftmp.384_297(78), iftmp.384_298(79)>
  winding_299 = iftmp.384_30 + winding_6;

  <bb 81>:
  # winding_7 = PHI <winding_6(76), winding_299(80)>

  <bb 82>:
  # winding_8 = PHI <winding_6(67), winding_6(71), winding_6(75), winding_7(81)>
  goto <bb 95>;

  <bb 83>:
  num_hits_301 = stbtt__ray_intersect_bezier (&orig, &ray, &q0, &q1, &q2, &hits);
  if (num_hits_301 > 0)
    goto <bb 84>;
  else
    goto <bb 89>;

  <bb 84>:
  _302 = hits[0][0];
  if (_302 < 0.0)
    goto <bb 85>;
  else
    goto <bb 89>;

  <bb 85>:
  _303 = hits[0][1];
  if (_303 < 0.0)
    goto <bb 86>;
  else
    goto <bb 87>;

  <bb 86>:
  iftmp.387_304 = -1;
  goto <bb 88>;

  <bb 87>:
  iftmp.387_305 = 1;

  <bb 88>:
  # iftmp.387_31 = PHI <iftmp.387_304(86), iftmp.387_305(87)>
  winding_306 = iftmp.387_31 + winding_6;

  <bb 89>:
  # winding_9 = PHI <winding_6(83), winding_306(88), winding_6(84)>
  if (num_hits_301 > 1)
    goto <bb 90>;
  else
    goto <bb 95>;

  <bb 90>:
  _307 = hits[1][0];
  if (_307 < 0.0)
    goto <bb 91>;
  else
    goto <bb 95>;

  <bb 91>:
  _308 = hits[1][1];
  if (_308 < 0.0)
    goto <bb 92>;
  else
    goto <bb 93>;

  <bb 92>:
  iftmp.388_309 = -1;
  goto <bb 94>;

  <bb 93>:
  iftmp.388_310 = 1;

  <bb 94>:
  # iftmp.388_32 = PHI <iftmp.388_309(92), iftmp.388_310(93)>
  winding_311 = iftmp.388_32 + winding_9;

  <bb 95>:
  # winding_10 = PHI <winding_8(82), winding_9(89), winding_311(94), winding_9(90)>
  q0 ={v} {CLOBBER};
  q1 ={v} {CLOBBER};
  q2 ={v} {CLOBBER};
  hits ={v} {CLOBBER};

  <bb 96>:
  # winding_11 = PHI <winding_6(56), winding_6(57), winding_6(58), winding_10(95)>
  x0 ={v} {CLOBBER};
  y0 ={v} {CLOBBER};
  x1 ={v} {CLOBBER};
  y1 ={v} {CLOBBER};
  x2 ={v} {CLOBBER};
  y2 ={v} {CLOBBER};

  <bb 97>:
  # winding_12 = PHI <winding_6(28), winding_11(96)>
  i_322 = i_2 + 1;
  goto <bb 7>;

  <bb 98>:
  _323 = winding_3;
  orig ={v} {CLOBBER};
  ray ={v} {CLOBBER};

<L119>:
  return _323;

}



;; Function float stbtt__cuberoot(float) (_ZL15stbtt__cuberootf, funcdef_no=669, decl_uid=17417, cgraph_uid=568, symbol_order=568)

float stbtt__cuberoot(float) (float x)
{
  float D.25271;
  float D.25270;
  float D.25269;
  float _1;
  float _4;
  float _7;
  float _8;
  float _10;

  <bb 2>:
  if (x_3(D) < 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _4 = -x_3(D);
  _7 = std::pow (_4, 3.333333432674407958984375e-1);
  _8 = -_7;
  goto <bb 5> (<L2>);

  <bb 4>:
  _10 = std::pow (x_3(D), 3.333333432674407958984375e-1);

  # _1 = PHI <_8(3), _10(4)>
<L2>:
  return _1;

}



;; Function int stbtt__solve_cubic(float, float, float, float*) (_ZL18stbtt__solve_cubicfffPf, funcdef_no=670, decl_uid=17426, cgraph_uid=569, symbol_order=569)

int stbtt__solve_cubic(float, float, float, float*) (float a, float b, float c, float * r)
{
  float n;
  float m;
  float v;
  float u;
  float v;
  float u;
  float z;
  float d;
  float p3;
  float q;
  float p;
  float s;
  float D.25318;
  float D.25317;
  float D.25316;
  float * D.25315;
  float D.25314;
  float D.25313;
  float D.25312;
  float * D.25311;
  float D.25310;
  float D.25309;
  float D.25308;
  float D.25307;
  double D.25306;
  double D.25305;
  double D.25304;
  float D.25303;
  float D.25302;
  float D.25301;
  float D.25300;
  float D.25299;
  float D.25298;
  float D.25297;
  float D.25296;
  int D.25295;
  float D.25294;
  float D.25293;
  float D.25292;
  float D.25291;
  float D.25290;
  float D.25287;
  float D.25286;
  float D.25285;
  float D.25284;
  float D.25283;
  float D.25282;
  float D.25281;
  float D.25280;
  float D.25279;
  float D.25278;
  float D.25277;
  float D.25276;
  float D.25275;
  int _1;
  float _4;
  float _6;
  float _7;
  float _10;
  float _11;
  float _12;
  float _13;
  float _14;
  float _15;
  float _18;
  float _20;
  float _21;
  float _22;
  float _27;
  float _29;
  float _30;
  float _36;
  float _37;
  int _40;
  float _41;
  float _42;
  float _45;
  float _47;
  float _48;
  float _49;
  float _50;
  float _52;
  double _56;
  double _57;
  double _58;
  float _59;
  float _61;
  float _62;
  float _63;
  float * _65;
  float _66;
  float _67;
  float _68;
  float * _70;
  float _71;
  float _72;
  float _73;
  int _75;

  <bb 2>:
  _4 = -a_3(D);
  s_5 = _4 / 3.0e+0;
  _6 = a_3(D) * a_3(D);
  _7 = _6 / 3.0e+0;
  p_9 = b_8(D) - _7;
  _10 = a_3(D) * 2.0e+0;
  _11 = _10 * a_3(D);
  _12 = b_8(D) * 9.0e+0;
  _13 = _11 - _12;
  _14 = _13 * a_3(D);
  _15 = _14 / 2.7e+1;
  q_17 = _15 + c_16(D);
  _18 = p_9 * p_9;
  p3_19 = _18 * p_9;
  _20 = q_17 * q_17;
  _21 = p3_19 * 4.0e+0;
  _22 = _21 / 2.7e+1;
  d_23 = _20 + _22;
  if (d_23 >= 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  z_26 = std::sqrt (d_23);
  _27 = z_26 - q_17;
  u_28 = _27 / 2.0e+0;
  _29 = -q_17;
  _30 = _29 - z_26;
  v_31 = _30 / 2.0e+0;
  u_33 = stbtt__cuberoot (u_28);
  v_35 = stbtt__cuberoot (v_31);
  _36 = s_5 + u_33;
  _37 = _36 + v_35;
  *r_38(D) = _37;
  _40 = 1;
  goto <bb 5> (<L2>);

  <bb 4>:
  _41 = -p_9;
  _42 = _41 / 3.0e+0;
  u_44 = std::sqrt (_42);
  _45 = -2.7e+1 / p3_19;
  _47 = std::sqrt (_45);
  _48 = -_47;
  _49 = _48 * q_17;
  _50 = _49 / 2.0e+0;
  _52 = std::acos (_50);
  v_53 = _52 / 3.0e+0;
  m_55 = std::cos (v_53);
  _56 = (double) v_53;
  _57 = _56 - 1.570796000000000081087137004942633211612701416015625e+0;
  _58 = cos (_57);
  _59 = (float) _58;
  n_60 = _59 * 1.73205077648162841796875e+0;
  _61 = u_44 * 2.0e+0;
  _62 = _61 * m_55;
  _63 = _62 + s_5;
  *r_38(D) = _63;
  _65 = r_38(D) + 4;
  _66 = m_55 + n_60;
  _67 = _66 * u_44;
  _68 = s_5 - _67;
  *_65 = _68;
  _70 = r_38(D) + 8;
  _71 = m_55 - n_60;
  _72 = _71 * u_44;
  _73 = s_5 - _72;
  *_70 = _73;
  _75 = 3;

  # _1 = PHI <_40(3), _75(4)>
<L2>:
  return _1;

}



;; Function unsigned char* stbtt_GetGlyphSDF(const stbtt_fontinfo*, float, int, int, unsigned char, float, int*, int*, int*, int*) (stbtt_GetGlyphSDF, funcdef_no=671, decl_uid=15533, cgraph_uid=570, symbol_order=570)

unsigned char* stbtt_GetGlyphSDF(const stbtt_fontinfo*, float, int, int, unsigned char, float, int*, int*, int*, int*) (const struct stbtt_fontinfo * info, float scale, int glyph, int padding, unsigned char onedge_value, float pixel_dist_scale, int * width, int * height, int * xoff, int * yoff)
{
  float * D.25922;
  unsigned char * D.25921;
  int D.25920;
  float d;
  float c;
  float b;
  float root;
  float discriminant;
  float c;
  float b;
  float a;
  float a_inv;
  float it;
  float t;
  float py;
  float px;
  float res[3];
  float my;
  float mx;
  float by;
  float bx;
  float ay;
  float ax;
  int num;
  float box_y1;
  float box_x1;
  float box_y0;
  float box_x0;
  float y1;
  float x1;
  float y2;
  float x2;
  float t;
  float py;
  float px;
  float dy;
  float dx;
  float dist;
  float y1;
  float x1;
  float dist2;
  float y0;
  float x0;
  int winding;
  float y_gspace;
  float x_gspace;
  float sy;
  float sx;
  float min_dist;
  float val;
  float len2;
  float by;
  float bx;
  float y0;
  float x0;
  float y1;
  float x1;
  float y2;
  float x2;
  float dist;
  float y1;
  float x1;
  float y0;
  float x0;
  int num_verts;
  struct stbtt_vertex * verts;
  float * precompute;
  int j;
  int i;
  int y;
  int x;
  static const char __PRETTY_FUNCTION__[119] = "unsigned char* stbtt_GetGlyphSDF(const stbtt_fontinfo*, float, int, int, unsigned char, float, int*, int*, int*, int*)";
  unsigned char * data;
  int h;
  int w;
  int iy1;
  int ix1;
  int iy0;
  int ix0;
  float scale_y;
  float scale_x;
  struct stbtt_vertex * verts.517;
  unsigned char D.25917;
  unsigned char * D.25916;
  sizetype D.25915;
  int D.25914;
  int D.25913;
  int ix0.516;
  int D.25911;
  int D.25910;
  int iy0.515;
  float D.25902;
  float D.25901;
  int D.25900;
  float D.25890;
  float D.25889;
  float D.25888;
  float D.25887;
  float D.25886;
  float D.25885;
  float D.25884;
  float D.25883;
  float y2.514;
  float D.25881;
  float D.25880;
  float D.25879;
  float y1.513;
  float D.25877;
  float D.25876;
  float D.25875;
  float y0.512;
  float D.25873;
  float D.25872;
  float x2.511;
  float D.25870;
  float D.25869;
  float D.25868;
  float x1.510;
  float D.25866;
  float D.25865;
  float D.25864;
  float x0.509;
  float D.25862;
  float D.25859;
  float D.25856;
  float D.25849;
  float D.25848;
  float D.25847;
  float D.25846;
  float D.25845;
  float D.25844;
  float D.25843;
  float D.25842;
  float y2.508;
  float D.25840;
  float D.25839;
  float D.25838;
  float y1.507;
  float D.25836;
  float D.25835;
  float D.25834;
  float y0.506;
  float D.25832;
  float D.25831;
  float x2.505;
  float D.25829;
  float D.25828;
  float D.25827;
  float x1.504;
  float D.25825;
  float D.25824;
  float D.25823;
  float x0.503;
  float D.25821;
  float D.25818;
  float D.25815;
  float D.25808;
  float D.25807;
  float D.25806;
  float D.25805;
  float D.25804;
  float D.25803;
  float D.25802;
  float D.25801;
  float y2.502;
  float D.25799;
  float D.25798;
  float D.25797;
  float y1.501;
  float D.25795;
  float D.25794;
  float D.25793;
  float y0.500;
  float D.25791;
  float D.25790;
  float x2.499;
  float D.25788;
  float D.25787;
  float D.25786;
  float x1.498;
  float D.25784;
  float D.25783;
  float D.25782;
  float x0.497;
  float D.25780;
  float D.25777;
  float D.25774;
  float D.25771;
  float D.25770;
  float D.25769;
  float D.25768;
  float D.25767;
  float D.25766;
  float D.25765;
  float D.25764;
  float D.25763;
  float D.25762;
  float D.25761;
  float D.25760;
  float D.25759;
  float D.25758;
  float D.25757;
  float D.25755;
  float D.25754;
  float D.25753;
  float D.25752;
  float D.25751;
  float D.25750;
  float D.25749;
  float D.25745;
  float D.25744;
  float D.25743;
  float D.25740;
  float D.25739;
  int num.496;
  float D.25733;
  float D.25732;
  float D.25731;
  float D.25730;
  float D.25729;
  float D.25728;
  float D.25727;
  float D.25726;
  float D.25725;
  float D.25724;
  float D.25723;
  float D.25722;
  float * D.25719;
  long unsigned int D.25718;
  long unsigned int D.25717;
  float y0.495;
  float x0.494;
  float y2.493;
  float D.25713;
  float D.25712;
  float y1.492;
  float y0.491;
  float x2.490;
  float D.25708;
  float D.25707;
  float x1.489;
  float x0.488;
  float y0.487;
  float y1.486;
  float x0.485;
  float x1.484;
  float D.25698;
  float D.25695;
  float D.25692;
  float D.25689;
  float y1.483;
  float y0.482;
  float iftmp.481;
  float y2.480;
  float y1.479;
  float y0.478;
  float iftmp.477;
  float iftmp.476;
  float x1.475;
  float x0.474;
  float iftmp.473;
  float x2.472;
  float x1.471;
  float x0.470;
  float iftmp.469;
  float iftmp.468;
  float y1.467;
  float y0.466;
  float iftmp.465;
  float y2.464;
  float y1.463;
  float y0.462;
  float iftmp.461;
  float iftmp.460;
  float x1.459;
  float x0.458;
  float iftmp.457;
  float x2.456;
  float x1.455;
  float x0.454;
  float iftmp.453;
  float iftmp.452;
  float y1.451;
  float D.25619;
  short int D.25618;
  struct stbtt_vertex * D.25617;
  long unsigned int D.25616;
  long unsigned int D.25615;
  struct stbtt_vertex * verts.450;
  float x1.449;
  float D.25612;
  short int D.25611;
  struct stbtt_vertex * D.25610;
  long unsigned int D.25609;
  long unsigned int D.25608;
  struct stbtt_vertex * verts.448;
  float y2.447;
  float D.25605;
  short int D.25604;
  struct stbtt_vertex * D.25603;
  sizetype D.25602;
  long unsigned int D.25601;
  long unsigned int D.25600;
  struct stbtt_vertex * verts.446;
  float x2.445;
  float D.25597;
  short int D.25596;
  struct stbtt_vertex * D.25595;
  sizetype D.25594;
  long unsigned int D.25593;
  long unsigned int D.25592;
  struct stbtt_vertex * verts.444;
  unsigned char D.25588;
  struct stbtt_vertex * D.25587;
  long unsigned int D.25586;
  long unsigned int D.25585;
  struct stbtt_vertex * verts.443;
  float D.25576;
  float D.25575;
  float D.25574;
  float D.25573;
  float D.25572;
  float D.25571;
  float D.25570;
  float y0.442;
  float x0.441;
  float y0.440;
  float x0.439;
  float D.25560;
  float * D.25559;
  long unsigned int D.25558;
  long unsigned int D.25557;
  float D.25556;
  float D.25555;
  float D.25554;
  float D.25553;
  float x0.438;
  float D.25551;
  float y0.437;
  float D.25549;
  float D.25548;
  float y0.436;
  float D.25546;
  float x0.435;
  float D.25544;
  short int D.25543;
  struct stbtt_vertex * D.25542;
  sizetype D.25541;
  long unsigned int D.25540;
  long unsigned int D.25539;
  struct stbtt_vertex * verts.434;
  float D.25537;
  short int D.25536;
  struct stbtt_vertex * D.25535;
  sizetype D.25534;
  long unsigned int D.25533;
  long unsigned int D.25532;
  struct stbtt_vertex * verts.433;
  unsigned char D.25528;
  struct stbtt_vertex * D.25527;
  long unsigned int D.25526;
  long unsigned int D.25525;
  struct stbtt_vertex * verts.432;
  float D.25520;
  float D.25519;
  float D.25518;
  float y0.431;
  float D.25516;
  float y0.430;
  float D.25514;
  float D.25513;
  float x0.429;
  float D.25511;
  float x0.428;
  float y0.427;
  float D.25508;
  short int D.25507;
  struct stbtt_vertex * D.25506;
  long unsigned int D.25505;
  long unsigned int D.25504;
  struct stbtt_vertex * verts.426;
  float x0.425;
  float D.25501;
  short int D.25500;
  struct stbtt_vertex * D.25499;
  long unsigned int D.25498;
  long unsigned int D.25497;
  struct stbtt_vertex * verts.424;
  struct stbtt_vertex * verts.423;
  float D.25492;
  float D.25491;
  int ix1.422;
  int iy1.421;
  int i.420;
  float * D.25483;
  long unsigned int D.25482;
  long unsigned int D.25481;
  float * D.25479;
  long unsigned int D.25478;
  long unsigned int D.25477;
  float D.25475;
  float D.25474;
  float D.25473;
  float D.25472;
  float * D.25471;
  long unsigned int D.25470;
  long unsigned int D.25469;
  float D.25466;
  float D.25465;
  float D.25464;
  float D.25463;
  float D.25462;
  float D.25461;
  float D.25460;
  short int D.25459;
  struct stbtt_vertex * D.25458;
  long unsigned int D.25457;
  long unsigned int D.25456;
  struct stbtt_vertex * verts.419;
  float D.25454;
  short int D.25453;
  struct stbtt_vertex * D.25452;
  long unsigned int D.25451;
  long unsigned int D.25450;
  struct stbtt_vertex * verts.418;
  float D.25448;
  short int D.25447;
  struct stbtt_vertex * D.25446;
  long unsigned int D.25445;
  long unsigned int D.25444;
  struct stbtt_vertex * verts.417;
  float D.25442;
  short int D.25441;
  struct stbtt_vertex * D.25440;
  long unsigned int D.25439;
  long unsigned int D.25438;
  struct stbtt_vertex * verts.416;
  float D.25436;
  short int D.25435;
  struct stbtt_vertex * D.25434;
  long unsigned int D.25433;
  long unsigned int D.25432;
  struct stbtt_vertex * verts.415;
  float D.25430;
  short int D.25429;
  struct stbtt_vertex * D.25428;
  long unsigned int D.25427;
  long unsigned int D.25426;
  struct stbtt_vertex * verts.414;
  unsigned char D.25422;
  struct stbtt_vertex * D.25421;
  long unsigned int D.25420;
  long unsigned int D.25419;
  struct stbtt_vertex * verts.413;
  float iftmp.412;
  float * D.25412;
  long unsigned int D.25411;
  long unsigned int D.25410;
  float D.25409;
  float D.25408;
  float D.25407;
  float D.25406;
  float D.25405;
  float D.25404;
  float D.25403;
  float D.25402;
  short int D.25401;
  struct stbtt_vertex * D.25400;
  long unsigned int D.25399;
  long unsigned int D.25398;
  struct stbtt_vertex * verts.411;
  float D.25396;
  short int D.25395;
  struct stbtt_vertex * D.25394;
  long unsigned int D.25393;
  long unsigned int D.25392;
  struct stbtt_vertex * verts.410;
  float D.25390;
  short int D.25389;
  struct stbtt_vertex * D.25388;
  long unsigned int D.25387;
  long unsigned int D.25386;
  struct stbtt_vertex * verts.409;
  float D.25384;
  short int D.25383;
  struct stbtt_vertex * D.25382;
  long unsigned int D.25381;
  long unsigned int D.25380;
  struct stbtt_vertex * verts.408;
  unsigned char D.25376;
  struct stbtt_vertex * D.25375;
  long unsigned int D.25374;
  long unsigned int D.25373;
  struct stbtt_vertex * verts.407;
  long unsigned int D.25369;
  long unsigned int D.25368;
  long unsigned int D.25367;
  int D.25366;
  int iy0.406;
  int ix0.405;
  int iy0.404;
  int iy1.403;
  int ix0.402;
  int ix1.401;
  int iy1.400;
  int iy1.399;
  int ix1.398;
  int ix1.397;
  int iy0.396;
  int iy0.395;
  int ix0.394;
  int ix0.393;
  int iy1.392;
  int iy0.391;
  int ix1.390;
  int ix0.389;
  unsigned char * D.25331;
  unsigned char * _21;
  float iftmp.412_22;
  float iftmp.452_23;
  float iftmp.453_24;
  float iftmp.457_25;
  float iftmp.460_26;
  float iftmp.461_27;
  float iftmp.465_28;
  float iftmp.468_29;
  float iftmp.469_30;
  float iftmp.473_31;
  float iftmp.476_32;
  float iftmp.477_33;
  float iftmp.481_34;
  unsigned char * _60;
  int ix0.389_66;
  int ix1.390_67;
  int iy0.391_68;
  int iy1.392_69;
  int ix0.393_70;
  int ix0.394_72;
  int iy0.395_74;
  int iy0.396_75;
  int ix1.397_77;
  int ix1.398_78;
  int iy1.399_80;
  int iy1.400_81;
  int ix1.401_83;
  int ix0.402_84;
  int iy1.403_86;
  int iy0.404_87;
  int ix0.405_94;
  int iy0.406_97;
  int _101;
  int _103;
  long unsigned int _104;
  unsigned char * _106;
  long unsigned int _108;
  long unsigned int _109;
  float * _111;
  struct stbtt_vertex * verts.407_115;
  long unsigned int _116;
  long unsigned int _117;
  struct stbtt_vertex * _118;
  unsigned char _119;
  struct stbtt_vertex * verts.408_120;
  long unsigned int _121;
  long unsigned int _122;
  struct stbtt_vertex * _123;
  short int _124;
  float _125;
  struct stbtt_vertex * verts.409_127;
  long unsigned int _128;
  long unsigned int _129;
  struct stbtt_vertex * _130;
  short int _131;
  float _132;
  struct stbtt_vertex * verts.410_134;
  long unsigned int _135;
  long unsigned int _136;
  struct stbtt_vertex * _137;
  short int _138;
  float _139;
  struct stbtt_vertex * verts.411_141;
  long unsigned int _142;
  long unsigned int _143;
  struct stbtt_vertex * _144;
  short int _145;
  float _146;
  float _148;
  float _149;
  float _150;
  float _151;
  float _152;
  float _153;
  float _154;
  long unsigned int _157;
  long unsigned int _158;
  float * _159;
  float iftmp.412_160;
  float iftmp.412_161;
  struct stbtt_vertex * verts.413_163;
  long unsigned int _164;
  long unsigned int _165;
  struct stbtt_vertex * _166;
  unsigned char _167;
  struct stbtt_vertex * verts.414_168;
  long unsigned int _169;
  long unsigned int _170;
  struct stbtt_vertex * _171;
  short int _172;
  float _173;
  struct stbtt_vertex * verts.415_175;
  long unsigned int _176;
  long unsigned int _177;
  struct stbtt_vertex * _178;
  short int _179;
  float _180;
  struct stbtt_vertex * verts.416_182;
  long unsigned int _183;
  long unsigned int _184;
  struct stbtt_vertex * _185;
  short int _186;
  float _187;
  struct stbtt_vertex * verts.417_189;
  long unsigned int _190;
  long unsigned int _191;
  struct stbtt_vertex * _192;
  short int _193;
  float _194;
  struct stbtt_vertex * verts.418_196;
  long unsigned int _197;
  long unsigned int _198;
  struct stbtt_vertex * _199;
  short int _200;
  float _201;
  struct stbtt_vertex * verts.419_203;
  long unsigned int _204;
  long unsigned int _205;
  struct stbtt_vertex * _206;
  short int _207;
  float _208;
  float _210;
  float _211;
  float _213;
  float _214;
  float _216;
  float _217;
  long unsigned int _219;
  long unsigned int _220;
  float * _221;
  float _222;
  float _223;
  float _224;
  float _225;
  long unsigned int _227;
  long unsigned int _228;
  float * _229;
  long unsigned int _231;
  long unsigned int _232;
  float * _233;
  int i.420_235;
  int iy1.421_239;
  int ix1.422_241;
  float _243;
  float _245;
  struct stbtt_vertex * verts.423_249;
  struct stbtt_vertex * verts.424_253;
  long unsigned int _254;
  long unsigned int _255;
  struct stbtt_vertex * _256;
  short int _257;
  float _258;
  float x0.425_259;
  struct stbtt_vertex * verts.426_261;
  long unsigned int _262;
  long unsigned int _263;
  struct stbtt_vertex * _264;
  short int _265;
  float _266;
  float y0.427_267;
  float x0.428_269;
  float _270;
  float x0.429_271;
  float _272;
  float _273;
  float y0.430_274;
  float _275;
  float y0.431_276;
  float _277;
  float _278;
  float _280;
  struct stbtt_vertex * verts.432_283;
  long unsigned int _284;
  long unsigned int _285;
  struct stbtt_vertex * _286;
  unsigned char _287;
  struct stbtt_vertex * verts.433_288;
  long unsigned int _289;
  long unsigned int _290;
  sizetype _291;
  struct stbtt_vertex * _292;
  short int _293;
  float _294;
  struct stbtt_vertex * verts.434_296;
  long unsigned int _297;
  long unsigned int _298;
  sizetype _299;
  struct stbtt_vertex * _300;
  short int _301;
  float _302;
  float x0.435_304;
  float _305;
  float y0.436_306;
  float _307;
  float _308;
  float y0.437_309;
  float _310;
  float x0.438_311;
  float _312;
  float _313;
  float _314;
  float _316;
  long unsigned int _317;
  long unsigned int _318;
  float * _319;
  float _320;
  float x0.439_322;
  float y0.440_324;
  float x0.441_326;
  float y0.442_328;
  float _330;
  float _331;
  float _332;
  float _333;
  float _334;
  float _335;
  float _336;
  struct stbtt_vertex * verts.443_340;
  long unsigned int _341;
  long unsigned int _342;
  struct stbtt_vertex * _343;
  unsigned char _344;
  struct stbtt_vertex * verts.444_345;
  long unsigned int _346;
  long unsigned int _347;
  sizetype _348;
  struct stbtt_vertex * _349;
  short int _350;
  float _351;
  float x2.445_352;
  struct stbtt_vertex * verts.446_354;
  long unsigned int _355;
  long unsigned int _356;
  sizetype _357;
  struct stbtt_vertex * _358;
  short int _359;
  float _360;
  float y2.447_361;
  struct stbtt_vertex * verts.448_363;
  long unsigned int _364;
  long unsigned int _365;
  struct stbtt_vertex * _366;
  short int _367;
  float _368;
  float x1.449_369;
  struct stbtt_vertex * verts.450_371;
  long unsigned int _372;
  long unsigned int _373;
  struct stbtt_vertex * _374;
  short int _375;
  float _376;
  float y1.451_377;
  float x0.454_379;
  float x1.455_380;
  float iftmp.453_381;
  float iftmp.453_382;
  float x2.456_383;
  float x0.458_384;
  float x1.459_385;
  float iftmp.457_386;
  float iftmp.457_387;
  float iftmp.452_388;
  float iftmp.452_389;
  float y0.462_391;
  float y1.463_392;
  float iftmp.461_393;
  float iftmp.461_394;
  float y2.464_395;
  float y0.466_396;
  float y1.467_397;
  float iftmp.465_398;
  float iftmp.465_399;
  float iftmp.460_400;
  float iftmp.460_401;
  float x0.470_403;
  float x1.471_404;
  float iftmp.469_405;
  float iftmp.469_406;
  float x2.472_407;
  float iftmp.468_408;
  float x0.474_409;
  float x1.475_410;
  float iftmp.473_411;
  float iftmp.473_412;
  float iftmp.468_413;
  float y0.478_415;
  float y1.479_416;
  float iftmp.477_417;
  float iftmp.477_418;
  float y2.480_419;
  float iftmp.476_420;
  float y0.482_421;
  float y1.483_422;
  float iftmp.481_423;
  float iftmp.481_424;
  float iftmp.476_425;
  float _427;
  float _428;
  float _429;
  float _430;
  float x1.484_432;
  float x0.485_433;
  float y1.486_435;
  float y0.487_436;
  float x0.488_438;
  float x1.489_439;
  float _440;
  float _441;
  float x2.490_442;
  float y0.491_444;
  float y1.492_445;
  float _446;
  float _447;
  float y2.493_448;
  float x0.494_450;
  float y0.495_452;
  long unsigned int _454;
  long unsigned int _455;
  float * _456;
  float _458;
  float _459;
  float _460;
  float _462;
  float _463;
  float _464;
  float _465;
  float _466;
  float _467;
  float _468;
  float _470;
  float _471;
  int num.496_473;
  float _475;
  float _476;
  float _478;
  float _479;
  float _480;
  float _485;
  float _486;
  float _487;
  float _488;
  float _490;
  float _491;
  float _492;
  float _495;
  float _496;
  float _497;
  float _498;
  float _500;
  float _501;
  float _502;
  float _503;
  float _504;
  float _505;
  float _506;
  float _507;
  float _509;
  float _510;
  float _511;
  float _515;
  float _516;
  float _519;
  float x0.497_520;
  float _521;
  float _522;
  float _523;
  float x1.498_524;
  float _525;
  float _526;
  float _527;
  float x2.499_528;
  float _529;
  float _531;
  float y0.500_532;
  float _533;
  float _534;
  float _535;
  float y1.501_536;
  float _537;
  float _538;
  float _539;
  float y2.502_540;
  float _541;
  float _543;
  float _544;
  float _545;
  float _546;
  float _547;
  float _548;
  float _550;
  float _553;
  float _554;
  float _557;
  float x0.503_558;
  float _559;
  float _560;
  float _561;
  float x1.504_562;
  float _563;
  float _564;
  float _565;
  float x2.505_566;
  float _567;
  float _569;
  float y0.506_570;
  float _571;
  float _572;
  float _573;
  float y1.507_574;
  float _575;
  float _576;
  float _577;
  float y2.508_578;
  float _579;
  float _581;
  float _582;
  float _583;
  float _584;
  float _585;
  float _586;
  float _588;
  float _591;
  float _592;
  float _595;
  float x0.509_596;
  float _597;
  float _598;
  float _599;
  float x1.510_600;
  float _601;
  float _602;
  float _603;
  float x2.511_604;
  float _605;
  float _607;
  float y0.512_608;
  float _609;
  float _610;
  float _611;
  float y1.513_612;
  float _613;
  float _614;
  float _615;
  float y2.514_616;
  float _617;
  float _619;
  float _620;
  float _621;
  float _622;
  float _623;
  float _624;
  float _626;
  int _639;
  float _640;
  float _642;
  int iy0.515_646;
  int _647;
  int _648;
  int ix0.516_649;
  int _650;
  int _651;
  sizetype _652;
  unsigned char * _653;
  unsigned char _654;
  struct stbtt_vertex * verts.517_659;
  unsigned char * _662;
  unsigned char * _664;

  <bb 2>:
  scale_x_57 = scale_56(D);
  scale_y_58 = scale_56(D);
  if (scale_x_57 == 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  scale_x_59 = scale_y_58;

  <bb 4>:
  # scale_x_1 = PHI <scale_x_57(2), scale_x_59(3)>
  if (scale_y_58 == 0.0)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  if (scale_x_1 == 0.0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _60 = 0B;
  goto <bb 127>;

  <bb 7>:
  scale_y_62 = scale_x_1;

  <bb 8>:
  # scale_y_2 = PHI <scale_y_58(4), scale_y_62(7)>
  stbtt_GetGlyphBitmapBoxSubpixel (info_63(D), glyph_64(D), scale_56(D), scale_56(D), 0.0, 0.0, &ix0, &iy0, &ix1, &iy1);
  ix0.389_66 = ix0;
  ix1.390_67 = ix1;
  if (ix0.389_66 == ix1.390_67)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  iy0.391_68 = iy0;
  iy1.392_69 = iy1;
  if (iy0.391_68 == iy1.392_69)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _664 = 0B;
  goto <bb 127>;

  <bb 11>:
  ix0.393_70 = ix0;
  ix0.394_72 = ix0.393_70 - padding_71(D);
  ix0 = ix0.394_72;
  iy0.395_74 = iy0;
  iy0.396_75 = iy0.395_74 - padding_71(D);
  iy0 = iy0.396_75;
  ix1.397_77 = ix1;
  ix1.398_78 = ix1.397_77 + padding_71(D);
  ix1 = ix1.398_78;
  iy1.399_80 = iy1;
  iy1.400_81 = iy1.399_80 + padding_71(D);
  iy1 = iy1.400_81;
  ix1.401_83 = ix1;
  ix0.402_84 = ix0;
  w_85 = ix1.401_83 - ix0.402_84;
  iy1.403_86 = iy1;
  iy0.404_87 = iy0;
  h_88 = iy1.403_86 - iy0.404_87;
  if (width_89(D) != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  *width_89(D) = w_85;

  <bb 13>:
  if (height_91(D) != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  *height_91(D) = h_88;

  <bb 15>:
  if (xoff_93(D) != 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  ix0.405_94 = ix0;
  *xoff_93(D) = ix0.405_94;

  <bb 17>:
  if (yoff_96(D) != 0B)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  iy0.406_97 = iy0;
  *yoff_96(D) = iy0.406_97;

  <bb 19>:
  scale_y_99 = -scale_y_2;
  _101 = stbtt_GetGlyphShape (info_63(D), glyph_64(D), &verts);
  num_verts_102 = _101;
  _103 = w_85 * h_88;
  _104 = (long unsigned int) _103;
  _106 = ImGui::MemAlloc (_104);
  data_107 = _106;
  _108 = (long unsigned int) num_verts_102;
  _109 = _108 * 4;
  _111 = ImGui::MemAlloc (_109);
  precompute_112 = _111;
  i_113 = 0;
  j_114 = num_verts_102 + -1;

  <bb 20>:
  # i_5 = PHI <i_113(19), i_236(32)>
  # j_7 = PHI <j_114(19), j_237(32)>
  if (i_5 >= num_verts_102)
    goto <bb 33>;
  else
    goto <bb 21>;

  <bb 21>:
  verts.407_115 = verts;
  _116 = (long unsigned int) i_5;
  _117 = _116 * 14;
  _118 = verts.407_115 + _117;
  _119 = _118->type;
  if (_119 == 2)
    goto <bb 22>;
  else
    goto <bb 26>;

  <bb 22>:
  verts.408_120 = verts;
  _121 = (long unsigned int) i_5;
  _122 = _121 * 14;
  _123 = verts.408_120 + _122;
  _124 = _123->x;
  _125 = (float) _124;
  x0_126 = _125 * scale_x_1;
  verts.409_127 = verts;
  _128 = (long unsigned int) i_5;
  _129 = _128 * 14;
  _130 = verts.409_127 + _129;
  _131 = _130->y;
  _132 = (float) _131;
  y0_133 = _132 * scale_y_99;
  verts.410_134 = verts;
  _135 = (long unsigned int) j_7;
  _136 = _135 * 14;
  _137 = verts.410_134 + _136;
  _138 = _137->x;
  _139 = (float) _138;
  x1_140 = _139 * scale_x_1;
  verts.411_141 = verts;
  _142 = (long unsigned int) j_7;
  _143 = _142 * 14;
  _144 = verts.411_141 + _143;
  _145 = _144->y;
  _146 = (float) _145;
  y1_147 = _146 * scale_y_99;
  _148 = x1_140 - x0_126;
  _149 = x1_140 - x0_126;
  _150 = _148 * _149;
  _151 = y1_147 - y0_133;
  _152 = y1_147 - y0_133;
  _153 = _151 * _152;
  _154 = _150 + _153;
  dist_156 = std::sqrt (_154);
  _157 = (long unsigned int) i_5;
  _158 = _157 * 4;
  _159 = precompute_112 + _158;
  if (dist_156 != 0.0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  iftmp.412_160 = 1.0e+0 / dist_156;
  goto <bb 25>;

  <bb 24>:
  iftmp.412_161 = 0.0;

  <bb 25>:
  # iftmp.412_22 = PHI <iftmp.412_160(23), iftmp.412_161(24)>
  *_159 = iftmp.412_22;
  goto <bb 32>;

  <bb 26>:
  verts.413_163 = verts;
  _164 = (long unsigned int) i_5;
  _165 = _164 * 14;
  _166 = verts.413_163 + _165;
  _167 = _166->type;
  if (_167 == 3)
    goto <bb 27>;
  else
    goto <bb 31>;

  <bb 27>:
  verts.414_168 = verts;
  _169 = (long unsigned int) j_7;
  _170 = _169 * 14;
  _171 = verts.414_168 + _170;
  _172 = _171->x;
  _173 = (float) _172;
  x2_174 = _173 * scale_x_1;
  verts.415_175 = verts;
  _176 = (long unsigned int) j_7;
  _177 = _176 * 14;
  _178 = verts.415_175 + _177;
  _179 = _178->y;
  _180 = (float) _179;
  y2_181 = _180 * scale_y_99;
  verts.416_182 = verts;
  _183 = (long unsigned int) i_5;
  _184 = _183 * 14;
  _185 = verts.416_182 + _184;
  _186 = _185->cx;
  _187 = (float) _186;
  x1_188 = _187 * scale_x_1;
  verts.417_189 = verts;
  _190 = (long unsigned int) i_5;
  _191 = _190 * 14;
  _192 = verts.417_189 + _191;
  _193 = _192->cy;
  _194 = (float) _193;
  y1_195 = _194 * scale_y_99;
  verts.418_196 = verts;
  _197 = (long unsigned int) i_5;
  _198 = _197 * 14;
  _199 = verts.418_196 + _198;
  _200 = _199->x;
  _201 = (float) _200;
  x0_202 = _201 * scale_x_1;
  verts.419_203 = verts;
  _204 = (long unsigned int) i_5;
  _205 = _204 * 14;
  _206 = verts.419_203 + _205;
  _207 = _206->y;
  _208 = (float) _207;
  y0_209 = _208 * scale_y_99;
  _210 = x1_188 * 2.0e+0;
  _211 = x0_202 - _210;
  bx_212 = _211 + x2_174;
  _213 = y1_195 * 2.0e+0;
  _214 = y0_209 - _213;
  by_215 = _214 + y2_181;
  _216 = bx_212 * bx_212;
  _217 = by_215 * by_215;
  len2_218 = _216 + _217;
  if (len2_218 != 0.0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  _219 = (long unsigned int) i_5;
  _220 = _219 * 4;
  _221 = precompute_112 + _220;
  _222 = bx_212 * bx_212;
  _223 = by_215 * by_215;
  _224 = _222 + _223;
  _225 = 1.0e+0 / _224;
  *_221 = _225;
  goto <bb 30>;

  <bb 29>:
  _227 = (long unsigned int) i_5;
  _228 = _227 * 4;
  _229 = precompute_112 + _228;
  *_229 = 0.0;

  <bb 30>:
  goto <bb 32>;

  <bb 31>:
  _231 = (long unsigned int) i_5;
  _232 = _231 * 4;
  _233 = precompute_112 + _232;
  *_233 = 0.0;

  <bb 32>:
  i.420_235 = i_5;
  i_236 = i.420_235 + 1;
  j_237 = i.420_235;
  goto <bb 20>;

  <bb 33>:
  y_238 = iy0;

  <bb 34>:
  # y_4 = PHI <y_238(33), y_657(125)>
  iy1.421_239 = iy1;
  if (y_4 >= iy1.421_239)
    goto <bb 126>;
  else
    goto <bb 35>;

  <bb 35>:
  x_240 = ix0;

  <bb 36>:
  # x_3 = PHI <x_240(35), x_656(124)>
  ix1.422_241 = ix1;
  if (x_3 >= ix1.422_241)
    goto <bb 125>;
  else
    goto <bb 37>;

  <bb 37>:
  min_dist_242 = 9.99999e+5;
  _243 = (float) x_3;
  sx_244 = _243 + 5.0e-1;
  _245 = (float) y_4;
  sy_246 = _245 + 5.0e-1;
  x_gspace_247 = sx_244 / scale_x_1;
  y_gspace_248 = sy_246 / scale_y_99;
  verts.423_249 = verts;
  winding_251 = stbtt__compute_crossings_x (x_gspace_247, y_gspace_248, num_verts_102, verts.423_249);
  i_252 = 0;

  <bb 38>:
  # i_6 = PHI <i_252(37), i_636(117)>
  # min_dist_9 = PHI <min_dist_242(37), min_dist_17(117)>
  if (i_6 >= num_verts_102)
    goto <bb 118>;
  else
    goto <bb 39>;

  <bb 39>:
  verts.424_253 = verts;
  _254 = (long unsigned int) i_6;
  _255 = _254 * 14;
  _256 = verts.424_253 + _255;
  _257 = _256->x;
  _258 = (float) _257;
  x0.425_259 = _258 * scale_x_1;
  x0 = x0.425_259;
  verts.426_261 = verts;
  _262 = (long unsigned int) i_6;
  _263 = _262 * 14;
  _264 = verts.426_261 + _263;
  _265 = _264->y;
  _266 = (float) _265;
  y0.427_267 = _266 * scale_y_99;
  y0 = y0.427_267;
  x0.428_269 = x0;
  _270 = x0.428_269 - sx_244;
  x0.429_271 = x0;
  _272 = x0.429_271 - sx_244;
  _273 = _270 * _272;
  y0.430_274 = y0;
  _275 = y0.430_274 - sy_246;
  y0.431_276 = y0;
  _277 = y0.431_276 - sy_246;
  _278 = _275 * _277;
  dist2_279 = _273 + _278;
  _280 = min_dist_9 * min_dist_9;
  if (_280 > dist2_279)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  min_dist_282 = std::sqrt (dist2_279);

  <bb 41>:
  # min_dist_10 = PHI <min_dist_9(39), min_dist_282(40)>
  verts.432_283 = verts;
  _284 = (long unsigned int) i_6;
  _285 = _284 * 14;
  _286 = verts.432_283 + _285;
  _287 = _286->type;
  if (_287 == 2)
    goto <bb 42>;
  else
    goto <bb 50>;

  <bb 42>:
  verts.433_288 = verts;
  _289 = (long unsigned int) i_6;
  _290 = _289 * 14;
  _291 = _290 + 18446744073709551602;
  _292 = verts.433_288 + _291;
  _293 = _292->x;
  _294 = (float) _293;
  x1_295 = _294 * scale_x_1;
  verts.434_296 = verts;
  _297 = (long unsigned int) i_6;
  _298 = _297 * 14;
  _299 = _298 + 18446744073709551602;
  _300 = verts.434_296 + _299;
  _301 = _300->y;
  _302 = (float) _301;
  y1_303 = _302 * scale_y_99;
  x0.435_304 = x0;
  _305 = x1_295 - x0.435_304;
  y0.436_306 = y0;
  _307 = y0.436_306 - sy_246;
  _308 = _305 * _307;
  y0.437_309 = y0;
  _310 = y1_303 - y0.437_309;
  x0.438_311 = x0;
  _312 = x0.438_311 - sx_244;
  _313 = _310 * _312;
  _314 = _308 - _313;
  _316 = std::fabs (_314);
  _317 = (long unsigned int) i_6;
  _318 = _317 * 4;
  _319 = precompute_112 + _318;
  _320 = *_319;
  dist_321 = _316 * _320;
  if (i_6 != 0)
    goto <bb 44>;
  else
    goto <bb 43>;

  <bb 43>:
  __assert_fail ("i != 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/stb_truetype.h", 4447, &__PRETTY_FUNCTION__);

  <bb 44>:
  if (dist_321 < min_dist_10)
    goto <bb 45>;
  else
    goto <bb 49>;

  <bb 45>:
  x0.439_322 = x0;
  dx_323 = x1_295 - x0.439_322;
  y0.440_324 = y0;
  dy_325 = y1_303 - y0.440_324;
  x0.441_326 = x0;
  px_327 = x0.441_326 - sx_244;
  y0.442_328 = y0;
  py_329 = y0.442_328 - sy_246;
  _330 = px_327 * dx_323;
  _331 = py_329 * dy_325;
  _332 = _330 + _331;
  _333 = -_332;
  _334 = dx_323 * dx_323;
  _335 = dy_325 * dy_325;
  _336 = _334 + _335;
  t_337 = _333 / _336;
  if (t_337 >= 0.0)
    goto <bb 46>;
  else
    goto <bb 48>;

  <bb 46>:
  if (t_337 <= 1.0e+0)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  min_dist_338 = dist_321;

  <bb 48>:
  # min_dist_11 = PHI <min_dist_10(45), min_dist_10(46), min_dist_338(47)>

  <bb 49>:
  # min_dist_12 = PHI <min_dist_10(44), min_dist_11(48)>
  goto <bb 117>;

  <bb 50>:
  verts.443_340 = verts;
  _341 = (long unsigned int) i_6;
  _342 = _341 * 14;
  _343 = verts.443_340 + _342;
  _344 = _343->type;
  if (_344 == 3)
    goto <bb 51>;
  else
    goto <bb 117>;

  <bb 51>:
  verts.444_345 = verts;
  _346 = (long unsigned int) i_6;
  _347 = _346 * 14;
  _348 = _347 + 18446744073709551602;
  _349 = verts.444_345 + _348;
  _350 = _349->x;
  _351 = (float) _350;
  x2.445_352 = _351 * scale_x_1;
  x2 = x2.445_352;
  verts.446_354 = verts;
  _355 = (long unsigned int) i_6;
  _356 = _355 * 14;
  _357 = _356 + 18446744073709551602;
  _358 = verts.446_354 + _357;
  _359 = _358->y;
  _360 = (float) _359;
  y2.447_361 = _360 * scale_y_99;
  y2 = y2.447_361;
  verts.448_363 = verts;
  _364 = (long unsigned int) i_6;
  _365 = _364 * 14;
  _366 = verts.448_363 + _365;
  _367 = _366->cx;
  _368 = (float) _367;
  x1.449_369 = _368 * scale_x_1;
  x1 = x1.449_369;
  verts.450_371 = verts;
  _372 = (long unsigned int) i_6;
  _373 = _372 * 14;
  _374 = verts.450_371 + _373;
  _375 = _374->cy;
  _376 = (float) _375;
  y1.451_377 = _376 * scale_y_99;
  y1 = y1.451_377;
  x0.454_379 = x0;
  x1.455_380 = x1;
  if (x0.454_379 < x1.455_380)
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  iftmp.453_381 = x0;
  goto <bb 54>;

  <bb 53>:
  iftmp.453_382 = x1;

  <bb 54>:
  # iftmp.453_24 = PHI <iftmp.453_381(52), iftmp.453_382(53)>
  x2.456_383 = x2;
  if (iftmp.453_24 < x2.456_383)
    goto <bb 55>;
  else
    goto <bb 59>;

  <bb 55>:
  x0.458_384 = x0;
  x1.459_385 = x1;
  if (x0.458_384 < x1.459_385)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  iftmp.457_386 = x0;
  goto <bb 58>;

  <bb 57>:
  iftmp.457_387 = x1;

  <bb 58>:
  # iftmp.457_25 = PHI <iftmp.457_386(56), iftmp.457_387(57)>
  iftmp.452_388 = iftmp.457_25;
  goto <bb 60>;

  <bb 59>:
  iftmp.452_389 = x2;

  <bb 60>:
  # iftmp.452_23 = PHI <iftmp.452_388(58), iftmp.452_389(59)>
  box_x0_390 = iftmp.452_23;
  y0.462_391 = y0;
  y1.463_392 = y1;
  if (y0.462_391 < y1.463_392)
    goto <bb 61>;
  else
    goto <bb 62>;

  <bb 61>:
  iftmp.461_393 = y0;
  goto <bb 63>;

  <bb 62>:
  iftmp.461_394 = y1;

  <bb 63>:
  # iftmp.461_27 = PHI <iftmp.461_393(61), iftmp.461_394(62)>
  y2.464_395 = y2;
  if (iftmp.461_27 < y2.464_395)
    goto <bb 64>;
  else
    goto <bb 68>;

  <bb 64>:
  y0.466_396 = y0;
  y1.467_397 = y1;
  if (y0.466_396 < y1.467_397)
    goto <bb 65>;
  else
    goto <bb 66>;

  <bb 65>:
  iftmp.465_398 = y0;
  goto <bb 67>;

  <bb 66>:
  iftmp.465_399 = y1;

  <bb 67>:
  # iftmp.465_28 = PHI <iftmp.465_398(65), iftmp.465_399(66)>
  iftmp.460_400 = iftmp.465_28;
  goto <bb 69>;

  <bb 68>:
  iftmp.460_401 = y2;

  <bb 69>:
  # iftmp.460_26 = PHI <iftmp.460_400(67), iftmp.460_401(68)>
  box_y0_402 = iftmp.460_26;
  x0.470_403 = x0;
  x1.471_404 = x1;
  if (x0.470_403 < x1.471_404)
    goto <bb 70>;
  else
    goto <bb 71>;

  <bb 70>:
  iftmp.469_405 = x1;
  goto <bb 72>;

  <bb 71>:
  iftmp.469_406 = x0;

  <bb 72>:
  # iftmp.469_30 = PHI <iftmp.469_405(70), iftmp.469_406(71)>
  x2.472_407 = x2;
  if (iftmp.469_30 < x2.472_407)
    goto <bb 73>;
  else
    goto <bb 74>;

  <bb 73>:
  iftmp.468_408 = x2;
  goto <bb 78>;

  <bb 74>:
  x0.474_409 = x0;
  x1.475_410 = x1;
  if (x0.474_409 < x1.475_410)
    goto <bb 75>;
  else
    goto <bb 76>;

  <bb 75>:
  iftmp.473_411 = x1;
  goto <bb 77>;

  <bb 76>:
  iftmp.473_412 = x0;

  <bb 77>:
  # iftmp.473_31 = PHI <iftmp.473_411(75), iftmp.473_412(76)>
  iftmp.468_413 = iftmp.473_31;

  <bb 78>:
  # iftmp.468_29 = PHI <iftmp.468_408(73), iftmp.468_413(77)>
  box_x1_414 = iftmp.468_29;
  y0.478_415 = y0;
  y1.479_416 = y1;
  if (y0.478_415 < y1.479_416)
    goto <bb 79>;
  else
    goto <bb 80>;

  <bb 79>:
  iftmp.477_417 = y1;
  goto <bb 81>;

  <bb 80>:
  iftmp.477_418 = y0;

  <bb 81>:
  # iftmp.477_33 = PHI <iftmp.477_417(79), iftmp.477_418(80)>
  y2.480_419 = y2;
  if (iftmp.477_33 < y2.480_419)
    goto <bb 82>;
  else
    goto <bb 83>;

  <bb 82>:
  iftmp.476_420 = y2;
  goto <bb 87>;

  <bb 83>:
  y0.482_421 = y0;
  y1.483_422 = y1;
  if (y0.482_421 < y1.483_422)
    goto <bb 84>;
  else
    goto <bb 85>;

  <bb 84>:
  iftmp.481_423 = y1;
  goto <bb 86>;

  <bb 85>:
  iftmp.481_424 = y0;

  <bb 86>:
  # iftmp.481_34 = PHI <iftmp.481_423(84), iftmp.481_424(85)>
  iftmp.476_425 = iftmp.481_34;

  <bb 87>:
  # iftmp.476_32 = PHI <iftmp.476_420(82), iftmp.476_425(86)>
  box_y1_426 = iftmp.476_32;
  _427 = box_x0_390 - min_dist_10;
  if (_427 < sx_244)
    goto <bb 88>;
  else
    goto <bb 116>;

  <bb 88>:
  _428 = box_x1_414 + min_dist_10;
  if (_428 > sx_244)
    goto <bb 89>;
  else
    goto <bb 116>;

  <bb 89>:
  _429 = box_y0_402 - min_dist_10;
  if (_429 < sy_246)
    goto <bb 90>;
  else
    goto <bb 116>;

  <bb 90>:
  _430 = box_y1_426 + min_dist_10;
  if (_430 > sy_246)
    goto <bb 91>;
  else
    goto <bb 116>;

  <bb 91>:
  num_431 = 0;
  x1.484_432 = x1;
  x0.485_433 = x0;
  ax_434 = x1.484_432 - x0.485_433;
  y1.486_435 = y1;
  y0.487_436 = y0;
  ay_437 = y1.486_435 - y0.487_436;
  x0.488_438 = x0;
  x1.489_439 = x1;
  _440 = x1.489_439 * 2.0e+0;
  _441 = x0.488_438 - _440;
  x2.490_442 = x2;
  bx_443 = _441 + x2.490_442;
  y0.491_444 = y0;
  y1.492_445 = y1;
  _446 = y1.492_445 * 2.0e+0;
  _447 = y0.491_444 - _446;
  y2.493_448 = y2;
  by_449 = _447 + y2.493_448;
  x0.494_450 = x0;
  mx_451 = x0.494_450 - sx_244;
  y0.495_452 = y0;
  my_453 = y0.495_452 - sy_246;
  _454 = (long unsigned int) i_6;
  _455 = _454 * 4;
  _456 = precompute_112 + _455;
  a_inv_457 = *_456;
  if (a_inv_457 == 0.0)
    goto <bb 92>;
  else
    goto <bb 99>;

  <bb 92>:
  _458 = ax_434 * bx_443;
  _459 = ay_437 * by_449;
  _460 = _458 + _459;
  a_461 = _460 * 3.0e+0;
  _462 = ax_434 * ax_434;
  _463 = ay_437 * ay_437;
  _464 = _462 + _463;
  _465 = _464 * 2.0e+0;
  _466 = mx_451 * bx_443;
  _467 = my_453 * by_449;
  _468 = _466 + _467;
  b_469 = _465 + _468;
  _470 = mx_451 * ax_434;
  _471 = my_453 * ay_437;
  c_472 = _470 + _471;
  if (a_461 == 0.0)
    goto <bb 93>;
  else
    goto <bb 95>;

  <bb 93>:
  if (b_469 != 0.0)
    goto <bb 94>;
  else
    goto <bb 98>;

  <bb 94>:
  num.496_473 = num_431;
  num_474 = num.496_473 + 1;
  _475 = -c_472;
  _476 = _475 / b_469;
  res[num.496_473] = _476;
  goto <bb 98>;

  <bb 95>:
  _478 = b_469 * b_469;
  _479 = a_461 * 4.0e+0;
  _480 = _479 * c_472;
  discriminant_481 = _478 - _480;
  if (discriminant_481 < 0.0)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  num_482 = 0;
  goto <bb 98>;

  <bb 97>:
  root_484 = std::sqrt (discriminant_481);
  _485 = -b_469;
  _486 = _485 - root_484;
  _487 = a_461 * 2.0e+0;
  _488 = _486 / _487;
  res[0] = _488;
  _490 = root_484 - b_469;
  _491 = a_461 * 2.0e+0;
  _492 = _490 / _491;
  res[1] = _492;
  num_494 = 2;

  <bb 98>:
  # num_19 = PHI <num_474(94), num_482(96), num_494(97), num_431(93)>
  goto <bb 100>;

  <bb 99>:
  _495 = ax_434 * bx_443;
  _496 = ay_437 * by_449;
  _497 = _495 + _496;
  _498 = _497 * 3.0e+0;
  b_499 = _498 * a_inv_457;
  _500 = ax_434 * ax_434;
  _501 = ay_437 * ay_437;
  _502 = _500 + _501;
  _503 = _502 * 2.0e+0;
  _504 = mx_451 * bx_443;
  _505 = my_453 * by_449;
  _506 = _504 + _505;
  _507 = _503 + _506;
  c_508 = _507 * a_inv_457;
  _509 = mx_451 * ax_434;
  _510 = my_453 * ay_437;
  _511 = _509 + _510;
  d_512 = _511 * a_inv_457;
  num_514 = stbtt__solve_cubic (b_499, c_508, d_512, &res);

  <bb 100>:
  # num_20 = PHI <num_19(98), num_514(99)>
  if (num_20 > 0)
    goto <bb 101>;
  else
    goto <bb 105>;

  <bb 101>:
  _515 = res[0];
  if (_515 >= 0.0)
    goto <bb 102>;
  else
    goto <bb 105>;

  <bb 102>:
  _516 = res[0];
  if (_516 <= 1.0e+0)
    goto <bb 103>;
  else
    goto <bb 105>;

  <bb 103>:
  t_517 = res[0];
  it_518 = 1.0e+0 - t_517;
  _519 = it_518 * it_518;
  x0.497_520 = x0;
  _521 = _519 * x0.497_520;
  _522 = t_517 * 2.0e+0;
  _523 = _522 * it_518;
  x1.498_524 = x1;
  _525 = _523 * x1.498_524;
  _526 = _521 + _525;
  _527 = t_517 * t_517;
  x2.499_528 = x2;
  _529 = _527 * x2.499_528;
  px_530 = _526 + _529;
  _531 = it_518 * it_518;
  y0.500_532 = y0;
  _533 = _531 * y0.500_532;
  _534 = t_517 * 2.0e+0;
  _535 = _534 * it_518;
  y1.501_536 = y1;
  _537 = _535 * y1.501_536;
  _538 = _533 + _537;
  _539 = t_517 * t_517;
  y2.502_540 = y2;
  _541 = _539 * y2.502_540;
  py_542 = _538 + _541;
  _543 = px_530 - sx_244;
  _544 = px_530 - sx_244;
  _545 = _543 * _544;
  _546 = py_542 - sy_246;
  _547 = py_542 - sy_246;
  _548 = _546 * _547;
  dist2_549 = _545 + _548;
  _550 = min_dist_10 * min_dist_10;
  if (_550 > dist2_549)
    goto <bb 104>;
  else
    goto <bb 105>;

  <bb 104>:
  min_dist_552 = std::sqrt (dist2_549);

  <bb 105>:
  # min_dist_13 = PHI <min_dist_10(100), min_dist_10(101), min_dist_10(102), min_dist_552(104), min_dist_10(103)>
  if (num_20 > 1)
    goto <bb 106>;
  else
    goto <bb 110>;

  <bb 106>:
  _553 = res[1];
  if (_553 >= 0.0)
    goto <bb 107>;
  else
    goto <bb 110>;

  <bb 107>:
  _554 = res[1];
  if (_554 <= 1.0e+0)
    goto <bb 108>;
  else
    goto <bb 110>;

  <bb 108>:
  t_555 = res[1];
  it_556 = 1.0e+0 - t_555;
  _557 = it_556 * it_556;
  x0.503_558 = x0;
  _559 = _557 * x0.503_558;
  _560 = t_555 * 2.0e+0;
  _561 = _560 * it_556;
  x1.504_562 = x1;
  _563 = _561 * x1.504_562;
  _564 = _559 + _563;
  _565 = t_555 * t_555;
  x2.505_566 = x2;
  _567 = _565 * x2.505_566;
  px_568 = _564 + _567;
  _569 = it_556 * it_556;
  y0.506_570 = y0;
  _571 = _569 * y0.506_570;
  _572 = t_555 * 2.0e+0;
  _573 = _572 * it_556;
  y1.507_574 = y1;
  _575 = _573 * y1.507_574;
  _576 = _571 + _575;
  _577 = t_555 * t_555;
  y2.508_578 = y2;
  _579 = _577 * y2.508_578;
  py_580 = _576 + _579;
  _581 = px_568 - sx_244;
  _582 = px_568 - sx_244;
  _583 = _581 * _582;
  _584 = py_580 - sy_246;
  _585 = py_580 - sy_246;
  _586 = _584 * _585;
  dist2_587 = _583 + _586;
  _588 = min_dist_13 * min_dist_13;
  if (_588 > dist2_587)
    goto <bb 109>;
  else
    goto <bb 110>;

  <bb 109>:
  min_dist_590 = std::sqrt (dist2_587);

  <bb 110>:
  # min_dist_14 = PHI <min_dist_13(105), min_dist_13(106), min_dist_13(107), min_dist_590(109), min_dist_13(108)>
  if (num_20 > 2)
    goto <bb 111>;
  else
    goto <bb 115>;

  <bb 111>:
  _591 = res[2];
  if (_591 >= 0.0)
    goto <bb 112>;
  else
    goto <bb 115>;

  <bb 112>:
  _592 = res[2];
  if (_592 <= 1.0e+0)
    goto <bb 113>;
  else
    goto <bb 115>;

  <bb 113>:
  t_593 = res[2];
  it_594 = 1.0e+0 - t_593;
  _595 = it_594 * it_594;
  x0.509_596 = x0;
  _597 = _595 * x0.509_596;
  _598 = t_593 * 2.0e+0;
  _599 = _598 * it_594;
  x1.510_600 = x1;
  _601 = _599 * x1.510_600;
  _602 = _597 + _601;
  _603 = t_593 * t_593;
  x2.511_604 = x2;
  _605 = _603 * x2.511_604;
  px_606 = _602 + _605;
  _607 = it_594 * it_594;
  y0.512_608 = y0;
  _609 = _607 * y0.512_608;
  _610 = t_593 * 2.0e+0;
  _611 = _610 * it_594;
  y1.513_612 = y1;
  _613 = _611 * y1.513_612;
  _614 = _609 + _613;
  _615 = t_593 * t_593;
  y2.514_616 = y2;
  _617 = _615 * y2.514_616;
  py_618 = _614 + _617;
  _619 = px_606 - sx_244;
  _620 = px_606 - sx_244;
  _621 = _619 * _620;
  _622 = py_618 - sy_246;
  _623 = py_618 - sy_246;
  _624 = _622 * _623;
  dist2_625 = _621 + _624;
  _626 = min_dist_14 * min_dist_14;
  if (_626 > dist2_625)
    goto <bb 114>;
  else
    goto <bb 115>;

  <bb 114>:
  min_dist_628 = std::sqrt (dist2_625);

  <bb 115>:
  # min_dist_15 = PHI <min_dist_14(110), min_dist_14(111), min_dist_14(112), min_dist_628(114), min_dist_14(113)>
  res ={v} {CLOBBER};

  <bb 116>:
  # min_dist_16 = PHI <min_dist_10(87), min_dist_10(88), min_dist_10(89), min_dist_10(90), min_dist_15(115)>
  x2 ={v} {CLOBBER};
  y2 ={v} {CLOBBER};
  x1 ={v} {CLOBBER};
  y1 ={v} {CLOBBER};

  <bb 117>:
  # min_dist_17 = PHI <min_dist_12(49), min_dist_10(50), min_dist_16(116)>
  x0 ={v} {CLOBBER};
  y0 ={v} {CLOBBER};
  i_636 = i_6 + 1;
  goto <bb 38>;

  <bb 118>:
  if (winding_251 == 0)
    goto <bb 119>;
  else
    goto <bb 120>;

  <bb 119>:
  min_dist_637 = -min_dist_9;

  <bb 120>:
  # min_dist_18 = PHI <min_dist_9(118), min_dist_637(119)>
  _639 = (int) onedge_value_638(D);
  _640 = (float) _639;
  _642 = pixel_dist_scale_641(D) * min_dist_18;
  val_643 = _640 + _642;
  if (val_643 < 0.0)
    goto <bb 121>;
  else
    goto <bb 122>;

  <bb 121>:
  val_644 = 0.0;
  goto <bb 124>;

  <bb 122>:
  if (val_643 > 2.55e+2)
    goto <bb 123>;
  else
    goto <bb 124>;

  <bb 123>:
  val_645 = 2.55e+2;

  <bb 124>:
  # val_8 = PHI <val_644(121), val_643(122), val_645(123)>
  iy0.515_646 = iy0;
  _647 = y_4 - iy0.515_646;
  _648 = _647 * w_85;
  ix0.516_649 = ix0;
  _650 = x_3 - ix0.516_649;
  _651 = _648 + _650;
  _652 = (sizetype) _651;
  _653 = data_107 + _652;
  _654 = (unsigned char) val_8;
  *_653 = _654;
  x_656 = x_3 + 1;
  goto <bb 36>;

  <bb 125>:
  y_657 = y_4 + 1;
  goto <bb 34>;

  <bb 126>:
  ImGui::MemFree (precompute_112);
  verts.517_659 = verts;
  ImGui::MemFree (verts.517_659);
  verts ={v} {CLOBBER};
  _662 = data_107;

  <bb 127>:
  # _21 = PHI <_60(6), _664(10), _662(126)>
  ix0 ={v} {CLOBBER};
  iy0 ={v} {CLOBBER};
  ix1 ={v} {CLOBBER};
  iy1 ={v} {CLOBBER};

<L164>:
  return _21;

}



;; Function unsigned char* stbtt_GetCodepointSDF(const stbtt_fontinfo*, float, int, int, unsigned char, float, int*, int*, int*, int*) (stbtt_GetCodepointSDF, funcdef_no=672, decl_uid=15544, cgraph_uid=571, symbol_order=571)

unsigned char* stbtt_GetCodepointSDF(const stbtt_fontinfo*, float, int, int, unsigned char, float, int*, int*, int*, int*) (const struct stbtt_fontinfo * info, float scale, int codepoint, int padding, unsigned char onedge_value, float pixel_dist_scale, int * width, int * height, int * xoff, int * yoff)
{
  unsigned char * D.25930;
  int D.25928;
  int D.25927;
  unsigned char * D.25926;
  int _2;
  int _7;
  unsigned char * _16;
  unsigned char * _17;

  <bb 2>:
  _2 = (int) onedge_value_1(D);
  _7 = stbtt_FindGlyphIndex (info_4(D), codepoint_5(D));
  _16 = stbtt_GetGlyphSDF (info_4(D), scale_8(D), _7, padding_9(D), _2, pixel_dist_scale_10(D), width_11(D), height_12(D), xoff_13(D), yoff_14(D));
  _17 = _16;

<L0>:
  return _17;

}



;; Function void stbtt_FreeSDF(unsigned char*, void*) (stbtt_FreeSDF, funcdef_no=673, decl_uid=15522, cgraph_uid=572, symbol_order=572)

void stbtt_FreeSDF(unsigned char*, void*) (unsigned char * bitmap, void * userdata)
{
  <bb 2>:
  ImGui::MemFree (bitmap_2(D));
  return;

}



;; Function stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8*, stbtt_int32, stbtt_uint8*, stbtt_int32) (_ZL42stbtt__CompareUTF8toUTF16_bigendian_prefixPhiS_i, funcdef_no=674, decl_uid=17558, cgraph_uid=573, symbol_order=573)

stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8*, stbtt_int32, stbtt_uint8*, stbtt_int32) (stbtt_uint8 * s1, stbtt_int32 len1, stbtt_uint8 * s2, stbtt_int32 len2)
{
  stbtt_uint16 ch2;
  stbtt_uint32 c;
  stbtt_uint16 ch;
  stbtt_int32 i;
  int D.26107;
  int D.26106;
  int D.26105;
  short unsigned int ch.556;
  int D.26103;
  unsigned char D.26102;
  stbtt_uint8 * D.26101;
  sizetype D.26100;
  int i.555;
  bool retval.554;
  int D.26095;
  int D.26094;
  int D.26093;
  int D.26092;
  short unsigned int ch.553;
  int D.26090;
  unsigned char D.26089;
  stbtt_uint8 * D.26088;
  sizetype D.26087;
  int i.552;
  bool retval.551;
  int D.26082;
  int D.26081;
  int D.26080;
  short unsigned int ch.550;
  int D.26078;
  unsigned char D.26077;
  stbtt_uint8 * D.26076;
  sizetype D.26075;
  int i.549;
  bool retval.548;
  int D.26070;
  int D.26068;
  short unsigned int ch.547;
  int D.26065;
  short unsigned int ch.546;
  unsigned int D.26060;
  unsigned int D.26059;
  unsigned int c.545;
  unsigned int D.26057;
  unsigned char D.26056;
  stbtt_uint8 * D.26055;
  sizetype D.26054;
  int i.544;
  bool retval.543;
  unsigned int D.26049;
  unsigned int D.26048;
  unsigned int D.26047;
  unsigned int c.542;
  unsigned int D.26045;
  unsigned char D.26044;
  stbtt_uint8 * D.26043;
  sizetype D.26042;
  int i.541;
  bool retval.540;
  unsigned int D.26037;
  unsigned int D.26036;
  unsigned int D.26035;
  unsigned int c.539;
  unsigned int D.26033;
  unsigned char D.26032;
  stbtt_uint8 * D.26031;
  sizetype D.26030;
  int i.538;
  bool retval.537;
  unsigned int D.26025;
  unsigned int D.26024;
  unsigned int c.536;
  unsigned int D.26022;
  unsigned char D.26021;
  stbtt_uint8 * D.26020;
  sizetype D.26019;
  int i.535;
  bool retval.534;
  unsigned int c.533;
  int D.26015;
  int D.26014;
  int D.26013;
  int D.26012;
  int D.26011;
  int D.26010;
  int D.26009;
  short unsigned int ch.532;
  int D.26005;
  short unsigned int D.26004;
  unsigned char D.26003;
  stbtt_uint8 * D.26002;
  short unsigned int D.26001;
  short unsigned int D.26000;
  unsigned char D.25999;
  stbtt_uint8 * D.25998;
  int D.25996;
  short unsigned int ch.531;
  int D.25993;
  short unsigned int ch.530;
  int D.25986;
  int D.25985;
  int D.25984;
  short unsigned int ch.529;
  int D.25982;
  unsigned char D.25981;
  stbtt_uint8 * D.25980;
  sizetype D.25979;
  int i.528;
  bool retval.527;
  int D.25974;
  int D.25973;
  int D.25972;
  short unsigned int ch.526;
  int D.25970;
  unsigned char D.25969;
  stbtt_uint8 * D.25968;
  sizetype D.25967;
  int i.525;
  bool retval.524;
  int D.25962;
  int D.25959;
  short unsigned int ch.523;
  int D.25954;
  short unsigned int ch.522;
  int D.25952;
  unsigned char D.25951;
  stbtt_uint8 * D.25950;
  sizetype D.25949;
  int i.521;
  bool retval.520;
  stbtt_int32 D.25946;
  int D.25941;
  short unsigned int ch.519;
  short unsigned int ch.518;
  short unsigned int D.25938;
  unsigned char D.25937;
  stbtt_uint8 * D.25936;
  short unsigned int D.25935;
  short unsigned int D.25934;
  unsigned char D.25933;
  stbtt_int32 _7;
  stbtt_int32 _8;
  stbtt_int32 _9;
  unsigned char _19;
  short unsigned int _20;
  short unsigned int _21;
  stbtt_uint8 * _22;
  unsigned char _23;
  short unsigned int _24;
  short unsigned int ch.518_25;
  short unsigned int ch.519_27;
  int _28;
  short unsigned int ch.523_29;
  int _30;
  int _31;
  int i.525_33;
  sizetype _35;
  stbtt_uint8 * _37;
  unsigned char _38;
  int _39;
  short unsigned int ch.526_40;
  int _41;
  int _42;
  int _43;
  bool retval.524_44;
  int i.528_45;
  sizetype _47;
  stbtt_uint8 * _48;
  unsigned char _49;
  int _50;
  short unsigned int ch.529_51;
  int _52;
  int _53;
  int _54;
  bool retval.527_55;
  stbtt_int32 _56;
  stbtt_int32 _57;
  stbtt_int32 _58;
  short unsigned int ch.530_59;
  int _60;
  short unsigned int ch.531_61;
  int _62;
  stbtt_uint8 * _63;
  unsigned char _64;
  short unsigned int _65;
  short unsigned int _66;
  stbtt_uint8 * _67;
  unsigned char _68;
  short unsigned int _69;
  int _71;
  short unsigned int ch.532_72;
  int _73;
  int _74;
  int _75;
  int _76;
  int _77;
  int _78;
  int _79;
  unsigned int c.533_80;
  int i.535_82;
  sizetype _84;
  stbtt_uint8 * _85;
  unsigned char _86;
  unsigned int _87;
  unsigned int c.536_88;
  unsigned int _89;
  unsigned int _90;
  bool retval.534_91;
  int i.538_92;
  sizetype _94;
  stbtt_uint8 * _95;
  unsigned char _96;
  unsigned int _97;
  unsigned int c.539_98;
  unsigned int _99;
  unsigned int _100;
  unsigned int _101;
  bool retval.537_102;
  int i.541_103;
  sizetype _105;
  stbtt_uint8 * _106;
  unsigned char _107;
  unsigned int _108;
  unsigned int c.542_109;
  unsigned int _110;
  unsigned int _111;
  unsigned int _112;
  bool retval.540_113;
  int i.544_114;
  sizetype _116;
  stbtt_uint8 * _117;
  unsigned char _118;
  unsigned int _119;
  unsigned int c.545_120;
  unsigned int _121;
  unsigned int _122;
  bool retval.543_123;
  stbtt_int32 _127;
  stbtt_int32 _128;
  stbtt_int32 _129;
  stbtt_int32 _130;
  stbtt_int32 _131;
  short unsigned int ch.546_133;
  int _134;
  short unsigned int ch.547_135;
  int _136;
  stbtt_int32 _137;
  int _138;
  int i.549_139;
  sizetype _141;
  stbtt_uint8 * _142;
  unsigned char _143;
  int _144;
  short unsigned int ch.550_145;
  int _146;
  int _147;
  int _148;
  bool retval.548_149;
  int i.552_150;
  sizetype _152;
  stbtt_uint8 * _153;
  unsigned char _154;
  int _155;
  short unsigned int ch.553_156;
  int _157;
  int _158;
  int _159;
  int _160;
  bool retval.551_161;
  int i.555_162;
  sizetype _164;
  stbtt_uint8 * _165;
  unsigned char _166;
  int _167;
  short unsigned int ch.556_168;
  int _169;
  int _170;
  int _171;
  bool retval.554_172;
  stbtt_int32 _173;
  stbtt_int32 _174;
  stbtt_int32 _175;
  stbtt_int32 _176;
  int i.521_180;
  sizetype _182;
  stbtt_uint8 * _183;
  unsigned char _184;
  int _185;
  short unsigned int ch.522_186;
  int _187;
  bool retval.520_188;
  stbtt_int32 _189;
  stbtt_int32 _190;
  stbtt_int32 _192;

  <bb 2>:
  i_15 = 0;

  <bb 3>:
  # s2_1 = PHI <s2_16(D)(2), s2_177(41)>
  # len2_3 = PHI <len2_17(D)(2), len2_178(41)>
  # i_5 = PHI <i_15(2), i_6(41)>
  if (len2_3 == 0)
    goto <bb 43>;
  else
    goto <bb 4>;

  <bb 4>:
  _19 = *s2_1;
  _20 = (short unsigned int) _19;
  _21 = _20 * 256;
  _22 = s2_1 + 1;
  _23 = *_22;
  _24 = (short unsigned int) _23;
  ch.518_25 = _21 + _24;
  ch = ch.518_25;
  ch.519_27 = ch;
  _28 = (int) ch.519_27;
  if (_28 <= 127)
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 5>:
  if (i_5 >= len1_32(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _190 = -1;
  goto <bb 42>;

  <bb 7>:
  i.521_180 = i_5;
  i_181 = i.521_180 + 1;
  _182 = (sizetype) i.521_180;
  _183 = s1_36(D) + _182;
  _184 = *_183;
  _185 = (int) _184;
  ch.522_186 = ch;
  _187 = (int) ch.522_186;
  retval.520_188 = _185 != _187;
  if (retval.520_188 != 0)
    goto <bb 8>;
  else
    goto <bb 41>;

  <bb 8>:
  _189 = -1;
  goto <bb 42>;

  <bb 9>:
  ch.523_29 = ch;
  _30 = (int) ch.523_29;
  if (_30 <= 2047)
    goto <bb 10>;
  else
    goto <bb 16>;

  <bb 10>:
  _31 = i_5 + 1;
  if (_31 >= len1_32(D))
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _58 = -1;
  goto <bb 42>;

  <bb 12>:
  i.525_33 = i_5;
  i_34 = i.525_33 + 1;
  _35 = (sizetype) i.525_33;
  _37 = s1_36(D) + _35;
  _38 = *_37;
  _39 = (int) _38;
  ch.526_40 = ch;
  _41 = (int) ch.526_40;
  _42 = _41 >> 6;
  _43 = _42 + 192;
  retval.524_44 = _39 != _43;
  if (retval.524_44 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _57 = -1;
  goto <bb 42>;

  <bb 14>:
  i.528_45 = i_34;
  i_46 = i.528_45 + 1;
  _47 = (sizetype) i.528_45;
  _48 = s1_36(D) + _47;
  _49 = *_48;
  _50 = (int) _49;
  ch.529_51 = ch;
  _52 = (int) ch.529_51;
  _53 = _52 & 63;
  _54 = _53 + 128;
  retval.527_55 = _50 != _54;
  if (retval.527_55 != 0)
    goto <bb 15>;
  else
    goto <bb 41>;

  <bb 15>:
  _56 = -1;
  goto <bb 42>;

  <bb 16>:
  ch.530_59 = ch;
  _60 = (int) ch.530_59;
  if (_60 > 55295)
    goto <bb 17>;
  else
    goto <bb 30>;

  <bb 17>:
  ch.531_61 = ch;
  _62 = (int) ch.531_61;
  if (_62 <= 56319)
    goto <bb 18>;
  else
    goto <bb 30>;

  <bb 18>:
  _63 = s2_1 + 2;
  _64 = *_63;
  _65 = (short unsigned int) _64;
  _66 = _65 * 256;
  _67 = s2_1 + 3;
  _68 = *_67;
  _69 = (short unsigned int) _68;
  ch2_70 = _66 + _69;
  _71 = i_5 + 3;
  if (_71 >= len1_32(D))
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _131 = -1;
  goto <bb 29>;

  <bb 20>:
  ch.532_72 = ch;
  _73 = (int) ch.532_72;
  _74 = _73 + -55296;
  _75 = _74 << 10;
  _76 = (int) ch2_70;
  _77 = _76 + -56320;
  _78 = _75 + _77;
  _79 = _78 + 65536;
  c.533_80 = (unsigned int) _79;
  c = c.533_80;
  i.535_82 = i_5;
  i_83 = i.535_82 + 1;
  _84 = (sizetype) i.535_82;
  _85 = s1_36(D) + _84;
  _86 = *_85;
  _87 = (unsigned int) _86;
  c.536_88 = c;
  _89 = c.536_88 >> 18;
  _90 = _89 + 240;
  retval.534_91 = _87 != _90;
  if (retval.534_91 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _130 = -1;
  goto <bb 29>;

  <bb 22>:
  i.538_92 = i_83;
  i_93 = i.538_92 + 1;
  _94 = (sizetype) i.538_92;
  _95 = s1_36(D) + _94;
  _96 = *_95;
  _97 = (unsigned int) _96;
  c.539_98 = c;
  _99 = c.539_98 >> 12;
  _100 = _99 & 63;
  _101 = _100 + 128;
  retval.537_102 = _97 != _101;
  if (retval.537_102 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  _129 = -1;
  goto <bb 29>;

  <bb 24>:
  i.541_103 = i_93;
  i_104 = i.541_103 + 1;
  _105 = (sizetype) i.541_103;
  _106 = s1_36(D) + _105;
  _107 = *_106;
  _108 = (unsigned int) _107;
  c.542_109 = c;
  _110 = c.542_109 >> 6;
  _111 = _110 & 63;
  _112 = _111 + 128;
  retval.540_113 = _108 != _112;
  if (retval.540_113 != 0)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  _128 = -1;
  goto <bb 29>;

  <bb 26>:
  i.544_114 = i_104;
  i_115 = i.544_114 + 1;
  _116 = (sizetype) i.544_114;
  _117 = s1_36(D) + _116;
  _118 = *_117;
  _119 = (unsigned int) _118;
  c.545_120 = c;
  _121 = c.545_120 & 63;
  _122 = _121 + 128;
  retval.543_123 = _119 != _122;
  if (retval.543_123 != 0)
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _127 = -1;
  goto <bb 29>;

  <bb 28>:
  s2_124 = s2_1 + 2;
  len2_125 = len2_3 + -2;
  c ={v} {CLOBBER};
  goto <bb 41>;

  <bb 29>:
  # _7 = PHI <_131(19), _130(21), _129(23), _128(25), _127(27)>
  c ={v} {CLOBBER};
  goto <bb 42>;

  <bb 30>:
  ch.546_133 = ch;
  _134 = (int) ch.546_133;
  if (_134 > 56319)
    goto <bb 31>;
  else
    goto <bb 33>;

  <bb 31>:
  ch.547_135 = ch;
  _136 = (int) ch.547_135;
  if (_136 <= 57343)
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  _137 = -1;
  goto <bb 42>;

  <bb 33>:
  _138 = i_5 + 2;
  if (_138 >= len1_32(D))
    goto <bb 34>;
  else
    goto <bb 35>;

  <bb 34>:
  _176 = -1;
  goto <bb 42>;

  <bb 35>:
  i.549_139 = i_5;
  i_140 = i.549_139 + 1;
  _141 = (sizetype) i.549_139;
  _142 = s1_36(D) + _141;
  _143 = *_142;
  _144 = (int) _143;
  ch.550_145 = ch;
  _146 = (int) ch.550_145;
  _147 = _146 >> 12;
  _148 = _147 + 224;
  retval.548_149 = _144 != _148;
  if (retval.548_149 != 0)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  _175 = -1;
  goto <bb 42>;

  <bb 37>:
  i.552_150 = i_140;
  i_151 = i.552_150 + 1;
  _152 = (sizetype) i.552_150;
  _153 = s1_36(D) + _152;
  _154 = *_153;
  _155 = (int) _154;
  ch.553_156 = ch;
  _157 = (int) ch.553_156;
  _158 = _157 >> 6;
  _159 = _158 & 63;
  _160 = _159 + 128;
  retval.551_161 = _155 != _160;
  if (retval.551_161 != 0)
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  _174 = -1;
  goto <bb 42>;

  <bb 39>:
  i.555_162 = i_151;
  i_163 = i.555_162 + 1;
  _164 = (sizetype) i.555_162;
  _165 = s1_36(D) + _164;
  _166 = *_165;
  _167 = (int) _166;
  ch.556_168 = ch;
  _169 = (int) ch.556_168;
  _170 = _169 & 63;
  _171 = _170 + 128;
  retval.554_172 = _167 != _171;
  if (retval.554_172 != 0)
    goto <bb 40>;
  else
    goto <bb 41>;

  <bb 40>:
  _173 = -1;
  goto <bb 42>;

  <bb 41>:
  # s2_2 = PHI <s2_1(7), s2_1(14), s2_124(28), s2_1(39)>
  # len2_4 = PHI <len2_3(7), len2_3(14), len2_125(28), len2_3(39)>
  # i_6 = PHI <i_181(7), i_46(14), i_115(28), i_163(39)>
  s2_177 = s2_2 + 2;
  len2_178 = len2_4 + -2;
  ch ={v} {CLOBBER};
  goto <bb 3>;

  <bb 42>:
  # _8 = PHI <_190(6), _189(8), _58(11), _57(13), _56(15), _7(29), _137(32), _176(34), _175(36), _174(38), _173(40)>
  ch ={v} {CLOBBER};
  goto <bb 44> (<L48>);

  <bb 43>:
  _192 = i_5;

  # _9 = PHI <_8(42), _192(43)>
<L48>:
  return _9;

}



;; Function int stbtt_CompareUTF8toUTF16_bigendian_internal(char*, int, char*, int) (_ZL43stbtt_CompareUTF8toUTF16_bigendian_internalPciS_i, funcdef_no=675, decl_uid=17570, cgraph_uid=574, symbol_order=574)

int stbtt_CompareUTF8toUTF16_bigendian_internal(char*, int, char*, int) (char * s1, int len1, char * s2, int len2)
{
  bool D.26117;
  int D.26116;
  int D.26115;
  int _7;
  bool _8;
  int _9;

  <bb 2>:
  _7 = stbtt__CompareUTF8toUTF16_bigendian_prefix (s1_2(D), len1_3(D), s2_4(D), len2_5(D));
  _8 = _7 == len1_3(D);
  _9 = (int) _8;

<L0>:
  return _9;

}



;; Function const char* stbtt_GetFontNameString(const stbtt_fontinfo*, int*, int, int, int, int) (stbtt_GetFontNameString, funcdef_no=676, decl_uid=15560, cgraph_uid=575, symbol_order=575)

const char* stbtt_GetFontNameString(const stbtt_fontinfo*, int*, int, int, int, int) (const struct stbtt_fontinfo * font, int * length, int platformID, int encodingID, int languageID, int nameID)
{
  stbtt_uint32 loc;
  stbtt_uint32 nm;
  stbtt_uint32 offset;
  stbtt_uint8 * fc;
  stbtt_int32 stringOffset;
  stbtt_int32 count;
  stbtt_int32 i;
  sizetype D.26178;
  sizetype D.26177;
  short unsigned int D.26176;
  stbtt_uint8 * D.26175;
  sizetype D.26174;
  sizetype D.26173;
  sizetype D.26172;
  int D.26171;
  short unsigned int D.26170;
  stbtt_uint8 * D.26169;
  sizetype D.26168;
  sizetype D.26167;
  int D.26163;
  short unsigned int D.26162;
  stbtt_uint8 * D.26161;
  sizetype D.26160;
  sizetype D.26159;
  int D.26157;
  short unsigned int D.26156;
  stbtt_uint8 * D.26155;
  sizetype D.26154;
  sizetype D.26153;
  int D.26151;
  short unsigned int D.26150;
  stbtt_uint8 * D.26149;
  sizetype D.26148;
  sizetype D.26147;
  int D.26145;
  short unsigned int D.26144;
  stbtt_uint8 * D.26143;
  sizetype D.26142;
  bool iftmp.558;
  bool retval.557;
  unsigned int D.26137;
  unsigned int D.26136;
  int D.26135;
  unsigned int D.26132;
  unsigned int D.26131;
  short unsigned int D.26130;
  stbtt_uint8 * D.26129;
  sizetype D.26128;
  sizetype D.26127;
  short unsigned int D.26126;
  stbtt_uint8 * D.26125;
  sizetype D.26124;
  sizetype D.26123;
  const char * D.26122;
  int D.26119;
  const char * _2;
  bool iftmp.558_3;
  int _11;
  const char * _15;
  sizetype _16;
  sizetype _17;
  stbtt_uint8 * _18;
  short unsigned int _20;
  sizetype _22;
  sizetype _23;
  stbtt_uint8 * _24;
  short unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  int _31;
  unsigned int _32;
  unsigned int _33;
  sizetype _35;
  stbtt_uint8 * _36;
  short unsigned int _38;
  int _39;
  sizetype _41;
  sizetype _42;
  stbtt_uint8 * _43;
  short unsigned int _45;
  int _46;
  sizetype _48;
  sizetype _49;
  stbtt_uint8 * _50;
  short unsigned int _52;
  int _53;
  sizetype _55;
  sizetype _56;
  stbtt_uint8 * _57;
  short unsigned int _59;
  int _60;
  bool iftmp.558_62;
  bool iftmp.558_63;
  bool retval.557_64;
  sizetype _66;
  sizetype _67;
  stbtt_uint8 * _68;
  short unsigned int _70;
  int _71;
  sizetype _74;
  sizetype _75;
  sizetype _76;
  stbtt_uint8 * _77;
  short unsigned int _79;
  sizetype _80;
  sizetype _81;
  const char * _82;
  const char * _83;

  <bb 2>:
  fc_10 = font_9(D)->data;
  _11 = font_9(D)->fontstart;
  offset_12 = (stbtt_uint32) _11;
  nm_14 = stbtt__find_table (fc_10, offset_12, "name");
  if (nm_14 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _15 = 0B;
  goto <bb 16> (<L13>);

  <bb 4>:
  _16 = (sizetype) nm_14;
  _17 = _16 + 2;
  _18 = fc_10 + _17;
  _20 = ttUSHORT (_18);
  count_21 = (stbtt_int32) _20;
  _22 = (sizetype) nm_14;
  _23 = _22 + 4;
  _24 = fc_10 + _23;
  _26 = ttUSHORT (_24);
  _27 = (unsigned int) _26;
  _28 = _27 + nm_14;
  stringOffset_29 = (stbtt_int32) _28;
  i_30 = 0;

  <bb 5>:
  # i_1 = PHI <i_30(4), i_65(14)>
  if (i_1 >= count_21)
    goto <bb 15>;
  else
    goto <bb 6>;

  <bb 6>:
  _31 = i_1 * 12;
  _32 = (unsigned int) _31;
  _33 = _32 + nm_14;
  loc_34 = _33 + 6;
  _35 = (sizetype) loc_34;
  _36 = fc_10 + _35;
  _38 = ttUSHORT (_36);
  _39 = (int) _38;
  if (_39 == platformID_40(D))
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 7>:
  _41 = (sizetype) loc_34;
  _42 = _41 + 2;
  _43 = fc_10 + _42;
  _45 = ttUSHORT (_43);
  _46 = (int) _45;
  if (_46 == encodingID_47(D))
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  _48 = (sizetype) loc_34;
  _49 = _48 + 4;
  _50 = fc_10 + _49;
  _52 = ttUSHORT (_50);
  _53 = (int) _52;
  if (_53 == languageID_54(D))
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:
  _55 = (sizetype) loc_34;
  _56 = _55 + 6;
  _57 = fc_10 + _56;
  _59 = ttUSHORT (_57);
  _60 = (int) _59;
  if (_60 == nameID_61(D))
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  iftmp.558_62 = 1;
  goto <bb 12>;

  <bb 11>:
  iftmp.558_63 = 0;

  <bb 12>:
  # iftmp.558_3 = PHI <iftmp.558_62(10), iftmp.558_63(11)>
  retval.557_64 = iftmp.558_3;
  if (retval.557_64 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _66 = (sizetype) loc_34;
  _67 = _66 + 8;
  _68 = fc_10 + _67;
  _70 = ttUSHORT (_68);
  _71 = (int) _70;
  *length_72(D) = _71;
  _74 = (sizetype) stringOffset_29;
  _75 = (sizetype) loc_34;
  _76 = _75 + 10;
  _77 = fc_10 + _76;
  _79 = ttUSHORT (_77);
  _80 = (sizetype) _79;
  _81 = _74 + _80;
  _82 = fc_10 + _81;
  goto <bb 16> (<L13>);

  <bb 14>:
  i_65 = i_1 + 1;
  goto <bb 5>;

  <bb 15>:
  _83 = 0B;

  # _2 = PHI <_15(3), _82(13), _83(15)>
<L13>:
  return _2;

}



;; Function int stbtt__matchpair(stbtt_uint8*, stbtt_uint32, stbtt_uint8*, stbtt_int32, stbtt_int32, stbtt_int32) (_ZL16stbtt__matchpairPhjS_iii, funcdef_no=677, decl_uid=17595, cgraph_uid=576, symbol_order=576)

int stbtt__matchpair(stbtt_uint8*, stbtt_uint32, stbtt_uint8*, stbtt_int32, stbtt_int32, stbtt_int32) (stbtt_uint8 * fc, stbtt_uint32 nm, stbtt_uint8 * name, stbtt_int32 nlen, stbtt_int32 target_id, stbtt_int32 next_id)
{
  stbtt_int32 matchlen;
  stbtt_int32 off;
  stbtt_int32 slen;
  stbtt_int32 language;
  stbtt_int32 encoding;
  stbtt_int32 platform;
  stbtt_int32 id;
  stbtt_uint32 loc;
  stbtt_int32 stringOffset;
  stbtt_int32 count;
  stbtt_int32 i;
  int D.26293;
  stbtt_uint8 * D.26292;
  sizetype D.26291;
  int D.26290;
  stbtt_uint8 * D.26289;
  sizetype D.26288;
  sizetype D.26287;
  sizetype D.26286;
  bool retval.561;
  unsigned char D.26282;
  stbtt_uint8 * D.26281;
  sizetype D.26280;
  int D.26276;
  short unsigned int D.26271;
  stbtt_uint8 * D.26270;
  sizetype D.26269;
  sizetype D.26268;
  short unsigned int D.26267;
  stbtt_uint8 * D.26266;
  sizetype D.26265;
  sizetype D.26264;
  int D.26260;
  short unsigned int D.26259;
  stbtt_uint8 * D.26258;
  sizetype D.26257;
  sizetype D.26256;
  int D.26254;
  short unsigned int D.26253;
  stbtt_uint8 * D.26252;
  sizetype D.26251;
  sizetype D.26250;
  int D.26248;
  short unsigned int D.26247;
  stbtt_uint8 * D.26246;
  sizetype D.26245;
  sizetype D.26244;
  int D.26242;
  short unsigned int D.26241;
  stbtt_uint8 * D.26240;
  sizetype D.26239;
  sizetype D.26238;
  int D.26236;
  bool iftmp.560;
  bool retval.559;
  stbtt_uint8 * D.26229;
  sizetype D.26228;
  sizetype D.26227;
  sizetype D.26226;
  short unsigned int D.26225;
  stbtt_uint8 * D.26224;
  sizetype D.26223;
  sizetype D.26222;
  short unsigned int D.26221;
  stbtt_uint8 * D.26220;
  sizetype D.26219;
  sizetype D.26218;
  short unsigned int D.26211;
  stbtt_uint8 * D.26210;
  sizetype D.26209;
  sizetype D.26208;
  short unsigned int D.26207;
  stbtt_uint8 * D.26206;
  sizetype D.26205;
  sizetype D.26204;
  short unsigned int D.26203;
  stbtt_uint8 * D.26202;
  sizetype D.26201;
  short unsigned int D.26198;
  stbtt_uint8 * D.26197;
  sizetype D.26196;
  sizetype D.26195;
  unsigned int D.26194;
  unsigned int D.26193;
  int D.26192;
  unsigned int D.26189;
  unsigned int D.26188;
  short unsigned int D.26187;
  stbtt_uint8 * D.26186;
  sizetype D.26185;
  sizetype D.26184;
  short unsigned int D.26183;
  stbtt_uint8 * D.26182;
  sizetype D.26181;
  sizetype D.26180;
  bool iftmp.560_2;
  int _3;
  sizetype _11;
  sizetype _12;
  stbtt_uint8 * _14;
  short unsigned int _17;
  sizetype _19;
  sizetype _20;
  stbtt_uint8 * _21;
  short unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  int _28;
  unsigned int _29;
  unsigned int _30;
  sizetype _32;
  sizetype _33;
  stbtt_uint8 * _34;
  short unsigned int _36;
  sizetype _40;
  stbtt_uint8 * _41;
  short unsigned int _43;
  sizetype _45;
  sizetype _46;
  stbtt_uint8 * _47;
  short unsigned int _49;
  sizetype _51;
  sizetype _52;
  stbtt_uint8 * _53;
  short unsigned int _55;
  sizetype _57;
  sizetype _58;
  stbtt_uint8 * _59;
  short unsigned int _61;
  sizetype _63;
  sizetype _64;
  stbtt_uint8 * _65;
  short unsigned int _67;
  sizetype _69;
  sizetype _70;
  sizetype _71;
  stbtt_uint8 * _72;
  int _77;
  sizetype _78;
  sizetype _79;
  stbtt_uint8 * _80;
  short unsigned int _82;
  int _83;
  sizetype _85;
  sizetype _86;
  stbtt_uint8 * _87;
  short unsigned int _89;
  int _90;
  sizetype _91;
  sizetype _92;
  stbtt_uint8 * _93;
  short unsigned int _95;
  int _96;
  sizetype _97;
  sizetype _98;
  stbtt_uint8 * _99;
  short unsigned int _101;
  int _102;
  bool iftmp.560_103;
  bool iftmp.560_104;
  bool retval.559_105;
  int _106;
  sizetype _107;
  sizetype _108;
  stbtt_uint8 * _109;
  short unsigned int _111;
  sizetype _113;
  sizetype _114;
  stbtt_uint8 * _115;
  short unsigned int _117;
  sizetype _119;
  stbtt_uint8 * _120;
  unsigned char _121;
  sizetype _123;
  sizetype _124;
  sizetype _125;
  stbtt_uint8 * _126;
  int _127;
  sizetype _128;
  stbtt_uint8 * _129;
  int _131;
  bool retval.561_132;
  int _133;
  int _134;
  int _135;

  <bb 2>:
  _11 = (sizetype) nm_10(D);
  _12 = _11 + 2;
  _14 = fc_13(D) + _12;
  _17 = ttUSHORT (_14);
  count_18 = (stbtt_int32) _17;
  _19 = (sizetype) nm_10(D);
  _20 = _19 + 4;
  _21 = fc_13(D) + _20;
  _23 = ttUSHORT (_21);
  _24 = (unsigned int) _23;
  _25 = _24 + nm_10(D);
  stringOffset_26 = (stbtt_int32) _25;
  i_27 = 0;

  <bb 3>:
  # i_1 = PHI <i_27(2), i_39(29)>
  if (i_1 >= count_18)
    goto <bb 30>;
  else
    goto <bb 4>;

  <bb 4>:
  _28 = i_1 * 12;
  _29 = (unsigned int) _28;
  _30 = _29 + nm_10(D);
  loc_31 = _30 + 6;
  _32 = (sizetype) loc_31;
  _33 = _32 + 6;
  _34 = fc_13(D) + _33;
  _36 = ttUSHORT (_34);
  id_37 = (stbtt_int32) _36;
  if (id_37 == target_id_38(D))
    goto <bb 5>;
  else
    goto <bb 29>;

  <bb 5>:
  _40 = (sizetype) loc_31;
  _41 = fc_13(D) + _40;
  _43 = ttUSHORT (_41);
  platform_44 = (stbtt_int32) _43;
  _45 = (sizetype) loc_31;
  _46 = _45 + 2;
  _47 = fc_13(D) + _46;
  _49 = ttUSHORT (_47);
  encoding_50 = (stbtt_int32) _49;
  _51 = (sizetype) loc_31;
  _52 = _51 + 4;
  _53 = fc_13(D) + _52;
  _55 = ttUSHORT (_53);
  language_56 = (stbtt_int32) _55;
  if (platform_44 == 0)
    goto <bb 10>;
  else
    goto <bb 6>;

  <bb 6>:
  if (platform_44 == 3)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  if (encoding_50 == 1)
    goto <bb 10>;
  else
    goto <bb 8>;

  <bb 8>:
  if (platform_44 == 3)
    goto <bb 9>;
  else
    goto <bb 28>;

  <bb 9>:
  if (encoding_50 == 10)
    goto <bb 10>;
  else
    goto <bb 28>;

  <bb 10>:
  _57 = (sizetype) loc_31;
  _58 = _57 + 8;
  _59 = fc_13(D) + _58;
  _61 = ttUSHORT (_59);
  slen_62 = (stbtt_int32) _61;
  _63 = (sizetype) loc_31;
  _64 = _63 + 10;
  _65 = fc_13(D) + _64;
  _67 = ttUSHORT (_65);
  off_68 = (stbtt_int32) _67;
  _69 = (sizetype) stringOffset_26;
  _70 = (sizetype) off_68;
  _71 = _69 + _70;
  _72 = fc_13(D) + _71;
  matchlen_76 = stbtt__CompareUTF8toUTF16_bigendian_prefix (name_73(D), nlen_74(D), _72, slen_62);
  if (matchlen_76 >= 0)
    goto <bb 11>;
  else
    goto <bb 28>;

  <bb 11>:
  _77 = i_1 + 1;
  if (_77 < count_18)
    goto <bb 12>;
  else
    goto <bb 17>;

  <bb 12>:
  _78 = (sizetype) loc_31;
  _79 = _78 + 18;
  _80 = fc_13(D) + _79;
  _82 = ttUSHORT (_80);
  _83 = (int) _82;
  if (_83 == next_id_84(D))
    goto <bb 13>;
  else
    goto <bb 17>;

  <bb 13>:
  _85 = (sizetype) loc_31;
  _86 = _85 + 12;
  _87 = fc_13(D) + _86;
  _89 = ttUSHORT (_87);
  _90 = (int) _89;
  if (_90 == platform_44)
    goto <bb 14>;
  else
    goto <bb 17>;

  <bb 14>:
  _91 = (sizetype) loc_31;
  _92 = _91 + 14;
  _93 = fc_13(D) + _92;
  _95 = ttUSHORT (_93);
  _96 = (int) _95;
  if (_96 == encoding_50)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 15>:
  _97 = (sizetype) loc_31;
  _98 = _97 + 16;
  _99 = fc_13(D) + _98;
  _101 = ttUSHORT (_99);
  _102 = (int) _101;
  if (_102 == language_56)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  iftmp.560_103 = 1;
  goto <bb 18>;

  <bb 17>:
  iftmp.560_104 = 0;

  <bb 18>:
  # iftmp.560_2 = PHI <iftmp.560_103(16), iftmp.560_104(17)>
  retval.559_105 = iftmp.560_2;
  if (retval.559_105 != 0)
    goto <bb 19>;
  else
    goto <bb 26>;

  <bb 19>:
  _107 = (sizetype) loc_31;
  _108 = _107 + 20;
  _109 = fc_13(D) + _108;
  _111 = ttUSHORT (_109);
  slen_112 = (stbtt_int32) _111;
  _113 = (sizetype) loc_31;
  _114 = _113 + 22;
  _115 = fc_13(D) + _114;
  _117 = ttUSHORT (_115);
  off_118 = (stbtt_int32) _117;
  if (slen_112 == 0)
    goto <bb 20>;
  else
    goto <bb 22>;

  <bb 20>:
  if (matchlen_76 == nlen_74(D))
    goto <bb 21>;
  else
    goto <bb 28>;

  <bb 21>:
  _134 = 1;
  goto <bb 31> (<L39>);

  <bb 22>:
  if (matchlen_76 < nlen_74(D))
    goto <bb 23>;
  else
    goto <bb 28>;

  <bb 23>:
  _119 = (sizetype) matchlen_76;
  _120 = name_73(D) + _119;
  _121 = *_120;
  if (_121 == 32)
    goto <bb 24>;
  else
    goto <bb 28>;

  <bb 24>:
  matchlen_122 = matchlen_76 + 1;
  _123 = (sizetype) stringOffset_26;
  _124 = (sizetype) off_118;
  _125 = _123 + _124;
  _126 = fc_13(D) + _125;
  _127 = nlen_74(D) - matchlen_122;
  _128 = (sizetype) matchlen_122;
  _129 = name_73(D) + _128;
  _131 = stbtt_CompareUTF8toUTF16_bigendian_internal (_129, _127, _126, slen_112);
  retval.561_132 = _131 != 0;
  if (retval.561_132 != 0)
    goto <bb 25>;
  else
    goto <bb 28>;

  <bb 25>:
  _133 = 1;
  goto <bb 31> (<L39>);

  <bb 26>:
  if (matchlen_76 == nlen_74(D))
    goto <bb 27>;
  else
    goto <bb 28>;

  <bb 27>:
  _106 = 1;
  goto <bb 31> (<L39>);

  <bb 28>:

  <bb 29>:
  i_39 = i_1 + 1;
  goto <bb 3>;

  <bb 30>:
  _135 = 0;

  # _3 = PHI <_134(21), _133(25), _106(27), _135(30)>
<L39>:
  return _3;

}



;; Function int stbtt__matches(stbtt_uint8*, stbtt_uint32, stbtt_uint8*, stbtt_int32) (_ZL14stbtt__matchesPhjS_i, funcdef_no=678, decl_uid=17614, cgraph_uid=577, symbol_order=577)

int stbtt__matches(stbtt_uint8*, stbtt_uint32, stbtt_uint8*, stbtt_int32) (stbtt_uint8 * fc, stbtt_uint32 offset, stbtt_uint8 * name, stbtt_int32 flags)
{
  stbtt_uint32 hd;
  stbtt_uint32 nm;
  stbtt_int32 nlen;
  int D.26350;
  bool retval.569;
  int D.26346;
  bool retval.568;
  int D.26342;
  bool retval.567;
  int D.26337;
  bool retval.566;
  int D.26333;
  bool retval.565;
  int D.26329;
  bool retval.564;
  int D.26320;
  int D.26319;
  int D.26318;
  short unsigned int D.26317;
  stbtt_uint8 * D.26316;
  sizetype D.26315;
  sizetype D.26314;
  bool retval.563;
  int D.26310;
  int D.26307;
  stbtt_uint8 * D.26306;
  sizetype D.26305;
  bool retval.562;
  long unsigned int D.26303;
  int _1;
  long unsigned int _7;
  sizetype _10;
  stbtt_uint8 * _12;
  int _14;
  bool retval.562_15;
  int _16;
  sizetype _20;
  sizetype _21;
  stbtt_uint8 * _22;
  short unsigned int _24;
  int _25;
  int _26;
  int _27;
  bool retval.563_28;
  int _29;
  int _32;
  int _34;
  bool retval.564_35;
  int _36;
  int _38;
  bool retval.565_39;
  int _40;
  int _42;
  bool retval.566_43;
  int _44;
  int _46;
  bool retval.567_47;
  int _48;
  int _50;
  bool retval.568_51;
  int _52;
  int _54;
  bool retval.569_55;
  int _56;
  int _57;

  <bb 2>:
  _7 = strlen (name_6(D));
  nlen_8 = (stbtt_int32) _7;
  _10 = (sizetype) offset_9(D);
  _12 = fc_11(D) + _10;
  _14 = stbtt__isfont (_12);
  retval.562_15 = _14 == 0;
  if (retval.562_15 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _16 = 0;
  goto <bb 23> (<L24>);

  <bb 4>:
  if (flags_17(D) != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  hd_19 = stbtt__find_table (fc_11(D), offset_9(D), "head");
  _20 = (sizetype) hd_19;
  _21 = _20 + 44;
  _22 = fc_11(D) + _21;
  _24 = ttUSHORT (_22);
  _25 = (int) _24;
  _26 = _25 ^ flags_17(D);
  _27 = _26 & 7;
  retval.563_28 = _27 != 0;
  if (retval.563_28 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _29 = 0;
  goto <bb 23> (<L24>);

  <bb 7>:
  nm_31 = stbtt__find_table (fc_11(D), offset_9(D), "name");
  if (nm_31 == 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  _32 = 0;
  goto <bb 23> (<L24>);

  <bb 9>:
  if (flags_17(D) != 0)
    goto <bb 10>;
  else
    goto <bb 16>;

  <bb 10>:
  _34 = stbtt__matchpair (fc_11(D), nm_31, name_6(D), nlen_8, 16, -1);
  retval.564_35 = _34 != 0;
  if (retval.564_35 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _36 = 1;
  goto <bb 23> (<L24>);

  <bb 12>:
  _38 = stbtt__matchpair (fc_11(D), nm_31, name_6(D), nlen_8, 1, -1);
  retval.565_39 = _38 != 0;
  if (retval.565_39 != 0)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _40 = 1;
  goto <bb 23> (<L24>);

  <bb 14>:
  _42 = stbtt__matchpair (fc_11(D), nm_31, name_6(D), nlen_8, 3, -1);
  retval.566_43 = _42 != 0;
  if (retval.566_43 != 0)
    goto <bb 15>;
  else
    goto <bb 22>;

  <bb 15>:
  _44 = 1;
  goto <bb 23> (<L24>);

  <bb 16>:
  _46 = stbtt__matchpair (fc_11(D), nm_31, name_6(D), nlen_8, 16, 17);
  retval.567_47 = _46 != 0;
  if (retval.567_47 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _48 = 1;
  goto <bb 23> (<L24>);

  <bb 18>:
  _50 = stbtt__matchpair (fc_11(D), nm_31, name_6(D), nlen_8, 1, 2);
  retval.568_51 = _50 != 0;
  if (retval.568_51 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _52 = 1;
  goto <bb 23> (<L24>);

  <bb 20>:
  _54 = stbtt__matchpair (fc_11(D), nm_31, name_6(D), nlen_8, 3, -1);
  retval.569_55 = _54 != 0;
  if (retval.569_55 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _56 = 1;
  goto <bb 23> (<L24>);

  <bb 22>:
  _57 = 0;

  # _1 = PHI <_16(3), _29(6), _32(8), _36(11), _40(13), _44(15), _48(17), _52(19), _56(21), _57(22)>
<L24>:
  return _1;

}



;; Function int stbtt_FindMatchingFont_internal(unsigned char*, char*, stbtt_int32) (_ZL31stbtt_FindMatchingFont_internalPhPci, funcdef_no=679, decl_uid=17622, cgraph_uid=578, symbol_order=578)

int stbtt_FindMatchingFont_internal(unsigned char*, char*, stbtt_int32) (unsigned char * font_collection, char * name_utf8, stbtt_int32 flags)
{
  stbtt_int32 off;
  stbtt_int32 i;
  int D.26360;
  unsigned int off.571;
  bool retval.570;
  int D.26357;
  int _2;
  unsigned int off.571_10;
  int _14;
  bool retval.570_15;
  int _17;
  int _18;

  <bb 2>:
  i_5 = 0;

  <bb 3>:
  # i_1 = PHI <i_5(2), i_16(7)>
  off_9 = stbtt_GetFontOffsetForIndex (font_collection_7(D), i_1);
  if (off_9 < 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _18 = off_9;
  goto <bb 8> (<L5>);

  <bb 5>:
  off.571_10 = (unsigned int) off_9;
  _14 = stbtt__matches (font_collection_7(D), off.571_10, name_utf8_11(D), flags_12(D));
  retval.570_15 = _14 != 0;
  if (retval.570_15 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _17 = off_9;
  goto <bb 8> (<L5>);

  <bb 7>:
  i_16 = i_1 + 1;
  goto <bb 3>;

  # _2 = PHI <_18(4), _17(6)>
<L5>:
  return _2;

}



;; Function int stbtt_BakeFontBitmap(const unsigned char*, int, float, unsigned char*, int, int, int, int, stbtt_bakedchar*) (stbtt_BakeFontBitmap, funcdef_no=680, decl_uid=15120, cgraph_uid=579, symbol_order=579)

int stbtt_BakeFontBitmap(const unsigned char*, int, float, unsigned char*, int, int, int, int, stbtt_bakedchar*) (const unsigned char * data, int offset, float pixel_height, unsigned char * pixels, int pw, int ph, int first_char, int num_chars, struct stbtt_bakedchar * chardata)
{
  int D.26366;
  int D.26364;
  int _12;
  int _13;

  <bb 2>:
  _12 = stbtt_BakeFontBitmap_internal (data_2(D), offset_3(D), pixel_height_4(D), pixels_5(D), pw_6(D), ph_7(D), first_char_8(D), num_chars_9(D), chardata_10(D));
  _13 = _12;

<L0>:
  return _13;

}



;; Function int stbtt_GetFontOffsetForIndex(const unsigned char*, int) (stbtt_GetFontOffsetForIndex, funcdef_no=681, decl_uid=15235, cgraph_uid=580, symbol_order=580)

int stbtt_GetFontOffsetForIndex(const unsigned char*, int) (const unsigned char * data, int index)
{
  int D.26367;
  int _5;

  <bb 2>:
  _5 = stbtt_GetFontOffsetForIndex_internal (data_2(D), index_3(D));

<L0>:
  return _5;

}



;; Function int stbtt_GetNumberOfFonts(const unsigned char*) (stbtt_GetNumberOfFonts, funcdef_no=682, decl_uid=15232, cgraph_uid=581, symbol_order=581)

int stbtt_GetNumberOfFonts(const unsigned char*) (const unsigned char * data)
{
  int D.26369;
  int _4;

  <bb 2>:
  _4 = stbtt_GetNumberOfFonts_internal (data_2(D));

<L0>:
  return _4;

}



;; Function int stbtt_InitFont(stbtt_fontinfo*, const unsigned char*, int) (stbtt_InitFont, funcdef_no=683, decl_uid=15259, cgraph_uid=582, symbol_order=582)

int stbtt_InitFont(stbtt_fontinfo*, const unsigned char*, int) (struct stbtt_fontinfo * info, const unsigned char * data, int offset)
{
  int D.26371;
  int _6;

  <bb 2>:
  _6 = stbtt_InitFont_internal (info_2(D), data_3(D), offset_4(D));

<L0>:
  return _6;

}



;; Function int stbtt_FindMatchingFont(const unsigned char*, const char*, int) (stbtt_FindMatchingFont, funcdef_no=684, decl_uid=15548, cgraph_uid=583, symbol_order=583)

int stbtt_FindMatchingFont(const unsigned char*, const char*, int) (const unsigned char * fontdata, const char * name, int flags)
{
  int D.26375;
  int D.26373;
  int _6;
  int _7;

  <bb 2>:
  _6 = stbtt_FindMatchingFont_internal (fontdata_2(D), name_3(D), flags_4(D));
  _7 = _6;

<L0>:
  return _7;

}



;; Function int stbtt_CompareUTF8toUTF16_bigendian(const char*, int, const char*, int) (stbtt_CompareUTF8toUTF16_bigendian, funcdef_no=685, decl_uid=15553, cgraph_uid=584, symbol_order=584)

int stbtt_CompareUTF8toUTF16_bigendian(const char*, int, const char*, int) (const char * s1, int len1, const char * s2, int len2)
{
  int D.26376;
  int _7;

  <bb 2>:
  _7 = stbtt_CompareUTF8toUTF16_bigendian_internal (s1_2(D), len1_3(D), s2_4(D), len2_5(D));

<L0>:
  return _7;

}



;; Function void ImGui::StyleColorsDark(ImGuiStyle*) (_ZN5ImGui15StyleColorsDarkEP10ImGuiStyle, funcdef_no=686, decl_uid=2446, cgraph_uid=585, symbol_order=585)

void ImGui::StyleColorsDark(ImGuiStyle*) (struct ImGuiStyle * dst)
{
  struct ImGuiStyle * D.26423;
  struct ImVec4 * colors;
  struct ImGuiStyle * style;
  struct ImVec4 D.17707;
  struct ImVec4 * D.26422;
  struct ImVec4 D.17706;
  struct ImVec4 * D.26421;
  struct ImVec4 D.17705;
  struct ImVec4 * D.26420;
  struct ImVec4 D.17704;
  struct ImVec4 * D.26419;
  struct ImVec4 D.17703;
  struct ImVec4 * D.26418;
  struct ImVec4 D.17702;
  struct ImVec4 * D.26417;
  struct ImVec4 D.17701;
  struct ImVec4 * D.26416;
  struct ImVec4 D.17700;
  struct ImVec4 * D.26415;
  struct ImVec4 D.17699;
  struct ImVec4 * D.26414;
  struct ImVec4 D.17698;
  struct ImVec4 * D.26413;
  struct ImVec4 D.17697;
  struct ImVec4 * D.26412;
  struct ImVec4 D.17696;
  struct ImVec4 * D.26411;
  struct ImVec4 D.17695;
  struct ImVec4 * D.26410;
  struct ImVec4 D.17694;
  struct ImVec4 * D.26409;
  struct ImVec4 * D.26408;
  struct ImVec4 D.17693;
  struct ImVec4 * D.26407;
  struct ImVec4 D.17692;
  struct ImVec4 * D.26406;
  struct ImVec4 D.17691;
  struct ImVec4 * D.26405;
  struct ImVec4 D.17690;
  struct ImVec4 * D.26404;
  struct ImVec4 D.17689;
  struct ImVec4 * D.26403;
  struct ImVec4 D.17688;
  struct ImVec4 * D.26402;
  struct ImVec4 D.17687;
  struct ImVec4 * D.26401;
  struct ImVec4 D.17686;
  struct ImVec4 * D.26400;
  struct ImVec4 D.17685;
  struct ImVec4 * D.26399;
  struct ImVec4 D.17684;
  struct ImVec4 * D.26398;
  struct ImVec4 D.17683;
  struct ImVec4 * D.26397;
  struct ImVec4 D.17682;
  struct ImVec4 * D.26396;
  struct ImVec4 D.17681;
  struct ImVec4 * D.26395;
  struct ImVec4 D.17680;
  struct ImVec4 * D.26394;
  struct ImVec4 D.17679;
  struct ImVec4 * D.26393;
  struct ImVec4 D.17678;
  struct ImVec4 * D.26392;
  struct ImVec4 D.17677;
  struct ImVec4 * D.26391;
  struct ImVec4 D.17676;
  struct ImVec4 * D.26390;
  struct ImVec4 D.17675;
  struct ImVec4 * D.26389;
  struct ImVec4 D.17674;
  struct ImVec4 * D.26388;
  struct ImVec4 D.17673;
  struct ImVec4 * D.26387;
  struct ImVec4 D.17672;
  struct ImVec4 * D.26386;
  struct ImVec4 D.17671;
  struct ImVec4 * D.26385;
  struct ImVec4 D.17670;
  struct ImVec4 * D.26384;
  struct ImVec4 D.17669;
  struct ImVec4 * D.26383;
  struct ImVec4 D.17668;
  struct ImVec4 * D.26382;
  struct ImVec4 D.17667;
  struct ImGuiStyle * iftmp.572;
  struct ImGuiStyle * iftmp.572_1;
  struct ImGuiStyle * _6;
  struct ImGuiStyle * iftmp.572_7;
  struct ImGuiStyle * iftmp.572_8;
  struct ImVec4 * _14;
  struct ImVec4 * _18;
  struct ImVec4 * _22;
  struct ImVec4 * _26;
  struct ImVec4 * _30;
  struct ImVec4 * _34;
  struct ImVec4 * _38;
  struct ImVec4 * _42;
  struct ImVec4 * _46;
  struct ImVec4 * _50;
  struct ImVec4 * _54;
  struct ImVec4 * _58;
  struct ImVec4 * _62;
  struct ImVec4 * _66;
  struct ImVec4 * _70;
  struct ImVec4 * _74;
  struct ImVec4 * _78;
  struct ImVec4 * _82;
  struct ImVec4 * _86;
  struct ImVec4 * _90;
  struct ImVec4 * _94;
  struct ImVec4 * _98;
  struct ImVec4 * _102;
  struct ImVec4 * _106;
  struct ImVec4 * _110;
  struct ImVec4 * _114;
  struct ImVec4 * _118;
  struct ImVec4 * _120;
  struct ImVec4 * _124;
  struct ImVec4 * _128;
  struct ImVec4 * _132;
  struct ImVec4 * _136;
  struct ImVec4 * _140;
  struct ImVec4 * _144;
  struct ImVec4 * _148;
  struct ImVec4 * _152;
  struct ImVec4 * _156;
  struct ImVec4 * _160;
  struct ImVec4 * _164;
  struct ImVec4 * _168;
  struct ImVec4 * _172;

  <bb 2>:
  if (dst_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = ImGui::GetStyle ();
  iftmp.572_7 = _6;
  goto <bb 5>;

  <bb 4>:
  iftmp.572_8 = dst_3(D);

  <bb 5>:
  # iftmp.572_1 = PHI <iftmp.572_7(3), iftmp.572_8(4)>
  style_9 = iftmp.572_1;
  colors_10 = &style_9->Colors;
  ImVec4::ImVec4 (&D.17667, 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0);
  *colors_10 = D.17667;
  D.17667 ={v} {CLOBBER};
  _14 = colors_10 + 16;
  ImVec4::ImVec4 (&D.17668, 5.0e-1, 5.0e-1, 5.0e-1, 1.0e+0);
  *_14 = D.17668;
  D.17668 ={v} {CLOBBER};
  _18 = colors_10 + 32;
  ImVec4::ImVec4 (&D.17669, 5.99999986588954925537109375e-2, 5.99999986588954925537109375e-2, 5.99999986588954925537109375e-2, 9.39999997615814208984375e-1);
  *_18 = D.17669;
  D.17669 ={v} {CLOBBER};
  _22 = colors_10 + 48;
  ImVec4::ImVec4 (&D.17670, 1.0e+0, 1.0e+0, 1.0e+0, 0.0);
  *_22 = D.17670;
  D.17670 ={v} {CLOBBER};
  _26 = colors_10 + 64;
  ImVec4::ImVec4 (&D.17671, 7.999999821186065673828125e-2, 7.999999821186065673828125e-2, 7.999999821186065673828125e-2, 9.39999997615814208984375e-1);
  *_26 = D.17671;
  D.17671 ={v} {CLOBBER};
  _30 = colors_10 + 80;
  ImVec4::ImVec4 (&D.17672, 4.30000007152557373046875e-1, 4.30000007152557373046875e-1, 5.0e-1, 5.0e-1);
  *_30 = D.17672;
  D.17672 ={v} {CLOBBER};
  _34 = colors_10 + 96;
  ImVec4::ImVec4 (&D.17673, 0.0, 0.0, 0.0, 0.0);
  *_34 = D.17673;
  D.17673 ={v} {CLOBBER};
  _38 = colors_10 + 112;
  ImVec4::ImVec4 (&D.17674, 1.599999964237213134765625e-1, 2.899999916553497314453125e-1, 4.799999892711639404296875e-1, 5.40000021457672119140625e-1);
  *_38 = D.17674;
  D.17674 ={v} {CLOBBER};
  _42 = colors_10 + 128;
  ImVec4::ImVec4 (&D.17675, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 4.000000059604644775390625e-1);
  *_42 = D.17675;
  D.17675 ={v} {CLOBBER};
  _46 = colors_10 + 144;
  ImVec4::ImVec4 (&D.17676, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 6.70000016689300537109375e-1);
  *_46 = D.17676;
  D.17676 ={v} {CLOBBER};
  _50 = colors_10 + 160;
  ImVec4::ImVec4 (&D.17677, 3.9999999105930328369140625e-2, 3.9999999105930328369140625e-2, 3.9999999105930328369140625e-2, 1.0e+0);
  *_50 = D.17677;
  D.17677 ={v} {CLOBBER};
  _54 = colors_10 + 176;
  ImVec4::ImVec4 (&D.17678, 1.599999964237213134765625e-1, 2.899999916553497314453125e-1, 4.799999892711639404296875e-1, 1.0e+0);
  *_54 = D.17678;
  D.17678 ={v} {CLOBBER};
  _58 = colors_10 + 192;
  ImVec4::ImVec4 (&D.17679, 0.0, 0.0, 0.0, 5.099999904632568359375e-1);
  *_58 = D.17679;
  D.17679 ={v} {CLOBBER};
  _62 = colors_10 + 208;
  ImVec4::ImVec4 (&D.17680, 1.4000000059604644775390625e-1, 1.4000000059604644775390625e-1, 1.4000000059604644775390625e-1, 1.0e+0);
  *_62 = D.17680;
  D.17680 ={v} {CLOBBER};
  _66 = colors_10 + 224;
  ImVec4::ImVec4 (&D.17681, 1.99999995529651641845703125e-2, 1.99999995529651641845703125e-2, 1.99999995529651641845703125e-2, 5.299999713897705078125e-1);
  *_66 = D.17681;
  D.17681 ={v} {CLOBBER};
  _70 = colors_10 + 240;
  ImVec4::ImVec4 (&D.17682, 3.10000002384185791015625e-1, 3.10000002384185791015625e-1, 3.10000002384185791015625e-1, 1.0e+0);
  *_70 = D.17682;
  D.17682 ={v} {CLOBBER};
  _74 = colors_10 + 256;
  ImVec4::ImVec4 (&D.17683, 4.099999964237213134765625e-1, 4.099999964237213134765625e-1, 4.099999964237213134765625e-1, 1.0e+0);
  *_74 = D.17683;
  D.17683 ={v} {CLOBBER};
  _78 = colors_10 + 272;
  ImVec4::ImVec4 (&D.17684, 5.099999904632568359375e-1, 5.099999904632568359375e-1, 5.099999904632568359375e-1, 1.0e+0);
  *_78 = D.17684;
  D.17684 ={v} {CLOBBER};
  _82 = colors_10 + 288;
  ImVec4::ImVec4 (&D.17685, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 1.0e+0);
  *_82 = D.17685;
  D.17685 ={v} {CLOBBER};
  _86 = colors_10 + 304;
  ImVec4::ImVec4 (&D.17686, 2.3999999463558197021484375e-1, 5.19999980926513671875e-1, 8.7999999523162841796875e-1, 1.0e+0);
  *_86 = D.17686;
  D.17686 ={v} {CLOBBER};
  _90 = colors_10 + 320;
  ImVec4::ImVec4 (&D.17687, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 1.0e+0);
  *_90 = D.17687;
  D.17687 ={v} {CLOBBER};
  _94 = colors_10 + 336;
  ImVec4::ImVec4 (&D.17688, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 4.000000059604644775390625e-1);
  *_94 = D.17688;
  D.17688 ={v} {CLOBBER};
  _98 = colors_10 + 352;
  ImVec4::ImVec4 (&D.17689, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 1.0e+0);
  *_98 = D.17689;
  D.17689 ={v} {CLOBBER};
  _102 = colors_10 + 368;
  ImVec4::ImVec4 (&D.17690, 5.99999986588954925537109375e-2, 5.299999713897705078125e-1, 9.80000019073486328125e-1, 1.0e+0);
  *_102 = D.17690;
  D.17690 ={v} {CLOBBER};
  _106 = colors_10 + 384;
  ImVec4::ImVec4 (&D.17691, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 3.10000002384185791015625e-1);
  *_106 = D.17691;
  D.17691 ={v} {CLOBBER};
  _110 = colors_10 + 400;
  ImVec4::ImVec4 (&D.17692, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 8.00000011920928955078125e-1);
  *_110 = D.17692;
  D.17692 ={v} {CLOBBER};
  _114 = colors_10 + 416;
  ImVec4::ImVec4 (&D.17693, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 1.0e+0);
  *_114 = D.17693;
  D.17693 ={v} {CLOBBER};
  _118 = colors_10 + 432;
  *_118 = MEM[(const struct ImVec4 &)colors_10 + 80];
  _120 = colors_10 + 448;
  ImVec4::ImVec4 (&D.17694, 1.00000001490116119384765625e-1, 4.000000059604644775390625e-1, 7.5e-1, 7.799999713897705078125e-1);
  *_120 = D.17694;
  D.17694 ={v} {CLOBBER};
  _124 = colors_10 + 464;
  ImVec4::ImVec4 (&D.17695, 1.00000001490116119384765625e-1, 4.000000059604644775390625e-1, 7.5e-1, 1.0e+0);
  *_124 = D.17695;
  D.17695 ={v} {CLOBBER};
  _128 = colors_10 + 480;
  ImVec4::ImVec4 (&D.17696, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 2.5e-1);
  *_128 = D.17696;
  D.17696 ={v} {CLOBBER};
  _132 = colors_10 + 496;
  ImVec4::ImVec4 (&D.17697, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 6.70000016689300537109375e-1);
  *_132 = D.17697;
  D.17697 ={v} {CLOBBER};
  _136 = colors_10 + 512;
  ImVec4::ImVec4 (&D.17698, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 9.49999988079071044921875e-1);
  *_136 = D.17698;
  D.17698 ={v} {CLOBBER};
  _140 = colors_10 + 528;
  ImVec4::ImVec4 (&D.17699, 6.1000001430511474609375e-1, 6.1000001430511474609375e-1, 6.1000001430511474609375e-1, 1.0e+0);
  *_140 = D.17699;
  D.17699 ={v} {CLOBBER};
  _144 = colors_10 + 544;
  ImVec4::ImVec4 (&D.17700, 1.0e+0, 4.30000007152557373046875e-1, 3.499999940395355224609375e-1, 1.0e+0);
  *_144 = D.17700;
  D.17700 ={v} {CLOBBER};
  _148 = colors_10 + 560;
  ImVec4::ImVec4 (&D.17701, 8.9999997615814208984375e-1, 6.99999988079071044921875e-1, 0.0, 1.0e+0);
  *_148 = D.17701;
  D.17701 ={v} {CLOBBER};
  _152 = colors_10 + 576;
  ImVec4::ImVec4 (&D.17702, 1.0e+0, 6.0000002384185791015625e-1, 0.0, 1.0e+0);
  *_152 = D.17702;
  D.17702 ={v} {CLOBBER};
  _156 = colors_10 + 592;
  ImVec4::ImVec4 (&D.17703, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 3.499999940395355224609375e-1);
  *_156 = D.17703;
  D.17703 ={v} {CLOBBER};
  _160 = colors_10 + 608;
  ImVec4::ImVec4 (&D.17704, 8.00000011920928955078125e-1, 8.00000011920928955078125e-1, 8.00000011920928955078125e-1, 3.499999940395355224609375e-1);
  *_160 = D.17704;
  D.17704 ={v} {CLOBBER};
  _164 = colors_10 + 624;
  ImVec4::ImVec4 (&D.17705, 1.0e+0, 1.0e+0, 0.0, 8.9999997615814208984375e-1);
  *_164 = D.17705;
  D.17705 ={v} {CLOBBER};
  _168 = colors_10 + 640;
  ImVec4::ImVec4 (&D.17706, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 1.0e+0);
  *_168 = D.17706;
  D.17706 ={v} {CLOBBER};
  _172 = colors_10 + 656;
  ImVec4::ImVec4 (&D.17707, 1.0e+0, 1.0e+0, 1.0e+0, 6.99999988079071044921875e-1);
  *_172 = D.17707;
  D.17707 ={v} {CLOBBER};
  return;

}



;; Function void ImGui::StyleColorsClassic(ImGuiStyle*) (_ZN5ImGui18StyleColorsClassicEP10ImGuiStyle, funcdef_no=687, decl_uid=2448, cgraph_uid=586, symbol_order=586)

void ImGui::StyleColorsClassic(ImGuiStyle*) (struct ImGuiStyle * dst)
{
  struct ImGuiStyle * D.26469;
  struct ImVec4 * colors;
  struct ImGuiStyle * style;
  struct ImVec4 D.17753;
  struct ImVec4 * D.26468;
  struct ImVec4 * D.26467;
  struct ImVec4 D.17752;
  struct ImVec4 * D.26466;
  struct ImVec4 D.17751;
  struct ImVec4 * D.26465;
  struct ImVec4 D.17750;
  struct ImVec4 * D.26464;
  struct ImVec4 D.17749;
  struct ImVec4 * D.26463;
  struct ImVec4 D.17748;
  struct ImVec4 * D.26462;
  struct ImVec4 D.17747;
  struct ImVec4 * D.26461;
  struct ImVec4 D.17746;
  struct ImVec4 * D.26460;
  struct ImVec4 D.17745;
  struct ImVec4 * D.26459;
  struct ImVec4 D.17744;
  struct ImVec4 * D.26458;
  struct ImVec4 D.17743;
  struct ImVec4 * D.26457;
  struct ImVec4 D.17742;
  struct ImVec4 * D.26456;
  struct ImVec4 D.17741;
  struct ImVec4 * D.26455;
  struct ImVec4 D.17740;
  struct ImVec4 * D.26454;
  struct ImVec4 D.17739;
  struct ImVec4 * D.26453;
  struct ImVec4 D.17738;
  struct ImVec4 * D.26452;
  struct ImVec4 D.17737;
  struct ImVec4 * D.26451;
  struct ImVec4 D.17736;
  struct ImVec4 * D.26450;
  struct ImVec4 D.17735;
  struct ImVec4 * D.26449;
  struct ImVec4 D.17734;
  struct ImVec4 * D.26448;
  struct ImVec4 D.17733;
  struct ImVec4 * D.26447;
  struct ImVec4 D.17732;
  struct ImVec4 * D.26446;
  struct ImVec4 D.17731;
  struct ImVec4 * D.26445;
  struct ImVec4 D.17730;
  struct ImVec4 * D.26444;
  struct ImVec4 D.17729;
  struct ImVec4 * D.26443;
  struct ImVec4 D.17728;
  struct ImVec4 * D.26442;
  struct ImVec4 D.17727;
  struct ImVec4 * D.26441;
  struct ImVec4 D.17726;
  struct ImVec4 * D.26440;
  struct ImVec4 D.17725;
  struct ImVec4 * D.26439;
  struct ImVec4 D.17724;
  struct ImVec4 * D.26438;
  struct ImVec4 D.17723;
  struct ImVec4 * D.26437;
  struct ImVec4 D.17722;
  struct ImVec4 * D.26436;
  struct ImVec4 D.17721;
  struct ImVec4 * D.26435;
  struct ImVec4 D.17720;
  struct ImVec4 * D.26434;
  struct ImVec4 D.17719;
  struct ImVec4 * D.26433;
  struct ImVec4 D.17718;
  struct ImVec4 * D.26432;
  struct ImVec4 D.17717;
  struct ImVec4 * D.26431;
  struct ImVec4 D.17716;
  struct ImVec4 * D.26430;
  struct ImVec4 D.17715;
  struct ImVec4 * D.26429;
  struct ImVec4 D.17714;
  struct ImVec4 * D.26428;
  struct ImVec4 D.17713;
  struct ImGuiStyle * iftmp.573;
  struct ImGuiStyle * iftmp.573_1;
  struct ImGuiStyle * _6;
  struct ImGuiStyle * iftmp.573_7;
  struct ImGuiStyle * iftmp.573_8;
  struct ImVec4 * _14;
  struct ImVec4 * _18;
  struct ImVec4 * _22;
  struct ImVec4 * _26;
  struct ImVec4 * _30;
  struct ImVec4 * _34;
  struct ImVec4 * _38;
  struct ImVec4 * _42;
  struct ImVec4 * _46;
  struct ImVec4 * _50;
  struct ImVec4 * _54;
  struct ImVec4 * _58;
  struct ImVec4 * _62;
  struct ImVec4 * _66;
  struct ImVec4 * _70;
  struct ImVec4 * _74;
  struct ImVec4 * _78;
  struct ImVec4 * _82;
  struct ImVec4 * _86;
  struct ImVec4 * _90;
  struct ImVec4 * _94;
  struct ImVec4 * _98;
  struct ImVec4 * _102;
  struct ImVec4 * _106;
  struct ImVec4 * _110;
  struct ImVec4 * _114;
  struct ImVec4 * _118;
  struct ImVec4 * _122;
  struct ImVec4 * _126;
  struct ImVec4 * _130;
  struct ImVec4 * _134;
  struct ImVec4 * _138;
  struct ImVec4 * _142;
  struct ImVec4 * _146;
  struct ImVec4 * _150;
  struct ImVec4 * _154;
  struct ImVec4 * _158;
  struct ImVec4 * _162;
  struct ImVec4 * _166;
  struct ImVec4 * _170;
  struct ImVec4 * _172;

  <bb 2>:
  if (dst_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = ImGui::GetStyle ();
  iftmp.573_7 = _6;
  goto <bb 5>;

  <bb 4>:
  iftmp.573_8 = dst_3(D);

  <bb 5>:
  # iftmp.573_1 = PHI <iftmp.573_7(3), iftmp.573_8(4)>
  style_9 = iftmp.573_1;
  colors_10 = &style_9->Colors;
  ImVec4::ImVec4 (&D.17713, 8.9999997615814208984375e-1, 8.9999997615814208984375e-1, 8.9999997615814208984375e-1, 1.0e+0);
  *colors_10 = D.17713;
  D.17713 ={v} {CLOBBER};
  _14 = colors_10 + 16;
  ImVec4::ImVec4 (&D.17714, 6.0000002384185791015625e-1, 6.0000002384185791015625e-1, 6.0000002384185791015625e-1, 1.0e+0);
  *_14 = D.17714;
  D.17714 ={v} {CLOBBER};
  _18 = colors_10 + 32;
  ImVec4::ImVec4 (&D.17715, 0.0, 0.0, 0.0, 6.99999988079071044921875e-1);
  *_18 = D.17715;
  D.17715 ={v} {CLOBBER};
  _22 = colors_10 + 48;
  ImVec4::ImVec4 (&D.17716, 0.0, 0.0, 0.0, 0.0);
  *_22 = D.17716;
  D.17716 ={v} {CLOBBER};
  _26 = colors_10 + 64;
  ImVec4::ImVec4 (&D.17717, 1.0999999940395355224609375e-1, 1.0999999940395355224609375e-1, 1.4000000059604644775390625e-1, 9.20000016689300537109375e-1);
  *_26 = D.17717;
  D.17717 ={v} {CLOBBER};
  _30 = colors_10 + 80;
  ImVec4::ImVec4 (&D.17718, 5.0e-1, 5.0e-1, 5.0e-1, 5.0e-1);
  *_30 = D.17718;
  D.17718 ={v} {CLOBBER};
  _34 = colors_10 + 96;
  ImVec4::ImVec4 (&D.17719, 0.0, 0.0, 0.0, 0.0);
  *_34 = D.17719;
  D.17719 ={v} {CLOBBER};
  _38 = colors_10 + 112;
  ImVec4::ImVec4 (&D.17720, 4.30000007152557373046875e-1, 4.30000007152557373046875e-1, 4.30000007152557373046875e-1, 3.8999998569488525390625e-1);
  *_38 = D.17720;
  D.17720 ={v} {CLOBBER};
  _42 = colors_10 + 128;
  ImVec4::ImVec4 (&D.17721, 4.699999988079071044921875e-1, 4.699999988079071044921875e-1, 6.89999997615814208984375e-1, 4.000000059604644775390625e-1);
  *_42 = D.17721;
  D.17721 ={v} {CLOBBER};
  _46 = colors_10 + 144;
  ImVec4::ImVec4 (&D.17722, 4.199999868869781494140625e-1, 4.099999964237213134765625e-1, 6.3999998569488525390625e-1, 6.89999997615814208984375e-1);
  *_46 = D.17722;
  D.17722 ={v} {CLOBBER};
  _50 = colors_10 + 160;
  ImVec4::ImVec4 (&D.17723, 2.700000107288360595703125e-1, 2.700000107288360595703125e-1, 5.40000021457672119140625e-1, 8.29999983310699462890625e-1);
  *_50 = D.17723;
  D.17723 ={v} {CLOBBER};
  _54 = colors_10 + 176;
  ImVec4::ImVec4 (&D.17724, 3.19999992847442626953125e-1, 3.19999992847442626953125e-1, 6.2999999523162841796875e-1, 8.7000000476837158203125e-1);
  *_54 = D.17724;
  D.17724 ={v} {CLOBBER};
  _58 = colors_10 + 192;
  ImVec4::ImVec4 (&D.17725, 4.000000059604644775390625e-1, 4.000000059604644775390625e-1, 8.00000011920928955078125e-1, 2.0000000298023223876953125e-1);
  *_58 = D.17725;
  D.17725 ={v} {CLOBBER};
  _62 = colors_10 + 208;
  ImVec4::ImVec4 (&D.17726, 4.000000059604644775390625e-1, 4.000000059604644775390625e-1, 5.50000011920928955078125e-1, 8.00000011920928955078125e-1);
  *_62 = D.17726;
  D.17726 ={v} {CLOBBER};
  _66 = colors_10 + 224;
  ImVec4::ImVec4 (&D.17727, 2.0000000298023223876953125e-1, 2.5e-1, 3.00000011920928955078125e-1, 6.0000002384185791015625e-1);
  *_66 = D.17727;
  D.17727 ={v} {CLOBBER};
  _70 = colors_10 + 240;
  ImVec4::ImVec4 (&D.17728, 4.000000059604644775390625e-1, 4.000000059604644775390625e-1, 8.00000011920928955078125e-1, 3.00000011920928955078125e-1);
  *_70 = D.17728;
  D.17728 ={v} {CLOBBER};
  _74 = colors_10 + 256;
  ImVec4::ImVec4 (&D.17729, 4.000000059604644775390625e-1, 4.000000059604644775390625e-1, 8.00000011920928955078125e-1, 4.000000059604644775390625e-1);
  *_74 = D.17729;
  D.17729 ={v} {CLOBBER};
  _78 = colors_10 + 272;
  ImVec4::ImVec4 (&D.17730, 4.099999964237213134765625e-1, 3.8999998569488525390625e-1, 8.00000011920928955078125e-1, 6.0000002384185791015625e-1);
  *_78 = D.17730;
  D.17730 ={v} {CLOBBER};
  _82 = colors_10 + 288;
  ImVec4::ImVec4 (&D.17731, 8.9999997615814208984375e-1, 8.9999997615814208984375e-1, 8.9999997615814208984375e-1, 5.0e-1);
  *_82 = D.17731;
  D.17731 ={v} {CLOBBER};
  _86 = colors_10 + 304;
  ImVec4::ImVec4 (&D.17732, 1.0e+0, 1.0e+0, 1.0e+0, 3.00000011920928955078125e-1);
  *_86 = D.17732;
  D.17732 ={v} {CLOBBER};
  _90 = colors_10 + 320;
  ImVec4::ImVec4 (&D.17733, 4.099999964237213134765625e-1, 3.8999998569488525390625e-1, 8.00000011920928955078125e-1, 6.0000002384185791015625e-1);
  *_90 = D.17733;
  D.17733 ={v} {CLOBBER};
  _94 = colors_10 + 336;
  ImVec4::ImVec4 (&D.17734, 3.499999940395355224609375e-1, 4.000000059604644775390625e-1, 6.1000001430511474609375e-1, 6.2000000476837158203125e-1);
  *_94 = D.17734;
  D.17734 ={v} {CLOBBER};
  _98 = colors_10 + 352;
  ImVec4::ImVec4 (&D.17735, 4.000000059604644775390625e-1, 4.799999892711639404296875e-1, 7.09999978542327880859375e-1, 7.90000021457672119140625e-1);
  *_98 = D.17735;
  D.17735 ={v} {CLOBBER};
  _102 = colors_10 + 368;
  ImVec4::ImVec4 (&D.17736, 4.600000083446502685546875e-1, 5.40000021457672119140625e-1, 8.00000011920928955078125e-1, 1.0e+0);
  *_102 = D.17736;
  D.17736 ={v} {CLOBBER};
  _106 = colors_10 + 384;
  ImVec4::ImVec4 (&D.17737, 4.000000059604644775390625e-1, 4.000000059604644775390625e-1, 8.9999997615814208984375e-1, 4.49999988079071044921875e-1);
  *_106 = D.17737;
  D.17737 ={v} {CLOBBER};
  _110 = colors_10 + 400;
  ImVec4::ImVec4 (&D.17738, 4.49999988079071044921875e-1, 4.49999988079071044921875e-1, 8.9999997615814208984375e-1, 8.00000011920928955078125e-1);
  *_110 = D.17738;
  D.17738 ={v} {CLOBBER};
  _114 = colors_10 + 416;
  ImVec4::ImVec4 (&D.17739, 5.299999713897705078125e-1, 5.299999713897705078125e-1, 8.7000000476837158203125e-1, 8.00000011920928955078125e-1);
  *_114 = D.17739;
  D.17739 ={v} {CLOBBER};
  _118 = colors_10 + 432;
  ImVec4::ImVec4 (&D.17740, 5.0e-1, 5.0e-1, 5.0e-1, 1.0e+0);
  *_118 = D.17740;
  D.17740 ={v} {CLOBBER};
  _122 = colors_10 + 448;
  ImVec4::ImVec4 (&D.17741, 6.0000002384185791015625e-1, 6.0000002384185791015625e-1, 6.99999988079071044921875e-1, 1.0e+0);
  *_122 = D.17741;
  D.17741 ={v} {CLOBBER};
  _126 = colors_10 + 464;
  ImVec4::ImVec4 (&D.17742, 6.99999988079071044921875e-1, 6.99999988079071044921875e-1, 8.9999997615814208984375e-1, 1.0e+0);
  *_126 = D.17742;
  D.17742 ={v} {CLOBBER};
  _130 = colors_10 + 480;
  ImVec4::ImVec4 (&D.17743, 1.0e+0, 1.0e+0, 1.0e+0, 1.599999964237213134765625e-1);
  *_130 = D.17743;
  D.17743 ={v} {CLOBBER};
  _134 = colors_10 + 496;
  ImVec4::ImVec4 (&D.17744, 7.799999713897705078125e-1, 8.19999992847442626953125e-1, 1.0e+0, 6.0000002384185791015625e-1);
  *_134 = D.17744;
  D.17744 ={v} {CLOBBER};
  _138 = colors_10 + 512;
  ImVec4::ImVec4 (&D.17745, 7.799999713897705078125e-1, 8.19999992847442626953125e-1, 1.0e+0, 8.9999997615814208984375e-1);
  *_138 = D.17745;
  D.17745 ={v} {CLOBBER};
  _142 = colors_10 + 528;
  ImVec4::ImVec4 (&D.17746, 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0);
  *_142 = D.17746;
  D.17746 ={v} {CLOBBER};
  _146 = colors_10 + 544;
  ImVec4::ImVec4 (&D.17747, 8.9999997615814208984375e-1, 6.99999988079071044921875e-1, 0.0, 1.0e+0);
  *_146 = D.17747;
  D.17747 ={v} {CLOBBER};
  _150 = colors_10 + 560;
  ImVec4::ImVec4 (&D.17748, 8.9999997615814208984375e-1, 6.99999988079071044921875e-1, 0.0, 1.0e+0);
  *_150 = D.17748;
  D.17748 ={v} {CLOBBER};
  _154 = colors_10 + 576;
  ImVec4::ImVec4 (&D.17749, 1.0e+0, 6.0000002384185791015625e-1, 0.0, 1.0e+0);
  *_154 = D.17749;
  D.17749 ={v} {CLOBBER};
  _158 = colors_10 + 592;
  ImVec4::ImVec4 (&D.17750, 0.0, 0.0, 1.0e+0, 3.499999940395355224609375e-1);
  *_158 = D.17750;
  D.17750 ={v} {CLOBBER};
  _162 = colors_10 + 608;
  ImVec4::ImVec4 (&D.17751, 2.0000000298023223876953125e-1, 2.0000000298023223876953125e-1, 2.0000000298023223876953125e-1, 3.499999940395355224609375e-1);
  *_162 = D.17751;
  D.17751 ={v} {CLOBBER};
  _166 = colors_10 + 624;
  ImVec4::ImVec4 (&D.17752, 1.0e+0, 1.0e+0, 0.0, 8.9999997615814208984375e-1);
  *_166 = D.17752;
  D.17752 ={v} {CLOBBER};
  _170 = colors_10 + 640;
  *_170 = MEM[(const struct ImVec4 &)colors_10 + 400];
  _172 = colors_10 + 656;
  ImVec4::ImVec4 (&D.17753, 1.0e+0, 1.0e+0, 1.0e+0, 6.99999988079071044921875e-1);
  *_172 = D.17753;
  D.17753 ={v} {CLOBBER};
  return;

}



;; Function void ImGui::StyleColorsLight(ImGuiStyle*) (_ZN5ImGui16StyleColorsLightEP10ImGuiStyle, funcdef_no=688, decl_uid=2450, cgraph_uid=587, symbol_order=587)

void ImGui::StyleColorsLight(ImGuiStyle*) (struct ImGuiStyle * dst)
{
  struct ImGuiStyle * D.26515;
  struct ImVec4 * colors;
  struct ImGuiStyle * style;
  struct ImVec4 D.17799;
  struct ImVec4 * D.26514;
  struct ImVec4 * D.26513;
  struct ImVec4 D.17798;
  struct ImVec4 * D.26512;
  struct ImVec4 D.17797;
  struct ImVec4 * D.26511;
  struct ImVec4 D.17796;
  struct ImVec4 * D.26510;
  struct ImVec4 D.17795;
  struct ImVec4 * D.26509;
  struct ImVec4 D.17794;
  struct ImVec4 * D.26508;
  struct ImVec4 D.17793;
  struct ImVec4 * D.26507;
  struct ImVec4 D.17792;
  struct ImVec4 * D.26506;
  struct ImVec4 D.17791;
  struct ImVec4 * D.26505;
  struct ImVec4 D.17790;
  struct ImVec4 * D.26504;
  struct ImVec4 D.17789;
  struct ImVec4 * D.26503;
  struct ImVec4 D.17788;
  struct ImVec4 * D.26502;
  struct ImVec4 D.17787;
  struct ImVec4 * D.26501;
  struct ImVec4 D.17786;
  struct ImVec4 * D.26500;
  struct ImVec4 D.17785;
  struct ImVec4 * D.26499;
  struct ImVec4 D.17784;
  struct ImVec4 * D.26498;
  struct ImVec4 D.17783;
  struct ImVec4 * D.26497;
  struct ImVec4 D.17782;
  struct ImVec4 * D.26496;
  struct ImVec4 D.17781;
  struct ImVec4 * D.26495;
  struct ImVec4 D.17780;
  struct ImVec4 * D.26494;
  struct ImVec4 D.17779;
  struct ImVec4 * D.26493;
  struct ImVec4 D.17778;
  struct ImVec4 * D.26492;
  struct ImVec4 D.17777;
  struct ImVec4 * D.26491;
  struct ImVec4 D.17776;
  struct ImVec4 * D.26490;
  struct ImVec4 D.17775;
  struct ImVec4 * D.26489;
  struct ImVec4 D.17774;
  struct ImVec4 * D.26488;
  struct ImVec4 D.17773;
  struct ImVec4 * D.26487;
  struct ImVec4 D.17772;
  struct ImVec4 * D.26486;
  struct ImVec4 D.17771;
  struct ImVec4 * D.26485;
  struct ImVec4 D.17770;
  struct ImVec4 * D.26484;
  struct ImVec4 D.17769;
  struct ImVec4 * D.26483;
  struct ImVec4 D.17768;
  struct ImVec4 * D.26482;
  struct ImVec4 D.17767;
  struct ImVec4 * D.26481;
  struct ImVec4 D.17766;
  struct ImVec4 * D.26480;
  struct ImVec4 D.17765;
  struct ImVec4 * D.26479;
  struct ImVec4 D.17764;
  struct ImVec4 * D.26478;
  struct ImVec4 D.17763;
  struct ImVec4 * D.26477;
  struct ImVec4 D.17762;
  struct ImVec4 * D.26476;
  struct ImVec4 D.17761;
  struct ImVec4 * D.26475;
  struct ImVec4 D.17760;
  struct ImVec4 * D.26474;
  struct ImVec4 D.17759;
  struct ImGuiStyle * iftmp.574;
  struct ImGuiStyle * iftmp.574_1;
  struct ImGuiStyle * _6;
  struct ImGuiStyle * iftmp.574_7;
  struct ImGuiStyle * iftmp.574_8;
  struct ImVec4 * _14;
  struct ImVec4 * _18;
  struct ImVec4 * _22;
  struct ImVec4 * _26;
  struct ImVec4 * _30;
  struct ImVec4 * _34;
  struct ImVec4 * _38;
  struct ImVec4 * _42;
  struct ImVec4 * _46;
  struct ImVec4 * _50;
  struct ImVec4 * _54;
  struct ImVec4 * _58;
  struct ImVec4 * _62;
  struct ImVec4 * _66;
  struct ImVec4 * _70;
  struct ImVec4 * _74;
  struct ImVec4 * _78;
  struct ImVec4 * _82;
  struct ImVec4 * _86;
  struct ImVec4 * _90;
  struct ImVec4 * _94;
  struct ImVec4 * _98;
  struct ImVec4 * _102;
  struct ImVec4 * _106;
  struct ImVec4 * _110;
  struct ImVec4 * _114;
  struct ImVec4 * _118;
  struct ImVec4 * _122;
  struct ImVec4 * _126;
  struct ImVec4 * _130;
  struct ImVec4 * _134;
  struct ImVec4 * _138;
  struct ImVec4 * _142;
  struct ImVec4 * _146;
  struct ImVec4 * _150;
  struct ImVec4 * _154;
  struct ImVec4 * _158;
  struct ImVec4 * _162;
  struct ImVec4 * _166;
  struct ImVec4 * _170;
  struct ImVec4 * _172;

  <bb 2>:
  if (dst_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = ImGui::GetStyle ();
  iftmp.574_7 = _6;
  goto <bb 5>;

  <bb 4>:
  iftmp.574_8 = dst_3(D);

  <bb 5>:
  # iftmp.574_1 = PHI <iftmp.574_7(3), iftmp.574_8(4)>
  style_9 = iftmp.574_1;
  colors_10 = &style_9->Colors;
  ImVec4::ImVec4 (&D.17759, 0.0, 0.0, 0.0, 1.0e+0);
  *colors_10 = D.17759;
  D.17759 ={v} {CLOBBER};
  _14 = colors_10 + 16;
  ImVec4::ImVec4 (&D.17760, 6.0000002384185791015625e-1, 6.0000002384185791015625e-1, 6.0000002384185791015625e-1, 1.0e+0);
  *_14 = D.17760;
  D.17760 ={v} {CLOBBER};
  _18 = colors_10 + 32;
  ImVec4::ImVec4 (&D.17761, 9.39999997615814208984375e-1, 9.39999997615814208984375e-1, 9.39999997615814208984375e-1, 1.0e+0);
  *_18 = D.17761;
  D.17761 ={v} {CLOBBER};
  _22 = colors_10 + 48;
  ImVec4::ImVec4 (&D.17762, 0.0, 0.0, 0.0, 0.0);
  *_22 = D.17762;
  D.17762 ={v} {CLOBBER};
  _26 = colors_10 + 64;
  ImVec4::ImVec4 (&D.17763, 1.0e+0, 1.0e+0, 1.0e+0, 9.80000019073486328125e-1);
  *_26 = D.17763;
  D.17763 ={v} {CLOBBER};
  _30 = colors_10 + 80;
  ImVec4::ImVec4 (&D.17764, 0.0, 0.0, 0.0, 3.00000011920928955078125e-1);
  *_30 = D.17764;
  D.17764 ={v} {CLOBBER};
  _34 = colors_10 + 96;
  ImVec4::ImVec4 (&D.17765, 0.0, 0.0, 0.0, 0.0);
  *_34 = D.17765;
  D.17765 ={v} {CLOBBER};
  _38 = colors_10 + 112;
  ImVec4::ImVec4 (&D.17766, 1.0e+0, 1.0e+0, 1.0e+0, 1.0e+0);
  *_38 = D.17766;
  D.17766 ={v} {CLOBBER};
  _42 = colors_10 + 128;
  ImVec4::ImVec4 (&D.17767, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 4.000000059604644775390625e-1);
  *_42 = D.17767;
  D.17767 ={v} {CLOBBER};
  _46 = colors_10 + 144;
  ImVec4::ImVec4 (&D.17768, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 6.70000016689300537109375e-1);
  *_46 = D.17768;
  D.17768 ={v} {CLOBBER};
  _50 = colors_10 + 160;
  ImVec4::ImVec4 (&D.17769, 9.59999978542327880859375e-1, 9.59999978542327880859375e-1, 9.59999978542327880859375e-1, 1.0e+0);
  *_50 = D.17769;
  D.17769 ={v} {CLOBBER};
  _54 = colors_10 + 176;
  ImVec4::ImVec4 (&D.17770, 8.19999992847442626953125e-1, 8.19999992847442626953125e-1, 8.19999992847442626953125e-1, 1.0e+0);
  *_54 = D.17770;
  D.17770 ={v} {CLOBBER};
  _58 = colors_10 + 192;
  ImVec4::ImVec4 (&D.17771, 1.0e+0, 1.0e+0, 1.0e+0, 5.099999904632568359375e-1);
  *_58 = D.17771;
  D.17771 ={v} {CLOBBER};
  _62 = colors_10 + 208;
  ImVec4::ImVec4 (&D.17772, 8.6000001430511474609375e-1, 8.6000001430511474609375e-1, 8.6000001430511474609375e-1, 1.0e+0);
  *_62 = D.17772;
  D.17772 ={v} {CLOBBER};
  _66 = colors_10 + 224;
  ImVec4::ImVec4 (&D.17773, 9.80000019073486328125e-1, 9.80000019073486328125e-1, 9.80000019073486328125e-1, 5.299999713897705078125e-1);
  *_66 = D.17773;
  D.17773 ={v} {CLOBBER};
  _70 = colors_10 + 240;
  ImVec4::ImVec4 (&D.17774, 6.89999997615814208984375e-1, 6.89999997615814208984375e-1, 6.89999997615814208984375e-1, 8.00000011920928955078125e-1);
  *_70 = D.17774;
  D.17774 ={v} {CLOBBER};
  _74 = colors_10 + 256;
  ImVec4::ImVec4 (&D.17775, 4.900000095367431640625e-1, 4.900000095367431640625e-1, 4.900000095367431640625e-1, 8.00000011920928955078125e-1);
  *_74 = D.17775;
  D.17775 ={v} {CLOBBER};
  _78 = colors_10 + 272;
  ImVec4::ImVec4 (&D.17776, 4.900000095367431640625e-1, 4.900000095367431640625e-1, 4.900000095367431640625e-1, 1.0e+0);
  *_78 = D.17776;
  D.17776 ={v} {CLOBBER};
  _82 = colors_10 + 288;
  ImVec4::ImVec4 (&D.17777, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 1.0e+0);
  *_82 = D.17777;
  D.17777 ={v} {CLOBBER};
  _86 = colors_10 + 304;
  ImVec4::ImVec4 (&D.17778, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 7.799999713897705078125e-1);
  *_86 = D.17778;
  D.17778 ={v} {CLOBBER};
  _90 = colors_10 + 320;
  ImVec4::ImVec4 (&D.17779, 4.600000083446502685546875e-1, 5.40000021457672119140625e-1, 8.00000011920928955078125e-1, 6.0000002384185791015625e-1);
  *_90 = D.17779;
  D.17779 ={v} {CLOBBER};
  _94 = colors_10 + 336;
  ImVec4::ImVec4 (&D.17780, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 4.000000059604644775390625e-1);
  *_94 = D.17780;
  D.17780 ={v} {CLOBBER};
  _98 = colors_10 + 352;
  ImVec4::ImVec4 (&D.17781, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 1.0e+0);
  *_98 = D.17781;
  D.17781 ={v} {CLOBBER};
  _102 = colors_10 + 368;
  ImVec4::ImVec4 (&D.17782, 5.99999986588954925537109375e-2, 5.299999713897705078125e-1, 9.80000019073486328125e-1, 1.0e+0);
  *_102 = D.17782;
  D.17782 ={v} {CLOBBER};
  _106 = colors_10 + 384;
  ImVec4::ImVec4 (&D.17783, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 3.10000002384185791015625e-1);
  *_106 = D.17783;
  D.17783 ={v} {CLOBBER};
  _110 = colors_10 + 400;
  ImVec4::ImVec4 (&D.17784, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 8.00000011920928955078125e-1);
  *_110 = D.17784;
  D.17784 ={v} {CLOBBER};
  _114 = colors_10 + 416;
  ImVec4::ImVec4 (&D.17785, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 1.0e+0);
  *_114 = D.17785;
  D.17785 ={v} {CLOBBER};
  _118 = colors_10 + 432;
  ImVec4::ImVec4 (&D.17786, 3.8999998569488525390625e-1, 3.8999998569488525390625e-1, 3.8999998569488525390625e-1, 1.0e+0);
  *_118 = D.17786;
  D.17786 ={v} {CLOBBER};
  _122 = colors_10 + 448;
  ImVec4::ImVec4 (&D.17787, 1.4000000059604644775390625e-1, 4.39999997615814208984375e-1, 8.00000011920928955078125e-1, 7.799999713897705078125e-1);
  *_122 = D.17787;
  D.17787 ={v} {CLOBBER};
  _126 = colors_10 + 464;
  ImVec4::ImVec4 (&D.17788, 1.4000000059604644775390625e-1, 4.39999997615814208984375e-1, 8.00000011920928955078125e-1, 1.0e+0);
  *_126 = D.17788;
  D.17788 ={v} {CLOBBER};
  _130 = colors_10 + 480;
  ImVec4::ImVec4 (&D.17789, 8.00000011920928955078125e-1, 8.00000011920928955078125e-1, 8.00000011920928955078125e-1, 5.60000002384185791015625e-1);
  *_130 = D.17789;
  D.17789 ={v} {CLOBBER};
  _134 = colors_10 + 496;
  ImVec4::ImVec4 (&D.17790, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 6.70000016689300537109375e-1);
  *_134 = D.17790;
  D.17790 ={v} {CLOBBER};
  _138 = colors_10 + 512;
  ImVec4::ImVec4 (&D.17791, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 9.49999988079071044921875e-1);
  *_138 = D.17791;
  D.17791 ={v} {CLOBBER};
  _142 = colors_10 + 528;
  ImVec4::ImVec4 (&D.17792, 3.8999998569488525390625e-1, 3.8999998569488525390625e-1, 3.8999998569488525390625e-1, 1.0e+0);
  *_142 = D.17792;
  D.17792 ={v} {CLOBBER};
  _146 = colors_10 + 544;
  ImVec4::ImVec4 (&D.17793, 1.0e+0, 4.30000007152557373046875e-1, 3.499999940395355224609375e-1, 1.0e+0);
  *_146 = D.17793;
  D.17793 ={v} {CLOBBER};
  _150 = colors_10 + 560;
  ImVec4::ImVec4 (&D.17794, 8.9999997615814208984375e-1, 6.99999988079071044921875e-1, 0.0, 1.0e+0);
  *_150 = D.17794;
  D.17794 ={v} {CLOBBER};
  _154 = colors_10 + 576;
  ImVec4::ImVec4 (&D.17795, 1.0e+0, 4.49999988079071044921875e-1, 0.0, 1.0e+0);
  *_154 = D.17795;
  D.17795 ={v} {CLOBBER};
  _158 = colors_10 + 592;
  ImVec4::ImVec4 (&D.17796, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 3.499999940395355224609375e-1);
  *_158 = D.17796;
  D.17796 ={v} {CLOBBER};
  _162 = colors_10 + 608;
  ImVec4::ImVec4 (&D.17797, 2.0000000298023223876953125e-1, 2.0000000298023223876953125e-1, 2.0000000298023223876953125e-1, 3.499999940395355224609375e-1);
  *_162 = D.17797;
  D.17797 ={v} {CLOBBER};
  _166 = colors_10 + 624;
  ImVec4::ImVec4 (&D.17798, 2.599999904632568359375e-1, 5.89999973773956298828125e-1, 9.80000019073486328125e-1, 9.49999988079071044921875e-1);
  *_166 = D.17798;
  D.17798 ={v} {CLOBBER};
  _170 = colors_10 + 640;
  *_170 = MEM[(const struct ImVec4 &)colors_10 + 400];
  _172 = colors_10 + 656;
  ImVec4::ImVec4 (&D.17799, 6.99999988079071044921875e-1, 6.99999988079071044921875e-1, 6.99999988079071044921875e-1, 6.99999988079071044921875e-1);
  *_172 = D.17799;
  D.17799 ={v} {CLOBBER};
  return;

}



;; Function ImDrawListSharedData::ImDrawListSharedData() (_ZN20ImDrawListSharedDataC2Ev, funcdef_no=690, decl_uid=11526, cgraph_uid=589, symbol_order=589)

ImDrawListSharedData::ImDrawListSharedData() (struct ImDrawListSharedData * const this)
{
  const float a;
  int i;
  float D.26532;
  float D.26531;
  struct ImVec2 D.17816;
  float D.26530;
  float D.26529;
  float D.26528;
  struct ImVec4 D.17812;
  long int D.26520;
  struct ImVec2 * D.26519;
  struct ImVec2 * D.26518;
  struct ImVec2 * retval.575;
  struct ImVec4 * D.26517;
  struct ImVec2 * D.26516;
  struct ImVec2 * _2;
  long int _3;
  struct ImVec2 * _9;
  struct ImVec4 * _11;
  struct ImVec2 * _13;
  struct ImVec2 * _14;
  long int _15;
  struct ImVec2 * _17;
  long int _18;
  struct ImVec2 * retval.575_19;
  float _27;
  float _28;
  float _29;
  float _31;
  float _32;

  <bb 2>:
  MEM[(struct  &)this_7(D)] ={v} {CLOBBER};
  _9 = &this_7(D)->TexUvWhitePixel;
  ImVec2::ImVec2 (_9);
  _11 = &this_7(D)->ClipRectFullscreen;
  ImVec4::ImVec4 (_11);
  _13 = &this_7(D)->CircleVtx12;
  _14 = _13;
  _15 = 11;

  <bb 3>:
  # _2 = PHI <_14(2), _17(4)>
  # _3 = PHI <_15(2), _18(4)>
  if (_3 < 0)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  ImVec2::ImVec2 (_2);
  _17 = _2 + 8;
  _18 = _3 + -1;
  goto <bb 3>;

  <bb 5>:
  retval.575_19 = _13;
  this_7(D)->Font = 0B;
  this_7(D)->FontSize = 0.0;
  this_7(D)->CurveTessellationTol = 0.0;
  ImVec4::ImVec4 (&D.17812, -8.192e+3, -8.192e+3, 8.192e+3, 8.192e+3);
  this_7(D)->ClipRectFullscreen = D.17812;
  D.17812 ={v} {CLOBBER};
  i_26 = 0;

  <bb 6>:
  # i_1 = PHI <i_26(5), i_36(7)>
  if (i_1 > 11)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _27 = (float) i_1;
  _28 = _27 * 2.0e+0;
  _29 = _28 * 3.1415927410125732421875e+0;
  a_30 = _29 / 1.2e+1;
  _31 = sinf (a_30);
  _32 = cosf (a_30);
  ImVec2::ImVec2 (&D.17816, _32, _31);
  this_7(D)->CircleVtx12[i_1] = D.17816;
  D.17816 ={v} {CLOBBER};
  i_36 = i_1 + 1;
  goto <bb 6>;

  <bb 8>:
  return;

}



;; Function void ImDrawList::Clear() (_ZN10ImDrawList5ClearEv, funcdef_no=692, decl_uid=6018, cgraph_uid=591, symbol_order=591)

void ImDrawList::Clear() (struct ImDrawList * const this)
{
  struct ImVector * D.26542;
  struct ImVector * D.26541;
  struct ImVector * D.26540;
  struct ImVector * D.26539;
  struct ImVector * D.26538;
  struct ImVector * D.26537;
  struct ImVector * _2;
  struct ImVector * _5;
  struct ImVector * _7;
  struct ImVector * _13;
  struct ImVector * _15;
  struct ImVector * _17;

  <bb 2>:
  _2 = &this_1(D)->CmdBuffer;
  ImVector<ImDrawCmd>::resize (_2, 0);
  _5 = &this_1(D)->IdxBuffer;
  ImVector<short unsigned int>::resize (_5, 0);
  _7 = &this_1(D)->VtxBuffer;
  ImVector<ImDrawVert>::resize (_7, 0);
  this_1(D)->Flags = 3;
  this_1(D)->_VtxCurrentIdx = 0;
  this_1(D)->_VtxWritePtr = 0B;
  this_1(D)->_IdxWritePtr = 0B;
  _13 = &this_1(D)->_ClipRectStack;
  ImVector<ImVec4>::resize (_13, 0);
  _15 = &this_1(D)->_TextureIdStack;
  ImVector<void*>::resize (_15, 0);
  _17 = &this_1(D)->_Path;
  ImVector<ImVec2>::resize (_17, 0);
  this_1(D)->_ChannelsCurrent = 0;
  this_1(D)->_ChannelsCount = 1;
  return;

}



;; Function void ImDrawList::ClearFreeMemory() (_ZN10ImDrawList15ClearFreeMemoryEv, funcdef_no=693, decl_uid=6020, cgraph_uid=592, symbol_order=592)

void ImDrawList::ClearFreeMemory() (struct ImDrawList * const this)
{
  int i;
  struct ImVector * D.26773;
  struct ImVector * D.26772;
  struct value_type & D.26771;
  struct ImVector * D.26770;
  struct ImVector * D.26769;
  struct value_type & D.26768;
  struct ImVector * D.26767;
  struct value_type & D.26765;
  struct ImVector * D.26764;
  int D.26760;
  struct ImVector * D.26758;
  struct ImVector * D.26757;
  struct ImVector * D.26756;
  struct ImVector * D.26755;
  struct ImVector * D.26754;
  struct ImVector * D.26753;
  struct ImVector * _5;
  struct ImVector * _8;
  struct ImVector * _10;
  struct ImVector * _15;
  struct ImVector * _17;
  struct ImVector * _19;
  int _24;
  struct ImVector * _25;
  struct value_type & _27;
  struct ImVector * _29;
  struct value_type & _31;
  struct ImVector * _32;
  struct ImVector * _34;
  struct value_type & _36;
  struct ImVector * _37;
  struct ImVector * _40;

  <bb 2>:
  _5 = &this_4(D)->CmdBuffer;
  ImVector<ImDrawCmd>::clear (_5);
  _8 = &this_4(D)->IdxBuffer;
  ImVector<short unsigned int>::clear (_8);
  _10 = &this_4(D)->VtxBuffer;
  ImVector<ImDrawVert>::clear (_10);
  this_4(D)->_VtxCurrentIdx = 0;
  this_4(D)->_VtxWritePtr = 0B;
  this_4(D)->_IdxWritePtr = 0B;
  _15 = &this_4(D)->_ClipRectStack;
  ImVector<ImVec4>::clear (_15);
  _17 = &this_4(D)->_TextureIdStack;
  ImVector<void*>::clear (_17);
  _19 = &this_4(D)->_Path;
  ImVector<ImVec2>::clear (_19);
  this_4(D)->_ChannelsCurrent = 0;
  this_4(D)->_ChannelsCount = 1;
  i_23 = 0;

  <bb 3>:
  # i_1 = PHI <i_23(2), i_39(6)>
  _24 = this_4(D)->_Channels.Size;
  if (_24 <= i_1)
    goto <bb 7>;
  else
    goto <bb 4>;

  <bb 4>:
  if (i_1 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _25 = &this_4(D)->_Channels;
  _27 = ImVector<ImDrawChannel>::operator[] (_25, 0);
  memset (_27, 0, 32);

  <bb 6>:
  _29 = &this_4(D)->_Channels;
  _31 = ImVector<ImDrawChannel>::operator[] (_29, i_1);
  _32 = &_31->CmdBuffer;
  ImVector<ImDrawCmd>::clear (_32);
  _34 = &this_4(D)->_Channels;
  _36 = ImVector<ImDrawChannel>::operator[] (_34, i_1);
  _37 = &_36->IdxBuffer;
  ImVector<short unsigned int>::clear (_37);
  i_39 = i_1 + 1;
  goto <bb 3>;

  <bb 7>:
  _40 = &this_4(D)->_Channels;
  ImVector<ImDrawChannel>::clear (_40);
  return;

}



;; Function ImDrawList* ImDrawList::CloneOutput() const (_ZNK10ImDrawList11CloneOutputEv, funcdef_no=694, decl_uid=6016, cgraph_uid=593, symbol_order=593)

ImDrawList* ImDrawList::CloneOutput() const (const struct ImDrawList * const this)
{
  void * D.32674;
  void * D.26836;
  struct ImDrawList * dst;
  struct ImDrawList * D.26834;
  int D.26833;
  struct ImVector * D.26832;
  const struct ImVector * D.26831;
  struct ImVector * D.26830;
  const struct ImVector * D.26829;
  struct ImVector * D.26828;
  const struct ImVector * D.26827;
  struct ImNewDummy D.26826;
  void * dst.588;
  void * D.17835;
  struct ImNewDummy D.26825;
  struct ImNewDummy D.17831;
  struct ImNewDummy D.17834;
  void * _5;
  void * _6;
  void * dst.588_8;
  const struct ImVector * _14;
  struct ImVector * _15;
  const struct ImVector * _17;
  struct ImVector * _18;
  const struct ImVector * _20;
  struct ImVector * _21;
  int _23;
  struct ImDrawList * _25;

  <bb 2>:
  D.17834 = D.26825;
  _5 = ImGui::MemAlloc (168);

  <bb 3>:
  _6 = _5;
  dst.588_8 = operator new (168, D.17834, _6);
  ImDrawList::ImDrawList (dst.588_8, 0B);

  <bb 4>:
  dst_10 = dst.588_8;
  D.17834 ={v} {CLOBBER};
  D.17831 ={v} {CLOBBER};
  _14 = &this_13(D)->CmdBuffer;
  _15 = &dst_10->CmdBuffer;
  ImVector<ImDrawCmd>::operator= (_15, _14);
  _17 = &this_13(D)->IdxBuffer;
  _18 = &dst_10->IdxBuffer;
  ImVector<short unsigned int>::operator= (_18, _17);
  _20 = &this_13(D)->VtxBuffer;
  _21 = &dst_10->VtxBuffer;
  ImVector<ImDrawVert>::operator= (_21, _20);
  _23 = this_13(D)->Flags;
  dst_10->Flags = _23;
  _25 = dst_10;

<L0>:
  return _25;

<L1>:
  operator delete (dst.588_8, D.26826, _6);
  __builtin_eh_copy_values (1, 3);

<L2>:
  _27 = __builtin_eh_pointer (1);
  __builtin_unwind_resume (_27);

}



;; Function void ImDrawList::AddDrawCmd() (_ZN10ImDrawList10AddDrawCmdEv, funcdef_no=695, decl_uid=6014, cgraph_uid=594, symbol_order=594)

void ImDrawList::AddDrawCmd() (struct ImDrawList * const this)
{
  static const char __PRETTY_FUNCTION__[30] = "void ImDrawList::AddDrawCmd()";
  struct ImDrawCmd draw_cmd;
  struct ImVector * D.26959;
  float D.26957;
  float D.26956;
  float D.26954;
  float D.26953;
  void * * D.26949;
  sizetype D.26948;
  long unsigned int D.26947;
  long unsigned int D.26946;
  int D.26945;
  void * * D.26944;
  int D.26941;
  void * iftmp.590;
  const struct ImDrawListSharedData * D.26939;
  sizetype D.26937;
  long unsigned int D.26936;
  long unsigned int D.26935;
  int D.26934;
  struct ImVec4 * D.26933;
  int D.26930;
  const struct ImVec4 & iftmp.589;
  const struct ImVec4 & iftmp.589_1;
  void * iftmp.590_2;
  int _6;
  struct ImVec4 * _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;
  sizetype _11;
  const struct ImVec4 & iftmp.589_12;
  const struct ImDrawListSharedData * _13;
  const struct ImVec4 & iftmp.589_14;
  int _16;
  void * * _17;
  int _18;
  long unsigned int _19;
  long unsigned int _20;
  sizetype _21;
  void * * _22;
  void * iftmp.590_23;
  void * iftmp.590_24;
  float _26;
  float _27;
  float _28;
  float _29;
  struct ImVector * _30;

  <bb 2>:
  ImDrawCmd::ImDrawCmd (&draw_cmd);
  _6 = this_5(D)->_ClipRectStack.Size;
  if (_6 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = this_5(D)->_ClipRectStack.Data;
  _8 = this_5(D)->_ClipRectStack.Size;
  _9 = (long unsigned int) _8;
  _10 = _9 * 16;
  _11 = _10 + 18446744073709551600;
  iftmp.589_12 = _7 + _11;
  goto <bb 5>;

  <bb 4>:
  _13 = this_5(D)->_Data;
  iftmp.589_14 = &_13->ClipRectFullscreen;

  <bb 5>:
  # iftmp.589_1 = PHI <iftmp.589_12(3), iftmp.589_14(4)>
  draw_cmd.ClipRect = *iftmp.589_1;
  _16 = this_5(D)->_TextureIdStack.Size;
  if (_16 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _17 = this_5(D)->_TextureIdStack.Data;
  _18 = this_5(D)->_TextureIdStack.Size;
  _19 = (long unsigned int) _18;
  _20 = _19 * 8;
  _21 = _20 + 18446744073709551608;
  _22 = _17 + _21;
  iftmp.590_23 = *_22;
  goto <bb 8>;

  <bb 7>:
  iftmp.590_24 = 0B;

  <bb 8>:
  # iftmp.590_2 = PHI <iftmp.590_23(6), iftmp.590_24(7)>
  draw_cmd.TextureId = iftmp.590_2;
  _26 = draw_cmd.ClipRect.x;
  _27 = draw_cmd.ClipRect.z;
  if (_26 <= _27)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:
  _28 = draw_cmd.ClipRect.y;
  _29 = draw_cmd.ClipRect.w;
  if (_28 <= _29)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  goto <bb 12>;

  <bb 11>:
  __assert_fail ("draw_cmd.ClipRect.x <= draw_cmd.ClipRect.z && draw_cmd.ClipRect.y <= draw_cmd.ClipRect.w", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 373, &__PRETTY_FUNCTION__);

  <bb 12>:
  _30 = &this_5(D)->CmdBuffer;
  ImVector<ImDrawCmd>::push_back (_30, &draw_cmd);
  draw_cmd ={v} {CLOBBER};
  return;

}



;; Function void ImDrawList::AddCallback(ImDrawCallback, void*) (_ZN10ImDrawList11AddCallbackEPFvPKS_PK9ImDrawCmdEPv, funcdef_no=696, decl_uid=6012, cgraph_uid=595, symbol_order=595)

void ImDrawList::AddCallback(ImDrawCallback, void*) (struct ImDrawList * const this, void (*ImDrawCallback) (const struct ImDrawList *, const struct ImDrawCmd *) callback, void * callback_data)
{
  struct ImDrawCmd * current_cmd;
  struct ImVector * D.26992;
  void (*<Tbc9>) (const struct ImDrawList *, const struct ImDrawCmd *) D.26991;
  unsigned int D.26989;
  struct ImVector * D.26984;
  int D.26981;
  struct value_type * iftmp.591;
  struct value_type * iftmp.591_2;
  int _7;
  struct ImVector * _8;
  struct value_type * iftmp.591_10;
  struct value_type * iftmp.591_11;
  unsigned int _13;
  void (*<Tbc9>) (const struct ImDrawList *, const struct ImDrawCmd *) _14;
  struct ImVector * _16;

  <bb 2>:
  _7 = this_6(D)->CmdBuffer.Size;
  if (_7 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _8 = &this_6(D)->CmdBuffer;
  iftmp.591_10 = ImVector<ImDrawCmd>::back (_8);
  goto <bb 5>;

  <bb 4>:
  iftmp.591_11 = 0B;

  <bb 5>:
  # iftmp.591_2 = PHI <iftmp.591_10(3), iftmp.591_11(4)>
  current_cmd_12 = iftmp.591_2;
  if (current_cmd_12 == 0B)
    goto <bb 8>;
  else
    goto <bb 6>;

  <bb 6>:
  _13 = current_cmd_12->ElemCount;
  if (_13 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _14 = current_cmd_12->UserCallback;
  if (_14 != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  ImDrawList::AddDrawCmd (this_6(D));
  _16 = &this_6(D)->CmdBuffer;
  current_cmd_18 = ImVector<ImDrawCmd>::back (_16);

  <bb 9>:
  # current_cmd_1 = PHI <current_cmd_12(7), current_cmd_18(8)>
  current_cmd_1->UserCallback = callback_19(D);
  current_cmd_1->UserCallbackData = callback_data_21(D);
  ImDrawList::AddDrawCmd (this_6(D));
  return;

}



;; Function void ImDrawList::UpdateClipRect() (_ZN10ImDrawList14UpdateClipRectEv, funcdef_no=697, decl_uid=6062, cgraph_uid=596, symbol_order=596)

void ImDrawList::UpdateClipRect() (struct ImDrawList * const this)
{
  struct ImDrawCmd * prev_cmd;
  struct ImDrawCmd * curr_cmd;
  const struct ImVec4 curr_clip_rect;
  struct ImVector * D.27062;
  void (*<Tbc9>) (const struct ImDrawList *, const struct ImDrawCmd *) D.27060;
  void * * D.27057;
  sizetype D.27056;
  long unsigned int D.27055;
  long unsigned int D.27054;
  int D.27053;
  void * * D.27052;
  int D.27049;
  void * iftmp.595;
  void * D.27047;
  int D.27045;
  struct ImVec4 * D.27044;
  unsigned int D.27041;
  int D.27035;
  struct ImDrawCmd * iftmp.594;
  void (*<Tbc9>) (const struct ImDrawList *, const struct ImDrawCmd *) D.27033;
  int D.27032;
  struct ImVec4 * D.27031;
  unsigned int D.27029;
  sizetype D.27023;
  long unsigned int D.27022;
  long unsigned int D.27021;
  int D.27020;
  struct ImDrawCmd * D.27019;
  int D.27016;
  struct ImDrawCmd * iftmp.593;
  const struct ImDrawListSharedData * D.27014;
  sizetype D.27012;
  long unsigned int D.27011;
  long unsigned int D.27010;
  int D.27009;
  struct ImVec4 * D.27008;
  int D.27005;
  const struct ImVec4 & iftmp.592;
  const struct ImVec4 & iftmp.592_1;
  struct ImDrawCmd * iftmp.593_2;
  struct ImDrawCmd * iftmp.594_3;
  void * iftmp.595_4;
  int _9;
  struct ImVec4 * _10;
  int _11;
  long unsigned int _12;
  long unsigned int _13;
  sizetype _14;
  const struct ImVec4 & iftmp.592_15;
  const struct ImDrawListSharedData * _16;
  const struct ImVec4 & iftmp.592_17;
  int _19;
  struct ImDrawCmd * _20;
  int _21;
  long unsigned int _22;
  long unsigned int _23;
  sizetype _24;
  struct ImDrawCmd * iftmp.593_25;
  struct ImDrawCmd * iftmp.593_26;
  unsigned int _28;
  struct ImVec4 * _29;
  int _30;
  void (*<Tbc9>) (const struct ImDrawList *, const struct ImDrawCmd *) _31;
  int _32;
  struct ImDrawCmd * iftmp.594_33;
  struct ImDrawCmd * iftmp.594_34;
  unsigned int _36;
  struct ImVec4 * _37;
  int _38;
  void * _39;
  int _40;
  void * * _41;
  int _42;
  long unsigned int _43;
  long unsigned int _44;
  sizetype _45;
  void * * _46;
  void * iftmp.595_47;
  void * iftmp.595_48;
  void (*<Tbc9>) (const struct ImDrawList *, const struct ImDrawCmd *) _49;
  struct ImVector * _50;

  <bb 2>:
  _9 = this_8(D)->_ClipRectStack.Size;
  if (_9 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _10 = this_8(D)->_ClipRectStack.Data;
  _11 = this_8(D)->_ClipRectStack.Size;
  _12 = (long unsigned int) _11;
  _13 = _12 * 16;
  _14 = _13 + 18446744073709551600;
  iftmp.592_15 = _10 + _14;
  goto <bb 5>;

  <bb 4>:
  _16 = this_8(D)->_Data;
  iftmp.592_17 = &_16->ClipRectFullscreen;

  <bb 5>:
  # iftmp.592_1 = PHI <iftmp.592_15(3), iftmp.592_17(4)>
  curr_clip_rect = *iftmp.592_1;
  _19 = this_8(D)->CmdBuffer.Size;
  if (_19 > 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _20 = this_8(D)->CmdBuffer.Data;
  _21 = this_8(D)->CmdBuffer.Size;
  _22 = (long unsigned int) _21;
  _23 = _22 * 48;
  _24 = _23 + 18446744073709551568;
  iftmp.593_25 = _20 + _24;
  goto <bb 8>;

  <bb 7>:
  iftmp.593_26 = 0B;

  <bb 8>:
  # iftmp.593_2 = PHI <iftmp.593_25(6), iftmp.593_26(7)>
  curr_cmd_27 = iftmp.593_2;
  if (curr_cmd_27 == 0B)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  _28 = curr_cmd_27->ElemCount;
  if (_28 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _29 = &curr_cmd_27->ClipRect;
  _30 = memcmp (_29, &curr_clip_rect, 16);
  if (_30 != 0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  _31 = curr_cmd_27->UserCallback;
  if (_31 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  ImDrawList::AddDrawCmd (this_8(D));
  curr_clip_rect ={v} {CLOBBER};
  goto <bb 27> (<L26>);

  <bb 13>:
  _32 = this_8(D)->CmdBuffer.Size;
  if (_32 > 1)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  iftmp.594_33 = curr_cmd_27 + 18446744073709551568;
  goto <bb 16>;

  <bb 15>:
  iftmp.594_34 = 0B;

  <bb 16>:
  # iftmp.594_3 = PHI <iftmp.594_33(14), iftmp.594_34(15)>
  prev_cmd_35 = iftmp.594_3;
  _36 = curr_cmd_27->ElemCount;
  if (_36 == 0)
    goto <bb 17>;
  else
    goto <bb 25>;

  <bb 17>:
  if (prev_cmd_35 != 0B)
    goto <bb 18>;
  else
    goto <bb 25>;

  <bb 18>:
  _37 = &prev_cmd_35->ClipRect;
  _38 = memcmp (_37, &curr_clip_rect, 16);
  if (_38 == 0)
    goto <bb 19>;
  else
    goto <bb 25>;

  <bb 19>:
  _39 = prev_cmd_35->TextureId;
  _40 = this_8(D)->_TextureIdStack.Size;
  if (_40 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _41 = this_8(D)->_TextureIdStack.Data;
  _42 = this_8(D)->_TextureIdStack.Size;
  _43 = (long unsigned int) _42;
  _44 = _43 * 8;
  _45 = _44 + 18446744073709551608;
  _46 = _41 + _45;
  iftmp.595_47 = *_46;
  goto <bb 22>;

  <bb 21>:
  iftmp.595_48 = 0B;

  <bb 22>:
  # iftmp.595_4 = PHI <iftmp.595_47(20), iftmp.595_48(21)>
  if (_39 == iftmp.595_4)
    goto <bb 23>;
  else
    goto <bb 25>;

  <bb 23>:
  _49 = prev_cmd_35->UserCallback;
  if (_49 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _50 = &this_8(D)->CmdBuffer;
  ImVector<ImDrawCmd>::pop_back (_50);
  goto <bb 26>;

  <bb 25>:
  curr_cmd_27->ClipRect = curr_clip_rect;

  <bb 26>:
  curr_clip_rect ={v} {CLOBBER};

<L26>:
  return;

}



;; Function void ImDrawList::UpdateTextureID() (_ZN10ImDrawList15UpdateTextureIDEv, funcdef_no=698, decl_uid=6064, cgraph_uid=597, symbol_order=597)

void ImDrawList::UpdateTextureID() (struct ImDrawList * const this)
{
  struct ImDrawCmd * prev_cmd;
  struct ImDrawCmd * curr_cmd;
  void * const curr_texture_id;
  struct ImVector * D.27126;
  void (*<Tbc9>) (const struct ImDrawList *, const struct ImDrawCmd *) D.27124;
  int D.27122;
  struct ImVec4 * D.27121;
  const struct ImDrawListSharedData * D.27120;
  sizetype D.27118;
  long unsigned int D.27117;
  long unsigned int D.27116;
  int D.27115;
  struct ImVec4 * D.27114;
  int D.27111;
  const void * iftmp.599;
  void * D.27108;
  unsigned int D.27105;
  int D.27099;
  struct ImDrawCmd * iftmp.598;
  void (*<Tbc9>) (const struct ImDrawList *, const struct ImDrawCmd *) D.27097;
  void * D.27096;
  unsigned int D.27094;
  struct ImVector * D.27088;
  int D.27085;
  struct value_type * iftmp.597;
  void * * D.27082;
  sizetype D.27081;
  long unsigned int D.27080;
  long unsigned int D.27079;
  int D.27078;
  void * * D.27077;
  int D.27074;
  void * iftmp.596;
  void * iftmp.596_1;
  struct value_type * iftmp.597_2;
  struct ImDrawCmd * iftmp.598_3;
  const void * iftmp.599_4;
  int _9;
  void * * _10;
  int _11;
  long unsigned int _12;
  long unsigned int _13;
  sizetype _14;
  void * * _15;
  void * iftmp.596_16;
  void * iftmp.596_17;
  int _19;
  struct ImVector * _20;
  struct value_type * iftmp.597_22;
  struct value_type * iftmp.597_23;
  unsigned int _25;
  void * _26;
  void (*<Tbc9>) (const struct ImDrawList *, const struct ImDrawCmd *) _27;
  int _28;
  struct ImDrawCmd * iftmp.598_29;
  struct ImDrawCmd * iftmp.598_30;
  unsigned int _32;
  void * _33;
  int _34;
  struct ImVec4 * _35;
  int _36;
  long unsigned int _37;
  long unsigned int _38;
  sizetype _39;
  const void * iftmp.599_40;
  const struct ImDrawListSharedData * _41;
  const void * iftmp.599_42;
  struct ImVec4 * _43;
  int _44;
  void (*<Tbc9>) (const struct ImDrawList *, const struct ImDrawCmd *) _45;
  struct ImVector * _46;

  <bb 2>:
  _9 = this_8(D)->_TextureIdStack.Size;
  if (_9 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _10 = this_8(D)->_TextureIdStack.Data;
  _11 = this_8(D)->_TextureIdStack.Size;
  _12 = (long unsigned int) _11;
  _13 = _12 * 8;
  _14 = _13 + 18446744073709551608;
  _15 = _10 + _14;
  iftmp.596_16 = *_15;
  goto <bb 5>;

  <bb 4>:
  iftmp.596_17 = 0B;

  <bb 5>:
  # iftmp.596_1 = PHI <iftmp.596_16(3), iftmp.596_17(4)>
  curr_texture_id_18 = iftmp.596_1;
  _19 = this_8(D)->CmdBuffer.Size;
  if (_19 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _20 = &this_8(D)->CmdBuffer;
  iftmp.597_22 = ImVector<ImDrawCmd>::back (_20);
  goto <bb 8>;

  <bb 7>:
  iftmp.597_23 = 0B;

  <bb 8>:
  # iftmp.597_2 = PHI <iftmp.597_22(6), iftmp.597_23(7)>
  curr_cmd_24 = iftmp.597_2;
  if (curr_cmd_24 == 0B)
    goto <bb 12>;
  else
    goto <bb 9>;

  <bb 9>:
  _25 = curr_cmd_24->ElemCount;
  if (_25 != 0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _26 = curr_cmd_24->TextureId;
  if (_26 != curr_texture_id_18)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  _27 = curr_cmd_24->UserCallback;
  if (_27 != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  ImDrawList::AddDrawCmd (this_8(D));
  goto <bb 26> (<L24>);

  <bb 13>:
  _28 = this_8(D)->CmdBuffer.Size;
  if (_28 > 1)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  iftmp.598_29 = curr_cmd_24 + 18446744073709551568;
  goto <bb 16>;

  <bb 15>:
  iftmp.598_30 = 0B;

  <bb 16>:
  # iftmp.598_3 = PHI <iftmp.598_29(14), iftmp.598_30(15)>
  prev_cmd_31 = iftmp.598_3;
  _32 = curr_cmd_24->ElemCount;
  if (_32 == 0)
    goto <bb 17>;
  else
    goto <bb 25>;

  <bb 17>:
  if (prev_cmd_31 != 0B)
    goto <bb 18>;
  else
    goto <bb 25>;

  <bb 18>:
  _33 = prev_cmd_31->TextureId;
  if (_33 == curr_texture_id_18)
    goto <bb 19>;
  else
    goto <bb 25>;

  <bb 19>:
  _34 = this_8(D)->_ClipRectStack.Size;
  if (_34 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _35 = this_8(D)->_ClipRectStack.Data;
  _36 = this_8(D)->_ClipRectStack.Size;
  _37 = (long unsigned int) _36;
  _38 = _37 * 16;
  _39 = _38 + 18446744073709551600;
  iftmp.599_40 = _35 + _39;
  goto <bb 22>;

  <bb 21>:
  _41 = this_8(D)->_Data;
  iftmp.599_42 = &_41->ClipRectFullscreen;

  <bb 22>:
  # iftmp.599_4 = PHI <iftmp.599_40(20), iftmp.599_42(21)>
  _43 = &prev_cmd_31->ClipRect;
  _44 = memcmp (_43, iftmp.599_4, 16);
  if (_44 == 0)
    goto <bb 23>;
  else
    goto <bb 25>;

  <bb 23>:
  _45 = prev_cmd_31->UserCallback;
  if (_45 == 0B)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _46 = &this_8(D)->CmdBuffer;
  ImVector<ImDrawCmd>::pop_back (_46);
  goto <bb 26> (<L24>);

  <bb 25>:
  curr_cmd_24->TextureId = curr_texture_id_18;

<L24>:
  return;

}



;; Function void ImDrawList::PushClipRect(ImVec2, ImVec2, bool) (_ZN10ImDrawList12PushClipRectE6ImVec2S0_b, funcdef_no=699, decl_uid=5809, cgraph_uid=598, symbol_order=598)

void ImDrawList::PushClipRect(ImVec2, ImVec2, bool) (struct ImDrawList * const this, struct ImVec2 cr_min, struct ImVec2 cr_max, bool intersect_with_current_clip_rect)
{
  struct ImVec4 current;
  struct ImVec4 cr;
  struct ImVector * D.27174;
  float D.27173;
  float D.27172;
  float D.27171;
  float D.27170;
  float D.27169;
  float D.27168;
  float D.27165;
  float D.27162;
  float D.27161;
  float D.27159;
  float D.27156;
  float D.27155;
  float D.27153;
  float D.27150;
  float D.27149;
  float D.27147;
  float D.27144;
  float D.27143;
  struct ImVec4 * D.27142;
  sizetype D.27141;
  long unsigned int D.27140;
  long unsigned int D.27139;
  int D.27138;
  struct ImVec4 * D.27137;
  int D.27134;
  float D.27131;
  float D.27130;
  float D.27129;
  float D.27128;
  float _8;
  float _9;
  float _10;
  float _11;
  int _15;
  struct ImVec4 * _16;
  int _17;
  long unsigned int _18;
  long unsigned int _19;
  sizetype _20;
  struct ImVec4 * _21;
  float _23;
  float _24;
  float _25;
  float _27;
  float _28;
  float _29;
  float _31;
  float _32;
  float _33;
  float _35;
  float _36;
  float _37;
  float _40;
  float _41;
  float _43;
  float _45;
  float _46;
  float _48;
  struct ImVector * _50;

  <bb 2>:
  _8 = cr_max.y;
  _9 = cr_max.x;
  _10 = cr_min.y;
  _11 = cr_min.x;
  ImVec4::ImVec4 (&cr, _11, _10, _9, _8);
  if (intersect_with_current_clip_rect_13(D) != 0)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 3>:
  _15 = this_14(D)->_ClipRectStack.Size;
  if (_15 != 0)
    goto <bb 4>;
  else
    goto <bb 13>;

  <bb 4>:
  _16 = this_14(D)->_ClipRectStack.Data;
  _17 = this_14(D)->_ClipRectStack.Size;
  _18 = (long unsigned int) _17;
  _19 = _18 * 16;
  _20 = _19 + 18446744073709551600;
  _21 = _16 + _20;
  current = MEM[(const struct ImVec4 &)_21];
  _23 = cr.x;
  _24 = current.x;
  if (_23 < _24)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _25 = current.x;
  cr.x = _25;

  <bb 6>:
  _27 = cr.y;
  _28 = current.y;
  if (_27 < _28)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _29 = current.y;
  cr.y = _29;

  <bb 8>:
  _31 = cr.z;
  _32 = current.z;
  if (_31 > _32)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _33 = current.z;
  cr.z = _33;

  <bb 10>:
  _35 = cr.w;
  _36 = current.w;
  if (_35 > _36)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _37 = current.w;
  cr.w = _37;

  <bb 12>:
  current ={v} {CLOBBER};

  <bb 13>:
  _40 = cr.z;
  _41 = cr.x;
  _43 = ImMax (_41, _40);
  cr.z = _43;
  _45 = cr.w;
  _46 = cr.y;
  _48 = ImMax (_46, _45);
  cr.w = _48;
  _50 = &this_14(D)->_ClipRectStack;
  ImVector<ImVec4>::push_back (_50, &cr);
  ImDrawList::UpdateClipRect (this_14(D));
  cr ={v} {CLOBBER};
  return;

}



;; Function void ImDrawList::PushClipRectFullScreen() (_ZN10ImDrawList22PushClipRectFullScreenEv, funcdef_no=700, decl_uid=5811, cgraph_uid=599, symbol_order=599)

void ImDrawList::PushClipRectFullScreen() (struct ImDrawList * const this)
{
  float D.27205;
  const struct ImDrawListSharedData * D.27204;
  float D.27203;
  const struct ImDrawListSharedData * D.27202;
  struct ImVec2 D.17899;
  float D.27201;
  const struct ImDrawListSharedData * D.27200;
  float D.27199;
  const struct ImDrawListSharedData * D.27198;
  struct ImVec2 D.17900;
  const struct ImDrawListSharedData * _3;
  float _4;
  const struct ImDrawListSharedData * _5;
  float _6;
  const struct ImDrawListSharedData * _8;
  float _9;
  const struct ImDrawListSharedData * _10;
  float _11;

  <bb 2>:
  _3 = this_2(D)->_Data;
  _4 = _3->ClipRectFullscreen.w;
  _5 = this_2(D)->_Data;
  _6 = _5->ClipRectFullscreen.z;
  ImVec2::ImVec2 (&D.17900, _6, _4);
  _8 = this_2(D)->_Data;
  _9 = _8->ClipRectFullscreen.y;
  _10 = this_2(D)->_Data;
  _11 = _10->ClipRectFullscreen.x;
  ImVec2::ImVec2 (&D.17899, _11, _9);
  ImDrawList::PushClipRect (this_2(D), D.17899, D.17900, 0);
  D.17899 ={v} {CLOBBER};
  D.17900 ={v} {CLOBBER};
  return;

}



;; Function void ImDrawList::PopClipRect() (_ZN10ImDrawList11PopClipRectEv, funcdef_no=701, decl_uid=5813, cgraph_uid=600, symbol_order=600)

void ImDrawList::PopClipRect() (struct ImDrawList * const this)
{
  static const char __PRETTY_FUNCTION__[31] = "void ImDrawList::PopClipRect()";
  struct ImVector * D.27212;
  int D.27208;
  int _3;
  struct ImVector * _4;

  <bb 2>:
  _3 = this_2(D)->_ClipRectStack.Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("_ClipRectStack.Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 460, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = &this_2(D)->_ClipRectStack;
  ImVector<ImVec4>::pop_back (_4);
  ImDrawList::UpdateClipRect (this_2(D));
  return;

}



;; Function void ImDrawList::PushTextureID(ImTextureID) (_ZN10ImDrawList13PushTextureIDEPv, funcdef_no=702, decl_uid=5816, cgraph_uid=601, symbol_order=601)

void ImDrawList::PushTextureID(ImTextureID) (struct ImDrawList * const this, void * texture_id)
{
  struct ImVector * D.27219;
  struct ImVector * _2;

  <bb 2>:
  _2 = &this_1(D)->_TextureIdStack;
  ImVector<void*>::push_back (_2, &texture_id);
  ImDrawList::UpdateTextureID (this_1(D));
  return;

}



;; Function void ImDrawList::PopTextureID() (_ZN10ImDrawList12PopTextureIDEv, funcdef_no=703, decl_uid=5818, cgraph_uid=602, symbol_order=602)

void ImDrawList::PopTextureID() (struct ImDrawList * const this)
{
  static const char __PRETTY_FUNCTION__[32] = "void ImDrawList::PopTextureID()";
  struct ImVector * D.27240;
  int D.27236;
  int _3;
  struct ImVector * _4;

  <bb 2>:
  _3 = this_2(D)->_TextureIdStack.Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("_TextureIdStack.Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 473, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = &this_2(D)->_TextureIdStack;
  ImVector<void*>::pop_back (_4);
  ImDrawList::UpdateTextureID (this_2(D));
  return;

}



;; Function ImDrawChannel::ImDrawChannel() (_ZN13ImDrawChannelC2Ev, funcdef_no=706, decl_uid=17928, cgraph_uid=604, symbol_order=604)

ImDrawChannel::ImDrawChannel() (struct ImDrawChannel * const this)
{
  struct ImVector * D.27330;
  struct ImVector * D.27329;
  struct ImVector * D.27328;
  struct ImVector * D.27327;
  struct ImVector * _2;
  struct ImVector * _5;

  <bb 2>:
  _2 = &this_1(D)->CmdBuffer;
  ImVector<ImDrawCmd>::ImVector (_2);
  _5 = &this_1(D)->IdxBuffer;
  ImVector<short unsigned int>::ImVector (_5);
  return;

}



;; Function void ImDrawList::ChannelsSplit(int) (_ZN10ImDrawList13ChannelsSplitEi, funcdef_no=704, decl_uid=6003, cgraph_uid=606, symbol_order=606)

void ImDrawList::ChannelsSplit(int) (struct ImDrawList * const this, int channels_count)
{
  struct ImDrawCmd draw_cmd;
  int i;
  int old_channels_count;
  static const char __PRETTY_FUNCTION__[36] = "void ImDrawList::ChannelsSplit(int)";
  struct ImVector * D.27286;
  struct value_type & D.27285;
  struct ImVector * D.27284;
  void * D.27283;
  void * & D.27282;
  struct ImVector * D.27281;
  struct value_type & D.27280;
  struct ImVector * D.27279;
  int D.27276;
  struct value_type & D.27275;
  struct ImVector * D.27274;
  bool retval.601;
  struct ImVector * D.27272;
  struct value_type & D.27271;
  struct ImVector * D.27270;
  struct ImVector * D.27269;
  struct value_type & D.27268;
  struct ImVector * D.27267;
  struct ImNewDummy D.27265;
  void * D.17921;
  struct ImVector * D.27264;
  void * D.17923;
  struct ImNewDummy D.27263;
  struct ImNewDummy D.17920;
  struct ImNewDummy D.17922;
  struct value_type & D.27258;
  struct ImVector * D.27257;
  struct ImVector * D.27255;
  int D.27251;
  int D.27249;
  int _8;
  int _9;
  struct ImVector * _12;
  struct ImVector * _15;
  struct value_type & _17;
  struct ImVector * _21;
  void * _23;
  void * _25;
  struct ImVector * _38;
  struct value_type & _40;
  struct ImVector * _41;
  struct ImVector * _43;
  struct value_type & _45;
  struct ImVector * _46;
  struct ImVector * _48;
  struct value_type & _50;
  int _51;
  bool retval.601_52;
  struct ImVector * _54;
  struct value_type & _56;
  struct ImVector * _58;
  void * & _60;
  void * _61;
  struct ImVector * _63;
  struct value_type & _65;
  struct ImVector * _66;

  <bb 2>:
  _8 = this_7(D)->_ChannelsCurrent;
  if (_8 == 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  _9 = this_7(D)->_ChannelsCount;
  if (_9 == 1)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:
  __assert_fail ("_ChannelsCurrent == 0 && _ChannelsCount == 1", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 480, &__PRETTY_FUNCTION__);

  <bb 6>:
  old_channels_count_10 = this_7(D)->_Channels.Size;
  if (old_channels_count_10 < channels_count_11(D))
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _12 = &this_7(D)->_Channels;
  ImVector<ImDrawChannel>::resize (_12, channels_count_11(D));

  <bb 8>:
  this_7(D)->_ChannelsCount = channels_count_11(D);
  _15 = &this_7(D)->_Channels;
  _17 = ImVector<ImDrawChannel>::operator[] (_15, 0);
  memset (_17, 0, 32);
  i_19 = 1;

  <bb 9>:
  # i_1 = PHI <i_19(8), i_70(15)>
  if (i_1 >= channels_count_11(D))
    goto <bb 16>;
  else
    goto <bb 10>;

  <bb 10>:
  if (i_1 >= old_channels_count_10)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  D.17922 = D.27263;
  _21 = &this_7(D)->_Channels;
  _23 = ImVector<ImDrawChannel>::operator[] (_21, i_1);
  _25 = operator new (32, D.17922, _23);
  MEM[(struct ImDrawChannel *)_25].CmdBuffer.Size = 0;
  MEM[(struct ImDrawChannel *)_25].CmdBuffer.Capacity = 0;
  MEM[(struct ImDrawChannel *)_25].CmdBuffer.Data = 0B;
  MEM[(struct ImDrawChannel *)_25].IdxBuffer.Size = 0;
  MEM[(struct ImDrawChannel *)_25].IdxBuffer.Capacity = 0;
  MEM[(struct ImDrawChannel *)_25].IdxBuffer.Data = 0B;
  ImDrawChannel::ImDrawChannel (_25);
  D.17922 ={v} {CLOBBER};
  D.17920 ={v} {CLOBBER};
  goto <bb 13>;

  <bb 12>:
  _38 = &this_7(D)->_Channels;
  _40 = ImVector<ImDrawChannel>::operator[] (_38, i_1);
  _41 = &_40->CmdBuffer;
  ImVector<ImDrawCmd>::resize (_41, 0);
  _43 = &this_7(D)->_Channels;
  _45 = ImVector<ImDrawChannel>::operator[] (_43, i_1);
  _46 = &_45->IdxBuffer;
  ImVector<short unsigned int>::resize (_46, 0);

  <bb 13>:
  _48 = &this_7(D)->_Channels;
  _50 = ImVector<ImDrawChannel>::operator[] (_48, i_1);
  _51 = _50->CmdBuffer.Size;
  retval.601_52 = _51 == 0;
  if (retval.601_52 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  ImDrawCmd::ImDrawCmd (&draw_cmd);
  _54 = &this_7(D)->_ClipRectStack;
  _56 = ImVector<ImVec4>::back (_54);
  draw_cmd.ClipRect = MEM[(const struct ImVec4 &)_56];
  _58 = &this_7(D)->_TextureIdStack;
  _60 = ImVector<void*>::back (_58);
  _61 = *_60;
  draw_cmd.TextureId = _61;
  _63 = &this_7(D)->_Channels;
  _65 = ImVector<ImDrawChannel>::operator[] (_63, i_1);
  _66 = &_65->CmdBuffer;
  ImVector<ImDrawCmd>::push_back (_66, &draw_cmd);
  draw_cmd ={v} {CLOBBER};

  <bb 15>:
  i_70 = i_1 + 1;
  goto <bb 9>;

  <bb 16>:
  return;

}



;; Function void ImDrawList::ChannelsMerge() (_ZN10ImDrawList13ChannelsMergeEv, funcdef_no=708, decl_uid=6005, cgraph_uid=607, symbol_order=607)

void ImDrawList::ChannelsMerge() (struct ImDrawList * const this)
{
  int sz;
  int sz;
  struct ImDrawChannel & ch;
  int i;
  struct ImDrawChannel & ch;
  int i;
  struct ImDrawCmd * cmd_write;
  int new_idx_buffer_count;
  int new_cmd_buffer_count;
  ImDrawIdx * D.27430;
  long unsigned int D.27429;
  long unsigned int D.27428;
  ImDrawIdx * D.27427;
  ImDrawIdx * D.27426;
  short unsigned int * D.27425;
  long unsigned int D.27424;
  long unsigned int D.27423;
  long unsigned int D.27419;
  long unsigned int D.27418;
  struct ImDrawCmd * D.27417;
  long unsigned int D.27416;
  long unsigned int D.27415;
  struct ImVector * D.27412;
  int D.27410;
  short unsigned int * D.27408;
  sizetype D.27407;
  sizetype D.27406;
  sizetype D.27405;
  sizetype D.27404;
  int D.27403;
  short unsigned int * D.27402;
  sizetype D.27401;
  sizetype D.27400;
  sizetype D.27399;
  sizetype D.27398;
  int D.27397;
  struct ImDrawCmd * D.27396;
  struct ImVector * D.27395;
  int D.27394;
  int D.27393;
  struct ImVector * D.27392;
  int D.27391;
  int D.27390;
  int D.27389;
  int D.27388;
  struct ImVector * D.27386;
  unsigned int D.27382;
  struct value_type & D.27381;
  struct ImVector * D.27380;
  int D.27378;
  bool iftmp.607;
  bool retval.606;
  struct ImVector * D.27373;
  int D.27371;
  struct ImVector * D.27368;
  unsigned int D.27364;
  struct value_type & D.27363;
  struct ImVector * D.27362;
  int D.27360;
  bool iftmp.605;
  bool retval.604;
  int D.27353;
  bool iftmp.605_7;
  bool iftmp.607_8;
  int _22;
  int _24;
  struct ImVector * _25;
  struct value_type & _27;
  unsigned int _28;
  bool iftmp.605_29;
  bool iftmp.605_30;
  bool retval.604_31;
  struct ImVector * _32;
  int _37;
  struct ImVector * _38;
  int _41;
  struct ImVector * _42;
  struct value_type & _44;
  unsigned int _45;
  bool iftmp.607_46;
  bool iftmp.607_47;
  bool retval.606_48;
  struct ImVector * _49;
  int _51;
  int _53;
  int _56;
  int _57;
  struct ImVector * _58;
  int _60;
  int _61;
  struct ImVector * _62;
  struct ImDrawCmd * _64;
  int _65;
  sizetype _66;
  sizetype _67;
  sizetype _68;
  sizetype _69;
  short unsigned int * _71;
  int _72;
  sizetype _73;
  sizetype _74;
  sizetype _75;
  sizetype _76;
  short unsigned int * _77;
  int _80;
  struct ImVector * _81;
  long unsigned int _85;
  long unsigned int _86;
  struct ImDrawCmd * _87;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _93;
  long unsigned int _94;
  short unsigned int * _95;
  ImDrawIdx * _96;
  ImDrawIdx * _98;
  long unsigned int _99;
  long unsigned int _100;
  ImDrawIdx * _101;

  <bb 2>:
  _22 = this_21(D)->_ChannelsCount;
  if (_22 <= 1)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 27> (<L28>);

  <bb 4>:
  ImDrawList::ChannelsSetCurrent (this_21(D), 0);
  _24 = this_21(D)->CmdBuffer.Size;
  if (_24 != 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  _25 = &this_21(D)->CmdBuffer;
  _27 = ImVector<ImDrawCmd>::back (_25);
  _28 = _27->ElemCount;
  if (_28 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.605_29 = 1;
  goto <bb 8>;

  <bb 7>:
  iftmp.605_30 = 0;

  <bb 8>:
  # iftmp.605_7 = PHI <iftmp.605_29(6), iftmp.605_30(7)>
  retval.604_31 = iftmp.605_7;
  if (retval.604_31 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _32 = &this_21(D)->CmdBuffer;
  ImVector<ImDrawCmd>::pop_back (_32);

  <bb 10>:
  new_cmd_buffer_count_34 = 0;
  new_idx_buffer_count_35 = 0;
  i_36 = 1;

  <bb 11>:
  # new_cmd_buffer_count_1 = PHI <new_cmd_buffer_count_34(10), new_cmd_buffer_count_52(18)>
  # new_idx_buffer_count_2 = PHI <new_idx_buffer_count_35(10), new_idx_buffer_count_54(18)>
  # i_3 = PHI <i_36(10), i_55(18)>
  _37 = this_21(D)->_ChannelsCount;
  if (_37 <= i_3)
    goto <bb 19>;
  else
    goto <bb 12>;

  <bb 12>:
  _38 = &this_21(D)->_Channels;
  ch_40 = ImVector<ImDrawChannel>::operator[] (_38, i_3);
  _41 = ch_40->CmdBuffer.Size;
  if (_41 != 0)
    goto <bb 13>;
  else
    goto <bb 15>;

  <bb 13>:
  _42 = &ch_40->CmdBuffer;
  _44 = ImVector<ImDrawCmd>::back (_42);
  _45 = _44->ElemCount;
  if (_45 == 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  iftmp.607_46 = 1;
  goto <bb 16>;

  <bb 15>:
  iftmp.607_47 = 0;

  <bb 16>:
  # iftmp.607_8 = PHI <iftmp.607_46(14), iftmp.607_47(15)>
  retval.606_48 = iftmp.607_8;
  if (retval.606_48 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  _49 = &ch_40->CmdBuffer;
  ImVector<ImDrawCmd>::pop_back (_49);

  <bb 18>:
  _51 = ch_40->CmdBuffer.Size;
  new_cmd_buffer_count_52 = _51 + new_cmd_buffer_count_1;
  _53 = ch_40->IdxBuffer.Size;
  new_idx_buffer_count_54 = _53 + new_idx_buffer_count_2;
  i_55 = i_3 + 1;
  goto <bb 11>;

  <bb 19>:
  _56 = this_21(D)->CmdBuffer.Size;
  _57 = _56 + new_cmd_buffer_count_1;
  _58 = &this_21(D)->CmdBuffer;
  ImVector<ImDrawCmd>::resize (_58, _57);
  _60 = this_21(D)->IdxBuffer.Size;
  _61 = _60 + new_idx_buffer_count_2;
  _62 = &this_21(D)->IdxBuffer;
  ImVector<short unsigned int>::resize (_62, _61);
  _64 = this_21(D)->CmdBuffer.Data;
  _65 = this_21(D)->CmdBuffer.Size;
  _66 = (sizetype) _65;
  _67 = (sizetype) new_cmd_buffer_count_1;
  _68 = _66 - _67;
  _69 = _68 * 48;
  cmd_write_70 = _64 + _69;
  _71 = this_21(D)->IdxBuffer.Data;
  _72 = this_21(D)->IdxBuffer.Size;
  _73 = (sizetype) _72;
  _74 = (sizetype) new_idx_buffer_count_2;
  _75 = _73 - _74;
  _76 = _75 * 2;
  _77 = _71 + _76;
  this_21(D)->_IdxWritePtr = _77;
  i_79 = 1;

  <bb 20>:
  # cmd_write_4 = PHI <cmd_write_70(19), cmd_write_5(25)>
  # i_6 = PHI <i_79(19), i_103(25)>
  _80 = this_21(D)->_ChannelsCount;
  if (_80 <= i_6)
    goto <bb 26>;
  else
    goto <bb 21>;

  <bb 21>:
  _81 = &this_21(D)->_Channels;
  ch_83 = ImVector<ImDrawChannel>::operator[] (_81, i_6);
  sz_84 = ch_83->CmdBuffer.Size;
  if (sz_84 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  _85 = (long unsigned int) sz_84;
  _86 = _85 * 48;
  _87 = ch_83->CmdBuffer.Data;
  memcpy (cmd_write_4, _87, _86);
  _89 = (long unsigned int) sz_84;
  _90 = _89 * 48;
  cmd_write_91 = cmd_write_4 + _90;

  <bb 23>:
  # cmd_write_5 = PHI <cmd_write_4(21), cmd_write_91(22)>
  sz_92 = ch_83->IdxBuffer.Size;
  if (sz_92 != 0)
    goto <bb 24>;
  else
    goto <bb 25>;

  <bb 24>:
  _93 = (long unsigned int) sz_92;
  _94 = _93 * 2;
  _95 = ch_83->IdxBuffer.Data;
  _96 = this_21(D)->_IdxWritePtr;
  memcpy (_96, _95, _94);
  _98 = this_21(D)->_IdxWritePtr;
  _99 = (long unsigned int) sz_92;
  _100 = _99 * 2;
  _101 = _98 + _100;
  this_21(D)->_IdxWritePtr = _101;

  <bb 25>:
  i_103 = i_6 + 1;
  goto <bb 20>;

  <bb 26>:
  ImDrawList::UpdateClipRect (this_21(D));
  this_21(D)->_ChannelsCount = 1;

<L28>:
  return;

}



;; Function void ImDrawList::ChannelsSetCurrent(int) (_ZN10ImDrawList18ChannelsSetCurrentEi, funcdef_no=709, decl_uid=6008, cgraph_uid=608, symbol_order=608)

void ImDrawList::ChannelsSetCurrent(int) (struct ImDrawList * const this, int idx)
{
  static const char __PRETTY_FUNCTION__[41] = "void ImDrawList::ChannelsSetCurrent(int)";
  short unsigned int * D.27476;
  long unsigned int D.27475;
  long unsigned int D.27474;
  int D.27473;
  short unsigned int * D.27472;
  __int128 unsigned D.27471;
  struct ImVector * D.27470;
  struct ImVector * D.27469;
  struct ImDrawChannel * D.27468;
  long unsigned int D.27467;
  long unsigned int D.27466;
  int D.27465;
  struct ImDrawChannel * D.27464;
  __int128 unsigned D.27463;
  struct ImVector * D.27462;
  struct ImVector * D.27461;
  struct ImDrawChannel * D.27460;
  long unsigned int D.27459;
  long unsigned int D.27458;
  int D.27457;
  struct ImDrawChannel * D.27456;
  __int128 unsigned D.27455;
  struct ImVector * D.27454;
  struct ImDrawChannel * D.27453;
  long unsigned int D.27452;
  long unsigned int D.27451;
  int D.27450;
  struct ImDrawChannel * D.27449;
  struct ImVector * D.27448;
  __int128 unsigned D.27447;
  struct ImVector * D.27446;
  struct ImDrawChannel * D.27445;
  long unsigned int D.27444;
  long unsigned int D.27443;
  int D.27442;
  struct ImDrawChannel * D.27441;
  struct ImVector * D.27440;
  int D.27437;
  int D.27433;
  int _4;
  int _6;
  struct ImVector * _7;
  struct ImDrawChannel * _8;
  int _9;
  long unsigned int _10;
  long unsigned int _11;
  struct ImDrawChannel * _12;
  struct ImVector * _13;
  __int128 unsigned _14;
  struct ImVector * _16;
  struct ImDrawChannel * _17;
  int _18;
  long unsigned int _19;
  long unsigned int _20;
  struct ImDrawChannel * _21;
  struct ImVector * _22;
  __int128 unsigned _23;
  struct ImDrawChannel * _26;
  int _27;
  long unsigned int _28;
  long unsigned int _29;
  struct ImDrawChannel * _30;
  struct ImVector * _31;
  struct ImVector * _32;
  __int128 unsigned _33;
  struct ImDrawChannel * _35;
  int _36;
  long unsigned int _37;
  long unsigned int _38;
  struct ImDrawChannel * _39;
  struct ImVector * _40;
  struct ImVector * _41;
  __int128 unsigned _42;
  short unsigned int * _44;
  int _45;
  long unsigned int _46;
  long unsigned int _47;
  short unsigned int * _48;

  <bb 2>:
  _4 = this_3(D)->_ChannelsCount;
  if (_4 > idx_5(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("idx < _ChannelsCount", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 547, &__PRETTY_FUNCTION__);

  <bb 4>:
  _6 = this_3(D)->_ChannelsCurrent;
  if (_6 == idx_5(D))
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  goto <bb 7> (<L5>);

  <bb 6>:
  _7 = &this_3(D)->CmdBuffer;
  _8 = this_3(D)->_Channels.Data;
  _9 = this_3(D)->_ChannelsCurrent;
  _10 = (long unsigned int) _9;
  _11 = _10 * 32;
  _12 = _8 + _11;
  _13 = &_12->CmdBuffer;
  _14 = MEM[(char * {ref-all})_7];
  MEM[(char * {ref-all})_13] = _14;
  _16 = &this_3(D)->IdxBuffer;
  _17 = this_3(D)->_Channels.Data;
  _18 = this_3(D)->_ChannelsCurrent;
  _19 = (long unsigned int) _18;
  _20 = _19 * 32;
  _21 = _17 + _20;
  _22 = &_21->IdxBuffer;
  _23 = MEM[(char * {ref-all})_16];
  MEM[(char * {ref-all})_22] = _23;
  this_3(D)->_ChannelsCurrent = idx_5(D);
  _26 = this_3(D)->_Channels.Data;
  _27 = this_3(D)->_ChannelsCurrent;
  _28 = (long unsigned int) _27;
  _29 = _28 * 32;
  _30 = _26 + _29;
  _31 = &_30->CmdBuffer;
  _32 = &this_3(D)->CmdBuffer;
  _33 = MEM[(char * {ref-all})_31];
  MEM[(char * {ref-all})_32] = _33;
  _35 = this_3(D)->_Channels.Data;
  _36 = this_3(D)->_ChannelsCurrent;
  _37 = (long unsigned int) _36;
  _38 = _37 * 32;
  _39 = _35 + _38;
  _40 = &_39->IdxBuffer;
  _41 = &this_3(D)->IdxBuffer;
  _42 = MEM[(char * {ref-all})_40];
  MEM[(char * {ref-all})_41] = _42;
  _44 = this_3(D)->IdxBuffer.Data;
  _45 = this_3(D)->IdxBuffer.Size;
  _46 = (long unsigned int) _45;
  _47 = _46 * 2;
  _48 = _44 + _47;
  this_3(D)->_IdxWritePtr = _48;

<L5>:
  return;

}



;; Function void ImDrawList::PrimReserve(int, int) (_ZN10ImDrawList11PrimReserveEii, funcdef_no=710, decl_uid=6024, cgraph_uid=609, symbol_order=609)

void ImDrawList::PrimReserve(int, int) (struct ImDrawList * const this, int idx_count, int vtx_count)
{
  int idx_buffer_old_size;
  int vtx_buffer_old_size;
  struct ImDrawCmd & draw_cmd;
  short unsigned int * D.27497;
  long unsigned int D.27496;
  long unsigned int D.27495;
  short unsigned int * D.27494;
  struct ImVector * D.27493;
  int D.27492;
  struct ImDrawVert * D.27491;
  long unsigned int D.27490;
  long unsigned int D.27489;
  struct ImDrawVert * D.27488;
  struct ImVector * D.27487;
  int D.27486;
  unsigned int D.27485;
  unsigned int idx_count.608;
  unsigned int D.27483;
  sizetype D.27482;
  long unsigned int D.27481;
  long unsigned int D.27480;
  int D.27479;
  struct ImDrawCmd * D.27478;
  struct ImDrawCmd * _3;
  int _4;
  long unsigned int _5;
  long unsigned int _6;
  sizetype _7;
  unsigned int _9;
  unsigned int idx_count.608_11;
  unsigned int _12;
  int _16;
  struct ImVector * _17;
  struct ImDrawVert * _19;
  long unsigned int _20;
  long unsigned int _21;
  struct ImDrawVert * _22;
  int _25;
  struct ImVector * _26;
  short unsigned int * _28;
  long unsigned int _29;
  long unsigned int _30;
  short unsigned int * _31;

  <bb 2>:
  _3 = this_2(D)->CmdBuffer.Data;
  _4 = this_2(D)->CmdBuffer.Size;
  _5 = (long unsigned int) _4;
  _6 = _5 * 48;
  _7 = _6 + 18446744073709551568;
  draw_cmd_8 = _3 + _7;
  _9 = draw_cmd_8->ElemCount;
  idx_count.608_11 = (unsigned int) idx_count_10(D);
  _12 = _9 + idx_count.608_11;
  draw_cmd_8->ElemCount = _12;
  vtx_buffer_old_size_14 = this_2(D)->VtxBuffer.Size;
  _16 = vtx_buffer_old_size_14 + vtx_count_15(D);
  _17 = &this_2(D)->VtxBuffer;
  ImVector<ImDrawVert>::resize (_17, _16);
  _19 = this_2(D)->VtxBuffer.Data;
  _20 = (long unsigned int) vtx_buffer_old_size_14;
  _21 = _20 * 20;
  _22 = _19 + _21;
  this_2(D)->_VtxWritePtr = _22;
  idx_buffer_old_size_24 = this_2(D)->IdxBuffer.Size;
  _25 = idx_buffer_old_size_24 + idx_count_10(D);
  _26 = &this_2(D)->IdxBuffer;
  ImVector<short unsigned int>::resize (_26, _25);
  _28 = this_2(D)->IdxBuffer.Data;
  _29 = (long unsigned int) idx_buffer_old_size_24;
  _30 = _29 * 2;
  _31 = _28 + _30;
  this_2(D)->_IdxWritePtr = _31;
  return;

}



;; Function void ImDrawList::PrimRect(const ImVec2&, const ImVec2&, ImU32) (_ZN10ImDrawList8PrimRectERK6ImVec2S2_j, funcdef_no=711, decl_uid=6029, cgraph_uid=610, symbol_order=610)

void ImDrawList::PrimRect(const ImVec2&, const ImVec2&, ImU32) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & c, ImU32 col)
{
  ImDrawIdx idx;
  struct ImVec2 uv;
  struct ImVec2 d;
  struct ImVec2 b;
  ImDrawIdx * D.27545;
  ImDrawIdx * D.27544;
  unsigned int D.27543;
  unsigned int D.27542;
  struct ImDrawVert * D.27541;
  struct ImDrawVert * D.27540;
  struct ImDrawVert * D.27539;
  struct ImDrawVert * D.27538;
  struct ImDrawVert * D.27537;
  struct ImDrawVert * D.27536;
  struct ImDrawVert * D.27535;
  struct ImDrawVert * D.27534;
  struct ImDrawVert * D.27533;
  struct ImDrawVert * D.27532;
  struct ImDrawVert * D.27531;
  struct ImDrawVert * D.27530;
  struct ImDrawVert * D.27529;
  struct ImDrawVert * D.27528;
  struct ImDrawVert * D.27527;
  struct ImDrawVert * D.27526;
  struct ImDrawVert * D.27525;
  struct ImDrawVert * D.27524;
  struct ImDrawVert * D.27523;
  struct ImDrawVert * D.27522;
  struct ImDrawVert * D.27521;
  struct ImDrawVert * D.27520;
  struct ImDrawVert * D.27519;
  short unsigned int D.27518;
  ImDrawIdx * D.27517;
  ImDrawIdx * D.27516;
  short unsigned int D.27515;
  ImDrawIdx * D.27514;
  ImDrawIdx * D.27513;
  ImDrawIdx * D.27512;
  ImDrawIdx * D.27511;
  short unsigned int D.27510;
  ImDrawIdx * D.27509;
  ImDrawIdx * D.27508;
  short unsigned int D.27507;
  ImDrawIdx * D.27506;
  ImDrawIdx * D.27505;
  ImDrawIdx * D.27504;
  unsigned int D.27503;
  const struct ImDrawListSharedData * D.27502;
  float D.27501;
  float D.27500;
  float D.27499;
  float D.27498;
  float _3;
  float _5;
  float _7;
  float _8;
  const struct ImDrawListSharedData * _11;
  unsigned int _13;
  ImDrawIdx * _15;
  ImDrawIdx * _17;
  ImDrawIdx * _18;
  short unsigned int _19;
  ImDrawIdx * _21;
  ImDrawIdx * _22;
  short unsigned int _23;
  ImDrawIdx * _25;
  ImDrawIdx * _26;
  ImDrawIdx * _28;
  ImDrawIdx * _29;
  short unsigned int _30;
  ImDrawIdx * _32;
  ImDrawIdx * _33;
  short unsigned int _34;
  struct ImDrawVert * _36;
  struct ImDrawVert * _38;
  struct ImDrawVert * _40;
  struct ImDrawVert * _43;
  struct ImDrawVert * _44;
  struct ImDrawVert * _46;
  struct ImDrawVert * _47;
  struct ImDrawVert * _49;
  struct ImDrawVert * _50;
  struct ImDrawVert * _52;
  struct ImDrawVert * _53;
  struct ImDrawVert * _55;
  struct ImDrawVert * _56;
  struct ImDrawVert * _58;
  struct ImDrawVert * _59;
  struct ImDrawVert * _61;
  struct ImDrawVert * _62;
  struct ImDrawVert * _64;
  struct ImDrawVert * _65;
  struct ImDrawVert * _67;
  struct ImDrawVert * _68;
  struct ImDrawVert * _70;
  struct ImDrawVert * _71;
  unsigned int _73;
  unsigned int _74;
  ImDrawIdx * _76;
  ImDrawIdx * _77;

  <bb 2>:
  _3 = a_2(D)->y;
  _5 = c_4(D)->x;
  ImVec2::ImVec2 (&b, _5, _3);
  _7 = c_4(D)->y;
  _8 = a_2(D)->x;
  ImVec2::ImVec2 (&d, _8, _7);
  _11 = this_10(D)->_Data;
  uv = _11->TexUvWhitePixel;
  _13 = this_10(D)->_VtxCurrentIdx;
  idx_14 = (ImDrawIdx) _13;
  _15 = this_10(D)->_IdxWritePtr;
  *_15 = idx_14;
  _17 = this_10(D)->_IdxWritePtr;
  _18 = _17 + 2;
  _19 = idx_14 + 1;
  *_18 = _19;
  _21 = this_10(D)->_IdxWritePtr;
  _22 = _21 + 4;
  _23 = idx_14 + 2;
  *_22 = _23;
  _25 = this_10(D)->_IdxWritePtr;
  _26 = _25 + 6;
  *_26 = idx_14;
  _28 = this_10(D)->_IdxWritePtr;
  _29 = _28 + 8;
  _30 = idx_14 + 2;
  *_29 = _30;
  _32 = this_10(D)->_IdxWritePtr;
  _33 = _32 + 10;
  _34 = idx_14 + 3;
  *_33 = _34;
  _36 = this_10(D)->_VtxWritePtr;
  _36->pos = *a_2(D);
  _38 = this_10(D)->_VtxWritePtr;
  _38->uv = uv;
  _40 = this_10(D)->_VtxWritePtr;
  _40->col = col_41(D);
  _43 = this_10(D)->_VtxWritePtr;
  _44 = _43 + 20;
  _44->pos = b;
  _46 = this_10(D)->_VtxWritePtr;
  _47 = _46 + 20;
  _47->uv = uv;
  _49 = this_10(D)->_VtxWritePtr;
  _50 = _49 + 20;
  _50->col = col_41(D);
  _52 = this_10(D)->_VtxWritePtr;
  _53 = _52 + 40;
  _53->pos = *c_4(D);
  _55 = this_10(D)->_VtxWritePtr;
  _56 = _55 + 40;
  _56->uv = uv;
  _58 = this_10(D)->_VtxWritePtr;
  _59 = _58 + 40;
  _59->col = col_41(D);
  _61 = this_10(D)->_VtxWritePtr;
  _62 = _61 + 60;
  _62->pos = d;
  _64 = this_10(D)->_VtxWritePtr;
  _65 = _64 + 60;
  _65->uv = uv;
  _67 = this_10(D)->_VtxWritePtr;
  _68 = _67 + 60;
  _68->col = col_41(D);
  _70 = this_10(D)->_VtxWritePtr;
  _71 = _70 + 80;
  this_10(D)->_VtxWritePtr = _71;
  _73 = this_10(D)->_VtxCurrentIdx;
  _74 = _73 + 4;
  this_10(D)->_VtxCurrentIdx = _74;
  _76 = this_10(D)->_IdxWritePtr;
  _77 = _76 + 12;
  this_10(D)->_IdxWritePtr = _77;
  b ={v} {CLOBBER};
  d ={v} {CLOBBER};
  uv ={v} {CLOBBER};
  return;

}



;; Function void ImDrawList::PrimRectUV(const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (_ZN10ImDrawList10PrimRectUVERK6ImVec2S2_S2_S2_j, funcdef_no=712, decl_uid=6036, cgraph_uid=611, symbol_order=611)

void ImDrawList::PrimRectUV(const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & c, const struct ImVec2 & uv_a, const struct ImVec2 & uv_c, ImU32 col)
{
  ImDrawIdx idx;
  struct ImVec2 uv_d;
  struct ImVec2 uv_b;
  struct ImVec2 d;
  struct ImVec2 b;
  ImDrawIdx * D.27596;
  ImDrawIdx * D.27595;
  unsigned int D.27594;
  unsigned int D.27593;
  struct ImDrawVert * D.27592;
  struct ImDrawVert * D.27591;
  struct ImDrawVert * D.27590;
  struct ImDrawVert * D.27589;
  struct ImDrawVert * D.27588;
  struct ImDrawVert * D.27587;
  struct ImDrawVert * D.27586;
  struct ImDrawVert * D.27585;
  struct ImDrawVert * D.27584;
  struct ImDrawVert * D.27583;
  struct ImDrawVert * D.27582;
  struct ImDrawVert * D.27581;
  struct ImDrawVert * D.27580;
  struct ImDrawVert * D.27579;
  struct ImDrawVert * D.27578;
  struct ImDrawVert * D.27577;
  struct ImDrawVert * D.27576;
  struct ImDrawVert * D.27575;
  struct ImDrawVert * D.27574;
  struct ImDrawVert * D.27573;
  struct ImDrawVert * D.27572;
  struct ImDrawVert * D.27571;
  struct ImDrawVert * D.27570;
  short unsigned int D.27569;
  ImDrawIdx * D.27568;
  ImDrawIdx * D.27567;
  short unsigned int D.27566;
  ImDrawIdx * D.27565;
  ImDrawIdx * D.27564;
  ImDrawIdx * D.27563;
  ImDrawIdx * D.27562;
  short unsigned int D.27561;
  ImDrawIdx * D.27560;
  ImDrawIdx * D.27559;
  short unsigned int D.27558;
  ImDrawIdx * D.27557;
  ImDrawIdx * D.27556;
  ImDrawIdx * D.27555;
  unsigned int D.27554;
  float D.27553;
  float D.27552;
  float D.27551;
  float D.27550;
  float D.27549;
  float D.27548;
  float D.27547;
  float D.27546;
  float _3;
  float _5;
  float _7;
  float _8;
  float _11;
  float _13;
  float _15;
  float _16;
  unsigned int _19;
  ImDrawIdx * _21;
  ImDrawIdx * _23;
  ImDrawIdx * _24;
  short unsigned int _25;
  ImDrawIdx * _27;
  ImDrawIdx * _28;
  short unsigned int _29;
  ImDrawIdx * _31;
  ImDrawIdx * _32;
  ImDrawIdx * _34;
  ImDrawIdx * _35;
  short unsigned int _36;
  ImDrawIdx * _38;
  ImDrawIdx * _39;
  short unsigned int _40;
  struct ImDrawVert * _42;
  struct ImDrawVert * _44;
  struct ImDrawVert * _46;
  struct ImDrawVert * _49;
  struct ImDrawVert * _50;
  struct ImDrawVert * _52;
  struct ImDrawVert * _53;
  struct ImDrawVert * _55;
  struct ImDrawVert * _56;
  struct ImDrawVert * _58;
  struct ImDrawVert * _59;
  struct ImDrawVert * _61;
  struct ImDrawVert * _62;
  struct ImDrawVert * _64;
  struct ImDrawVert * _65;
  struct ImDrawVert * _67;
  struct ImDrawVert * _68;
  struct ImDrawVert * _70;
  struct ImDrawVert * _71;
  struct ImDrawVert * _73;
  struct ImDrawVert * _74;
  struct ImDrawVert * _76;
  struct ImDrawVert * _77;
  unsigned int _79;
  unsigned int _80;
  ImDrawIdx * _82;
  ImDrawIdx * _83;

  <bb 2>:
  _3 = a_2(D)->y;
  _5 = c_4(D)->x;
  ImVec2::ImVec2 (&b, _5, _3);
  _7 = c_4(D)->y;
  _8 = a_2(D)->x;
  ImVec2::ImVec2 (&d, _8, _7);
  _11 = uv_a_10(D)->y;
  _13 = uv_c_12(D)->x;
  ImVec2::ImVec2 (&uv_b, _13, _11);
  _15 = uv_c_12(D)->y;
  _16 = uv_a_10(D)->x;
  ImVec2::ImVec2 (&uv_d, _16, _15);
  _19 = this_18(D)->_VtxCurrentIdx;
  idx_20 = (ImDrawIdx) _19;
  _21 = this_18(D)->_IdxWritePtr;
  *_21 = idx_20;
  _23 = this_18(D)->_IdxWritePtr;
  _24 = _23 + 2;
  _25 = idx_20 + 1;
  *_24 = _25;
  _27 = this_18(D)->_IdxWritePtr;
  _28 = _27 + 4;
  _29 = idx_20 + 2;
  *_28 = _29;
  _31 = this_18(D)->_IdxWritePtr;
  _32 = _31 + 6;
  *_32 = idx_20;
  _34 = this_18(D)->_IdxWritePtr;
  _35 = _34 + 8;
  _36 = idx_20 + 2;
  *_35 = _36;
  _38 = this_18(D)->_IdxWritePtr;
  _39 = _38 + 10;
  _40 = idx_20 + 3;
  *_39 = _40;
  _42 = this_18(D)->_VtxWritePtr;
  _42->pos = *a_2(D);
  _44 = this_18(D)->_VtxWritePtr;
  _44->uv = *uv_a_10(D);
  _46 = this_18(D)->_VtxWritePtr;
  _46->col = col_47(D);
  _49 = this_18(D)->_VtxWritePtr;
  _50 = _49 + 20;
  _50->pos = b;
  _52 = this_18(D)->_VtxWritePtr;
  _53 = _52 + 20;
  _53->uv = uv_b;
  _55 = this_18(D)->_VtxWritePtr;
  _56 = _55 + 20;
  _56->col = col_47(D);
  _58 = this_18(D)->_VtxWritePtr;
  _59 = _58 + 40;
  _59->pos = *c_4(D);
  _61 = this_18(D)->_VtxWritePtr;
  _62 = _61 + 40;
  _62->uv = *uv_c_12(D);
  _64 = this_18(D)->_VtxWritePtr;
  _65 = _64 + 40;
  _65->col = col_47(D);
  _67 = this_18(D)->_VtxWritePtr;
  _68 = _67 + 60;
  _68->pos = d;
  _70 = this_18(D)->_VtxWritePtr;
  _71 = _70 + 60;
  _71->uv = uv_d;
  _73 = this_18(D)->_VtxWritePtr;
  _74 = _73 + 60;
  _74->col = col_47(D);
  _76 = this_18(D)->_VtxWritePtr;
  _77 = _76 + 80;
  this_18(D)->_VtxWritePtr = _77;
  _79 = this_18(D)->_VtxCurrentIdx;
  _80 = _79 + 4;
  this_18(D)->_VtxCurrentIdx = _80;
  _82 = this_18(D)->_IdxWritePtr;
  _83 = _82 + 12;
  this_18(D)->_IdxWritePtr = _83;
  b ={v} {CLOBBER};
  d ={v} {CLOBBER};
  uv_b ={v} {CLOBBER};
  uv_d ={v} {CLOBBER};
  return;

}



;; Function void ImDrawList::PrimQuadUV(const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (_ZN10ImDrawList10PrimQuadUVERK6ImVec2S2_S2_S2_S2_S2_S2_S2_j, funcdef_no=713, decl_uid=6047, cgraph_uid=612, symbol_order=612)

void ImDrawList::PrimQuadUV(const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & b, const struct ImVec2 & c, const struct ImVec2 & d, const struct ImVec2 & uv_a, const struct ImVec2 & uv_b, const struct ImVec2 & uv_c, const struct ImVec2 & uv_d, ImU32 col)
{
  ImDrawIdx idx;
  ImDrawIdx * D.27639;
  ImDrawIdx * D.27638;
  unsigned int D.27637;
  unsigned int D.27636;
  struct ImDrawVert * D.27635;
  struct ImDrawVert * D.27634;
  struct ImDrawVert * D.27633;
  struct ImDrawVert * D.27632;
  struct ImDrawVert * D.27631;
  struct ImDrawVert * D.27630;
  struct ImDrawVert * D.27629;
  struct ImDrawVert * D.27628;
  struct ImDrawVert * D.27627;
  struct ImDrawVert * D.27626;
  struct ImDrawVert * D.27625;
  struct ImDrawVert * D.27624;
  struct ImDrawVert * D.27623;
  struct ImDrawVert * D.27622;
  struct ImDrawVert * D.27621;
  struct ImDrawVert * D.27620;
  struct ImDrawVert * D.27619;
  struct ImDrawVert * D.27618;
  struct ImDrawVert * D.27617;
  struct ImDrawVert * D.27616;
  struct ImDrawVert * D.27615;
  struct ImDrawVert * D.27614;
  struct ImDrawVert * D.27613;
  short unsigned int D.27612;
  ImDrawIdx * D.27611;
  ImDrawIdx * D.27610;
  short unsigned int D.27609;
  ImDrawIdx * D.27608;
  ImDrawIdx * D.27607;
  ImDrawIdx * D.27606;
  ImDrawIdx * D.27605;
  short unsigned int D.27604;
  ImDrawIdx * D.27603;
  ImDrawIdx * D.27602;
  short unsigned int D.27601;
  ImDrawIdx * D.27600;
  ImDrawIdx * D.27599;
  ImDrawIdx * D.27598;
  unsigned int D.27597;
  unsigned int _3;
  ImDrawIdx * _5;
  ImDrawIdx * _7;
  ImDrawIdx * _8;
  short unsigned int _9;
  ImDrawIdx * _11;
  ImDrawIdx * _12;
  short unsigned int _13;
  ImDrawIdx * _15;
  ImDrawIdx * _16;
  ImDrawIdx * _18;
  ImDrawIdx * _19;
  short unsigned int _20;
  ImDrawIdx * _22;
  ImDrawIdx * _23;
  short unsigned int _24;
  struct ImDrawVert * _26;
  struct ImDrawVert * _29;
  struct ImDrawVert * _32;
  struct ImDrawVert * _35;
  struct ImDrawVert * _36;
  struct ImDrawVert * _39;
  struct ImDrawVert * _40;
  struct ImDrawVert * _43;
  struct ImDrawVert * _44;
  struct ImDrawVert * _46;
  struct ImDrawVert * _47;
  struct ImDrawVert * _50;
  struct ImDrawVert * _51;
  struct ImDrawVert * _54;
  struct ImDrawVert * _55;
  struct ImDrawVert * _57;
  struct ImDrawVert * _58;
  struct ImDrawVert * _61;
  struct ImDrawVert * _62;
  struct ImDrawVert * _65;
  struct ImDrawVert * _66;
  struct ImDrawVert * _68;
  struct ImDrawVert * _69;
  unsigned int _71;
  unsigned int _72;
  ImDrawIdx * _74;
  ImDrawIdx * _75;

  <bb 2>:
  _3 = this_2(D)->_VtxCurrentIdx;
  idx_4 = (ImDrawIdx) _3;
  _5 = this_2(D)->_IdxWritePtr;
  *_5 = idx_4;
  _7 = this_2(D)->_IdxWritePtr;
  _8 = _7 + 2;
  _9 = idx_4 + 1;
  *_8 = _9;
  _11 = this_2(D)->_IdxWritePtr;
  _12 = _11 + 4;
  _13 = idx_4 + 2;
  *_12 = _13;
  _15 = this_2(D)->_IdxWritePtr;
  _16 = _15 + 6;
  *_16 = idx_4;
  _18 = this_2(D)->_IdxWritePtr;
  _19 = _18 + 8;
  _20 = idx_4 + 2;
  *_19 = _20;
  _22 = this_2(D)->_IdxWritePtr;
  _23 = _22 + 10;
  _24 = idx_4 + 3;
  *_23 = _24;
  _26 = this_2(D)->_VtxWritePtr;
  _26->pos = *a_27(D);
  _29 = this_2(D)->_VtxWritePtr;
  _29->uv = *uv_a_30(D);
  _32 = this_2(D)->_VtxWritePtr;
  _32->col = col_33(D);
  _35 = this_2(D)->_VtxWritePtr;
  _36 = _35 + 20;
  _36->pos = *b_37(D);
  _39 = this_2(D)->_VtxWritePtr;
  _40 = _39 + 20;
  _40->uv = *uv_b_41(D);
  _43 = this_2(D)->_VtxWritePtr;
  _44 = _43 + 20;
  _44->col = col_33(D);
  _46 = this_2(D)->_VtxWritePtr;
  _47 = _46 + 40;
  _47->pos = *c_48(D);
  _50 = this_2(D)->_VtxWritePtr;
  _51 = _50 + 40;
  _51->uv = *uv_c_52(D);
  _54 = this_2(D)->_VtxWritePtr;
  _55 = _54 + 40;
  _55->col = col_33(D);
  _57 = this_2(D)->_VtxWritePtr;
  _58 = _57 + 60;
  _58->pos = *d_59(D);
  _61 = this_2(D)->_VtxWritePtr;
  _62 = _61 + 60;
  _62->uv = *uv_d_63(D);
  _65 = this_2(D)->_VtxWritePtr;
  _66 = _65 + 60;
  _66->col = col_33(D);
  _68 = this_2(D)->_VtxWritePtr;
  _69 = _68 + 80;
  this_2(D)->_VtxWritePtr = _69;
  _71 = this_2(D)->_VtxCurrentIdx;
  _72 = _71 + 4;
  this_2(D)->_VtxCurrentIdx = _72;
  _74 = this_2(D)->_IdxWritePtr;
  _75 = _74 + 12;
  this_2(D)->_IdxWritePtr = _75;
  return;

}



;; Function void ImDrawList::AddPolyline(const ImVec2*, int, ImU32, bool, float) (_ZN10ImDrawList11AddPolylineEPK6ImVec2ijbf, funcdef_no=714, decl_uid=5945, cgraph_uid=613, symbol_order=613)

void ImDrawList::AddPolyline(const ImVec2*, int, ImU32, bool, float) (struct ImDrawList * const this, const struct ImVec2 * points, const int points_count, ImU32 col, bool closed, float thickness)
{
  const float dy;
  const float dx;
  struct ImVec2 diff;
  const struct ImVec2 & p2;
  const struct ImVec2 & p1;
  const int i2;
  int i1;
  const int vtx_count;
  const int idx_count;
  int i;
  float scale;
  struct ImVec2 dm_in;
  struct ImVec2 dm_out;
  float dmr2;
  struct ImVec2 dm;
  unsigned int idx2;
  const int i2;
  int i1;
  unsigned int idx1;
  const float half_inner_thickness;
  int i;
  float scale;
  float dmr2;
  struct ImVec2 dm;
  unsigned int idx2;
  const int i2;
  int i1;
  unsigned int idx1;
  struct ImVec2 diff;
  const int i2;
  int i1;
  struct ImVec2 * temp_points;
  struct ImVec2 * temp_normals;
  const int vtx_count;
  const int idx_count;
  const ImU32 col_trans;
  const float AA_SIZE;
  const bool thick_line;
  int count;
  const struct ImVec2 uv;
  unsigned int D.28191;
  unsigned int D.28190;
  ImDrawIdx * D.28189;
  ImDrawIdx * D.28188;
  short unsigned int D.28187;
  short unsigned int D.28186;
  unsigned int D.28185;
  ImDrawIdx * D.28184;
  ImDrawIdx * D.28183;
  short unsigned int D.28182;
  short unsigned int D.28181;
  unsigned int D.28180;
  ImDrawIdx * D.28179;
  ImDrawIdx * D.28178;
  short unsigned int D.28177;
  unsigned int D.28176;
  ImDrawIdx * D.28175;
  ImDrawIdx * D.28174;
  short unsigned int D.28173;
  short unsigned int D.28172;
  unsigned int D.28171;
  ImDrawIdx * D.28170;
  ImDrawIdx * D.28169;
  short unsigned int D.28168;
  short unsigned int D.28167;
  unsigned int D.28166;
  ImDrawIdx * D.28165;
  ImDrawIdx * D.28164;
  short unsigned int D.28163;
  unsigned int D.28162;
  ImDrawIdx * D.28161;
  struct ImDrawVert * D.28160;
  struct ImDrawVert * D.28159;
  struct ImDrawVert * D.28158;
  struct ImDrawVert * D.28157;
  struct ImDrawVert * D.28156;
  struct ImDrawVert * D.28155;
  float D.28154;
  float D.28153;
  struct ImDrawVert * D.28152;
  struct ImDrawVert * D.28151;
  float D.28150;
  float D.28149;
  struct ImDrawVert * D.28148;
  struct ImDrawVert * D.28147;
  struct ImDrawVert * D.28146;
  struct ImDrawVert * D.28145;
  struct ImDrawVert * D.28144;
  struct ImDrawVert * D.28143;
  float D.28142;
  float D.28141;
  struct ImDrawVert * D.28140;
  struct ImDrawVert * D.28139;
  float D.28138;
  float D.28137;
  struct ImDrawVert * D.28136;
  struct ImDrawVert * D.28135;
  struct ImDrawVert * D.28134;
  struct ImDrawVert * D.28133;
  struct ImDrawVert * D.28132;
  struct ImDrawVert * D.28131;
  float D.28130;
  float D.28129;
  struct ImDrawVert * D.28128;
  struct ImDrawVert * D.28127;
  float D.28126;
  float D.28125;
  struct ImDrawVert * D.28124;
  struct ImDrawVert * D.28123;
  struct ImDrawVert * D.28122;
  struct ImDrawVert * D.28121;
  float D.28120;
  float D.28119;
  struct ImDrawVert * D.28118;
  float D.28117;
  float D.28116;
  struct ImDrawVert * D.28115;
  float D.28114;
  float D.28113;
  float D.28112;
  float D.28111;
  float D.28110;
  long unsigned int D.28109;
  long unsigned int D.28108;
  long unsigned int D.28107;
  long unsigned int D.28106;
  int D.28102;
  int iftmp.628;
  unsigned int D.28097;
  unsigned int D.28096;
  short unsigned int D.28095;
  unsigned int D.28094;
  struct ImDrawVert * D.28093;
  struct ImDrawVert * D.28092;
  struct ImDrawVert * D.28091;
  struct ImDrawVert * D.28090;
  struct ImDrawVert * D.28089;
  struct ImDrawVert * D.28088;
  struct ImVec2 * D.28087;
  sizetype D.28086;
  long unsigned int D.28085;
  long unsigned int D.28084;
  struct ImDrawVert * D.28083;
  struct ImDrawVert * D.28082;
  struct ImDrawVert * D.28081;
  struct ImDrawVert * D.28080;
  struct ImDrawVert * D.28079;
  struct ImDrawVert * D.28078;
  struct ImVec2 * D.28077;
  sizetype D.28076;
  long unsigned int D.28075;
  long unsigned int D.28074;
  struct ImDrawVert * D.28073;
  struct ImDrawVert * D.28072;
  struct ImDrawVert * D.28071;
  struct ImDrawVert * D.28070;
  struct ImDrawVert * D.28069;
  struct ImDrawVert * D.28068;
  struct ImVec2 * D.28067;
  sizetype D.28066;
  long unsigned int D.28065;
  long unsigned int D.28064;
  struct ImDrawVert * D.28063;
  struct ImDrawVert * D.28062;
  struct ImDrawVert * D.28061;
  struct ImDrawVert * D.28060;
  struct ImVec2 * D.28059;
  long unsigned int D.28058;
  long unsigned int D.28057;
  struct ImDrawVert * D.28056;
  ImDrawIdx * D.28053;
  ImDrawIdx * D.28052;
  short unsigned int D.28051;
  short unsigned int D.28050;
  ImDrawIdx * D.28049;
  ImDrawIdx * D.28048;
  short unsigned int D.28047;
  short unsigned int D.28046;
  ImDrawIdx * D.28045;
  ImDrawIdx * D.28044;
  short unsigned int D.28043;
  short unsigned int D.28042;
  ImDrawIdx * D.28041;
  ImDrawIdx * D.28040;
  short unsigned int D.28039;
  short unsigned int D.28038;
  ImDrawIdx * D.28037;
  ImDrawIdx * D.28036;
  short unsigned int D.28035;
  short unsigned int D.28034;
  ImDrawIdx * D.28033;
  ImDrawIdx * D.28032;
  short unsigned int D.28031;
  short unsigned int D.28030;
  ImDrawIdx * D.28029;
  ImDrawIdx * D.28028;
  short unsigned int D.28027;
  short unsigned int D.28026;
  ImDrawIdx * D.28025;
  ImDrawIdx * D.28024;
  short unsigned int D.28023;
  ImDrawIdx * D.28022;
  ImDrawIdx * D.28021;
  short unsigned int D.28020;
  ImDrawIdx * D.28019;
  ImDrawIdx * D.28018;
  short unsigned int D.28017;
  ImDrawIdx * D.28016;
  ImDrawIdx * D.28015;
  short unsigned int D.28014;
  short unsigned int D.28013;
  ImDrawIdx * D.28012;
  ImDrawIdx * D.28011;
  short unsigned int D.28010;
  short unsigned int D.28009;
  ImDrawIdx * D.28008;
  ImDrawIdx * D.28007;
  short unsigned int D.28006;
  short unsigned int D.28005;
  ImDrawIdx * D.28004;
  ImDrawIdx * D.28003;
  short unsigned int D.28002;
  short unsigned int D.28001;
  ImDrawIdx * D.28000;
  ImDrawIdx * D.27999;
  short unsigned int D.27998;
  short unsigned int D.27997;
  ImDrawIdx * D.27996;
  ImDrawIdx * D.27995;
  short unsigned int D.27994;
  short unsigned int D.27993;
  ImDrawIdx * D.27992;
  ImDrawIdx * D.27991;
  short unsigned int D.27990;
  short unsigned int D.27989;
  ImDrawIdx * D.27988;
  ImDrawIdx * D.27987;
  short unsigned int D.27986;
  short unsigned int D.27985;
  ImDrawIdx * D.27984;
  const struct ImVec2 * D.27983;
  long unsigned int D.27982;
  long unsigned int D.27981;
  struct ImVec2 * D.27980;
  sizetype D.27979;
  long unsigned int D.27978;
  long unsigned int D.27977;
  const struct ImVec2 * D.27976;
  long unsigned int D.27975;
  long unsigned int D.27974;
  struct ImVec2 * D.27973;
  sizetype D.27972;
  long unsigned int D.27971;
  long unsigned int D.27970;
  const struct ImVec2 * D.27969;
  long unsigned int D.27968;
  long unsigned int D.27967;
  struct ImVec2 * D.27966;
  sizetype D.27965;
  long unsigned int D.27964;
  long unsigned int D.27963;
  const struct ImVec2 * D.27962;
  long unsigned int D.27961;
  long unsigned int D.27960;
  struct ImVec2 * D.27959;
  long unsigned int D.27958;
  long unsigned int D.27957;
  float half_inner_thickness.627;
  float D.27955;
  float half_inner_thickness.626;
  float D.27947;
  float D.27946;
  float D.27945;
  float D.27944;
  float D.27943;
  float D.27942;
  struct ImVec2 * D.27941;
  long unsigned int D.27940;
  long unsigned int D.27939;
  struct ImVec2 * D.27938;
  long unsigned int D.27937;
  long unsigned int D.27936;
  struct ImVec2 D.18084;
  int D.27932;
  unsigned int iftmp.625;
  int D.27927;
  int iftmp.624;
  const struct ImVec2 * D.27922;
  sizetype D.27921;
  long unsigned int D.27920;
  long unsigned int D.27919;
  struct ImVec2 * D.27918;
  sizetype D.27917;
  long unsigned int D.27916;
  long unsigned int D.27915;
  float D.27914;
  float half_inner_thickness.623;
  struct ImVec2 D.18077;
  struct ImVec2 * D.27912;
  sizetype D.27911;
  long unsigned int D.27910;
  long unsigned int D.27909;
  int D.27908;
  const struct ImVec2 * D.27907;
  sizetype D.27906;
  long unsigned int D.27905;
  long unsigned int D.27904;
  struct ImVec2 * D.27903;
  sizetype D.27902;
  long unsigned int D.27901;
  long unsigned int D.27900;
  float half_inner_thickness.622;
  struct ImVec2 D.18075;
  struct ImVec2 * D.27898;
  sizetype D.27897;
  long unsigned int D.27896;
  long unsigned int D.27895;
  int D.27894;
  const struct ImVec2 * D.27893;
  sizetype D.27892;
  long unsigned int D.27891;
  long unsigned int D.27890;
  struct ImVec2 * D.27889;
  sizetype D.27888;
  long unsigned int D.27887;
  long unsigned int D.27886;
  float half_inner_thickness.621;
  struct ImVec2 D.18073;
  struct ImVec2 * D.27884;
  sizetype D.27883;
  long unsigned int D.27882;
  long unsigned int D.27881;
  int D.27880;
  const struct ImVec2 * D.27879;
  sizetype D.27878;
  long unsigned int D.27877;
  long unsigned int D.27876;
  struct ImVec2 * D.27875;
  sizetype D.27874;
  long unsigned int D.27873;
  long unsigned int D.27872;
  float D.27871;
  float half_inner_thickness.620;
  struct ImVec2 D.18071;
  struct ImVec2 * D.27869;
  long unsigned int D.27868;
  long unsigned int D.27867;
  int D.27866;
  float D.27865;
  float half_inner_thickness.619;
  struct ImVec2 D.18069;
  struct ImVec2 * D.27863;
  float half_inner_thickness.618;
  struct ImVec2 D.18067;
  struct ImVec2 * D.27861;
  float half_inner_thickness.617;
  struct ImVec2 D.18065;
  struct ImVec2 * D.27859;
  float D.27858;
  float half_inner_thickness.616;
  struct ImVec2 D.18063;
  bool D.27854;
  float half_inner_thickness.615;
  float D.27852;
  struct ImDrawVert * D.27850;
  struct ImDrawVert * D.27849;
  struct ImDrawVert * D.27848;
  struct ImDrawVert * D.27847;
  struct ImDrawVert * D.27846;
  struct ImDrawVert * D.27845;
  struct ImVec2 * D.27844;
  sizetype D.27843;
  long unsigned int D.27842;
  long unsigned int D.27841;
  struct ImDrawVert * D.27840;
  struct ImDrawVert * D.27839;
  struct ImDrawVert * D.27838;
  struct ImDrawVert * D.27837;
  struct ImDrawVert * D.27836;
  struct ImDrawVert * D.27835;
  struct ImVec2 * D.27834;
  long unsigned int D.27833;
  long unsigned int D.27832;
  struct ImDrawVert * D.27831;
  struct ImDrawVert * D.27830;
  struct ImDrawVert * D.27829;
  struct ImDrawVert * D.27828;
  const struct ImVec2 * D.27827;
  long unsigned int D.27826;
  long unsigned int D.27825;
  struct ImDrawVert * D.27824;
  ImDrawIdx * D.27821;
  ImDrawIdx * D.27820;
  short unsigned int D.27819;
  short unsigned int D.27818;
  ImDrawIdx * D.27817;
  ImDrawIdx * D.27816;
  short unsigned int D.27815;
  ImDrawIdx * D.27814;
  ImDrawIdx * D.27813;
  short unsigned int D.27812;
  ImDrawIdx * D.27811;
  ImDrawIdx * D.27810;
  short unsigned int D.27809;
  ImDrawIdx * D.27808;
  ImDrawIdx * D.27807;
  short unsigned int D.27806;
  short unsigned int D.27805;
  ImDrawIdx * D.27804;
  ImDrawIdx * D.27803;
  short unsigned int D.27802;
  short unsigned int D.27801;
  ImDrawIdx * D.27800;
  ImDrawIdx * D.27799;
  short unsigned int D.27798;
  ImDrawIdx * D.27797;
  ImDrawIdx * D.27796;
  short unsigned int D.27795;
  short unsigned int D.27794;
  ImDrawIdx * D.27793;
  ImDrawIdx * D.27792;
  short unsigned int D.27791;
  short unsigned int D.27790;
  ImDrawIdx * D.27789;
  ImDrawIdx * D.27788;
  short unsigned int D.27787;
  short unsigned int D.27786;
  ImDrawIdx * D.27785;
  ImDrawIdx * D.27784;
  short unsigned int D.27783;
  ImDrawIdx * D.27782;
  ImDrawIdx * D.27781;
  short unsigned int D.27780;
  ImDrawIdx * D.27779;
  const struct ImVec2 * D.27778;
  long unsigned int D.27777;
  long unsigned int D.27776;
  struct ImVec2 * D.27775;
  sizetype D.27774;
  long unsigned int D.27773;
  long unsigned int D.27772;
  const struct ImVec2 * D.27771;
  long unsigned int D.27770;
  long unsigned int D.27769;
  struct ImVec2 * D.27768;
  long unsigned int D.27767;
  long unsigned int D.27766;
  float D.27759;
  float D.27758;
  float D.27757;
  float D.27756;
  float D.27755;
  float D.27754;
  struct ImVec2 * D.27753;
  long unsigned int D.27752;
  long unsigned int D.27751;
  struct ImVec2 * D.27750;
  long unsigned int D.27749;
  long unsigned int D.27748;
  struct ImVec2 D.18055;
  int D.27744;
  unsigned int iftmp.614;
  int D.27739;
  int iftmp.613;
  const struct ImVec2 * D.27734;
  sizetype D.27733;
  long unsigned int D.27732;
  long unsigned int D.27731;
  struct ImVec2 * D.27730;
  sizetype D.27729;
  long unsigned int D.27728;
  long unsigned int D.27727;
  struct ImVec2 D.18048;
  struct ImVec2 * D.27726;
  sizetype D.27725;
  long unsigned int D.27724;
  long unsigned int D.27723;
  int D.27722;
  const struct ImVec2 * D.27721;
  sizetype D.27720;
  long unsigned int D.27719;
  long unsigned int D.27718;
  struct ImVec2 * D.27717;
  sizetype D.27716;
  long unsigned int D.27715;
  long unsigned int D.27714;
  struct ImVec2 D.18046;
  struct ImVec2 * D.27713;
  long unsigned int D.27712;
  long unsigned int D.27711;
  int D.27710;
  struct ImVec2 D.18044;
  struct ImVec2 * D.27709;
  struct ImVec2 D.18042;
  bool D.27706;
  bool D.27703;
  struct ImVec2 * D.27701;
  sizetype D.27700;
  long unsigned int D.27699;
  long unsigned int D.27698;
  struct ImVec2 * D.27697;
  sizetype D.27696;
  long unsigned int D.27695;
  long unsigned int D.27694;
  bool D.27691;
  float D.27690;
  float D.27689;
  struct ImVec2 * D.27688;
  long unsigned int D.27687;
  long unsigned int D.27686;
  float D.27685;
  struct ImVec2 * D.27684;
  long unsigned int D.27683;
  long unsigned int D.27682;
  float D.27681;
  const struct ImVec2 * D.27680;
  long unsigned int D.27679;
  long unsigned int D.27678;
  const struct ImVec2 * D.27677;
  long unsigned int D.27676;
  long unsigned int D.27675;
  int D.27671;
  int iftmp.612;
  long unsigned int D.27667;
  long unsigned int D.27666;
  long unsigned int D.27665;
  long unsigned int D.27664;
  int D.27663;
  int iftmp.611;
  int iftmp.610;
  int iftmp.609;
  int D.27648;
  int D.27647;
  bool D.27643;
  const struct ImDrawListSharedData * D.27642;
  int iftmp.609_12;
  int iftmp.610_13;
  int iftmp.611_14;
  int iftmp.612_15;
  int iftmp.613_16;
  unsigned int iftmp.614_17;
  int iftmp.624_18;
  unsigned int iftmp.625_19;
  int iftmp.628_20;
  const struct ImDrawListSharedData * _39;
  bool _43;
  int _47;
  int _48;
  int iftmp.609_52;
  int iftmp.609_53;
  int iftmp.610_55;
  int iftmp.610_56;
  int iftmp.611_59;
  int iftmp.611_60;
  int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _66;
  long unsigned int _67;
  int _70;
  int iftmp.612_71;
  int iftmp.612_72;
  long unsigned int _74;
  long unsigned int _75;
  const struct ImVec2 * _77;
  long unsigned int _78;
  long unsigned int _79;
  const struct ImVec2 * _80;
  float _83;
  long unsigned int _85;
  long unsigned int _86;
  struct ImVec2 * _87;
  float _88;
  long unsigned int _90;
  long unsigned int _91;
  struct ImVec2 * _92;
  float _93;
  float _94;
  bool _98;
  long unsigned int _99;
  long unsigned int _100;
  sizetype _101;
  struct ImVec2 * _102;
  long unsigned int _103;
  long unsigned int _104;
  sizetype _105;
  struct ImVec2 * _106;
  bool _108;
  bool _109;
  struct ImVec2 * _113;
  int _117;
  long unsigned int _118;
  long unsigned int _119;
  struct ImVec2 * _120;
  long unsigned int _121;
  long unsigned int _122;
  sizetype _123;
  struct ImVec2 * _124;
  long unsigned int _126;
  long unsigned int _127;
  sizetype _128;
  const struct ImVec2 * _129;
  int _132;
  long unsigned int _133;
  long unsigned int _134;
  sizetype _135;
  struct ImVec2 * _136;
  long unsigned int _137;
  long unsigned int _138;
  sizetype _139;
  struct ImVec2 * _140;
  long unsigned int _142;
  long unsigned int _143;
  sizetype _144;
  const struct ImVec2 * _145;
  int _150;
  int iftmp.613_151;
  int iftmp.613_152;
  int _154;
  unsigned int iftmp.614_155;
  unsigned int iftmp.614_156;
  long unsigned int _158;
  long unsigned int _159;
  struct ImVec2 * _160;
  long unsigned int _161;
  long unsigned int _162;
  struct ImVec2 * _163;
  float _167;
  float _168;
  float _169;
  float _170;
  float _171;
  float _172;
  long unsigned int _178;
  long unsigned int _179;
  struct ImVec2 * _180;
  long unsigned int _181;
  long unsigned int _182;
  const struct ImVec2 * _183;
  long unsigned int _185;
  long unsigned int _186;
  sizetype _187;
  struct ImVec2 * _188;
  long unsigned int _189;
  long unsigned int _190;
  const struct ImVec2 * _191;
  ImDrawIdx * _193;
  short unsigned int _194;
  ImDrawIdx * _196;
  ImDrawIdx * _197;
  short unsigned int _198;
  ImDrawIdx * _200;
  ImDrawIdx * _201;
  short unsigned int _202;
  short unsigned int _203;
  ImDrawIdx * _205;
  ImDrawIdx * _206;
  short unsigned int _207;
  short unsigned int _208;
  ImDrawIdx * _210;
  ImDrawIdx * _211;
  short unsigned int _212;
  short unsigned int _213;
  ImDrawIdx * _215;
  ImDrawIdx * _216;
  short unsigned int _217;
  ImDrawIdx * _219;
  ImDrawIdx * _220;
  short unsigned int _221;
  short unsigned int _222;
  ImDrawIdx * _224;
  ImDrawIdx * _225;
  short unsigned int _226;
  short unsigned int _227;
  ImDrawIdx * _229;
  ImDrawIdx * _230;
  short unsigned int _231;
  ImDrawIdx * _233;
  ImDrawIdx * _234;
  short unsigned int _235;
  ImDrawIdx * _237;
  ImDrawIdx * _238;
  short unsigned int _239;
  ImDrawIdx * _241;
  ImDrawIdx * _242;
  short unsigned int _243;
  short unsigned int _244;
  ImDrawIdx * _246;
  ImDrawIdx * _247;
  struct ImDrawVert * _253;
  long unsigned int _254;
  long unsigned int _255;
  const struct ImVec2 * _256;
  struct ImDrawVert * _258;
  struct ImDrawVert * _260;
  struct ImDrawVert * _262;
  struct ImDrawVert * _263;
  long unsigned int _264;
  long unsigned int _265;
  struct ImVec2 * _266;
  struct ImDrawVert * _268;
  struct ImDrawVert * _269;
  struct ImDrawVert * _271;
  struct ImDrawVert * _272;
  struct ImDrawVert * _274;
  struct ImDrawVert * _275;
  long unsigned int _276;
  long unsigned int _277;
  sizetype _278;
  struct ImVec2 * _279;
  struct ImDrawVert * _281;
  struct ImDrawVert * _282;
  struct ImDrawVert * _284;
  struct ImDrawVert * _285;
  struct ImDrawVert * _287;
  struct ImDrawVert * _288;
  float _291;
  float half_inner_thickness.615_292;
  bool _294;
  float half_inner_thickness.616_295;
  float _296;
  struct ImVec2 * _300;
  float half_inner_thickness.617_301;
  struct ImVec2 * _305;
  float half_inner_thickness.618_306;
  struct ImVec2 * _310;
  float half_inner_thickness.619_311;
  float _312;
  int _316;
  long unsigned int _317;
  long unsigned int _318;
  struct ImVec2 * _319;
  float half_inner_thickness.620_320;
  float _321;
  long unsigned int _322;
  long unsigned int _323;
  sizetype _324;
  struct ImVec2 * _325;
  long unsigned int _327;
  long unsigned int _328;
  sizetype _329;
  const struct ImVec2 * _330;
  int _333;
  long unsigned int _334;
  long unsigned int _335;
  sizetype _336;
  struct ImVec2 * _337;
  float half_inner_thickness.621_338;
  long unsigned int _339;
  long unsigned int _340;
  sizetype _341;
  struct ImVec2 * _342;
  long unsigned int _344;
  long unsigned int _345;
  sizetype _346;
  const struct ImVec2 * _347;
  int _350;
  long unsigned int _351;
  long unsigned int _352;
  sizetype _353;
  struct ImVec2 * _354;
  float half_inner_thickness.622_355;
  long unsigned int _356;
  long unsigned int _357;
  sizetype _358;
  struct ImVec2 * _359;
  long unsigned int _361;
  long unsigned int _362;
  sizetype _363;
  const struct ImVec2 * _364;
  int _367;
  long unsigned int _368;
  long unsigned int _369;
  sizetype _370;
  struct ImVec2 * _371;
  float half_inner_thickness.623_372;
  float _373;
  long unsigned int _374;
  long unsigned int _375;
  sizetype _376;
  struct ImVec2 * _377;
  long unsigned int _379;
  long unsigned int _380;
  sizetype _381;
  const struct ImVec2 * _382;
  int _387;
  int iftmp.624_388;
  int iftmp.624_389;
  int _391;
  unsigned int iftmp.625_392;
  unsigned int iftmp.625_393;
  long unsigned int _395;
  long unsigned int _396;
  struct ImVec2 * _397;
  long unsigned int _398;
  long unsigned int _399;
  struct ImVec2 * _400;
  float _404;
  float _405;
  float _406;
  float _407;
  float _408;
  float _409;
  float half_inner_thickness.626_414;
  float _415;
  float half_inner_thickness.627_417;
  long unsigned int _419;
  long unsigned int _420;
  struct ImVec2 * _421;
  long unsigned int _422;
  long unsigned int _423;
  const struct ImVec2 * _424;
  long unsigned int _426;
  long unsigned int _427;
  sizetype _428;
  struct ImVec2 * _429;
  long unsigned int _430;
  long unsigned int _431;
  const struct ImVec2 * _432;
  long unsigned int _434;
  long unsigned int _435;
  sizetype _436;
  struct ImVec2 * _437;
  long unsigned int _438;
  long unsigned int _439;
  const struct ImVec2 * _440;
  long unsigned int _442;
  long unsigned int _443;
  sizetype _444;
  struct ImVec2 * _445;
  long unsigned int _446;
  long unsigned int _447;
  const struct ImVec2 * _448;
  ImDrawIdx * _450;
  short unsigned int _451;
  short unsigned int _452;
  ImDrawIdx * _454;
  ImDrawIdx * _455;
  short unsigned int _456;
  short unsigned int _457;
  ImDrawIdx * _459;
  ImDrawIdx * _460;
  short unsigned int _461;
  short unsigned int _462;
  ImDrawIdx * _464;
  ImDrawIdx * _465;
  short unsigned int _466;
  short unsigned int _467;
  ImDrawIdx * _469;
  ImDrawIdx * _470;
  short unsigned int _471;
  short unsigned int _472;
  ImDrawIdx * _474;
  ImDrawIdx * _475;
  short unsigned int _476;
  short unsigned int _477;
  ImDrawIdx * _479;
  ImDrawIdx * _480;
  short unsigned int _481;
  short unsigned int _482;
  ImDrawIdx * _484;
  ImDrawIdx * _485;
  short unsigned int _486;
  short unsigned int _487;
  ImDrawIdx * _489;
  ImDrawIdx * _490;
  short unsigned int _491;
  ImDrawIdx * _493;
  ImDrawIdx * _494;
  short unsigned int _495;
  ImDrawIdx * _497;
  ImDrawIdx * _498;
  short unsigned int _499;
  ImDrawIdx * _501;
  ImDrawIdx * _502;
  short unsigned int _503;
  short unsigned int _504;
  ImDrawIdx * _506;
  ImDrawIdx * _507;
  short unsigned int _508;
  short unsigned int _509;
  ImDrawIdx * _511;
  ImDrawIdx * _512;
  short unsigned int _513;
  short unsigned int _514;
  ImDrawIdx * _516;
  ImDrawIdx * _517;
  short unsigned int _518;
  short unsigned int _519;
  ImDrawIdx * _521;
  ImDrawIdx * _522;
  short unsigned int _523;
  short unsigned int _524;
  ImDrawIdx * _526;
  ImDrawIdx * _527;
  short unsigned int _528;
  short unsigned int _529;
  ImDrawIdx * _531;
  ImDrawIdx * _532;
  short unsigned int _533;
  short unsigned int _534;
  ImDrawIdx * _536;
  ImDrawIdx * _537;
  struct ImDrawVert * _545;
  long unsigned int _546;
  long unsigned int _547;
  struct ImVec2 * _548;
  struct ImDrawVert * _550;
  struct ImDrawVert * _552;
  struct ImDrawVert * _554;
  struct ImDrawVert * _555;
  long unsigned int _556;
  long unsigned int _557;
  sizetype _558;
  struct ImVec2 * _559;
  struct ImDrawVert * _561;
  struct ImDrawVert * _562;
  struct ImDrawVert * _564;
  struct ImDrawVert * _565;
  struct ImDrawVert * _567;
  struct ImDrawVert * _568;
  long unsigned int _569;
  long unsigned int _570;
  sizetype _571;
  struct ImVec2 * _572;
  struct ImDrawVert * _574;
  struct ImDrawVert * _575;
  struct ImDrawVert * _577;
  struct ImDrawVert * _578;
  struct ImDrawVert * _580;
  struct ImDrawVert * _581;
  long unsigned int _582;
  long unsigned int _583;
  sizetype _584;
  struct ImVec2 * _585;
  struct ImDrawVert * _587;
  struct ImDrawVert * _588;
  struct ImDrawVert * _590;
  struct ImDrawVert * _591;
  struct ImDrawVert * _593;
  struct ImDrawVert * _594;
  unsigned int _598;
  short unsigned int _599;
  unsigned int _600;
  unsigned int _601;
  int _607;
  int iftmp.628_608;
  int iftmp.628_609;
  long unsigned int _611;
  long unsigned int _612;
  long unsigned int _614;
  long unsigned int _615;
  float _619;
  float _621;
  float _622;
  float _624;
  float _625;
  struct ImDrawVert * _627;
  float _628;
  float _629;
  struct ImDrawVert * _631;
  float _632;
  float _633;
  struct ImDrawVert * _635;
  struct ImDrawVert * _637;
  struct ImDrawVert * _639;
  struct ImDrawVert * _640;
  float _641;
  float _642;
  struct ImDrawVert * _644;
  struct ImDrawVert * _645;
  float _646;
  float _647;
  struct ImDrawVert * _649;
  struct ImDrawVert * _650;
  struct ImDrawVert * _652;
  struct ImDrawVert * _653;
  struct ImDrawVert * _655;
  struct ImDrawVert * _656;
  float _657;
  float _658;
  struct ImDrawVert * _660;
  struct ImDrawVert * _661;
  float _662;
  float _663;
  struct ImDrawVert * _665;
  struct ImDrawVert * _666;
  struct ImDrawVert * _668;
  struct ImDrawVert * _669;
  struct ImDrawVert * _671;
  struct ImDrawVert * _672;
  float _673;
  float _674;
  struct ImDrawVert * _676;
  struct ImDrawVert * _677;
  float _678;
  float _679;
  struct ImDrawVert * _681;
  struct ImDrawVert * _682;
  struct ImDrawVert * _684;
  struct ImDrawVert * _685;
  struct ImDrawVert * _687;
  struct ImDrawVert * _688;
  ImDrawIdx * _690;
  unsigned int _691;
  short unsigned int _692;
  ImDrawIdx * _694;
  ImDrawIdx * _695;
  unsigned int _696;
  short unsigned int _697;
  short unsigned int _698;
  ImDrawIdx * _700;
  ImDrawIdx * _701;
  unsigned int _702;
  short unsigned int _703;
  short unsigned int _704;
  ImDrawIdx * _706;
  ImDrawIdx * _707;
  unsigned int _708;
  short unsigned int _709;
  ImDrawIdx * _711;
  ImDrawIdx * _712;
  unsigned int _713;
  short unsigned int _714;
  short unsigned int _715;
  ImDrawIdx * _717;
  ImDrawIdx * _718;
  unsigned int _719;
  short unsigned int _720;
  short unsigned int _721;
  ImDrawIdx * _723;
  ImDrawIdx * _724;
  unsigned int _726;
  unsigned int _727;

  <bb 2>:
  if (points_count_36(D) <= 1)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  uv ={v} {CLOBBER};
  goto <bb 71> (<L79>);

  <bb 4>:
  _39 = this_38(D)->_Data;
  uv = _39->TexUvWhitePixel;
  count_41 = points_count_36(D);
  _43 = ~closed_42(D);
  if (_43 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  count_44 = points_count_36(D) + -1;

  <bb 6>:
  # count_1 = PHI <count_41(4), count_44(5)>
  thick_line_46 = thickness_45(D) > 1.0e+0;
  _47 = this_38(D)->Flags;
  _48 = _47 & 1;
  if (_48 != 0)
    goto <bb 7>;
  else
    goto <bb 64>;

  <bb 7>:
  AA_SIZE_49 = 1.0e+0;
  col_trans_51 = col_50(D) & 16777215;
  if (thick_line_46 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  iftmp.609_52 = count_1 * 18;
  goto <bb 10>;

  <bb 9>:
  iftmp.609_53 = count_1 * 12;

  <bb 10>:
  # iftmp.609_12 = PHI <iftmp.609_52(8), iftmp.609_53(9)>
  idx_count_54 = iftmp.609_12;
  if (thick_line_46 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  iftmp.610_55 = points_count_36(D) * 4;
  goto <bb 13>;

  <bb 12>:
  iftmp.610_56 = points_count_36(D) * 3;

  <bb 13>:
  # iftmp.610_13 = PHI <iftmp.610_55(11), iftmp.610_56(12)>
  vtx_count_57 = iftmp.610_13;
  ImDrawList::PrimReserve (this_38(D), idx_count_54, vtx_count_57);
  if (thick_line_46 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  iftmp.611_59 = 5;
  goto <bb 16>;

  <bb 15>:
  iftmp.611_60 = 3;

  <bb 16>:
  # iftmp.611_14 = PHI <iftmp.611_59(14), iftmp.611_60(15)>
  _61 = iftmp.611_14 * points_count_36(D);
  _62 = (long unsigned int) _61;
  _63 = _62 * 8;
  temp_normals_65 = __builtin_alloca (_63);
  _66 = (long unsigned int) points_count_36(D);
  _67 = _66 * 8;
  temp_points_68 = temp_normals_65 + _67;
  i1_69 = 0;

  <bb 17>:
  # i1_2 = PHI <i1_69(16), i1_97(21)>
  if (i1_2 >= count_1)
    goto <bb 22>;
  else
    goto <bb 18>;

  <bb 18>:
  _70 = i1_2 + 1;
  if (_70 != points_count_36(D))
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  iftmp.612_71 = i1_2 + 1;
  goto <bb 21>;

  <bb 20>:
  iftmp.612_72 = 0;

  <bb 21>:
  # iftmp.612_15 = PHI <iftmp.612_71(19), iftmp.612_72(20)>
  i2_73 = iftmp.612_15;
  _74 = (long unsigned int) i1_2;
  _75 = _74 * 8;
  _77 = points_76(D) + _75;
  _78 = (long unsigned int) i2_73;
  _79 = _78 * 8;
  _80 = points_76(D) + _79;
  diff = operator- (_80, _77);
  _83 = ImInvLength (&diff, 1.0e+0);
  operator*= (&diff, _83);
  _85 = (long unsigned int) i1_2;
  _86 = _85 * 8;
  _87 = temp_normals_65 + _86;
  _88 = diff.y;
  _87->x = _88;
  _90 = (long unsigned int) i1_2;
  _91 = _90 * 8;
  _92 = temp_normals_65 + _91;
  _93 = diff.x;
  _94 = -_93;
  _92->y = _94;
  diff ={v} {CLOBBER};
  i1_97 = i1_2 + 1;
  goto <bb 17>;

  <bb 22>:
  _98 = ~closed_42(D);
  if (_98 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  _99 = (long unsigned int) points_count_36(D);
  _100 = _99 * 8;
  _101 = _100 + 18446744073709551608;
  _102 = temp_normals_65 + _101;
  _103 = (long unsigned int) points_count_36(D);
  _104 = _103 * 8;
  _105 = _104 + 18446744073709551600;
  _106 = temp_normals_65 + _105;
  *_102 = MEM[(const struct ImVec2 &)_106];

  <bb 24>:
  _108 = ~thick_line_46;
  if (_108 != 0)
    goto <bb 25>;
  else
    goto <bb 44>;

  <bb 25>:
  _109 = ~closed_42(D);
  if (_109 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  D.18042 = operator* (temp_normals_65, 1.0e+0);
  *temp_points_68 = operator+ (points_76(D), &D.18042);
  D.18042 ={v} {CLOBBER};
  _113 = temp_points_68 + 8;
  D.18044 = operator* (temp_normals_65, 1.0e+0);
  *_113 = operator- (points_76(D), &D.18044);
  D.18044 ={v} {CLOBBER};
  _117 = points_count_36(D) + -1;
  _118 = (long unsigned int) _117;
  _119 = _118 * 16;
  _120 = temp_points_68 + _119;
  _121 = (long unsigned int) points_count_36(D);
  _122 = _121 * 8;
  _123 = _122 + 18446744073709551608;
  _124 = temp_normals_65 + _123;
  D.18046 = operator* (_124, 1.0e+0);
  _126 = (long unsigned int) points_count_36(D);
  _127 = _126 * 8;
  _128 = _127 + 18446744073709551608;
  _129 = points_76(D) + _128;
  *_120 = operator+ (_129, &D.18046);
  D.18046 ={v} {CLOBBER};
  _132 = points_count_36(D) + -1;
  _133 = (long unsigned int) _132;
  _134 = _133 * 16;
  _135 = _134 + 8;
  _136 = temp_points_68 + _135;
  _137 = (long unsigned int) points_count_36(D);
  _138 = _137 * 8;
  _139 = _138 + 18446744073709551608;
  _140 = temp_normals_65 + _139;
  D.18048 = operator* (_140, 1.0e+0);
  _142 = (long unsigned int) points_count_36(D);
  _143 = _142 * 8;
  _144 = _143 + 18446744073709551608;
  _145 = points_76(D) + _144;
  *_136 = operator- (_145, &D.18048);
  D.18048 ={v} {CLOBBER};

  <bb 27>:
  idx1_148 = this_38(D)->_VtxCurrentIdx;
  i1_149 = 0;

  <bb 28>:
  # idx1_3 = PHI <idx1_148(27), idx1_249(39)>
  # i1_4 = PHI <i1_149(27), i1_251(39)>
  if (i1_4 >= count_1)
    goto <bb 40>;
  else
    goto <bb 29>;

  <bb 29>:
  _150 = i1_4 + 1;
  if (_150 != points_count_36(D))
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  iftmp.613_151 = i1_4 + 1;
  goto <bb 32>;

  <bb 31>:
  iftmp.613_152 = 0;

  <bb 32>:
  # iftmp.613_16 = PHI <iftmp.613_151(30), iftmp.613_152(31)>
  i2_153 = iftmp.613_16;
  _154 = i1_4 + 1;
  if (_154 == points_count_36(D))
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  iftmp.614_155 = this_38(D)->_VtxCurrentIdx;
  goto <bb 35>;

  <bb 34>:
  iftmp.614_156 = idx1_3 + 3;

  <bb 35>:
  # iftmp.614_17 = PHI <iftmp.614_155(33), iftmp.614_156(34)>
  idx2_157 = iftmp.614_17;
  _158 = (long unsigned int) i2_153;
  _159 = _158 * 8;
  _160 = temp_normals_65 + _159;
  _161 = (long unsigned int) i1_4;
  _162 = _161 * 8;
  _163 = temp_normals_65 + _162;
  D.18055 = operator+ (_163, _160);
  dm = operator* (&D.18055, 5.0e-1);
  D.18055 ={v} {CLOBBER};
  _167 = dm.x;
  _168 = dm.x;
  _169 = _167 * _168;
  _170 = dm.y;
  _171 = dm.y;
  _172 = _170 * _171;
  dmr2_173 = _169 + _172;
  if (dmr2_173 > 9.999999974752427078783512115478515625e-7)
    goto <bb 36>;
  else
    goto <bb 39>;

  <bb 36>:
  scale_174 = 1.0e+0 / dmr2_173;
  if (scale_174 > 1.0e+2)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  scale_175 = 1.0e+2;

  <bb 38>:
  # scale_5 = PHI <scale_174(36), scale_175(37)>
  operator*= (&dm, scale_5);

  <bb 39>:
  operator*= (&dm, 1.0e+0);
  _178 = (long unsigned int) i2_153;
  _179 = _178 * 16;
  _180 = temp_points_68 + _179;
  _181 = (long unsigned int) i2_153;
  _182 = _181 * 8;
  _183 = points_76(D) + _182;
  *_180 = operator+ (_183, &dm);
  _185 = (long unsigned int) i2_153;
  _186 = _185 * 16;
  _187 = _186 + 8;
  _188 = temp_points_68 + _187;
  _189 = (long unsigned int) i2_153;
  _190 = _189 * 8;
  _191 = points_76(D) + _190;
  *_188 = operator- (_191, &dm);
  _193 = this_38(D)->_IdxWritePtr;
  _194 = (short unsigned int) idx2_157;
  *_193 = _194;
  _196 = this_38(D)->_IdxWritePtr;
  _197 = _196 + 2;
  _198 = (short unsigned int) idx1_3;
  *_197 = _198;
  _200 = this_38(D)->_IdxWritePtr;
  _201 = _200 + 4;
  _202 = (short unsigned int) idx1_3;
  _203 = _202 + 2;
  *_201 = _203;
  _205 = this_38(D)->_IdxWritePtr;
  _206 = _205 + 6;
  _207 = (short unsigned int) idx1_3;
  _208 = _207 + 2;
  *_206 = _208;
  _210 = this_38(D)->_IdxWritePtr;
  _211 = _210 + 8;
  _212 = (short unsigned int) idx2_157;
  _213 = _212 + 2;
  *_211 = _213;
  _215 = this_38(D)->_IdxWritePtr;
  _216 = _215 + 10;
  _217 = (short unsigned int) idx2_157;
  *_216 = _217;
  _219 = this_38(D)->_IdxWritePtr;
  _220 = _219 + 12;
  _221 = (short unsigned int) idx2_157;
  _222 = _221 + 1;
  *_220 = _222;
  _224 = this_38(D)->_IdxWritePtr;
  _225 = _224 + 14;
  _226 = (short unsigned int) idx1_3;
  _227 = _226 + 1;
  *_225 = _227;
  _229 = this_38(D)->_IdxWritePtr;
  _230 = _229 + 16;
  _231 = (short unsigned int) idx1_3;
  *_230 = _231;
  _233 = this_38(D)->_IdxWritePtr;
  _234 = _233 + 18;
  _235 = (short unsigned int) idx1_3;
  *_234 = _235;
  _237 = this_38(D)->_IdxWritePtr;
  _238 = _237 + 20;
  _239 = (short unsigned int) idx2_157;
  *_238 = _239;
  _241 = this_38(D)->_IdxWritePtr;
  _242 = _241 + 22;
  _243 = (short unsigned int) idx2_157;
  _244 = _243 + 1;
  *_242 = _244;
  _246 = this_38(D)->_IdxWritePtr;
  _247 = _246 + 24;
  this_38(D)->_IdxWritePtr = _247;
  idx1_249 = idx2_157;
  dm ={v} {CLOBBER};
  i1_251 = i1_4 + 1;
  goto <bb 28>;

  <bb 40>:
  i_252 = 0;

  <bb 41>:
  # i_6 = PHI <i_252(40), i_290(42)>
  if (i_6 >= points_count_36(D))
    goto <bb 43>;
  else
    goto <bb 42>;

  <bb 42>:
  _253 = this_38(D)->_VtxWritePtr;
  _254 = (long unsigned int) i_6;
  _255 = _254 * 8;
  _256 = points_76(D) + _255;
  _253->pos = *_256;
  _258 = this_38(D)->_VtxWritePtr;
  _258->uv = uv;
  _260 = this_38(D)->_VtxWritePtr;
  _260->col = col_50(D);
  _262 = this_38(D)->_VtxWritePtr;
  _263 = _262 + 20;
  _264 = (long unsigned int) i_6;
  _265 = _264 * 16;
  _266 = temp_points_68 + _265;
  _263->pos = MEM[(const struct ImVec2 &)_266];
  _268 = this_38(D)->_VtxWritePtr;
  _269 = _268 + 20;
  _269->uv = uv;
  _271 = this_38(D)->_VtxWritePtr;
  _272 = _271 + 20;
  _272->col = col_trans_51;
  _274 = this_38(D)->_VtxWritePtr;
  _275 = _274 + 40;
  _276 = (long unsigned int) i_6;
  _277 = _276 * 16;
  _278 = _277 + 8;
  _279 = temp_points_68 + _278;
  _275->pos = MEM[(const struct ImVec2 &)_279];
  _281 = this_38(D)->_VtxWritePtr;
  _282 = _281 + 40;
  _282->uv = uv;
  _284 = this_38(D)->_VtxWritePtr;
  _285 = _284 + 40;
  _285->col = col_trans_51;
  _287 = this_38(D)->_VtxWritePtr;
  _288 = _287 + 60;
  this_38(D)->_VtxWritePtr = _288;
  i_290 = i_6 + 1;
  goto <bb 41>;

  <bb 43>:
  goto <bb 63>;

  <bb 44>:
  _291 = thickness_45(D) - 1.0e+0;
  half_inner_thickness.615_292 = _291 * 5.0e-1;
  half_inner_thickness = half_inner_thickness.615_292;
  _294 = ~closed_42(D);
  if (_294 != 0)
    goto <bb 45>;
  else
    goto <bb 46>;

  <bb 45>:
  half_inner_thickness.616_295 = half_inner_thickness;
  _296 = half_inner_thickness.616_295 + 1.0e+0;
  D.18063 = operator* (temp_normals_65, _296);
  *temp_points_68 = operator+ (points_76(D), &D.18063);
  D.18063 ={v} {CLOBBER};
  _300 = temp_points_68 + 8;
  half_inner_thickness.617_301 = half_inner_thickness;
  D.18065 = operator* (temp_normals_65, half_inner_thickness.617_301);
  *_300 = operator+ (points_76(D), &D.18065);
  D.18065 ={v} {CLOBBER};
  _305 = temp_points_68 + 16;
  half_inner_thickness.618_306 = half_inner_thickness;
  D.18067 = operator* (temp_normals_65, half_inner_thickness.618_306);
  *_305 = operator- (points_76(D), &D.18067);
  D.18067 ={v} {CLOBBER};
  _310 = temp_points_68 + 24;
  half_inner_thickness.619_311 = half_inner_thickness;
  _312 = half_inner_thickness.619_311 + 1.0e+0;
  D.18069 = operator* (temp_normals_65, _312);
  *_310 = operator- (points_76(D), &D.18069);
  D.18069 ={v} {CLOBBER};
  _316 = points_count_36(D) + -1;
  _317 = (long unsigned int) _316;
  _318 = _317 * 32;
  _319 = temp_points_68 + _318;
  half_inner_thickness.620_320 = half_inner_thickness;
  _321 = half_inner_thickness.620_320 + 1.0e+0;
  _322 = (long unsigned int) points_count_36(D);
  _323 = _322 * 8;
  _324 = _323 + 18446744073709551608;
  _325 = temp_normals_65 + _324;
  D.18071 = operator* (_325, _321);
  _327 = (long unsigned int) points_count_36(D);
  _328 = _327 * 8;
  _329 = _328 + 18446744073709551608;
  _330 = points_76(D) + _329;
  *_319 = operator+ (_330, &D.18071);
  D.18071 ={v} {CLOBBER};
  _333 = points_count_36(D) + -1;
  _334 = (long unsigned int) _333;
  _335 = _334 * 32;
  _336 = _335 + 8;
  _337 = temp_points_68 + _336;
  half_inner_thickness.621_338 = half_inner_thickness;
  _339 = (long unsigned int) points_count_36(D);
  _340 = _339 * 8;
  _341 = _340 + 18446744073709551608;
  _342 = temp_normals_65 + _341;
  D.18073 = operator* (_342, half_inner_thickness.621_338);
  _344 = (long unsigned int) points_count_36(D);
  _345 = _344 * 8;
  _346 = _345 + 18446744073709551608;
  _347 = points_76(D) + _346;
  *_337 = operator+ (_347, &D.18073);
  D.18073 ={v} {CLOBBER};
  _350 = points_count_36(D) + -1;
  _351 = (long unsigned int) _350;
  _352 = _351 * 32;
  _353 = _352 + 16;
  _354 = temp_points_68 + _353;
  half_inner_thickness.622_355 = half_inner_thickness;
  _356 = (long unsigned int) points_count_36(D);
  _357 = _356 * 8;
  _358 = _357 + 18446744073709551608;
  _359 = temp_normals_65 + _358;
  D.18075 = operator* (_359, half_inner_thickness.622_355);
  _361 = (long unsigned int) points_count_36(D);
  _362 = _361 * 8;
  _363 = _362 + 18446744073709551608;
  _364 = points_76(D) + _363;
  *_354 = operator- (_364, &D.18075);
  D.18075 ={v} {CLOBBER};
  _367 = points_count_36(D) + -1;
  _368 = (long unsigned int) _367;
  _369 = _368 * 32;
  _370 = _369 + 24;
  _371 = temp_points_68 + _370;
  half_inner_thickness.623_372 = half_inner_thickness;
  _373 = half_inner_thickness.623_372 + 1.0e+0;
  _374 = (long unsigned int) points_count_36(D);
  _375 = _374 * 8;
  _376 = _375 + 18446744073709551608;
  _377 = temp_normals_65 + _376;
  D.18077 = operator* (_377, _373);
  _379 = (long unsigned int) points_count_36(D);
  _380 = _379 * 8;
  _381 = _380 + 18446744073709551608;
  _382 = points_76(D) + _381;
  *_371 = operator- (_382, &D.18077);
  D.18077 ={v} {CLOBBER};

  <bb 46>:
  idx1_385 = this_38(D)->_VtxCurrentIdx;
  i1_386 = 0;

  <bb 47>:
  # idx1_7 = PHI <idx1_385(46), idx1_539(58)>
  # i1_8 = PHI <i1_386(46), i1_543(58)>
  if (i1_8 >= count_1)
    goto <bb 59>;
  else
    goto <bb 48>;

  <bb 48>:
  _387 = i1_8 + 1;
  if (_387 != points_count_36(D))
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  iftmp.624_388 = i1_8 + 1;
  goto <bb 51>;

  <bb 50>:
  iftmp.624_389 = 0;

  <bb 51>:
  # iftmp.624_18 = PHI <iftmp.624_388(49), iftmp.624_389(50)>
  i2_390 = iftmp.624_18;
  _391 = i1_8 + 1;
  if (_391 == points_count_36(D))
    goto <bb 52>;
  else
    goto <bb 53>;

  <bb 52>:
  iftmp.625_392 = this_38(D)->_VtxCurrentIdx;
  goto <bb 54>;

  <bb 53>:
  iftmp.625_393 = idx1_7 + 4;

  <bb 54>:
  # iftmp.625_19 = PHI <iftmp.625_392(52), iftmp.625_393(53)>
  idx2_394 = iftmp.625_19;
  _395 = (long unsigned int) i2_390;
  _396 = _395 * 8;
  _397 = temp_normals_65 + _396;
  _398 = (long unsigned int) i1_8;
  _399 = _398 * 8;
  _400 = temp_normals_65 + _399;
  D.18084 = operator+ (_400, _397);
  dm = operator* (&D.18084, 5.0e-1);
  D.18084 ={v} {CLOBBER};
  _404 = dm.x;
  _405 = dm.x;
  _406 = _404 * _405;
  _407 = dm.y;
  _408 = dm.y;
  _409 = _407 * _408;
  dmr2_410 = _406 + _409;
  if (dmr2_410 > 9.999999974752427078783512115478515625e-7)
    goto <bb 55>;
  else
    goto <bb 58>;

  <bb 55>:
  scale_411 = 1.0e+0 / dmr2_410;
  if (scale_411 > 1.0e+2)
    goto <bb 56>;
  else
    goto <bb 57>;

  <bb 56>:
  scale_412 = 1.0e+2;

  <bb 57>:
  # scale_9 = PHI <scale_411(55), scale_412(56)>
  operator*= (&dm, scale_9);

  <bb 58>:
  half_inner_thickness.626_414 = half_inner_thickness;
  _415 = half_inner_thickness.626_414 + 1.0e+0;
  dm_out = operator* (&dm, _415);
  half_inner_thickness.627_417 = half_inner_thickness;
  dm_in = operator* (&dm, half_inner_thickness.627_417);
  _419 = (long unsigned int) i2_390;
  _420 = _419 * 32;
  _421 = temp_points_68 + _420;
  _422 = (long unsigned int) i2_390;
  _423 = _422 * 8;
  _424 = points_76(D) + _423;
  *_421 = operator+ (_424, &dm_out);
  _426 = (long unsigned int) i2_390;
  _427 = _426 * 32;
  _428 = _427 + 8;
  _429 = temp_points_68 + _428;
  _430 = (long unsigned int) i2_390;
  _431 = _430 * 8;
  _432 = points_76(D) + _431;
  *_429 = operator+ (_432, &dm_in);
  _434 = (long unsigned int) i2_390;
  _435 = _434 * 32;
  _436 = _435 + 16;
  _437 = temp_points_68 + _436;
  _438 = (long unsigned int) i2_390;
  _439 = _438 * 8;
  _440 = points_76(D) + _439;
  *_437 = operator- (_440, &dm_in);
  _442 = (long unsigned int) i2_390;
  _443 = _442 * 32;
  _444 = _443 + 24;
  _445 = temp_points_68 + _444;
  _446 = (long unsigned int) i2_390;
  _447 = _446 * 8;
  _448 = points_76(D) + _447;
  *_445 = operator- (_448, &dm_out);
  _450 = this_38(D)->_IdxWritePtr;
  _451 = (short unsigned int) idx2_394;
  _452 = _451 + 1;
  *_450 = _452;
  _454 = this_38(D)->_IdxWritePtr;
  _455 = _454 + 2;
  _456 = (short unsigned int) idx1_7;
  _457 = _456 + 1;
  *_455 = _457;
  _459 = this_38(D)->_IdxWritePtr;
  _460 = _459 + 4;
  _461 = (short unsigned int) idx1_7;
  _462 = _461 + 2;
  *_460 = _462;
  _464 = this_38(D)->_IdxWritePtr;
  _465 = _464 + 6;
  _466 = (short unsigned int) idx1_7;
  _467 = _466 + 2;
  *_465 = _467;
  _469 = this_38(D)->_IdxWritePtr;
  _470 = _469 + 8;
  _471 = (short unsigned int) idx2_394;
  _472 = _471 + 2;
  *_470 = _472;
  _474 = this_38(D)->_IdxWritePtr;
  _475 = _474 + 10;
  _476 = (short unsigned int) idx2_394;
  _477 = _476 + 1;
  *_475 = _477;
  _479 = this_38(D)->_IdxWritePtr;
  _480 = _479 + 12;
  _481 = (short unsigned int) idx2_394;
  _482 = _481 + 1;
  *_480 = _482;
  _484 = this_38(D)->_IdxWritePtr;
  _485 = _484 + 14;
  _486 = (short unsigned int) idx1_7;
  _487 = _486 + 1;
  *_485 = _487;
  _489 = this_38(D)->_IdxWritePtr;
  _490 = _489 + 16;
  _491 = (short unsigned int) idx1_7;
  *_490 = _491;
  _493 = this_38(D)->_IdxWritePtr;
  _494 = _493 + 18;
  _495 = (short unsigned int) idx1_7;
  *_494 = _495;
  _497 = this_38(D)->_IdxWritePtr;
  _498 = _497 + 20;
  _499 = (short unsigned int) idx2_394;
  *_498 = _499;
  _501 = this_38(D)->_IdxWritePtr;
  _502 = _501 + 22;
  _503 = (short unsigned int) idx2_394;
  _504 = _503 + 1;
  *_502 = _504;
  _506 = this_38(D)->_IdxWritePtr;
  _507 = _506 + 24;
  _508 = (short unsigned int) idx2_394;
  _509 = _508 + 2;
  *_507 = _509;
  _511 = this_38(D)->_IdxWritePtr;
  _512 = _511 + 26;
  _513 = (short unsigned int) idx1_7;
  _514 = _513 + 2;
  *_512 = _514;
  _516 = this_38(D)->_IdxWritePtr;
  _517 = _516 + 28;
  _518 = (short unsigned int) idx1_7;
  _519 = _518 + 3;
  *_517 = _519;
  _521 = this_38(D)->_IdxWritePtr;
  _522 = _521 + 30;
  _523 = (short unsigned int) idx1_7;
  _524 = _523 + 3;
  *_522 = _524;
  _526 = this_38(D)->_IdxWritePtr;
  _527 = _526 + 32;
  _528 = (short unsigned int) idx2_394;
  _529 = _528 + 3;
  *_527 = _529;
  _531 = this_38(D)->_IdxWritePtr;
  _532 = _531 + 34;
  _533 = (short unsigned int) idx2_394;
  _534 = _533 + 2;
  *_532 = _534;
  _536 = this_38(D)->_IdxWritePtr;
  _537 = _536 + 36;
  this_38(D)->_IdxWritePtr = _537;
  idx1_539 = idx2_394;
  dm ={v} {CLOBBER};
  dm_out ={v} {CLOBBER};
  dm_in ={v} {CLOBBER};
  i1_543 = i1_8 + 1;
  goto <bb 47>;

  <bb 59>:
  i_544 = 0;

  <bb 60>:
  # i_10 = PHI <i_544(59), i_596(61)>
  if (i_10 >= points_count_36(D))
    goto <bb 62>;
  else
    goto <bb 61>;

  <bb 61>:
  _545 = this_38(D)->_VtxWritePtr;
  _546 = (long unsigned int) i_10;
  _547 = _546 * 32;
  _548 = temp_points_68 + _547;
  _545->pos = MEM[(const struct ImVec2 &)_548];
  _550 = this_38(D)->_VtxWritePtr;
  _550->uv = uv;
  _552 = this_38(D)->_VtxWritePtr;
  _552->col = col_trans_51;
  _554 = this_38(D)->_VtxWritePtr;
  _555 = _554 + 20;
  _556 = (long unsigned int) i_10;
  _557 = _556 * 32;
  _558 = _557 + 8;
  _559 = temp_points_68 + _558;
  _555->pos = MEM[(const struct ImVec2 &)_559];
  _561 = this_38(D)->_VtxWritePtr;
  _562 = _561 + 20;
  _562->uv = uv;
  _564 = this_38(D)->_VtxWritePtr;
  _565 = _564 + 20;
  _565->col = col_50(D);
  _567 = this_38(D)->_VtxWritePtr;
  _568 = _567 + 40;
  _569 = (long unsigned int) i_10;
  _570 = _569 * 32;
  _571 = _570 + 16;
  _572 = temp_points_68 + _571;
  _568->pos = MEM[(const struct ImVec2 &)_572];
  _574 = this_38(D)->_VtxWritePtr;
  _575 = _574 + 40;
  _575->uv = uv;
  _577 = this_38(D)->_VtxWritePtr;
  _578 = _577 + 40;
  _578->col = col_50(D);
  _580 = this_38(D)->_VtxWritePtr;
  _581 = _580 + 60;
  _582 = (long unsigned int) i_10;
  _583 = _582 * 32;
  _584 = _583 + 24;
  _585 = temp_points_68 + _584;
  _581->pos = MEM[(const struct ImVec2 &)_585];
  _587 = this_38(D)->_VtxWritePtr;
  _588 = _587 + 60;
  _588->uv = uv;
  _590 = this_38(D)->_VtxWritePtr;
  _591 = _590 + 60;
  _591->col = col_trans_51;
  _593 = this_38(D)->_VtxWritePtr;
  _594 = _593 + 80;
  this_38(D)->_VtxWritePtr = _594;
  i_596 = i_10 + 1;
  goto <bb 60>;

  <bb 62>:
  half_inner_thickness ={v} {CLOBBER};

  <bb 63>:
  _598 = this_38(D)->_VtxCurrentIdx;
  _599 = (short unsigned int) vtx_count_57;
  _600 = (unsigned int) _599;
  _601 = _598 + _600;
  this_38(D)->_VtxCurrentIdx = _601;
  goto <bb 70>;

  <bb 64>:
  idx_count_603 = count_1 * 6;
  vtx_count_604 = count_1 * 4;
  ImDrawList::PrimReserve (this_38(D), idx_count_603, vtx_count_604);
  i1_606 = 0;

  <bb 65>:
  # i1_11 = PHI <i1_606(64), i1_730(69)>
  if (i1_11 >= count_1)
    goto <bb 70>;
  else
    goto <bb 66>;

  <bb 66>:
  _607 = i1_11 + 1;
  if (_607 != points_count_36(D))
    goto <bb 67>;
  else
    goto <bb 68>;

  <bb 67>:
  iftmp.628_608 = i1_11 + 1;
  goto <bb 69>;

  <bb 68>:
  iftmp.628_609 = 0;

  <bb 69>:
  # iftmp.628_20 = PHI <iftmp.628_608(67), iftmp.628_609(68)>
  i2_610 = iftmp.628_20;
  _611 = (long unsigned int) i1_11;
  _612 = _611 * 8;
  p1_613 = points_76(D) + _612;
  _614 = (long unsigned int) i2_610;
  _615 = _614 * 8;
  p2_616 = points_76(D) + _615;
  diff = operator- (p2_616, p1_613);
  _619 = ImInvLength (&diff, 1.0e+0);
  operator*= (&diff, _619);
  _621 = diff.x;
  _622 = thickness_45(D) * 5.0e-1;
  dx_623 = _621 * _622;
  _624 = diff.y;
  _625 = thickness_45(D) * 5.0e-1;
  dy_626 = _624 * _625;
  _627 = this_38(D)->_VtxWritePtr;
  _628 = p1_613->x;
  _629 = _628 + dy_626;
  _627->pos.x = _629;
  _631 = this_38(D)->_VtxWritePtr;
  _632 = p1_613->y;
  _633 = _632 - dx_623;
  _631->pos.y = _633;
  _635 = this_38(D)->_VtxWritePtr;
  _635->uv = uv;
  _637 = this_38(D)->_VtxWritePtr;
  _637->col = col_50(D);
  _639 = this_38(D)->_VtxWritePtr;
  _640 = _639 + 20;
  _641 = p2_616->x;
  _642 = _641 + dy_626;
  _640->pos.x = _642;
  _644 = this_38(D)->_VtxWritePtr;
  _645 = _644 + 20;
  _646 = p2_616->y;
  _647 = _646 - dx_623;
  _645->pos.y = _647;
  _649 = this_38(D)->_VtxWritePtr;
  _650 = _649 + 20;
  _650->uv = uv;
  _652 = this_38(D)->_VtxWritePtr;
  _653 = _652 + 20;
  _653->col = col_50(D);
  _655 = this_38(D)->_VtxWritePtr;
  _656 = _655 + 40;
  _657 = p2_616->x;
  _658 = _657 - dy_626;
  _656->pos.x = _658;
  _660 = this_38(D)->_VtxWritePtr;
  _661 = _660 + 40;
  _662 = p2_616->y;
  _663 = _662 + dx_623;
  _661->pos.y = _663;
  _665 = this_38(D)->_VtxWritePtr;
  _666 = _665 + 40;
  _666->uv = uv;
  _668 = this_38(D)->_VtxWritePtr;
  _669 = _668 + 40;
  _669->col = col_50(D);
  _671 = this_38(D)->_VtxWritePtr;
  _672 = _671 + 60;
  _673 = p1_613->x;
  _674 = _673 - dy_626;
  _672->pos.x = _674;
  _676 = this_38(D)->_VtxWritePtr;
  _677 = _676 + 60;
  _678 = p1_613->y;
  _679 = _678 + dx_623;
  _677->pos.y = _679;
  _681 = this_38(D)->_VtxWritePtr;
  _682 = _681 + 60;
  _682->uv = uv;
  _684 = this_38(D)->_VtxWritePtr;
  _685 = _684 + 60;
  _685->col = col_50(D);
  _687 = this_38(D)->_VtxWritePtr;
  _688 = _687 + 80;
  this_38(D)->_VtxWritePtr = _688;
  _690 = this_38(D)->_IdxWritePtr;
  _691 = this_38(D)->_VtxCurrentIdx;
  _692 = (short unsigned int) _691;
  *_690 = _692;
  _694 = this_38(D)->_IdxWritePtr;
  _695 = _694 + 2;
  _696 = this_38(D)->_VtxCurrentIdx;
  _697 = (short unsigned int) _696;
  _698 = _697 + 1;
  *_695 = _698;
  _700 = this_38(D)->_IdxWritePtr;
  _701 = _700 + 4;
  _702 = this_38(D)->_VtxCurrentIdx;
  _703 = (short unsigned int) _702;
  _704 = _703 + 2;
  *_701 = _704;
  _706 = this_38(D)->_IdxWritePtr;
  _707 = _706 + 6;
  _708 = this_38(D)->_VtxCurrentIdx;
  _709 = (short unsigned int) _708;
  *_707 = _709;
  _711 = this_38(D)->_IdxWritePtr;
  _712 = _711 + 8;
  _713 = this_38(D)->_VtxCurrentIdx;
  _714 = (short unsigned int) _713;
  _715 = _714 + 2;
  *_712 = _715;
  _717 = this_38(D)->_IdxWritePtr;
  _718 = _717 + 10;
  _719 = this_38(D)->_VtxCurrentIdx;
  _720 = (short unsigned int) _719;
  _721 = _720 + 3;
  *_718 = _721;
  _723 = this_38(D)->_IdxWritePtr;
  _724 = _723 + 12;
  this_38(D)->_IdxWritePtr = _724;
  _726 = this_38(D)->_VtxCurrentIdx;
  _727 = _726 + 4;
  this_38(D)->_VtxCurrentIdx = _727;
  diff ={v} {CLOBBER};
  i1_730 = i1_11 + 1;
  goto <bb 65>;

  <bb 70>:
  uv ={v} {CLOBBER};

<L79>:
  return;

}



;; Function void ImDrawList::AddConvexPolyFilled(const ImVec2*, int, ImU32) (_ZN10ImDrawList19AddConvexPolyFilledEPK6ImVec2ij, funcdef_no=715, decl_uid=5950, cgraph_uid=614, symbol_order=614)

void ImDrawList::AddConvexPolyFilled(const ImVec2*, int, ImU32) (struct ImDrawList * const this, const struct ImVec2 * points, const int points_count, ImU32 col)
{
  int i;
  int i;
  const int vtx_count;
  const int idx_count;
  float scale;
  float dmr2;
  struct ImVec2 dm;
  const struct ImVec2 & n1;
  const struct ImVec2 & n0;
  int i1;
  int i0;
  struct ImVec2 diff;
  const struct ImVec2 & p1;
  const struct ImVec2 & p0;
  int i1;
  int i0;
  int i;
  struct ImVec2 * temp_normals;
  unsigned int vtx_outer_idx;
  unsigned int vtx_inner_idx;
  const int vtx_count;
  const int idx_count;
  const ImU32 col_trans;
  const float AA_SIZE;
  const struct ImVec2 uv;
  unsigned int D.28404;
  unsigned int D.28403;
  short unsigned int D.28402;
  unsigned int D.28401;
  ImDrawIdx * D.28400;
  ImDrawIdx * D.28399;
  short unsigned int D.28398;
  short unsigned int D.28397;
  short unsigned int D.28396;
  unsigned int D.28395;
  ImDrawIdx * D.28394;
  ImDrawIdx * D.28393;
  short unsigned int D.28392;
  short unsigned int D.28391;
  short unsigned int D.28390;
  short unsigned int D.28389;
  unsigned int D.28388;
  ImDrawIdx * D.28387;
  ImDrawIdx * D.28386;
  short unsigned int D.28385;
  unsigned int D.28384;
  ImDrawIdx * D.28383;
  struct ImDrawVert * D.28380;
  struct ImDrawVert * D.28379;
  struct ImDrawVert * D.28378;
  struct ImDrawVert * D.28377;
  const struct ImVec2 * D.28376;
  long unsigned int D.28375;
  long unsigned int D.28374;
  struct ImDrawVert * D.28373;
  int D.28370;
  unsigned int D.28368;
  unsigned int D.28367;
  short unsigned int D.28366;
  unsigned int D.28365;
  int i1.637;
  ImDrawIdx * D.28363;
  ImDrawIdx * D.28362;
  short unsigned int D.28361;
  short unsigned int D.28360;
  unsigned int vtx_inner_idx.636;
  short unsigned int D.28358;
  short unsigned int D.28357;
  ImDrawIdx * D.28356;
  ImDrawIdx * D.28355;
  short unsigned int D.28354;
  short unsigned int D.28353;
  short unsigned int D.28352;
  short unsigned int D.28351;
  ImDrawIdx * D.28350;
  ImDrawIdx * D.28349;
  short unsigned int D.28348;
  short unsigned int D.28347;
  short unsigned int D.28346;
  short unsigned int D.28345;
  ImDrawIdx * D.28344;
  ImDrawIdx * D.28343;
  short unsigned int D.28342;
  short unsigned int D.28341;
  short unsigned int D.28340;
  short unsigned int D.28339;
  ImDrawIdx * D.28338;
  ImDrawIdx * D.28337;
  short unsigned int D.28336;
  short unsigned int D.28335;
  unsigned int vtx_inner_idx.635;
  short unsigned int D.28333;
  short unsigned int D.28332;
  ImDrawIdx * D.28331;
  ImDrawIdx * D.28330;
  short unsigned int D.28329;
  short unsigned int D.28328;
  unsigned int vtx_inner_idx.634;
  short unsigned int D.28326;
  short unsigned int D.28325;
  ImDrawIdx * D.28324;
  struct ImDrawVert * D.28323;
  struct ImDrawVert * D.28322;
  struct ImDrawVert * D.28321;
  struct ImDrawVert * D.28320;
  struct ImDrawVert * D.28319;
  struct ImDrawVert * D.28318;
  const struct ImVec2 * D.28317;
  long unsigned int D.28316;
  long unsigned int D.28315;
  struct ImDrawVert * D.28314;
  struct ImDrawVert * D.28313;
  struct ImDrawVert * D.28312;
  struct ImDrawVert * D.28311;
  const struct ImVec2 * D.28310;
  long unsigned int D.28309;
  long unsigned int D.28308;
  struct ImDrawVert * D.28307;
  float D.28300;
  float D.28299;
  float D.28298;
  float D.28297;
  float D.28296;
  float D.28295;
  struct ImVec2 D.18146;
  long unsigned int D.28294;
  long unsigned int D.28293;
  long unsigned int D.28292;
  long unsigned int D.28291;
  int i1.633;
  float D.28287;
  float D.28286;
  struct ImVec2 * D.28285;
  long unsigned int D.28284;
  long unsigned int D.28283;
  float D.28282;
  struct ImVec2 * D.28281;
  long unsigned int D.28280;
  long unsigned int D.28279;
  float D.28278;
  long unsigned int D.28277;
  long unsigned int D.28276;
  long unsigned int D.28275;
  long unsigned int D.28274;
  long unsigned int D.28271;
  long unsigned int D.28270;
  ImDrawIdx * D.28269;
  ImDrawIdx * D.28268;
  short unsigned int D.28267;
  short unsigned int D.28266;
  unsigned int vtx_inner_idx.632;
  short unsigned int D.28264;
  short unsigned int D.28263;
  ImDrawIdx * D.28262;
  ImDrawIdx * D.28261;
  short unsigned int D.28260;
  short unsigned int D.28259;
  unsigned int vtx_inner_idx.631;
  short unsigned int D.28257;
  short unsigned int D.28256;
  short unsigned int D.28255;
  ImDrawIdx * D.28254;
  ImDrawIdx * D.28253;
  short unsigned int D.28252;
  unsigned int vtx_inner_idx.630;
  ImDrawIdx * D.28250;
  unsigned int D.28247;
  unsigned int vtx_inner_idx.629;
  int D.28245;
  int D.28244;
  int D.28243;
  int D.28240;
  int D.28239;
  const struct ImDrawListSharedData * D.28238;
  const struct ImDrawListSharedData * _19;
  int _21;
  int _22;
  int _27;
  int _28;
  int _29;
  unsigned int vtx_inner_idx.629_33;
  unsigned int _35;
  ImDrawIdx * _38;
  unsigned int vtx_inner_idx.630_39;
  short unsigned int _40;
  ImDrawIdx * _42;
  ImDrawIdx * _43;
  short unsigned int _44;
  short unsigned int _45;
  short unsigned int _46;
  unsigned int vtx_inner_idx.631_47;
  short unsigned int _48;
  short unsigned int _49;
  ImDrawIdx * _51;
  ImDrawIdx * _52;
  short unsigned int _53;
  short unsigned int _54;
  unsigned int vtx_inner_idx.632_55;
  short unsigned int _56;
  short unsigned int _57;
  ImDrawIdx * _59;
  ImDrawIdx * _60;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _73;
  long unsigned int _74;
  float _78;
  long unsigned int _80;
  long unsigned int _81;
  struct ImVec2 * _82;
  float _83;
  long unsigned int _85;
  long unsigned int _86;
  struct ImVec2 * _87;
  float _88;
  float _89;
  int i1.633_92;
  long unsigned int _97;
  long unsigned int _98;
  long unsigned int _100;
  long unsigned int _101;
  float _106;
  float _107;
  float _108;
  float _109;
  float _110;
  float _111;
  struct ImDrawVert * _117;
  long unsigned int _118;
  long unsigned int _119;
  const struct ImVec2 * _120;
  struct ImDrawVert * _122;
  struct ImDrawVert * _124;
  struct ImDrawVert * _126;
  struct ImDrawVert * _127;
  long unsigned int _128;
  long unsigned int _129;
  const struct ImVec2 * _130;
  struct ImDrawVert * _132;
  struct ImDrawVert * _133;
  struct ImDrawVert * _135;
  struct ImDrawVert * _136;
  struct ImDrawVert * _138;
  struct ImDrawVert * _139;
  ImDrawIdx * _141;
  short unsigned int _142;
  short unsigned int _143;
  unsigned int vtx_inner_idx.634_144;
  short unsigned int _145;
  short unsigned int _146;
  ImDrawIdx * _148;
  ImDrawIdx * _149;
  short unsigned int _150;
  short unsigned int _151;
  unsigned int vtx_inner_idx.635_152;
  short unsigned int _153;
  short unsigned int _154;
  ImDrawIdx * _156;
  ImDrawIdx * _157;
  short unsigned int _158;
  short unsigned int _159;
  short unsigned int _160;
  short unsigned int _161;
  ImDrawIdx * _163;
  ImDrawIdx * _164;
  short unsigned int _165;
  short unsigned int _166;
  short unsigned int _167;
  short unsigned int _168;
  ImDrawIdx * _170;
  ImDrawIdx * _171;
  short unsigned int _172;
  short unsigned int _173;
  short unsigned int _174;
  short unsigned int _175;
  ImDrawIdx * _177;
  ImDrawIdx * _178;
  short unsigned int _179;
  short unsigned int _180;
  unsigned int vtx_inner_idx.636_181;
  short unsigned int _182;
  short unsigned int _183;
  ImDrawIdx * _185;
  ImDrawIdx * _186;
  int i1.637_189;
  unsigned int _192;
  short unsigned int _193;
  unsigned int _194;
  unsigned int _195;
  int _199;
  struct ImDrawVert * _204;
  long unsigned int _205;
  long unsigned int _206;
  const struct ImVec2 * _207;
  struct ImDrawVert * _209;
  struct ImDrawVert * _211;
  struct ImDrawVert * _213;
  struct ImDrawVert * _214;
  ImDrawIdx * _218;
  unsigned int _219;
  short unsigned int _220;
  ImDrawIdx * _222;
  ImDrawIdx * _223;
  unsigned int _224;
  short unsigned int _225;
  short unsigned int _226;
  short unsigned int _227;
  short unsigned int _228;
  ImDrawIdx * _230;
  ImDrawIdx * _231;
  unsigned int _232;
  short unsigned int _233;
  short unsigned int _234;
  short unsigned int _235;
  ImDrawIdx * _237;
  ImDrawIdx * _238;
  unsigned int _241;
  short unsigned int _242;
  unsigned int _243;
  unsigned int _244;

  <bb 2>:
  _19 = this_18(D)->_Data;
  uv = _19->TexUvWhitePixel;
  _21 = this_18(D)->Flags;
  _22 = _21 & 2;
  if (_22 != 0)
    goto <bb 3>;
  else
    goto <bb 17>;

  <bb 3>:
  AA_SIZE_23 = 1.0e+0;
  col_trans_25 = col_24(D) & 16777215;
  _27 = points_count_26(D) + -2;
  _28 = _27 * 3;
  _29 = points_count_26(D) * 6;
  idx_count_30 = _28 + _29;
  vtx_count_31 = points_count_26(D) * 2;
  ImDrawList::PrimReserve (this_18(D), idx_count_30, vtx_count_31);
  vtx_inner_idx.629_33 = this_18(D)->_VtxCurrentIdx;
  vtx_inner_idx = vtx_inner_idx.629_33;
  _35 = this_18(D)->_VtxCurrentIdx;
  vtx_outer_idx_36 = _35 + 1;
  i_37 = 2;

  <bb 4>:
  # i_1 = PHI <i_37(3), i_62(5)>
  if (i_1 >= points_count_26(D))
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  _38 = this_18(D)->_IdxWritePtr;
  vtx_inner_idx.630_39 = vtx_inner_idx;
  _40 = (short unsigned int) vtx_inner_idx.630_39;
  *_38 = _40;
  _42 = this_18(D)->_IdxWritePtr;
  _43 = _42 + 2;
  _44 = (short unsigned int) i_1;
  _45 = _44 + 65535;
  _46 = _45 << 1;
  vtx_inner_idx.631_47 = vtx_inner_idx;
  _48 = (short unsigned int) vtx_inner_idx.631_47;
  _49 = _46 + _48;
  *_43 = _49;
  _51 = this_18(D)->_IdxWritePtr;
  _52 = _51 + 4;
  _53 = (short unsigned int) i_1;
  _54 = _53 << 1;
  vtx_inner_idx.632_55 = vtx_inner_idx;
  _56 = (short unsigned int) vtx_inner_idx.632_55;
  _57 = _54 + _56;
  *_52 = _57;
  _59 = this_18(D)->_IdxWritePtr;
  _60 = _59 + 6;
  this_18(D)->_IdxWritePtr = _60;
  i_62 = i_1 + 1;
  goto <bb 4>;

  <bb 6>:
  _63 = (long unsigned int) points_count_26(D);
  _64 = _63 * 8;
  temp_normals_66 = __builtin_alloca (_64);
  i0_67 = points_count_26(D) + -1;
  i1_68 = 0;

  <bb 7>:
  # i0_2 = PHI <i0_67(6), i0_94(8)>
  # i1_3 = PHI <i1_68(6), i1_93(8)>
  if (i1_3 >= points_count_26(D))
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  _69 = (long unsigned int) i0_2;
  _70 = _69 * 8;
  p0_72 = points_71(D) + _70;
  _73 = (long unsigned int) i1_3;
  _74 = _73 * 8;
  p1_75 = points_71(D) + _74;
  diff = operator- (p1_75, p0_72);
  _78 = ImInvLength (&diff, 1.0e+0);
  operator*= (&diff, _78);
  _80 = (long unsigned int) i0_2;
  _81 = _80 * 8;
  _82 = temp_normals_66 + _81;
  _83 = diff.y;
  _82->x = _83;
  _85 = (long unsigned int) i0_2;
  _86 = _85 * 8;
  _87 = temp_normals_66 + _86;
  _88 = diff.x;
  _89 = -_88;
  _87->y = _89;
  diff ={v} {CLOBBER};
  i1.633_92 = i1_3;
  i1_93 = i1.633_92 + 1;
  i0_94 = i1.633_92;
  goto <bb 7>;

  <bb 9>:
  i0_95 = points_count_26(D) + -1;
  i1_96 = 0;

  <bb 10>:
  # i0_4 = PHI <i0_95(9), i0_191(15)>
  # i1_5 = PHI <i1_96(9), i1_190(15)>
  if (i1_5 >= points_count_26(D))
    goto <bb 16>;
  else
    goto <bb 11>;

  <bb 11>:
  _97 = (long unsigned int) i0_4;
  _98 = _97 * 8;
  n0_99 = temp_normals_66 + _98;
  _100 = (long unsigned int) i1_5;
  _101 = _100 * 8;
  n1_102 = temp_normals_66 + _101;
  D.18146 = operator+ (n0_99, n1_102);
  dm = operator* (&D.18146, 5.0e-1);
  D.18146 ={v} {CLOBBER};
  _106 = dm.x;
  _107 = dm.x;
  _108 = _106 * _107;
  _109 = dm.y;
  _110 = dm.y;
  _111 = _109 * _110;
  dmr2_112 = _108 + _111;
  if (dmr2_112 > 9.999999974752427078783512115478515625e-7)
    goto <bb 12>;
  else
    goto <bb 15>;

  <bb 12>:
  scale_113 = 1.0e+0 / dmr2_112;
  if (scale_113 > 1.0e+2)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  scale_114 = 1.0e+2;

  <bb 14>:
  # scale_6 = PHI <scale_113(12), scale_114(13)>
  operator*= (&dm, scale_6);

  <bb 15>:
  operator*= (&dm, 5.0e-1);
  _117 = this_18(D)->_VtxWritePtr;
  _118 = (long unsigned int) i1_5;
  _119 = _118 * 8;
  _120 = points_71(D) + _119;
  _117->pos = operator- (_120, &dm);
  _122 = this_18(D)->_VtxWritePtr;
  _122->uv = uv;
  _124 = this_18(D)->_VtxWritePtr;
  _124->col = col_24(D);
  _126 = this_18(D)->_VtxWritePtr;
  _127 = _126 + 20;
  _128 = (long unsigned int) i1_5;
  _129 = _128 * 8;
  _130 = points_71(D) + _129;
  _127->pos = operator+ (_130, &dm);
  _132 = this_18(D)->_VtxWritePtr;
  _133 = _132 + 20;
  _133->uv = uv;
  _135 = this_18(D)->_VtxWritePtr;
  _136 = _135 + 20;
  _136->col = col_trans_25;
  _138 = this_18(D)->_VtxWritePtr;
  _139 = _138 + 40;
  this_18(D)->_VtxWritePtr = _139;
  _141 = this_18(D)->_IdxWritePtr;
  _142 = (short unsigned int) i1_5;
  _143 = _142 << 1;
  vtx_inner_idx.634_144 = vtx_inner_idx;
  _145 = (short unsigned int) vtx_inner_idx.634_144;
  _146 = _143 + _145;
  *_141 = _146;
  _148 = this_18(D)->_IdxWritePtr;
  _149 = _148 + 2;
  _150 = (short unsigned int) i0_4;
  _151 = _150 << 1;
  vtx_inner_idx.635_152 = vtx_inner_idx;
  _153 = (short unsigned int) vtx_inner_idx.635_152;
  _154 = _151 + _153;
  *_149 = _154;
  _156 = this_18(D)->_IdxWritePtr;
  _157 = _156 + 4;
  _158 = (short unsigned int) i0_4;
  _159 = _158 << 1;
  _160 = (short unsigned int) vtx_outer_idx_36;
  _161 = _159 + _160;
  *_157 = _161;
  _163 = this_18(D)->_IdxWritePtr;
  _164 = _163 + 6;
  _165 = (short unsigned int) i0_4;
  _166 = _165 << 1;
  _167 = (short unsigned int) vtx_outer_idx_36;
  _168 = _166 + _167;
  *_164 = _168;
  _170 = this_18(D)->_IdxWritePtr;
  _171 = _170 + 8;
  _172 = (short unsigned int) i1_5;
  _173 = _172 << 1;
  _174 = (short unsigned int) vtx_outer_idx_36;
  _175 = _173 + _174;
  *_171 = _175;
  _177 = this_18(D)->_IdxWritePtr;
  _178 = _177 + 10;
  _179 = (short unsigned int) i1_5;
  _180 = _179 << 1;
  vtx_inner_idx.636_181 = vtx_inner_idx;
  _182 = (short unsigned int) vtx_inner_idx.636_181;
  _183 = _180 + _182;
  *_178 = _183;
  _185 = this_18(D)->_IdxWritePtr;
  _186 = _185 + 12;
  this_18(D)->_IdxWritePtr = _186;
  dm ={v} {CLOBBER};
  i1.637_189 = i1_5;
  i1_190 = i1.637_189 + 1;
  i0_191 = i1.637_189;
  goto <bb 10>;

  <bb 16>:
  _192 = this_18(D)->_VtxCurrentIdx;
  _193 = (short unsigned int) vtx_count_31;
  _194 = (unsigned int) _193;
  _195 = _192 + _194;
  this_18(D)->_VtxCurrentIdx = _195;
  vtx_inner_idx ={v} {CLOBBER};
  goto <bb 24>;

  <bb 17>:
  _199 = points_count_26(D) + -2;
  idx_count_200 = _199 * 3;
  vtx_count_201 = points_count_26(D);
  ImDrawList::PrimReserve (this_18(D), idx_count_200, vtx_count_201);
  i_203 = 0;

  <bb 18>:
  # i_7 = PHI <i_203(17), i_216(19)>
  if (i_7 >= vtx_count_201)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  _204 = this_18(D)->_VtxWritePtr;
  _205 = (long unsigned int) i_7;
  _206 = _205 * 8;
  _207 = points_71(D) + _206;
  _204->pos = *_207;
  _209 = this_18(D)->_VtxWritePtr;
  _209->uv = uv;
  _211 = this_18(D)->_VtxWritePtr;
  _211->col = col_24(D);
  _213 = this_18(D)->_VtxWritePtr;
  _214 = _213 + 20;
  this_18(D)->_VtxWritePtr = _214;
  i_216 = i_7 + 1;
  goto <bb 18>;

  <bb 20>:
  i_217 = 2;

  <bb 21>:
  # i_8 = PHI <i_217(20), i_240(22)>
  if (i_8 >= points_count_26(D))
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  _218 = this_18(D)->_IdxWritePtr;
  _219 = this_18(D)->_VtxCurrentIdx;
  _220 = (short unsigned int) _219;
  *_218 = _220;
  _222 = this_18(D)->_IdxWritePtr;
  _223 = _222 + 2;
  _224 = this_18(D)->_VtxCurrentIdx;
  _225 = (short unsigned int) _224;
  _226 = (short unsigned int) i_8;
  _227 = _225 + _226;
  _228 = _227 + 65535;
  *_223 = _228;
  _230 = this_18(D)->_IdxWritePtr;
  _231 = _230 + 4;
  _232 = this_18(D)->_VtxCurrentIdx;
  _233 = (short unsigned int) _232;
  _234 = (short unsigned int) i_8;
  _235 = _233 + _234;
  *_231 = _235;
  _237 = this_18(D)->_IdxWritePtr;
  _238 = _237 + 6;
  this_18(D)->_IdxWritePtr = _238;
  i_240 = i_8 + 1;
  goto <bb 21>;

  <bb 23>:
  _241 = this_18(D)->_VtxCurrentIdx;
  _242 = (short unsigned int) vtx_count_201;
  _243 = (unsigned int) _242;
  _244 = _241 + _243;
  this_18(D)->_VtxCurrentIdx = _244;

  <bb 24>:
  uv ={v} {CLOBBER};
  return;

}



;; Function void ImDrawList::PathArcToFast(const ImVec2&, float, int, int) (_ZN10ImDrawList13PathArcToFastERK6ImVec2fii, funcdef_no=716, decl_uid=5988, cgraph_uid=615, symbol_order=615)

void ImDrawList::PathArcToFast(const ImVec2&, float, int, int) (struct ImDrawList * const this, const struct ImVec2 & centre, float radius, int a_min_of_12, int a_max_of_12)
{
  const struct ImVec2 & c;
  int a;
  struct ImVector * D.28428;
  float D.28427;
  float D.28426;
  float D.28425;
  float D.28424;
  float D.28423;
  float D.28422;
  float D.28421;
  float D.28420;
  struct ImVec2 D.18175;
  int D.28419;
  const struct ImDrawListSharedData * D.28418;
  struct ImVector * D.28415;
  int D.28414;
  int D.28413;
  int D.28412;
  int D.28411;
  struct ImVector * D.28410;
  int _9;
  int _10;
  int _11;
  int _12;
  struct ImVector * _13;
  const struct ImDrawListSharedData * _16;
  int _17;
  float _20;
  float _21;
  float _22;
  float _23;
  float _24;
  float _25;
  float _26;
  float _27;
  struct ImVector * _29;
  struct ImVector * _34;

  <bb 2>:
  if (radius_4(D) == 0.0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  if (a_min_of_12_5(D) > a_max_of_12_6(D))
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _34 = &this_8(D)->_Path;
  ImVector<ImVec2>::push_back (_34, centre_19(D));
  goto <bb 8> (<L6>);

  <bb 5>:
  _9 = this_8(D)->_Path.Size;
  _10 = a_max_of_12_6(D) - a_min_of_12_5(D);
  _11 = _10 + 1;
  _12 = _9 + _11;
  _13 = &this_8(D)->_Path;
  ImVector<ImVec2>::reserve (_13, _12);
  a_15 = a_min_of_12_5(D);

  <bb 6>:
  # a_1 = PHI <a_15(5), a_32(7)>
  if (a_1 > a_max_of_12_6(D))
    goto <bb 8> (<L6>);
  else
    goto <bb 7>;

  <bb 7>:
  _16 = this_8(D)->_Data;
  _17 = a_1 % 12;
  c_18 = &_16->CircleVtx12[_17];
  _20 = centre_19(D)->y;
  _21 = c_18->y;
  _22 = _21 * radius_4(D);
  _23 = _20 + _22;
  _24 = centre_19(D)->x;
  _25 = c_18->x;
  _26 = _25 * radius_4(D);
  _27 = _24 + _26;
  ImVec2::ImVec2 (&D.18175, _27, _23);
  _29 = &this_8(D)->_Path;
  ImVector<ImVec2>::push_back (_29, &D.18175);
  D.18175 ={v} {CLOBBER};
  a_32 = a_1 + 1;
  goto <bb 6>;

<L6>:
  return;

}



;; Function void ImDrawList::PathArcTo(const ImVec2&, float, float, float, int) (_ZN10ImDrawList9PathArcToERK6ImVec2fffi, funcdef_no=717, decl_uid=5982, cgraph_uid=616, symbol_order=616)

void ImDrawList::PathArcTo(const ImVec2&, float, float, float, int) (struct ImDrawList * const this, const struct ImVec2 & centre, float radius, float a_min, float a_max, int num_segments)
{
  const float a;
  int i;
  struct ImVector * D.28469;
  float D.28468;
  float D.28467;
  float D.28466;
  float D.28465;
  float D.28464;
  float D.28463;
  float D.28462;
  float D.28461;
  struct ImVec2 D.18188;
  float D.28460;
  float D.28459;
  float D.28458;
  float D.28457;
  float D.28456;
  struct ImVector * D.28453;
  int D.28452;
  int D.28451;
  int D.28450;
  struct ImVector * D.28449;
  struct ImVector * _6;
  int _10;
  int _12;
  int _13;
  struct ImVector * _14;
  float _17;
  float _18;
  float _19;
  float _22;
  float _23;
  float _25;
  float _26;
  float _27;
  float _28;
  float _29;
  float _30;
  float _31;
  float _32;
  struct ImVector * _34;

  <bb 2>:
  if (radius_4(D) == 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = &this_5(D)->_Path;
  ImVector<ImVec2>::push_back (_6, centre_8(D));
  goto <bb 7> (<L5>);

  <bb 4>:
  _10 = this_5(D)->_Path.Size;
  _12 = num_segments_11(D) + 1;
  _13 = _10 + _12;
  _14 = &this_5(D)->_Path;
  ImVector<ImVec2>::reserve (_14, _13);
  i_16 = 0;

  <bb 5>:
  # i_1 = PHI <i_16(4), i_37(6)>
  if (i_1 > num_segments_11(D))
    goto <bb 7> (<L5>);
  else
    goto <bb 6>;

  <bb 6>:
  _17 = (float) i_1;
  _18 = (float) num_segments_11(D);
  _19 = _17 / _18;
  _22 = a_max_20(D) - a_min_21(D);
  _23 = _19 * _22;
  a_24 = _23 + a_min_21(D);
  _25 = centre_8(D)->y;
  _26 = sinf (a_24);
  _27 = _26 * radius_4(D);
  _28 = _25 + _27;
  _29 = centre_8(D)->x;
  _30 = cosf (a_24);
  _31 = _30 * radius_4(D);
  _32 = _29 + _31;
  ImVec2::ImVec2 (&D.18188, _32, _28);
  _34 = &this_5(D)->_Path;
  ImVector<ImVec2>::push_back (_34, &D.18188);
  D.18188 ={v} {CLOBBER};
  i_37 = i_1 + 1;
  goto <bb 5>;

<L5>:
  return;

}



;; Function void PathBezierToCasteljau(ImVector<ImVec2>*, float, float, float, float, float, float, float, float, float, int) (_ZL21PathBezierToCasteljauP8ImVectorI6ImVec2Efffffffffi, funcdef_no=718, decl_uid=18202, cgraph_uid=617, symbol_order=617)

void PathBezierToCasteljau(ImVector<ImVec2>*, float, float, float, float, float, float, float, float, float, int) (struct ImVector * path, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, float tess_tol, int level)
{
  float y1234;
  float x1234;
  float y234;
  float x234;
  float y123;
  float x123;
  float y34;
  float x34;
  float y23;
  float x23;
  float y12;
  float x12;
  float d3;
  float d2;
  float dy;
  float dx;
  int D.28513;
  int D.28512;
  float D.28511;
  float D.28510;
  float D.28509;
  float D.28508;
  float D.28507;
  float D.28506;
  float D.28505;
  float D.28504;
  float D.28503;
  float D.28502;
  float D.28501;
  float D.28500;
  struct ImVec2 D.18208;
  float D.28494;
  float D.28493;
  float D.28492;
  float D.28491;
  float D.28490;
  float D.28489;
  float D.28488;
  float iftmp.639;
  float iftmp.638;
  float D.28479;
  float D.28478;
  float D.28477;
  float D.28476;
  float D.28475;
  float D.28474;
  float D.28473;
  float D.28472;
  float iftmp.638_1;
  float iftmp.639_2;
  float _11;
  float _12;
  float _14;
  float _15;
  float _18;
  float _19;
  float _21;
  float _22;
  float iftmp.638_24;
  float iftmp.638_25;
  float iftmp.639_27;
  float iftmp.639_28;
  float _30;
  float _31;
  float _32;
  float _33;
  float _34;
  float _35;
  float _37;
  float _45;
  float _47;
  float _49;
  float _51;
  float _53;
  float _55;
  float _57;
  float _59;
  float _61;
  float _63;
  float _65;
  float _67;
  int _69;
  int _71;

  <bb 2>:
  dx_6 = x4_4(D) - x1_5(D);
  dy_9 = y4_7(D) - y1_8(D);
  _11 = x2_10(D) - x4_4(D);
  _12 = _11 * dy_9;
  _14 = y2_13(D) - y4_7(D);
  _15 = _14 * dx_6;
  d2_16 = _12 - _15;
  _18 = x3_17(D) - x4_4(D);
  _19 = _18 * dy_9;
  _21 = y3_20(D) - y4_7(D);
  _22 = _21 * dx_6;
  d3_23 = _19 - _22;
  if (d2_16 >= 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.638_24 = d2_16;
  goto <bb 5>;

  <bb 4>:
  iftmp.638_25 = -d2_16;

  <bb 5>:
  # iftmp.638_1 = PHI <iftmp.638_24(3), iftmp.638_25(4)>
  d2_26 = iftmp.638_1;
  if (d3_23 >= 0.0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.639_27 = d3_23;
  goto <bb 8>;

  <bb 7>:
  iftmp.639_28 = -d3_23;

  <bb 8>:
  # iftmp.639_2 = PHI <iftmp.639_27(6), iftmp.639_28(7)>
  d3_29 = iftmp.639_2;
  _30 = d2_26 + d3_29;
  _31 = d2_26 + d3_29;
  _32 = _30 * _31;
  _33 = dx_6 * dx_6;
  _34 = dy_9 * dy_9;
  _35 = _33 + _34;
  _37 = _35 * tess_tol_36(D);
  if (_32 < _37)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  ImVec2::ImVec2 (&D.18208, x4_4(D), y4_7(D));
  ImVector<ImVec2>::push_back (path_40(D), &D.18208);
  D.18208 ={v} {CLOBBER};
  goto <bb 12>;

  <bb 10>:
  if (level_44(D) <= 9)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _45 = x1_5(D) + x2_10(D);
  x12_46 = _45 * 5.0e-1;
  _47 = y1_8(D) + y2_13(D);
  y12_48 = _47 * 5.0e-1;
  _49 = x2_10(D) + x3_17(D);
  x23_50 = _49 * 5.0e-1;
  _51 = y2_13(D) + y3_20(D);
  y23_52 = _51 * 5.0e-1;
  _53 = x3_17(D) + x4_4(D);
  x34_54 = _53 * 5.0e-1;
  _55 = y3_20(D) + y4_7(D);
  y34_56 = _55 * 5.0e-1;
  _57 = x12_46 + x23_50;
  x123_58 = _57 * 5.0e-1;
  _59 = y12_48 + y23_52;
  y123_60 = _59 * 5.0e-1;
  _61 = x23_50 + x34_54;
  x234_62 = _61 * 5.0e-1;
  _63 = y23_52 + y34_56;
  y234_64 = _63 * 5.0e-1;
  _65 = x123_58 + x234_62;
  x1234_66 = _65 * 5.0e-1;
  _67 = y123_60 + y234_64;
  y1234_68 = _67 * 5.0e-1;
  _69 = level_44(D) + 1;
  PathBezierToCasteljau (path_40(D), x1_5(D), y1_8(D), x12_46, y12_48, x123_58, y123_60, x1234_66, y1234_68, tess_tol_36(D), _69);
  _71 = level_44(D) + 1;
  PathBezierToCasteljau (path_40(D), x1234_66, y1234_68, x234_62, y234_64, x34_54, y34_56, x4_4(D), y4_7(D), tess_tol_36(D), _71);

  <bb 12>:
  return;

}



;; Function void ImDrawList::PathBezierCurveTo(const ImVec2&, const ImVec2&, const ImVec2&, int) (_ZN10ImDrawList17PathBezierCurveToERK6ImVec2S2_S2_i, funcdef_no=719, decl_uid=5994, cgraph_uid=618, symbol_order=618)

void ImDrawList::PathBezierCurveTo(const ImVec2&, const ImVec2&, const ImVec2&, int) (struct ImDrawList * const this, const struct ImVec2 & p2, const struct ImVec2 & p3, const struct ImVec2 & p4, int num_segments)
{
  float w4;
  float w3;
  float w2;
  float w1;
  float u;
  float t;
  int i_step;
  float t_step;
  struct ImVec2 p1;
  struct ImVector * D.28564;
  float D.28563;
  float D.28562;
  float D.28561;
  float D.28560;
  float D.28559;
  float D.28558;
  float D.28557;
  float D.28556;
  float D.28555;
  float D.28554;
  float D.28553;
  float D.28552;
  float D.28551;
  float D.28550;
  float D.28549;
  float D.28548;
  float D.28547;
  float D.28546;
  float D.28545;
  float D.28544;
  float D.28543;
  float D.28542;
  struct ImVec2 D.18238;
  float D.28541;
  float D.28540;
  float D.28539;
  float D.28538;
  float D.28537;
  float D.28536;
  float D.28535;
  float D.28532;
  struct ImVector * D.28530;
  float D.28529;
  float D.28528;
  float D.28527;
  float D.28526;
  float D.28525;
  float D.28524;
  float D.28523;
  float D.28522;
  float D.28521;
  const struct ImDrawListSharedData * D.28520;
  struct value_type & D.28517;
  struct ImVector * D.28516;
  struct ImVector * _6;
  struct value_type & _9;
  const struct ImDrawListSharedData * _12;
  float _13;
  float _15;
  float _16;
  float _18;
  float _19;
  float _21;
  float _22;
  float _23;
  float _24;
  struct ImVector * _25;
  float _27;
  float _30;
  float _33;
  float _35;
  float _36;
  float _38;
  float _39;
  float _41;
  float _43;
  float _44;
  float _45;
  float _46;
  float _47;
  float _48;
  float _49;
  float _50;
  float _51;
  float _52;
  float _53;
  float _54;
  float _55;
  float _56;
  float _57;
  float _58;
  float _59;
  float _60;
  float _61;
  float _62;
  float _63;
  float _64;
  struct ImVector * _66;

  <bb 2>:
  _6 = &this_5(D)->_Path;
  _9 = ImVector<ImVec2>::back (_6);
  p1 = MEM[(const struct ImVec2 &)_9];
  if (num_segments_11(D) == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _12 = this_5(D)->_Data;
  _13 = _12->CurveTessellationTol;
  _15 = p4_14(D)->y;
  _16 = p4_14(D)->x;
  _18 = p3_17(D)->y;
  _19 = p3_17(D)->x;
  _21 = p2_20(D)->y;
  _22 = p2_20(D)->x;
  _23 = p1.y;
  _24 = p1.x;
  _25 = &this_5(D)->_Path;
  PathBezierToCasteljau (_25, _24, _23, _22, _21, _19, _18, _16, _15, _13, 0);
  goto <bb 7>;

  <bb 4>:
  _27 = (float) num_segments_11(D);
  t_step_28 = 1.0e+0 / _27;
  i_step_29 = 1;

  <bb 5>:
  # i_step_1 = PHI <i_step_29(4), i_step_69(6)>
  if (i_step_1 > num_segments_11(D))
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  _30 = (float) i_step_1;
  t_31 = _30 * t_step_28;
  u_32 = 1.0e+0 - t_31;
  _33 = u_32 * u_32;
  w1_34 = _33 * u_32;
  _35 = u_32 * 3.0e+0;
  _36 = _35 * u_32;
  w2_37 = _36 * t_31;
  _38 = u_32 * 3.0e+0;
  _39 = _38 * t_31;
  w3_40 = _39 * t_31;
  _41 = t_31 * t_31;
  w4_42 = _41 * t_31;
  _43 = p1.y;
  _44 = _43 * w1_34;
  _45 = p2_20(D)->y;
  _46 = _45 * w2_37;
  _47 = _44 + _46;
  _48 = p3_17(D)->y;
  _49 = _48 * w3_40;
  _50 = _47 + _49;
  _51 = p4_14(D)->y;
  _52 = _51 * w4_42;
  _53 = _50 + _52;
  _54 = p1.x;
  _55 = _54 * w1_34;
  _56 = p2_20(D)->x;
  _57 = _56 * w2_37;
  _58 = _55 + _57;
  _59 = p3_17(D)->x;
  _60 = _59 * w3_40;
  _61 = _58 + _60;
  _62 = p4_14(D)->x;
  _63 = _62 * w4_42;
  _64 = _61 + _63;
  ImVec2::ImVec2 (&D.18238, _64, _53);
  _66 = &this_5(D)->_Path;
  ImVector<ImVec2>::push_back (_66, &D.18238);
  D.18238 ={v} {CLOBBER};
  i_step_69 = i_step_1 + 1;
  goto <bb 5>;

  <bb 7>:
  p1 ={v} {CLOBBER};
  return;

}



;; Function void ImDrawList::PathRect(const ImVec2&, const ImVec2&, float, int) (_ZN10ImDrawList8PathRectERK6ImVec2S2_fi, funcdef_no=720, decl_uid=6000, cgraph_uid=619, symbol_order=619)

void ImDrawList::PathRect(const ImVec2&, const ImVec2&, float, int) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & b, float rounding, int rounding_corners)
{
  const float rounding_bl;
  const float rounding_br;
  const float rounding_tr;
  const float rounding_tl;
  float D.28647;
  float D.28646;
  float D.28645;
  float D.28644;
  struct ImVec2 D.18257;
  float D.28643;
  float D.28642;
  float D.28641;
  float D.28640;
  struct ImVec2 D.18256;
  float D.28639;
  float D.28638;
  float D.28637;
  float D.28636;
  struct ImVec2 D.18255;
  float D.28635;
  float D.28634;
  float D.28633;
  float D.28632;
  struct ImVec2 D.18254;
  int D.28628;
  float iftmp.645;
  int D.28623;
  float iftmp.644;
  int D.28618;
  float iftmp.643;
  int D.28613;
  float iftmp.642;
  float D.28611;
  float D.28610;
  struct ImVec2 D.18249;
  float D.28609;
  float D.28608;
  struct ImVec2 D.18248;
  float D.28603;
  float D.28602;
  int D.28601;
  int D.28599;
  float iftmp.641;
  float D.28594;
  float D.28593;
  float D.28592;
  float D.28591;
  float D.28590;
  float D.28589;
  int D.28588;
  int D.28586;
  float iftmp.640;
  float D.28581;
  float D.28580;
  float D.28579;
  float D.28578;
  float iftmp.640_1;
  float iftmp.641_2;
  float iftmp.642_3;
  float iftmp.643_4;
  float iftmp.644_5;
  float iftmp.645_6;
  float _10;
  float _12;
  float _13;
  float _14;
  int _16;
  int _17;
  float iftmp.640_18;
  float iftmp.640_19;
  float _20;
  float _21;
  float _25;
  float _26;
  float _27;
  float _28;
  int _29;
  int _30;
  float iftmp.641_31;
  float iftmp.641_32;
  float _33;
  float _34;
  int _37;
  float iftmp.642_38;
  float iftmp.642_39;
  int _41;
  float iftmp.643_42;
  float iftmp.643_43;
  int _45;
  float iftmp.644_46;
  float iftmp.644_47;
  int _49;
  float iftmp.645_50;
  float iftmp.645_51;
  float _53;
  float _54;
  float _55;
  float _56;
  float _61;
  float _62;
  float _63;
  float _64;
  float _68;
  float _69;
  float _70;
  float _71;
  float _75;
  float _76;
  float _77;
  float _78;
  float _87;
  float _88;
  float _93;
  float _94;

  <bb 2>:
  _10 = b_9(D)->x;
  _12 = a_11(D)->x;
  _13 = _10 - _12;
  _14 = ABS_EXPR <_13>;
  _16 = rounding_corners_15(D) & 3;
  if (_16 == 3)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _17 = rounding_corners_15(D) & 12;
  if (_17 == 12)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  iftmp.640_19 = 5.0e-1;
  goto <bb 6>;

  <bb 5>:
  iftmp.640_18 = 1.0e+0;

  <bb 6>:
  # iftmp.640_1 = PHI <iftmp.640_19(4), iftmp.640_18(5)>
  _20 = _14 * iftmp.640_1;
  _21 = _20 - 1.0e+0;
  rounding_24 = ImMin (rounding_22(D), _21);
  _25 = b_9(D)->y;
  _26 = a_11(D)->y;
  _27 = _25 - _26;
  _28 = ABS_EXPR <_27>;
  _29 = rounding_corners_15(D) & 5;
  if (_29 == 5)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _30 = rounding_corners_15(D) & 10;
  if (_30 == 10)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  iftmp.641_32 = 5.0e-1;
  goto <bb 10>;

  <bb 9>:
  iftmp.641_31 = 1.0e+0;

  <bb 10>:
  # iftmp.641_2 = PHI <iftmp.641_32(8), iftmp.641_31(9)>
  _33 = _28 * iftmp.641_2;
  _34 = _33 - 1.0e+0;
  rounding_36 = ImMin (rounding_24, _34);
  if (rounding_36 <= 0.0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  if (rounding_corners_15(D) == 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  ImDrawList::PathLineTo (this_58(D), a_11(D));
  _87 = a_11(D)->y;
  _88 = b_9(D)->x;
  ImVec2::ImVec2 (&D.18248, _88, _87);
  ImDrawList::PathLineTo (this_58(D), &D.18248);
  D.18248 ={v} {CLOBBER};
  ImDrawList::PathLineTo (this_58(D), b_9(D));
  _93 = b_9(D)->y;
  _94 = a_11(D)->x;
  ImVec2::ImVec2 (&D.18249, _94, _93);
  ImDrawList::PathLineTo (this_58(D), &D.18249);
  D.18249 ={v} {CLOBBER};
  goto <bb 26>;

  <bb 13>:
  _37 = rounding_corners_15(D) & 1;
  if (_37 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  iftmp.642_38 = rounding_36;
  goto <bb 16>;

  <bb 15>:
  iftmp.642_39 = 0.0;

  <bb 16>:
  # iftmp.642_3 = PHI <iftmp.642_38(14), iftmp.642_39(15)>
  rounding_tl_40 = iftmp.642_3;
  _41 = rounding_corners_15(D) & 2;
  if (_41 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  iftmp.643_42 = rounding_36;
  goto <bb 19>;

  <bb 18>:
  iftmp.643_43 = 0.0;

  <bb 19>:
  # iftmp.643_4 = PHI <iftmp.643_42(17), iftmp.643_43(18)>
  rounding_tr_44 = iftmp.643_4;
  _45 = rounding_corners_15(D) & 8;
  if (_45 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  iftmp.644_46 = rounding_36;
  goto <bb 22>;

  <bb 21>:
  iftmp.644_47 = 0.0;

  <bb 22>:
  # iftmp.644_5 = PHI <iftmp.644_46(20), iftmp.644_47(21)>
  rounding_br_48 = iftmp.644_5;
  _49 = rounding_corners_15(D) & 4;
  if (_49 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  iftmp.645_50 = rounding_36;
  goto <bb 25>;

  <bb 24>:
  iftmp.645_51 = 0.0;

  <bb 25>:
  # iftmp.645_6 = PHI <iftmp.645_50(23), iftmp.645_51(24)>
  rounding_bl_52 = iftmp.645_6;
  _53 = a_11(D)->y;
  _54 = _53 + rounding_tl_40;
  _55 = a_11(D)->x;
  _56 = _55 + rounding_tl_40;
  ImVec2::ImVec2 (&D.18254, _56, _54);
  ImDrawList::PathArcToFast (this_58(D), &D.18254, rounding_tl_40, 6, 9);
  D.18254 ={v} {CLOBBER};
  _61 = a_11(D)->y;
  _62 = _61 + rounding_tr_44;
  _63 = b_9(D)->x;
  _64 = _63 - rounding_tr_44;
  ImVec2::ImVec2 (&D.18255, _64, _62);
  ImDrawList::PathArcToFast (this_58(D), &D.18255, rounding_tr_44, 9, 12);
  D.18255 ={v} {CLOBBER};
  _68 = b_9(D)->y;
  _69 = _68 - rounding_br_48;
  _70 = b_9(D)->x;
  _71 = _70 - rounding_br_48;
  ImVec2::ImVec2 (&D.18256, _71, _69);
  ImDrawList::PathArcToFast (this_58(D), &D.18256, rounding_br_48, 0, 3);
  D.18256 ={v} {CLOBBER};
  _75 = b_9(D)->y;
  _76 = _75 - rounding_bl_52;
  _77 = a_11(D)->x;
  _78 = _77 + rounding_bl_52;
  ImVec2::ImVec2 (&D.18257, _78, _76);
  ImDrawList::PathArcToFast (this_58(D), &D.18257, rounding_bl_52, 3, 6);
  D.18257 ={v} {CLOBBER};

  <bb 26>:
  return;

}



;; Function void ImDrawList::AddLine(const ImVec2&, const ImVec2&, ImU32, float) (_ZN10ImDrawList7AddLineERK6ImVec2S2_jf, funcdef_no=721, decl_uid=5828, cgraph_uid=620, symbol_order=620)

void ImDrawList::AddLine(const ImVec2&, const ImVec2&, ImU32, float) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & b, ImU32 col, float thickness)
{
  struct ImVec2 D.18267;
  struct ImVec2 D.18268;
  struct ImVec2 D.18265;
  struct ImVec2 D.18266;
  unsigned int D.28661;
  unsigned int _3;

  <bb 2>:
  _3 = col_2(D) & 4278190080;
  if (_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 5> (<L2>);

  <bb 4>:
  ImVec2::ImVec2 (&D.18265, 5.0e-1, 5.0e-1);
  D.18266 = operator+ (a_6(D), &D.18265);
  ImDrawList::PathLineTo (this_8(D), &D.18266);
  D.18266 ={v} {CLOBBER};
  D.18265 ={v} {CLOBBER};
  ImVec2::ImVec2 (&D.18267, 5.0e-1, 5.0e-1);
  D.18268 = operator+ (b_13(D), &D.18267);
  ImDrawList::PathLineTo (this_8(D), &D.18268);
  D.18268 ={v} {CLOBBER};
  D.18267 ={v} {CLOBBER};
  ImDrawList::PathStroke (this_8(D), col_2(D), 0, thickness_18(D));

<L2>:
  return;

}



;; Function void ImDrawList::AddRect(const ImVec2&, const ImVec2&, ImU32, float, int, float) (_ZN10ImDrawList7AddRectERK6ImVec2S2_jfif, funcdef_no=722, decl_uid=5836, cgraph_uid=621, symbol_order=621)

void ImDrawList::AddRect(const ImVec2&, const ImVec2&, ImU32, float, int, float) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & b, ImU32 col, float rounding, int rounding_corners_flags, float thickness)
{
  struct ImVec2 D.18282;
  struct ImVec2 D.18283;
  struct ImVec2 D.18284;
  struct ImVec2 D.18285;
  struct ImVec2 D.18278;
  struct ImVec2 D.18279;
  struct ImVec2 D.18280;
  struct ImVec2 D.18281;
  int D.28677;
  int D.28676;
  unsigned int D.28673;
  unsigned int _4;
  int _7;
  int _8;

  <bb 2>:
  _4 = col_3(D) & 4278190080;
  if (_4 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 8> (<L5>);

  <bb 4>:
  _7 = this_6(D)->Flags;
  _8 = _7 & 1;
  if (_8 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  ImVec2::ImVec2 (&D.18280, 5.0e-1, 5.0e-1);
  D.18281 = operator- (b_10(D), &D.18280);
  ImVec2::ImVec2 (&D.18278, 5.0e-1, 5.0e-1);
  D.18279 = operator+ (a_13(D), &D.18278);
  ImDrawList::PathRect (this_6(D), &D.18279, &D.18281, rounding_15(D), rounding_corners_flags_16(D));
  D.18279 ={v} {CLOBBER};
  D.18278 ={v} {CLOBBER};
  D.18281 ={v} {CLOBBER};
  D.18280 ={v} {CLOBBER};
  goto <bb 7>;

  <bb 6>:
  ImVec2::ImVec2 (&D.18284, 4.900000095367431640625e-1, 4.900000095367431640625e-1);
  D.18285 = operator- (b_10(D), &D.18284);
  ImVec2::ImVec2 (&D.18282, 5.0e-1, 5.0e-1);
  D.18283 = operator+ (a_13(D), &D.18282);
  ImDrawList::PathRect (this_6(D), &D.18283, &D.18285, rounding_15(D), rounding_corners_flags_16(D));
  D.18283 ={v} {CLOBBER};
  D.18282 ={v} {CLOBBER};
  D.18285 ={v} {CLOBBER};
  D.18284 ={v} {CLOBBER};

  <bb 7>:
  ImDrawList::PathStroke (this_6(D), col_3(D), 1, thickness_39(D));

<L5>:
  return;

}



;; Function void ImDrawList::AddRectFilled(const ImVec2&, const ImVec2&, ImU32, float, int) (_ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi, funcdef_no=723, decl_uid=5843, cgraph_uid=622, symbol_order=622)

void ImDrawList::AddRectFilled(const ImVec2&, const ImVec2&, ImU32, float, int) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & b, ImU32 col, float rounding, int rounding_corners_flags)
{
  unsigned int D.28690;
  unsigned int _3;

  <bb 2>:
  _3 = col_2(D) & 4278190080;
  if (_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  if (rounding_5(D) > 0.0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  ImDrawList::PathRect (this_6(D), a_7(D), b_8(D), rounding_5(D), rounding_corners_flags_9(D));
  ImDrawList::PathFillConvex (this_6(D), col_2(D));
  goto <bb 7> (<L5>);

  <bb 6>:
  ImDrawList::PrimReserve (this_6(D), 6, 4);
  ImDrawList::PrimRect (this_6(D), a_7(D), b_8(D), col_2(D));

<L5>:
  return;

}



;; Function void ImDrawList::AddRectFilledMultiColor(const ImVec2&, const ImVec2&, ImU32, ImU32, ImU32, ImU32) (_ZN10ImDrawList23AddRectFilledMultiColorERK6ImVec2S2_jjjj, funcdef_no=724, decl_uid=5851, cgraph_uid=623, symbol_order=623)

void ImDrawList::AddRectFilledMultiColor(const ImVec2&, const ImVec2&, ImU32, ImU32, ImU32, ImU32) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & c, ImU32 col_upr_left, ImU32 col_upr_right, ImU32 col_bot_right, ImU32 col_bot_left)
{
  const struct ImVec2 uv;
  float D.28731;
  float D.28730;
  struct ImVec2 D.18306;
  float D.28729;
  float D.28728;
  struct ImVec2 D.18305;
  int D.28727;
  short unsigned int D.28726;
  short unsigned int D.28725;
  unsigned int D.28724;
  int D.28723;
  short unsigned int D.28722;
  short unsigned int D.28721;
  unsigned int D.28720;
  int D.28719;
  short unsigned int D.28718;
  unsigned int D.28717;
  int D.28716;
  short unsigned int D.28715;
  short unsigned int D.28714;
  unsigned int D.28713;
  int D.28712;
  short unsigned int D.28711;
  short unsigned int D.28710;
  unsigned int D.28709;
  int D.28708;
  short unsigned int D.28707;
  unsigned int D.28706;
  const struct ImDrawListSharedData * D.28705;
  unsigned int D.28702;
  unsigned int D.28701;
  unsigned int D.28700;
  unsigned int D.28699;
  unsigned int _4;
  unsigned int _6;
  unsigned int _8;
  unsigned int _9;
  const struct ImDrawListSharedData * _12;
  unsigned int _15;
  short unsigned int _16;
  int _17;
  unsigned int _19;
  short unsigned int _20;
  short unsigned int _21;
  int _22;
  unsigned int _24;
  short unsigned int _25;
  short unsigned int _26;
  int _27;
  unsigned int _29;
  short unsigned int _30;
  int _31;
  unsigned int _33;
  short unsigned int _34;
  short unsigned int _35;
  int _36;
  unsigned int _38;
  short unsigned int _39;
  short unsigned int _40;
  int _41;
  float _45;
  float _47;
  float _52;
  float _53;

  <bb 2>:
  _4 = col_upr_left_2(D) | col_upr_right_3(D);
  _6 = _4 | col_bot_right_5(D);
  _8 = _6 | col_bot_left_7(D);
  _9 = _8 & 4278190080;
  if (_9 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  uv ={v} {CLOBBER};
  goto <bb 5> (<L4>);

  <bb 4>:
  _12 = this_11(D)->_Data;
  uv = _12->TexUvWhitePixel;
  ImDrawList::PrimReserve (this_11(D), 6, 4);
  _15 = this_11(D)->_VtxCurrentIdx;
  _16 = (short unsigned int) _15;
  _17 = (int) _16;
  ImDrawList::PrimWriteIdx (this_11(D), _17);
  _19 = this_11(D)->_VtxCurrentIdx;
  _20 = (short unsigned int) _19;
  _21 = _20 + 1;
  _22 = (int) _21;
  ImDrawList::PrimWriteIdx (this_11(D), _22);
  _24 = this_11(D)->_VtxCurrentIdx;
  _25 = (short unsigned int) _24;
  _26 = _25 + 2;
  _27 = (int) _26;
  ImDrawList::PrimWriteIdx (this_11(D), _27);
  _29 = this_11(D)->_VtxCurrentIdx;
  _30 = (short unsigned int) _29;
  _31 = (int) _30;
  ImDrawList::PrimWriteIdx (this_11(D), _31);
  _33 = this_11(D)->_VtxCurrentIdx;
  _34 = (short unsigned int) _33;
  _35 = _34 + 2;
  _36 = (int) _35;
  ImDrawList::PrimWriteIdx (this_11(D), _36);
  _38 = this_11(D)->_VtxCurrentIdx;
  _39 = (short unsigned int) _38;
  _40 = _39 + 3;
  _41 = (int) _40;
  ImDrawList::PrimWriteIdx (this_11(D), _41);
  ImDrawList::PrimWriteVtx (this_11(D), a_43(D), &uv, col_upr_left_2(D));
  _45 = a_43(D)->y;
  _47 = c_46(D)->x;
  ImVec2::ImVec2 (&D.18305, _47, _45);
  ImDrawList::PrimWriteVtx (this_11(D), &D.18305, &uv, col_upr_right_3(D));
  D.18305 ={v} {CLOBBER};
  ImDrawList::PrimWriteVtx (this_11(D), c_46(D), &uv, col_bot_right_5(D));
  _52 = c_46(D)->y;
  _53 = a_43(D)->x;
  ImVec2::ImVec2 (&D.18306, _53, _52);
  ImDrawList::PrimWriteVtx (this_11(D), &D.18306, &uv, col_bot_left_7(D));
  D.18306 ={v} {CLOBBER};
  uv ={v} {CLOBBER};

<L4>:
  return;

}



;; Function void ImDrawList::AddQuad(const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32, float) (_ZN10ImDrawList7AddQuadERK6ImVec2S2_S2_S2_jf, funcdef_no=725, decl_uid=5859, cgraph_uid=624, symbol_order=624)

void ImDrawList::AddQuad(const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32, float) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & b, const struct ImVec2 & c, const struct ImVec2 & d, ImU32 col, float thickness)
{
  unsigned int D.28746;
  unsigned int _3;

  <bb 2>:
  _3 = col_2(D) & 4278190080;
  if (_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 5> (<L2>);

  <bb 4>:
  ImDrawList::PathLineTo (this_5(D), a_6(D));
  ImDrawList::PathLineTo (this_5(D), b_8(D));
  ImDrawList::PathLineTo (this_5(D), c_10(D));
  ImDrawList::PathLineTo (this_5(D), d_12(D));
  ImDrawList::PathStroke (this_5(D), col_2(D), 1, thickness_14(D));

<L2>:
  return;

}



;; Function void ImDrawList::AddQuadFilled(const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (_ZN10ImDrawList13AddQuadFilledERK6ImVec2S2_S2_S2_j, funcdef_no=726, decl_uid=5866, cgraph_uid=625, symbol_order=625)

void ImDrawList::AddQuadFilled(const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & b, const struct ImVec2 & c, const struct ImVec2 & d, ImU32 col)
{
  unsigned int D.28750;
  unsigned int _3;

  <bb 2>:
  _3 = col_2(D) & 4278190080;
  if (_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 5> (<L2>);

  <bb 4>:
  ImDrawList::PathLineTo (this_5(D), a_6(D));
  ImDrawList::PathLineTo (this_5(D), b_8(D));
  ImDrawList::PathLineTo (this_5(D), c_10(D));
  ImDrawList::PathLineTo (this_5(D), d_12(D));
  ImDrawList::PathFillConvex (this_5(D), col_2(D));

<L2>:
  return;

}



;; Function void ImDrawList::AddTriangle(const ImVec2&, const ImVec2&, const ImVec2&, ImU32, float) (_ZN10ImDrawList11AddTriangleERK6ImVec2S2_S2_jf, funcdef_no=727, decl_uid=5873, cgraph_uid=626, symbol_order=626)

void ImDrawList::AddTriangle(const ImVec2&, const ImVec2&, const ImVec2&, ImU32, float) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & b, const struct ImVec2 & c, ImU32 col, float thickness)
{
  unsigned int D.28754;
  unsigned int _3;

  <bb 2>:
  _3 = col_2(D) & 4278190080;
  if (_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 5> (<L2>);

  <bb 4>:
  ImDrawList::PathLineTo (this_5(D), a_6(D));
  ImDrawList::PathLineTo (this_5(D), b_8(D));
  ImDrawList::PathLineTo (this_5(D), c_10(D));
  ImDrawList::PathStroke (this_5(D), col_2(D), 1, thickness_12(D));

<L2>:
  return;

}



;; Function void ImDrawList::AddTriangleFilled(const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (_ZN10ImDrawList17AddTriangleFilledERK6ImVec2S2_S2_j, funcdef_no=728, decl_uid=5879, cgraph_uid=627, symbol_order=627)

void ImDrawList::AddTriangleFilled(const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (struct ImDrawList * const this, const struct ImVec2 & a, const struct ImVec2 & b, const struct ImVec2 & c, ImU32 col)
{
  unsigned int D.28758;
  unsigned int _3;

  <bb 2>:
  _3 = col_2(D) & 4278190080;
  if (_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 5> (<L2>);

  <bb 4>:
  ImDrawList::PathLineTo (this_5(D), a_6(D));
  ImDrawList::PathLineTo (this_5(D), b_8(D));
  ImDrawList::PathLineTo (this_5(D), c_10(D));
  ImDrawList::PathFillConvex (this_5(D), col_2(D));

<L2>:
  return;

}



;; Function void ImDrawList::AddCircle(const ImVec2&, float, ImU32, int, float) (_ZN10ImDrawList9AddCircleERK6ImVec2fjif, funcdef_no=729, decl_uid=5886, cgraph_uid=628, symbol_order=628)

void ImDrawList::AddCircle(const ImVec2&, float, ImU32, int, float) (struct ImDrawList * const this, const struct ImVec2 & centre, float radius, ImU32 col, int num_segments, float thickness)
{
  const float a_max;
  float D.28769;
  float D.28768;
  float D.28767;
  float D.28766;
  float D.28765;
  unsigned int D.28762;
  unsigned int _3;
  float _6;
  float _7;
  float _8;
  float _9;
  float _12;

  <bb 2>:
  _3 = col_2(D) & 4278190080;
  if (_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 5> (<L2>);

  <bb 4>:
  _6 = (float) num_segments_5(D);
  _7 = _6 - 1.0e+0;
  _8 = _7 * 6.283185482025146484375e+0;
  _9 = (float) num_segments_5(D);
  a_max_10 = _8 / _9;
  _12 = radius_11(D) - 5.0e-1;
  ImDrawList::PathArcTo (this_13(D), centre_14(D), _12, 0.0, a_max_10, num_segments_5(D));
  ImDrawList::PathStroke (this_13(D), col_2(D), 1, thickness_16(D));

<L2>:
  return;

}



;; Function void ImDrawList::AddCircleFilled(const ImVec2&, float, ImU32, int) (_ZN10ImDrawList15AddCircleFilledERK6ImVec2fji, funcdef_no=730, decl_uid=5892, cgraph_uid=629, symbol_order=629)

void ImDrawList::AddCircleFilled(const ImVec2&, float, ImU32, int) (struct ImDrawList * const this, const struct ImVec2 & centre, float radius, ImU32 col, int num_segments)
{
  const float a_max;
  float D.28777;
  float D.28776;
  float D.28775;
  float D.28774;
  unsigned int D.28771;
  unsigned int _3;
  float _6;
  float _7;
  float _8;
  float _9;

  <bb 2>:
  _3 = col_2(D) & 4278190080;
  if (_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 5> (<L2>);

  <bb 4>:
  _6 = (float) num_segments_5(D);
  _7 = _6 - 1.0e+0;
  _8 = _7 * 6.283185482025146484375e+0;
  _9 = (float) num_segments_5(D);
  a_max_10 = _8 / _9;
  ImDrawList::PathArcTo (this_11(D), centre_12(D), radius_13(D), 0.0, a_max_10, num_segments_5(D));
  ImDrawList::PathFillConvex (this_11(D), col_2(D));

<L2>:
  return;

}



;; Function void ImDrawList::AddBezierCurve(const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32, float, int) (_ZN10ImDrawList14AddBezierCurveERK6ImVec2S2_S2_S2_jfi, funcdef_no=731, decl_uid=5959, cgraph_uid=630, symbol_order=630)

void ImDrawList::AddBezierCurve(const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32, float, int) (struct ImDrawList * const this, const struct ImVec2 & pos0, const struct ImVec2 & cp0, const struct ImVec2 & cp1, const struct ImVec2 & pos1, ImU32 col, float thickness, int num_segments)
{
  unsigned int D.28779;
  unsigned int _3;

  <bb 2>:
  _3 = col_2(D) & 4278190080;
  if (_3 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 5> (<L2>);

  <bb 4>:
  ImDrawList::PathLineTo (this_5(D), pos0_6(D));
  ImDrawList::PathBezierCurveTo (this_5(D), cp0_8(D), cp1_9(D), pos1_10(D), num_segments_11(D));
  ImDrawList::PathStroke (this_5(D), col_2(D), 0, thickness_13(D));

<L2>:
  return;

}



;; Function void ImDrawList::AddText(const ImFont*, float, const ImVec2&, ImU32, const char*, const char*, float, const ImVec4*) (_ZN10ImDrawList7AddTextEPK6ImFontfRK6ImVec2jPKcS7_fPK6ImVec4, funcdef_no=732, decl_uid=5908, cgraph_uid=631, symbol_order=631)

void ImDrawList::AddText(const ImFont*, float, const ImVec2&, ImU32, const char*, const char*, float, const ImVec4*) (struct ImDrawList * const this, const struct ImFont * font, float font_size, const struct ImVec2 & pos, ImU32 col, const char * text_begin, const char * text_end, float wrap_width, const struct ImVec4 * cpu_fine_clip_rect)
{
  struct ImVec4 clip_rect;
  static const char __PRETTY_FUNCTION__[117] = "void ImDrawList::AddText(const ImFont*, float, const ImVec2&, ImU32, const char*, const char*, float, const ImVec4*)";
  int D.28826;
  bool D.28825;
  float D.28823;
  float D.28822;
  float D.28821;
  float D.28820;
  float D.28819;
  float D.28818;
  float D.28817;
  float D.28816;
  float D.28815;
  float D.28814;
  float D.28813;
  float D.28812;
  struct value_type & D.28809;
  struct ImVector * D.28808;
  void * D.28804;
  void * & D.28803;
  struct ImVector * D.28802;
  void * D.28801;
  struct ImFontAtlas * D.28800;
  const struct ImDrawListSharedData * D.28798;
  const struct ImDrawListSharedData * D.28794;
  long unsigned int D.28788;
  unsigned int D.28783;
  unsigned int _7;
  long unsigned int _11;
  const struct ImDrawListSharedData * _15;
  const struct ImDrawListSharedData * _18;
  struct ImFontAtlas * _20;
  void * _21;
  struct ImVector * _22;
  void * & _24;
  void * _25;
  struct ImVector * _26;
  struct value_type & _28;
  float _31;
  float _32;
  float _34;
  float _36;
  float _37;
  float _39;
  float _41;
  float _42;
  float _44;
  float _46;
  float _47;
  float _49;
  bool _51;
  int _52;

  <bb 2>:
  _7 = col_6(D) & 4278190080;
  if (_7 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 17>;

  <bb 4>:
  if (text_end_8(D) == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _11 = strlen (text_begin_10(D));
  text_end_12 = text_begin_10(D) + _11;

  <bb 6>:
  # text_end_3 = PHI <text_end_8(D)(4), text_end_12(5)>
  if (text_begin_10(D) == text_end_3)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  goto <bb 17>;

  <bb 8>:
  if (font_13(D) == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _15 = this_14(D)->_Data;
  font_16 = _15->Font;

  <bb 10>:
  # font_1 = PHI <font_13(D)(8), font_16(9)>
  if (font_size_17(D) == 0.0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  _18 = this_14(D)->_Data;
  font_size_19 = _18->FontSize;

  <bb 12>:
  # font_size_2 = PHI <font_size_17(D)(10), font_size_19(11)>
  _20 = font_1->ContainerAtlas;
  _21 = _20->TexID;
  _22 = &this_14(D)->_TextureIdStack;
  _24 = ImVector<void*>::back (_22);
  _25 = *_24;
  if (_21 == _25)
    goto <bb 14>;
  else
    goto <bb 13>;

  <bb 13>:
  __assert_fail ("font->ContainerAtlas->TexID == _TextureIdStack.back()", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1127, &__PRETTY_FUNCTION__);

  <bb 14>:
  _26 = &this_14(D)->_ClipRectStack;
  _28 = ImVector<ImVec4>::back (_26);
  clip_rect = MEM[(const struct ImVec4 &)_28];
  if (cpu_fine_clip_rect_30(D) != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _31 = cpu_fine_clip_rect_30(D)->x;
  _32 = clip_rect.x;
  _34 = ImMax (_32, _31);
  clip_rect.x = _34;
  _36 = cpu_fine_clip_rect_30(D)->y;
  _37 = clip_rect.y;
  _39 = ImMax (_37, _36);
  clip_rect.y = _39;
  _41 = cpu_fine_clip_rect_30(D)->z;
  _42 = clip_rect.z;
  _44 = ImMin (_42, _41);
  clip_rect.z = _44;
  _46 = cpu_fine_clip_rect_30(D)->w;
  _47 = clip_rect.w;
  _49 = ImMin (_47, _46);
  clip_rect.w = _49;

  <bb 16>:
  _51 = cpu_fine_clip_rect_30(D) != 0B;
  _52 = (int) _51;
  ImFont::RenderText (font_1, this_14(D), font_size_2, *pos_53(D), col_6(D), &clip_rect, text_begin_10(D), text_end_3, wrap_width_54(D), _52);
  clip_rect ={v} {CLOBBER};
  goto <bb 18> (<L21>);

  <bb 17>:
  clip_rect ={v} {CLOBBER};

<L21>:
  return;

}



;; Function void ImDrawList::AddText(const ImVec2&, ImU32, const char*, const char*) (_ZN10ImDrawList7AddTextERK6ImVec2jPKcS4_, funcdef_no=733, decl_uid=5898, cgraph_uid=632, symbol_order=632)

void ImDrawList::AddText(const ImVec2&, ImU32, const char*, const char*) (struct ImDrawList * const this, const struct ImVec2 & pos, ImU32 col, const char * text_begin, const char * text_end)
{
  <bb 2>:
  ImDrawList::AddText (this_2(D), 0B, 0.0, pos_3(D), col_4(D), text_begin_5(D), text_end_6(D), 0.0, 0B);
  return;

}



;; Function void ImDrawList::AddImage(ImTextureID, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (_ZN10ImDrawList8AddImageEPvRK6ImVec2S3_S3_S3_j, funcdef_no=734, decl_uid=5916, cgraph_uid=633, symbol_order=633)

void ImDrawList::AddImage(ImTextureID, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (struct ImDrawList * const this, void * user_texture_id, const struct ImVec2 & a, const struct ImVec2 & b, const struct ImVec2 & uv_a, const struct ImVec2 & uv_b, ImU32 col)
{
  const bool push_texture_id;
  void * D.28843;
  void * & D.28842;
  struct ImVector * D.28841;
  bool D.28839;
  struct ImVector * D.28838;
  bool iftmp.647;
  unsigned int D.28831;
  bool iftmp.647_1;
  unsigned int _7;
  struct ImVector * _10;
  bool _12;
  struct ImVector * _13;
  void * & _15;
  void * _16;
  bool iftmp.647_18;
  bool iftmp.647_19;

  <bb 2>:
  _7 = col_6(D) & 4278190080;
  if (_7 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 12> (<L12>);

  <bb 4>:
  _10 = &this_9(D)->_TextureIdStack;
  _12 = ImVector<void*>::empty (_10);
  if (_12 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  _13 = &this_9(D)->_TextureIdStack;
  _15 = ImVector<void*>::back (_13);
  _16 = *_15;
  if (_16 != user_texture_id_17(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.647_19 = 1;
  goto <bb 8>;

  <bb 7>:
  iftmp.647_18 = 0;

  <bb 8>:
  # iftmp.647_1 = PHI <iftmp.647_19(6), iftmp.647_18(7)>
  push_texture_id_20 = iftmp.647_1;
  if (push_texture_id_20 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  ImDrawList::PushTextureID (this_9(D), user_texture_id_17(D));

  <bb 10>:
  ImDrawList::PrimReserve (this_9(D), 6, 4);
  ImDrawList::PrimRectUV (this_9(D), a_23(D), b_24(D), uv_a_25(D), uv_b_26(D), col_6(D));
  if (push_texture_id_20 != 0)
    goto <bb 11>;
  else
    goto <bb 12> (<L12>);

  <bb 11>:
  ImDrawList::PopTextureID (this_9(D));

<L12>:
  return;

}



;; Function void ImDrawList::AddImageQuad(ImTextureID, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (_ZN10ImDrawList12AddImageQuadEPvRK6ImVec2S3_S3_S3_S3_S3_S3_S3_j, funcdef_no=735, decl_uid=5928, cgraph_uid=634, symbol_order=634)

void ImDrawList::AddImageQuad(ImTextureID, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32) (struct ImDrawList * const this, void * user_texture_id, const struct ImVec2 & a, const struct ImVec2 & b, const struct ImVec2 & c, const struct ImVec2 & d, const struct ImVec2 & uv_a, const struct ImVec2 & uv_b, const struct ImVec2 & uv_c, const struct ImVec2 & uv_d, ImU32 col)
{
  const bool push_texture_id;
  void * D.28866;
  void * & D.28865;
  struct ImVector * D.28864;
  bool D.28862;
  struct ImVector * D.28861;
  bool iftmp.648;
  unsigned int D.28854;
  bool iftmp.648_1;
  unsigned int _7;
  struct ImVector * _10;
  bool _12;
  struct ImVector * _13;
  void * & _15;
  void * _16;
  bool iftmp.648_18;
  bool iftmp.648_19;

  <bb 2>:
  _7 = col_6(D) & 4278190080;
  if (_7 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 12> (<L12>);

  <bb 4>:
  _10 = &this_9(D)->_TextureIdStack;
  _12 = ImVector<void*>::empty (_10);
  if (_12 != 0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  _13 = &this_9(D)->_TextureIdStack;
  _15 = ImVector<void*>::back (_13);
  _16 = *_15;
  if (_16 != user_texture_id_17(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.648_19 = 1;
  goto <bb 8>;

  <bb 7>:
  iftmp.648_18 = 0;

  <bb 8>:
  # iftmp.648_1 = PHI <iftmp.648_19(6), iftmp.648_18(7)>
  push_texture_id_20 = iftmp.648_1;
  if (push_texture_id_20 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  ImDrawList::PushTextureID (this_9(D), user_texture_id_17(D));

  <bb 10>:
  ImDrawList::PrimReserve (this_9(D), 6, 4);
  ImDrawList::PrimQuadUV (this_9(D), a_23(D), b_24(D), c_25(D), d_26(D), uv_a_27(D), uv_b_28(D), uv_c_29(D), uv_d_30(D), col_6(D));
  if (push_texture_id_20 != 0)
    goto <bb 11>;
  else
    goto <bb 12> (<L12>);

  <bb 11>:
  ImDrawList::PopTextureID (this_9(D));

<L12>:
  return;

}



;; Function void ImDrawList::AddImageRounded(ImTextureID, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32, float, int) (_ZN10ImDrawList15AddImageRoundedEPvRK6ImVec2S3_S3_S3_jfi, funcdef_no=736, decl_uid=5938, cgraph_uid=635, symbol_order=635)

void ImDrawList::AddImageRounded(ImTextureID, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, ImU32, float, int) (struct ImDrawList * const this, void * user_texture_id, const struct ImVec2 & a, const struct ImVec2 & b, const struct ImVec2 & uv_a, const struct ImVec2 & uv_b, ImU32 col, float rounding, int rounding_corners)
{
  int vert_end_idx;
  int vert_start_idx;
  const bool push_texture_id;
  struct ImDrawVert * D.28901;
  long unsigned int D.28900;
  long unsigned int D.28899;
  struct ImDrawVert * D.28898;
  struct ImDrawVert * D.28897;
  long unsigned int D.28896;
  long unsigned int D.28895;
  struct ImDrawVert * D.28894;
  void * D.28890;
  void * & D.28889;
  struct ImVector * D.28888;
  bool D.28886;
  struct ImVector * D.28885;
  bool iftmp.649;
  int D.28880;
  unsigned int D.28874;
  bool iftmp.649_1;
  unsigned int _7;
  int _11;
  struct ImVector * _13;
  bool _15;
  struct ImVector * _16;
  void * & _18;
  void * _19;
  bool iftmp.649_21;
  bool iftmp.649_22;
  struct ImDrawVert * _31;
  long unsigned int _32;
  long unsigned int _33;
  struct ImDrawVert * _34;
  struct ImDrawVert * _35;
  long unsigned int _36;
  long unsigned int _37;
  struct ImDrawVert * _38;

  <bb 2>:
  _7 = col_6(D) & 4278190080;
  if (_7 == 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 15> (<L15>);

  <bb 4>:
  if (rounding_9(D) <= 0.0)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  _11 = rounding_corners_10(D) & 15;
  if (_11 == 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  ImDrawList::AddImage (this_12(D), user_texture_id_20(D), a_26(D), b_27(D), uv_a_39(D), uv_b_40(D), col_6(D));
  goto <bb 15> (<L15>);

  <bb 7>:
  _13 = &this_12(D)->_TextureIdStack;
  _15 = ImVector<void*>::empty (_13);
  if (_15 != 0)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  _16 = &this_12(D)->_TextureIdStack;
  _18 = ImVector<void*>::back (_16);
  _19 = *_18;
  if (_19 != user_texture_id_20(D))
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  iftmp.649_22 = 1;
  goto <bb 11>;

  <bb 10>:
  iftmp.649_21 = 0;

  <bb 11>:
  # iftmp.649_1 = PHI <iftmp.649_22(9), iftmp.649_21(10)>
  push_texture_id_23 = iftmp.649_1;
  if (push_texture_id_23 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  ImDrawList::PushTextureID (this_12(D), user_texture_id_20(D));

  <bb 13>:
  vert_start_idx_25 = this_12(D)->VtxBuffer.Size;
  ImDrawList::PathRect (this_12(D), a_26(D), b_27(D), rounding_9(D), rounding_corners_10(D));
  ImDrawList::PathFillConvex (this_12(D), col_6(D));
  vert_end_idx_30 = this_12(D)->VtxBuffer.Size;
  _31 = this_12(D)->VtxBuffer.Data;
  _32 = (long unsigned int) vert_end_idx_30;
  _33 = _32 * 20;
  _34 = _31 + _33;
  _35 = this_12(D)->VtxBuffer.Data;
  _36 = (long unsigned int) vert_start_idx_25;
  _37 = _36 * 20;
  _38 = _35 + _37;
  ImGui::ShadeVertsLinearUV (_38, _34, a_26(D), b_27(D), uv_a_39(D), uv_b_40(D), 1);
  if (push_texture_id_23 != 0)
    goto <bb 14>;
  else
    goto <bb 15> (<L15>);

  <bb 14>:
  ImDrawList::PopTextureID (this_12(D));

<L15>:
  return;

}



;; Function void ImDrawData::DeIndexAllBuffers() (_ZN10ImDrawData17DeIndexAllBuffersEv, funcdef_no=737, decl_uid=6142, cgraph_uid=636, symbol_order=636)

void ImDrawData::DeIndexAllBuffers() (struct ImDrawData * const this)
{
  void * D.32710;
  int j;
  struct ImDrawList * cmd_list;
  int i;
  struct ImVector new_vtx_buffer;
  int D.28933;
  int D.28932;
  int D.28931;
  struct ImVector * D.28930;
  struct ImVector * D.28929;
  struct value_type & D.28928;
  struct ImVector * D.28927;
  int D.28926;
  short unsigned int D.28925;
  value_type & D.28924;
  struct ImVector * D.28923;
  struct value_type & D.28922;
  int D.28920;
  int D.28918;
  struct ImVector * D.28915;
  bool retval.650;
  struct ImDrawList * * D.28913;
  long unsigned int D.28912;
  long unsigned int D.28911;
  struct ImDrawList * * D.28910;
  int D.28908;
  int D.28906;
  int _11;
  int _14;
  struct ImDrawList * * _15;
  long unsigned int _16;
  long unsigned int _17;
  struct ImDrawList * * _18;
  struct ImVector * _20;
  bool retval.650_22;
  int _23;
  int _26;
  struct value_type & _28;
  struct ImVector * _29;
  value_type & _31;
  short unsigned int _32;
  int _33;
  struct ImVector * _34;
  struct value_type & _36;
  struct ImVector * _39;
  struct ImVector * _41;
  int _43;
  int _44;
  int _45;

  <bb 2>:
  ImVector<ImDrawVert>::ImVector (&new_vtx_buffer);
  this_9(D)->TotalIdxCount = 0;
  _11 = this_9(D)->TotalIdxCount;
  this_9(D)->TotalVtxCount = _11;
  i_13 = 0;

  <bb 3>:
  # i_1 = PHI <i_13(2), i_49(12)>
  _14 = this_9(D)->CmdListsCount;
  if (_14 <= i_1)
    goto <bb 13>;
  else
    goto <bb 4>;

  <bb 4>:
  _15 = this_9(D)->CmdLists;
  _16 = (long unsigned int) i_1;
  _17 = _16 * 8;
  _18 = _15 + _17;
  cmd_list_19 = *_18;
  _20 = &cmd_list_19->IdxBuffer;
  retval.650_22 = ImVector<short unsigned int>::empty (_20);
  if (retval.650_22 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  goto <bb 12>;

  <bb 6>:
  _23 = cmd_list_19->IdxBuffer.Size;
  ImVector<ImDrawVert>::resize (&new_vtx_buffer, _23);

  <bb 7>:
  j_25 = 0;

  <bb 8>:
  # j_2 = PHI <j_25(7), j_38(9)>
  _26 = cmd_list_19->IdxBuffer.Size;
  if (_26 <= j_2)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  _28 = ImVector<ImDrawVert>::operator[] (&new_vtx_buffer, j_2);
  _29 = &cmd_list_19->IdxBuffer;
  _31 = ImVector<short unsigned int>::operator[] (_29, j_2);
  _32 = *_31;
  _33 = (int) _32;
  _34 = &cmd_list_19->VtxBuffer;
  _36 = ImVector<ImDrawVert>::operator[] (_34, _33);
  *_28 = MEM[(const struct ImDrawVert &)_36];
  j_38 = j_2 + 1;
  goto <bb 8>;

  <bb 10>:
  _39 = &cmd_list_19->VtxBuffer;
  ImVector<ImDrawVert>::swap (_39, &new_vtx_buffer);
  _41 = &cmd_list_19->IdxBuffer;
  ImVector<short unsigned int>::resize (_41, 0);

  <bb 11>:
  _43 = this_9(D)->TotalVtxCount;
  _44 = cmd_list_19->VtxBuffer.Size;
  _45 = _43 + _44;
  this_9(D)->TotalVtxCount = _45;

  <bb 12>:
  i_49 = i_1 + 1;
  goto <bb 3>;

  <bb 13>:
  ImVector<ImDrawVert>::~ImVector (&new_vtx_buffer);
  new_vtx_buffer ={v} {CLOBBER};
  return;

<L9>:
  ImVector<ImDrawVert>::~ImVector (&new_vtx_buffer);
  _48 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_48);

}



;; Function void ImDrawData::ScaleClipRects(const ImVec2&) (_ZN10ImDrawData14ScaleClipRectsERK6ImVec2, funcdef_no=738, decl_uid=6145, cgraph_uid=637, symbol_order=637)

void ImDrawData::ScaleClipRects(const ImVec2&) (struct ImDrawData * const this, const struct ImVec2 & scale)
{
  struct ImDrawCmd * cmd;
  int cmd_i;
  struct ImDrawList * cmd_list;
  int i;
  float D.28982;
  float D.28981;
  float D.28980;
  float D.28979;
  float D.28978;
  float D.28977;
  float D.28976;
  float D.28975;
  float D.28974;
  float D.28973;
  float D.28972;
  float D.28971;
  struct ImVec4 D.18451;
  struct ImVector * D.28970;
  int D.28968;
  struct ImDrawList * * D.28966;
  long unsigned int D.28965;
  long unsigned int D.28964;
  struct ImDrawList * * D.28963;
  int D.28961;
  int _8;
  struct ImDrawList * * _9;
  long unsigned int _10;
  long unsigned int _11;
  struct ImDrawList * * _12;
  int _15;
  struct ImVector * _16;
  float _19;
  float _21;
  float _22;
  float _23;
  float _24;
  float _25;
  float _26;
  float _27;
  float _28;
  float _29;
  float _30;
  float _31;

  <bb 2>:
  i_5 = 0;

  <bb 3>:
  # i_1 = PHI <i_5(2), i_36(7)>
  _8 = this_7(D)->CmdListsCount;
  if (_8 <= i_1)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:
  _9 = this_7(D)->CmdLists;
  _10 = (long unsigned int) i_1;
  _11 = _10 * 8;
  _12 = _9 + _11;
  cmd_list_13 = *_12;
  cmd_i_14 = 0;

  <bb 5>:
  # cmd_i_2 = PHI <cmd_i_14(4), cmd_i_35(6)>
  _15 = cmd_list_13->CmdBuffer.Size;
  if (_15 <= cmd_i_2)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  _16 = &cmd_list_13->CmdBuffer;
  cmd_18 = ImVector<ImDrawCmd>::operator[] (_16, cmd_i_2);
  _19 = cmd_18->ClipRect.w;
  _21 = scale_20(D)->y;
  _22 = _19 * _21;
  _23 = cmd_18->ClipRect.z;
  _24 = scale_20(D)->x;
  _25 = _23 * _24;
  _26 = cmd_18->ClipRect.y;
  _27 = scale_20(D)->y;
  _28 = _26 * _27;
  _29 = cmd_18->ClipRect.x;
  _30 = scale_20(D)->x;
  _31 = _29 * _30;
  ImVec4::ImVec4 (&D.18451, _31, _28, _25, _22);
  cmd_18->ClipRect = D.18451;
  D.18451 ={v} {CLOBBER};
  cmd_i_35 = cmd_i_2 + 1;
  goto <bb 5>;

  <bb 7>:
  i_36 = i_1 + 1;
  goto <bb 3>;

  <bb 8>:
  return;

}



;; Function void ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawVert*, ImDrawVert*, ImVec2, ImVec2, ImU32, ImU32) (_ZN5ImGui38ShadeVertsLinearColorGradientKeepAlphaEP10ImDrawVertS1_6ImVec2S2_jj, funcdef_no=739, decl_uid=14071, cgraph_uid=638, symbol_order=638)

void ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawVert*, ImDrawVert*, ImVec2, ImVec2, ImU32, ImU32) (struct ImDrawVert * vert_start, struct ImDrawVert * vert_end, struct ImVec2 gradient_p0, struct ImVec2 gradient_p1, ImU32 col0, ImU32 col1)
{
  int b;
  int g;
  int r;
  float t;
  float d;
  struct ImDrawVert * vert;
  float gradient_inv_length2;
  struct ImVec2 gradient_extent;
  unsigned int D.29020;
  unsigned int D.29019;
  unsigned int D.29018;
  unsigned int D.29017;
  int D.29016;
  int D.29015;
  int D.29014;
  int D.29013;
  int D.29012;
  int D.29011;
  unsigned int D.29010;
  int D.29009;
  int D.29008;
  unsigned int D.29007;
  int D.29006;
  int D.29005;
  unsigned int D.29004;
  int D.29003;
  int D.29002;
  unsigned int D.29001;
  int D.29000;
  int col0.652;
  int D.28998;
  int col1.651;
  float D.28996;
  struct ImVec2 * D.28995;
  struct ImVec2 D.18469;
  float D.28992;
  float _6;
  struct ImVec2 * _11;
  float _16;
  int col1.651_20;
  int _21;
  int col0.652_23;
  int _24;
  unsigned int _27;
  int _28;
  int _29;
  unsigned int _30;
  int _31;
  int _32;
  unsigned int _35;
  int _36;
  int _37;
  unsigned int _38;
  int _39;
  int _40;
  int _43;
  int _44;
  int _45;
  int _46;
  unsigned int _47;
  unsigned int _48;
  unsigned int _49;
  unsigned int _50;

  <bb 2>:
  gradient_extent = operator- (&gradient_p1, &gradient_p0);
  _6 = ImLengthSqr (&gradient_extent);
  gradient_inv_length2_7 = 1.0e+0 / _6;
  vert_9 = vert_start_8(D);

  <bb 3>:
  # vert_1 = PHI <vert_9(2), vert_52(4)>
  if (vert_1 >= vert_end_10(D))
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  _11 = &vert_1->pos;
  D.18469 = operator- (_11, &gradient_p0);
  d_14 = ImDot (&D.18469, &gradient_extent);
  D.18469 ={v} {CLOBBER};
  _16 = d_14 * gradient_inv_length2_7;
  t_18 = ImClamp (_16, 0.0, 1.0e+0);
  col1.651_20 = (int) col1_19(D);
  _21 = col1.651_20 & 255;
  col0.652_23 = (int) col0_22(D);
  _24 = col0.652_23 & 255;
  r_26 = ImLerp (_24, _21, t_18);
  _27 = col1_19(D) >> 8;
  _28 = (int) _27;
  _29 = _28 & 255;
  _30 = col0_22(D) >> 8;
  _31 = (int) _30;
  _32 = _31 & 255;
  g_34 = ImLerp (_32, _29, t_18);
  _35 = col1_19(D) >> 16;
  _36 = (int) _35;
  _37 = _36 & 255;
  _38 = col0_22(D) >> 16;
  _39 = (int) _38;
  _40 = _39 & 255;
  b_42 = ImLerp (_40, _37, t_18);
  _43 = g_34 << 8;
  _44 = _43 | r_26;
  _45 = b_42 << 16;
  _46 = _44 | _45;
  _47 = (unsigned int) _46;
  _48 = vert_1->col;
  _49 = _48 & 4278190080;
  _50 = _47 | _49;
  vert_1->col = _50;
  vert_52 = vert_1 + 20;
  goto <bb 3>;

  <bb 5>:
  gradient_extent ={v} {CLOBBER};
  return;

}



;; Function void ImGui::ShadeVertsLinearAlphaGradientForLeftToRightText(ImDrawVert*, ImDrawVert*, float, float) (_ZN5ImGui47ShadeVertsLinearAlphaGradientForLeftToRightTextEP10ImDrawVertS1_ff, funcdef_no=740, decl_uid=14076, cgraph_uid=639, symbol_order=639)

void ImGui::ShadeVertsLinearAlphaGradientForLeftToRightText(ImDrawVert*, ImDrawVert*, float, float) (struct ImDrawVert * vert_start, struct ImDrawVert * vert_end, float gradient_p0_x, float gradient_p1_x)
{
  int a;
  float alpha_mul;
  float d;
  struct ImDrawVert * vert;
  int full_alpha_count;
  float gradient_inv_length2;
  float gradient_extent_x;
  unsigned int D.29081;
  unsigned int D.29080;
  int D.29079;
  unsigned int D.29078;
  unsigned int D.29077;
  float D.29076;
  float D.29075;
  unsigned int D.29074;
  unsigned int D.29073;
  bool iftmp.660;
  bool retval.659;
  float D.29064;
  float D.29063;
  float gradient_extent_x.658;
  float D.29061;
  float D.29060;
  float D.29057;
  float gradient_extent_x.657;
  float gradient_extent_x.656;
  float gradient_extent_x.655;
  bool iftmp.660_5;
  float gradient_extent_x.655_10;
  float gradient_extent_x.656_13;
  float gradient_extent_x.657_14;
  float _15;
  float _21;
  float _22;
  float gradient_extent_x.658_23;
  float _25;
  float _27;
  bool iftmp.660_30;
  bool iftmp.660_31;
  bool retval.659_32;
  unsigned int _33;
  unsigned int _34;
  float _35;
  float _36;
  unsigned int _38;
  unsigned int _39;
  int _40;
  unsigned int _41;
  unsigned int _42;

  <bb 2>:
  gradient_extent_x.655_10 = gradient_p1_x_8(D) - gradient_p0_x_9(D);
  gradient_extent_x = gradient_extent_x.655_10;
  gradient_extent_x.656_13 = gradient_extent_x;
  gradient_extent_x.657_14 = gradient_extent_x;
  _15 = gradient_extent_x.656_13 * gradient_extent_x.657_14;
  gradient_inv_length2_16 = 1.0e+0 / _15;
  full_alpha_count_17 = 0;
  vert_19 = vert_end_18(D) + 18446744073709551596;

  <bb 3>:
  # full_alpha_count_1 = PHI <full_alpha_count_17(2), full_alpha_count_3(10)>
  # vert_4 = PHI <vert_19(2), vert_44(10)>
  if (vert_4 < vert_start_20(D))
    goto <bb 11>;
  else
    goto <bb 4>;

  <bb 4>:
  _21 = vert_4->pos.x;
  _22 = _21 - gradient_p0_x_9(D);
  gradient_extent_x.658_23 = gradient_extent_x;
  d_24 = _22 * gradient_extent_x.658_23;
  _25 = d_24 * gradient_inv_length2_16;
  _27 = ImClamp (_25, 0.0, 1.0e+0);
  alpha_mul_28 = 1.0e+0 - _27;
  if (alpha_mul_28 >= 1.0e+0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  full_alpha_count_29 = full_alpha_count_1 + 1;
  if (full_alpha_count_29 > 2)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.660_30 = 1;
  goto <bb 8>;

  <bb 7>:
  # full_alpha_count_2 = PHI <full_alpha_count_1(4), full_alpha_count_29(5)>
  iftmp.660_31 = 0;

  <bb 8>:
  # full_alpha_count_3 = PHI <full_alpha_count_29(6), full_alpha_count_2(7)>
  # iftmp.660_5 = PHI <iftmp.660_30(6), iftmp.660_31(7)>
  retval.659_32 = iftmp.660_5;
  if (retval.659_32 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  goto <bb 12>;

  <bb 10>:
  _33 = vert_4->col;
  _34 = _33 >> 24;
  _35 = (float) _34;
  _36 = _35 * alpha_mul_28;
  a_37 = (int) _36;
  _38 = vert_4->col;
  _39 = _38 & 16777215;
  _40 = a_37 << 24;
  _41 = (unsigned int) _40;
  _42 = _39 | _41;
  vert_4->col = _42;
  vert_44 = vert_4 + 18446744073709551596;
  goto <bb 3>;

  <bb 11>:
  gradient_extent_x ={v} {CLOBBER};
  goto <bb 13> (<L11>);

  <bb 12>:
  gradient_extent_x ={v} {CLOBBER};

<L11>:
  return;

}



;; Function void ImGui::ShadeVertsLinearUV(ImDrawVert*, ImDrawVert*, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, bool) (_ZN5ImGui18ShadeVertsLinearUVEP10ImDrawVertS1_RK6ImVec2S4_S4_S4_b, funcdef_no=741, decl_uid=14084, cgraph_uid=640, symbol_order=640)

void ImGui::ShadeVertsLinearUV(ImDrawVert*, ImDrawVert*, const ImVec2&, const ImVec2&, const ImVec2&, const ImVec2&, bool) (struct ImDrawVert * vert_start, struct ImDrawVert * vert_end, const struct ImVec2 & a, const struct ImVec2 & b, const struct ImVec2 & uv_a, const struct ImVec2 & uv_b, bool clamp)
{
  struct ImDrawVert * vertex;
  struct ImDrawVert * vertex;
  const struct ImVec2 max;
  const struct ImVec2 min;
  const struct ImVec2 scale;
  const struct ImVec2 uv_size;
  const struct ImVec2 size;
  float D.29109;
  float D.29108;
  struct ImVec2 D.18518;
  struct ImVec2 D.18519;
  struct ImVec2 D.18520;
  float D.29104;
  float D.29103;
  struct ImVec2 D.18511;
  struct ImVec2 D.18512;
  struct ImVec2 D.18513;
  struct ImVec2 D.18514;
  float D.29097;
  float D.29096;
  float D.29093;
  float iftmp.662;
  float D.29090;
  float D.29089;
  float D.29086;
  float iftmp.661;
  float iftmp.661_3;
  float iftmp.662_4;
  float _15;
  float _16;
  float _17;
  float iftmp.661_18;
  float iftmp.661_19;
  float _20;
  float _21;
  float _22;
  float iftmp.662_23;
  float iftmp.662_24;
  float _32;
  float _33;
  float _47;
  float _48;

  <bb 2>:
  size = operator- (b_9(D), a_10(D));
  uv_size = operator- (uv_b_12(D), uv_a_13(D));
  _15 = size.y;
  if (_15 != 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _16 = uv_size.y;
  _17 = size.y;
  iftmp.661_18 = _16 / _17;
  goto <bb 5>;

  <bb 4>:
  iftmp.661_19 = 0.0;

  <bb 5>:
  # iftmp.661_3 = PHI <iftmp.661_18(3), iftmp.661_19(4)>
  _20 = size.x;
  if (_20 != 0.0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _21 = uv_size.x;
  _22 = size.x;
  iftmp.662_23 = _21 / _22;
  goto <bb 8>;

  <bb 7>:
  iftmp.662_24 = 0.0;

  <bb 8>:
  # iftmp.662_4 = PHI <iftmp.662_23(6), iftmp.662_24(7)>
  ImVec2::ImVec2 (&scale, iftmp.662_4, iftmp.661_3);
  if (clamp_26(D) != 0)
    goto <bb 9>;
  else
    goto <bb 13>;

  <bb 9>:
  min = ImMin (uv_a_13(D), uv_b_12(D));
  max = ImMax (uv_a_13(D), uv_b_12(D));
  vertex_30 = vert_start_29(D);

  <bb 10>:
  # vertex_1 = PHI <vertex_30(9), vertex_43(11)>
  if (vertex_1 >= vert_end_31(D))
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  _32 = vertex_1->pos.y;
  _33 = vertex_1->pos.x;
  ImVec2::ImVec2 (&D.18511, _33, _32);
  D.18512 = operator- (&D.18511, a_10(D));
  D.18513 = ImMul (&D.18512, &scale);
  D.18514 = operator+ (uv_a_13(D), &D.18513);
  vertex_1->uv = ImClamp (&D.18514, &min, max);
  D.18514 ={v} {CLOBBER};
  D.18513 ={v} {CLOBBER};
  D.18512 ={v} {CLOBBER};
  D.18511 ={v} {CLOBBER};
  vertex_43 = vertex_1 + 20;
  goto <bb 10>;

  <bb 12>:
  min ={v} {CLOBBER};
  max ={v} {CLOBBER};
  goto <bb 16>;

  <bb 13>:
  vertex_46 = vert_start_29(D);

  <bb 14>:
  # vertex_2 = PHI <vertex_46(13), vertex_56(15)>
  if (vertex_2 >= vert_end_31(D))
    goto <bb 16>;
  else
    goto <bb 15>;

  <bb 15>:
  _47 = vertex_2->pos.y;
  _48 = vertex_2->pos.x;
  ImVec2::ImVec2 (&D.18518, _48, _47);
  D.18519 = operator- (&D.18518, a_10(D));
  D.18520 = ImMul (&D.18519, &scale);
  vertex_2->uv = operator+ (uv_a_13(D), &D.18520);
  D.18520 ={v} {CLOBBER};
  D.18519 ={v} {CLOBBER};
  D.18518 ={v} {CLOBBER};
  vertex_56 = vertex_2 + 20;
  goto <bb 14>;

  <bb 16>:
  size ={v} {CLOBBER};
  uv_size ={v} {CLOBBER};
  scale ={v} {CLOBBER};
  return;

}



;; Function ImFontConfig::ImFontConfig() (_ZN12ImFontConfigC2Ev, funcdef_no=743, decl_uid=6194, cgraph_uid=642, symbol_order=642)

ImFontConfig::ImFontConfig() (struct ImFontConfig * const this)
{
  char[40] * D.29162;
  struct ImVec2 D.18551;
  struct ImVec2 D.18550;
  struct ImVec2 * D.29161;
  struct ImVec2 * D.29160;
  struct ImVec2 * _4;
  struct ImVec2 * _6;
  char[40] * _26;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  _4 = &this_2(D)->GlyphExtraSpacing;
  ImVec2::ImVec2 (_4);
  _6 = &this_2(D)->GlyphOffset;
  ImVec2::ImVec2 (_6);
  this_2(D)->FontData = 0B;
  this_2(D)->FontDataSize = 0;
  this_2(D)->FontDataOwnedByAtlas = 1;
  this_2(D)->FontNo = 0;
  this_2(D)->SizePixels = 0.0;
  this_2(D)->OversampleH = 3;
  this_2(D)->OversampleV = 1;
  this_2(D)->PixelSnapH = 0;
  ImVec2::ImVec2 (&D.18550, 0.0, 0.0);
  this_2(D)->GlyphExtraSpacing = D.18550;
  D.18550 ={v} {CLOBBER};
  ImVec2::ImVec2 (&D.18551, 0.0, 0.0);
  this_2(D)->GlyphOffset = D.18551;
  D.18551 ={v} {CLOBBER};
  this_2(D)->GlyphRanges = 0B;
  this_2(D)->MergeMode = 0;
  this_2(D)->RasterizerFlags = 0;
  this_2(D)->RasterizerMultiply = 1.0e+0;
  _26 = &this_2(D)->Name;
  memset (_26, 0, 40);
  this_2(D)->DstFont = 0B;
  return;

}



;; Function ImFontAtlas::ImFontAtlas() (_ZN11ImFontAtlasC2Ev, funcdef_no=746, decl_uid=6809, cgraph_uid=645, symbol_order=650)

ImFontAtlas::ImFontAtlas() (struct ImFontAtlas * const this)
{
  int n;
  struct ImVector * D.29173;
  struct ImVector * D.29172;
  struct ImVector * D.29171;
  struct ImVec2 D.18613;
  struct ImVec2 D.18612;
  int D.29168;
  struct ImVector * D.29167;
  struct ImVector * D.29166;
  struct ImVector * D.29165;
  struct ImVec2 * D.29164;
  struct ImVec2 * D.29163;
  struct ImVec2 * _6;
  struct ImVec2 * _8;
  struct ImVector * _10;
  struct ImVector * _12;
  struct ImVector * _14;
  int _23;

  <bb 2>:
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  _6 = &this_4(D)->TexUvScale;
  ImVec2::ImVec2 (_6);
  _8 = &this_4(D)->TexUvWhitePixel;
  ImVec2::ImVec2 (_8);
  _10 = &this_4(D)->Fonts;
  ImVector<ImFont*>::ImVector (_10);
  _12 = &this_4(D)->CustomRects;
  ImVector<ImFontAtlas::CustomRect>::ImVector (_12);
  _14 = &this_4(D)->ConfigData;
  ImVector<ImFontConfig>::ImVector (_14);
  this_4(D)->Flags = 0;
  this_4(D)->TexID = 0B;
  this_4(D)->TexDesiredWidth = 0;
  this_4(D)->TexGlyphPadding = 1;
  this_4(D)->TexPixelsAlpha8 = 0B;
  this_4(D)->TexPixelsRGBA32 = 0B;
  this_4(D)->TexHeight = 0;
  _23 = this_4(D)->TexHeight;
  this_4(D)->TexWidth = _23;
  ImVec2::ImVec2 (&D.18612, 0.0, 0.0);
  this_4(D)->TexUvScale = D.18612;
  D.18612 ={v} {CLOBBER};
  ImVec2::ImVec2 (&D.18613, 0.0, 0.0);
  this_4(D)->TexUvWhitePixel = D.18613;
  D.18613 ={v} {CLOBBER};
  n_31 = 0;

  <bb 3>:
  # n_1 = PHI <n_31(2), n_33(4)>
  if (n_1 > 0)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  this_4(D)->CustomRectIds[n_1] = -1;
  n_33 = n_1 + 1;
  goto <bb 3>;

  <bb 5>:
  return;

}



;; Function ImFontAtlas::~ImFontAtlas() (_ZN11ImFontAtlasD2Ev, funcdef_no=749, decl_uid=6814, cgraph_uid=648, symbol_order=653)

ImFontAtlas::~ImFontAtlas() (struct ImFontAtlas * const this)
{
  struct ImVector * D.29179;
  struct ImVector * D.29178;
  struct ImVector * D.29177;
  struct ImVector * _4;
  struct ImVector * _6;
  struct ImVector * _8;

  <bb 2>:
  ImFontAtlas::Clear (this_2(D));
  _4 = &this_2(D)->ConfigData;
  ImVector<ImFontConfig>::~ImVector (_4);
  _6 = &this_2(D)->CustomRects;
  ImVector<ImFontAtlas::CustomRect>::~ImVector (_6);
  _8 = &this_2(D)->Fonts;
  ImVector<ImFont*>::~ImVector (_8);
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function void ImFontAtlas::ClearInputData() (_ZN11ImFontAtlas14ClearInputDataEv, funcdef_no=751, decl_uid=6265, cgraph_uid=650, symbol_order=655)

void ImFontAtlas::ClearInputData() (struct ImFontAtlas * const this)
{
  int n;
  int i;
  int i;
  struct ImVector * D.29251;
  struct ImVector * D.29250;
  struct ImFont * D.29248;
  struct ImFont * & D.29247;
  struct ImVector * D.29246;
  struct ImFont * D.29245;
  struct ImFont * & D.29244;
  struct ImVector * D.29243;
  struct ImFontConfig * D.29239;
  long unsigned int D.29238;
  long unsigned int D.29237;
  int D.29236;
  struct ImFontConfig * D.29235;
  struct ImFontConfig * D.29234;
  struct ImFont * D.29233;
  struct ImFont * & D.29232;
  struct ImVector * D.29231;
  struct ImFontConfig * D.29229;
  struct ImFontConfig * D.29228;
  struct ImFont * D.29227;
  struct ImFont * & D.29226;
  struct ImVector * D.29225;
  bool iftmp.670;
  bool retval.669;
  int D.29219;
  struct value_type & D.29216;
  struct ImVector * D.29215;
  void * D.29214;
  struct value_type & D.29213;
  struct ImVector * D.29212;
  bool D.29208;
  struct value_type & D.29207;
  struct ImVector * D.29206;
  void * D.29204;
  struct value_type & D.29203;
  struct ImVector * D.29202;
  bool iftmp.668;
  bool retval.667;
  int D.29196;
  bool iftmp.668_4;
  bool iftmp.670_5;
  int _18;
  struct ImVector * _19;
  struct value_type & _21;
  void * _22;
  struct ImVector * _23;
  struct value_type & _25;
  bool _26;
  bool iftmp.668_27;
  bool iftmp.668_28;
  bool retval.667_29;
  struct ImVector * _30;
  struct value_type & _32;
  void * _33;
  struct ImVector * _35;
  struct value_type & _37;
  int _41;
  struct ImVector * _42;
  struct ImFont * & _44;
  struct ImFont * _45;
  struct ImFontConfig * _46;
  struct ImFontConfig * _47;
  struct ImVector * _48;
  struct ImFont * & _50;
  struct ImFont * _51;
  struct ImFontConfig * _52;
  struct ImFontConfig * _53;
  int _54;
  long unsigned int _55;
  long unsigned int _56;
  struct ImFontConfig * _57;
  bool iftmp.670_58;
  bool iftmp.670_59;
  bool retval.669_60;
  struct ImVector * _61;
  struct ImFont * & _63;
  struct ImFont * _64;
  struct ImVector * _66;
  struct ImFont * & _68;
  struct ImFont * _69;
  struct ImVector * _72;
  struct ImVector * _74;

  <bb 2>:
  i_15 = 0;

  <bb 3>:
  # i_1 = PHI <i_15(2), i_39(10)>
  _18 = this_17(D)->ConfigData.Size;
  if (_18 <= i_1)
    goto <bb 11>;
  else
    goto <bb 4>;

  <bb 4>:
  _19 = &this_17(D)->ConfigData;
  _21 = ImVector<ImFontConfig>::operator[] (_19, i_1);
  _22 = _21->FontData;
  if (_22 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  _23 = &this_17(D)->ConfigData;
  _25 = ImVector<ImFontConfig>::operator[] (_23, i_1);
  _26 = _25->FontDataOwnedByAtlas;
  if (_26 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.668_27 = 1;
  goto <bb 8>;

  <bb 7>:
  iftmp.668_28 = 0;

  <bb 8>:
  # iftmp.668_4 = PHI <iftmp.668_27(6), iftmp.668_28(7)>
  retval.667_29 = iftmp.668_4;
  if (retval.667_29 != 0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _30 = &this_17(D)->ConfigData;
  _32 = ImVector<ImFontConfig>::operator[] (_30, i_1);
  _33 = _32->FontData;
  ImGui::MemFree (_33);
  _35 = &this_17(D)->ConfigData;
  _37 = ImVector<ImFontConfig>::operator[] (_35, i_1);
  _37->FontData = 0B;

  <bb 10>:
  i_39 = i_1 + 1;
  goto <bb 3>;

  <bb 11>:
  i_40 = 0;

  <bb 12>:
  # i_2 = PHI <i_40(11), i_71(19)>
  _41 = this_17(D)->Fonts.Size;
  if (_41 <= i_2)
    goto <bb 20>;
  else
    goto <bb 13>;

  <bb 13>:
  _42 = &this_17(D)->Fonts;
  _44 = ImVector<ImFont*>::operator[] (_42, i_2);
  _45 = *_44;
  _46 = _45->ConfigData;
  _47 = this_17(D)->ConfigData.Data;
  if (_46 >= _47)
    goto <bb 14>;
  else
    goto <bb 16>;

  <bb 14>:
  _48 = &this_17(D)->Fonts;
  _50 = ImVector<ImFont*>::operator[] (_48, i_2);
  _51 = *_50;
  _52 = _51->ConfigData;
  _53 = this_17(D)->ConfigData.Data;
  _54 = this_17(D)->ConfigData.Size;
  _55 = (long unsigned int) _54;
  _56 = _55 * 128;
  _57 = _53 + _56;
  if (_52 < _57)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  iftmp.670_58 = 1;
  goto <bb 17>;

  <bb 16>:
  iftmp.670_59 = 0;

  <bb 17>:
  # iftmp.670_5 = PHI <iftmp.670_58(15), iftmp.670_59(16)>
  retval.669_60 = iftmp.670_5;
  if (retval.669_60 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _61 = &this_17(D)->Fonts;
  _63 = ImVector<ImFont*>::operator[] (_61, i_2);
  _64 = *_63;
  _64->ConfigData = 0B;
  _66 = &this_17(D)->Fonts;
  _68 = ImVector<ImFont*>::operator[] (_66, i_2);
  _69 = *_68;
  _69->ConfigDataCount = 0;

  <bb 19>:
  i_71 = i_2 + 1;
  goto <bb 12>;

  <bb 20>:
  _72 = &this_17(D)->ConfigData;
  ImVector<ImFontConfig>::clear (_72);
  _74 = &this_17(D)->CustomRects;
  ImVector<ImFontAtlas::CustomRect>::clear (_74);
  n_76 = 0;

  <bb 21>:
  # n_3 = PHI <n_76(20), n_78(22)>
  if (n_3 > 0)
    goto <bb 23>;
  else
    goto <bb 22>;

  <bb 22>:
  this_17(D)->CustomRectIds[n_3] = -1;
  n_78 = n_3 + 1;
  goto <bb 21>;

  <bb 23>:
  return;

}



;; Function void ImFontAtlas::ClearTexData() (_ZN11ImFontAtlas12ClearTexDataEv, funcdef_no=752, decl_uid=6267, cgraph_uid=651, symbol_order=656)

void ImFontAtlas::ClearTexData() (struct ImFontAtlas * const this)
{
  unsigned int * D.29292;
  unsigned int * D.29289;
  unsigned char * D.29287;
  unsigned char * D.29284;
  unsigned char * _5;
  unsigned char * _6;
  unsigned int * _8;
  unsigned int * _9;

  <bb 2>:
  _5 = this_4(D)->TexPixelsAlpha8;
  if (_5 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->TexPixelsAlpha8;
  ImGui::MemFree (_6);

  <bb 4>:
  _8 = this_4(D)->TexPixelsRGBA32;
  if (_8 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _9 = this_4(D)->TexPixelsRGBA32;
  ImGui::MemFree (_9);

  <bb 6>:
  this_4(D)->TexPixelsAlpha8 = 0B;
  this_4(D)->TexPixelsRGBA32 = 0B;
  return;

}



;; Function void ImFontAtlas::ClearFonts() (_ZN11ImFontAtlas10ClearFontsEv, funcdef_no=753, decl_uid=6269, cgraph_uid=652, symbol_order=657)

void ImFontAtlas::ClearFonts() (struct ImFontAtlas * const this)
{
  int i;
  struct ImVector * D.29299;
  struct ImFont * & D.29298;
  struct ImVector * D.29297;
  int D.29295;
  int _6;
  struct ImVector * _7;
  struct ImFont * & _9;
  struct ImVector * _12;

  <bb 2>:
  i_3 = 0;

  <bb 3>:
  # i_1 = PHI <i_3(2), i_11(4)>
  _6 = this_5(D)->Fonts.Size;
  if (_6 <= i_1)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  _7 = &this_5(D)->Fonts;
  _9 = ImVector<ImFont*>::operator[] (_7, i_1);
  IM_DELETE<ImFont> (_9);
  i_11 = i_1 + 1;
  goto <bb 3>;

  <bb 5>:
  _12 = &this_5(D)->Fonts;
  ImVector<ImFont*>::clear (_12);
  return;

}



;; Function void ImFontAtlas::Clear() (_ZN11ImFontAtlas5ClearEv, funcdef_no=754, decl_uid=6271, cgraph_uid=653, symbol_order=658)

void ImFontAtlas::Clear() (struct ImFontAtlas * const this)
{
  <bb 2>:
  ImFontAtlas::ClearInputData (this_2(D));
  ImFontAtlas::ClearTexData (this_2(D));
  ImFontAtlas::ClearFonts (this_2(D));
  return;

}



;; Function void ImFontAtlas::GetTexDataAsAlpha8(unsigned char**, int*, int*, int*) (_ZN11ImFontAtlas18GetTexDataAsAlpha8EPPhPiS2_S2_, funcdef_no=755, decl_uid=6279, cgraph_uid=654, symbol_order=659)

void ImFontAtlas::GetTexDataAsAlpha8(unsigned char**, int*, int*, int*) (struct ImFontAtlas * const this, unsigned char * * out_pixels, int * out_width, int * out_height, int * out_bytes_per_pixel)
{
  int D.29328;
  int D.29324;
  unsigned char * D.29321;
  struct ImVector * D.29316;
  bool retval.671;
  unsigned char * D.29312;
  unsigned char * _8;
  struct ImVector * _9;
  bool retval.671_11;
  unsigned char * _14;
  int _18;
  int _21;

  <bb 2>:
  _8 = this_7(D)->TexPixelsAlpha8;
  if (_8 == 0B)
    goto <bb 3>;
  else
    goto <bb 6>;

  <bb 3>:
  _9 = &this_7(D)->ConfigData;
  retval.671_11 = ImVector<ImFontConfig>::empty (_9);
  if (retval.671_11 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  ImFontAtlas::AddFontDefault (this_7(D), 0B);

  <bb 5>:
  ImFontAtlas::Build (this_7(D));

  <bb 6>:
  _14 = this_7(D)->TexPixelsAlpha8;
  *out_pixels_15(D) = _14;
  if (out_width_17(D) != 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _18 = this_7(D)->TexWidth;
  *out_width_17(D) = _18;

  <bb 8>:
  if (out_height_20(D) != 0B)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _21 = this_7(D)->TexHeight;
  *out_height_20(D) = _21;

  <bb 10>:
  if (out_bytes_per_pixel_23(D) != 0B)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  *out_bytes_per_pixel_23(D) = 1;

  <bb 12>:
  return;

}



;; Function void ImFontAtlas::GetTexDataAsRGBA32(unsigned char**, int*, int*, int*) (_ZN11ImFontAtlas18GetTexDataAsRGBA32EPPhPiS2_S2_, funcdef_no=756, decl_uid=6285, cgraph_uid=655, symbol_order=660)

void ImFontAtlas::GetTexDataAsRGBA32(unsigned char**, int*, int*, int*) (struct ImFontAtlas * const this, unsigned char * * out_pixels, int * out_width, int * out_height, int * out_bytes_per_pixel)
{
  void * D.29372;
  int n;
  unsigned int * dst;
  const unsigned char * src;
  unsigned char * pixels;
  int D.29367;
  int D.29363;
  unsigned int * D.29360;
  unsigned int D.29357;
  unsigned int D.29356;
  unsigned int D.29355;
  unsigned char D.29354;
  const unsigned char * src.674;
  unsigned int * dst.673;
  int D.29349;
  int D.29348;
  void * D.29347;
  long unsigned int D.29346;
  int D.29345;
  int D.29344;
  int D.29343;
  int D.29342;
  unsigned char * pixels.672;
  unsigned int * D.29336;
  unsigned int * _13;
  unsigned char * pixels.672_16;
  int _17;
  int _18;
  int _19;
  int _20;
  long unsigned int _21;
  void * _23;
  void * _24;
  int _28;
  int _29;
  unsigned int * dst.673_31;
  const unsigned char * src.674_33;
  unsigned char _35;
  unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int * _43;
  int _47;
  int _50;

  <bb 2>:
  _13 = this_12(D)->TexPixelsRGBA32;
  if (_13 == 0B)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  pixels = 0B;
  ImFontAtlas::GetTexDataAsAlpha8 (this_12(D), &pixels, 0B, 0B, 0B);
  pixels.672_16 = pixels;
  if (pixels.672_16 != 0B)
    goto <bb 4>;
  else
    goto <bb 8>;

  <bb 4>:
  _17 = this_12(D)->TexWidth;
  _18 = this_12(D)->TexHeight;
  _19 = _17 * _18;
  _20 = _19 * 4;
  _21 = (long unsigned int) _20;
  _23 = ImGui::MemAlloc (_21);
  _24 = _23;
  this_12(D)->TexPixelsRGBA32 = _24;
  src_26 = pixels;
  dst_27 = this_12(D)->TexPixelsRGBA32;
  _28 = this_12(D)->TexWidth;
  _29 = this_12(D)->TexHeight;
  n_30 = _28 * _29;

  <bb 5>:
  # src_1 = PHI <src_26(4), src_34(6)>
  # dst_2 = PHI <dst_27(4), dst_32(6)>
  # n_3 = PHI <n_30(4), n_40(6)>
  if (n_3 <= 0)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  dst.673_31 = dst_2;
  dst_32 = dst.673_31 + 4;
  src.674_33 = src_1;
  src_34 = src.674_33 + 1;
  _35 = *src.674_33;
  _36 = (unsigned int) _35;
  _37 = _36 << 24;
  _38 = _37 | 16777215;
  *dst.673_31 = _38;
  n_40 = n_3 + -1;
  goto <bb 5>;

  <bb 7>:

  <bb 8>:
  pixels ={v} {CLOBBER};

  <bb 9>:
  _43 = this_12(D)->TexPixelsRGBA32;
  *out_pixels_44(D) = _43;
  if (out_width_46(D) != 0B)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _47 = this_12(D)->TexWidth;
  *out_width_46(D) = _47;

  <bb 11>:
  if (out_height_49(D) != 0B)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _50 = this_12(D)->TexHeight;
  *out_height_49(D) = _50;

  <bb 13>:
  if (out_bytes_per_pixel_52(D) != 0B)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  *out_bytes_per_pixel_52(D) = 4;

  <bb 15>:
  return;

}



;; Function ImFont* ImFontAtlas::AddFont(const ImFontConfig*) (_ZN11ImFontAtlas7AddFontEPK12ImFontConfig, funcdef_no=757, decl_uid=6234, cgraph_uid=656, symbol_order=661)

ImFont* ImFontAtlas::AddFont(const ImFontConfig*) (struct ImFontAtlas * const this, const struct ImFontConfig * font_cfg)
{
  void * D.32722;
  void * D.29426;
  void * D.29421;
  struct ImFontConfig & new_font_cfg;
  static const char __PRETTY_FUNCTION__[50] = "ImFont* ImFontAtlas::AddFont(const ImFontConfig*)";
  struct ImFont * D.29419;
  void * D.29417;
  void * D.29416;
  long unsigned int D.29415;
  int D.29414;
  void * D.29413;
  long unsigned int D.29412;
  int D.29411;
  bool D.29408;
  bool D.29407;
  struct ImFont * D.29405;
  struct ImFont * & D.29404;
  struct ImVector * D.29403;
  struct ImFont * D.29400;
  struct ImVector * D.29399;
  struct ImVector * D.29398;
  bool D.29394;
  bool D.29393;
  struct ImVector * D.29392;
  struct ImVector * D.29390;
  struct ImNewDummy D.29389;
  void * D.18679;
  void * D.18681;
  struct ImNewDummy D.29388;
  struct ImNewDummy D.18678;
  struct ImNewDummy D.18680;
  struct ImFont * const D.18682;
  bool D.29385;
  bool D.29384;
  float D.29380;
  int D.29378;
  void * D.29376;
  void * _7;
  int _8;
  float _9;
  bool _10;
  bool _11;
  void * _14;
  void * _15;
  void * _17;
  struct ImVector * _21;
  struct ImVector * _30;
  bool _32;
  bool _33;
  struct ImVector * _35;
  struct ImVector * _37;
  struct ImFont * _40;
  struct ImVector * _41;
  struct ImFont * & _43;
  struct ImFont * _44;
  bool _46;
  bool _47;
  int _48;
  long unsigned int _49;
  void * _51;
  void * _52;
  int _55;
  long unsigned int _56;
  void * _57;
  void * _58;
  struct ImFont * _61;

  <bb 2>:
  _7 = font_cfg_6(D)->FontData;
  if (_7 != 0B)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  _8 = font_cfg_6(D)->FontDataSize;
  if (_8 > 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:
  __assert_fail ("font_cfg->FontData != __null && font_cfg->FontDataSize > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1485, &__PRETTY_FUNCTION__);

  <bb 6>:
  _9 = font_cfg_6(D)->SizePixels;
  if (_9 > 0.0)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  __assert_fail ("font_cfg->SizePixels > 0.0f", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1486, &__PRETTY_FUNCTION__);

  <bb 8>:
  _10 = font_cfg_6(D)->MergeMode;
  _11 = ~_10;
  if (_11 != 0)
    goto <bb 9>;
  else
    goto <bb 13>;

  <bb 9>:
  D.18680 = D.29388;
  _14 = ImGui::MemAlloc (112);

  <bb 10>:
  _15 = _14;
  _17 = operator new (112, D.18680, _15);
  ImFont::ImFont (_17);

  <bb 11>:
  D.18682 = _17;
  _21 = &this_20(D)->Fonts;
  ImVector<ImFont*>::push_back (_21, &D.18682);

  <bb 12>:
  D.18682 ={v} {CLOBBER};
  D.18680 ={v} {CLOBBER};
  D.18678 ={v} {CLOBBER};
  goto <bb 15>;

  <bb 13>:
  _30 = &this_20(D)->Fonts;
  _32 = ImVector<ImFont*>::empty (_30);
  _33 = ~_32;
  if (_33 != 0)
    goto <bb 15>;
  else
    goto <bb 14>;

  <bb 14>:
  __assert_fail ("!Fonts.empty()", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1492, &__PRETTY_FUNCTION__);

  <bb 15>:
  _35 = &this_20(D)->ConfigData;
  ImVector<ImFontConfig>::push_back (_35, font_cfg_6(D));
  _37 = &this_20(D)->ConfigData;
  new_font_cfg_39 = ImVector<ImFontConfig>::back (_37);
  _40 = new_font_cfg_39->DstFont;
  if (_40 == 0B)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _41 = &this_20(D)->Fonts;
  _43 = ImVector<ImFont*>::back (_41);
  _44 = *_43;
  new_font_cfg_39->DstFont = _44;

  <bb 17>:
  _46 = new_font_cfg_39->FontDataOwnedByAtlas;
  _47 = ~_46;
  if (_47 != 0)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _48 = new_font_cfg_39->FontDataSize;
  _49 = (long unsigned int) _48;
  _51 = ImGui::MemAlloc (_49);
  _52 = _51;
  new_font_cfg_39->FontData = _52;
  new_font_cfg_39->FontDataOwnedByAtlas = 1;
  _55 = new_font_cfg_39->FontDataSize;
  _56 = (long unsigned int) _55;
  _57 = font_cfg_6(D)->FontData;
  _58 = new_font_cfg_39->FontData;
  memcpy (_58, _57, _56);

  <bb 19>:
  ImFontAtlas::ClearTexData (this_20(D));
  _61 = new_font_cfg_39->DstFont;

<L19>:
  return _61;

<L20>:
  operator delete (_17, D.29389, _15);
  __builtin_eh_copy_values (1, 3);

<L22>:
  _26 = __builtin_eh_pointer (1);
  __builtin_unwind_resume (_26);

}



;; Function unsigned int Decode85Byte(char) (_ZL12Decode85Bytec, funcdef_no=758, decl_uid=18692, cgraph_uid=657, symbol_order=662)

unsigned int Decode85Byte(char) (char c)
{
  int D.29551;
  int D.29550;
  int D.29548;
  int D.29547;
  unsigned int iftmp.679;
  unsigned int D.29543;
  unsigned int iftmp.679_1;
  int _3;
  int _4;
  unsigned int iftmp.679_5;
  int _6;
  int _7;
  unsigned int iftmp.679_8;
  unsigned int _9;

  <bb 2>:
  if (c_2(D) > 91)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _3 = (int) c_2(D);
  _4 = _3 + -36;
  iftmp.679_5 = (unsigned int) _4;
  goto <bb 5>;

  <bb 4>:
  _6 = (int) c_2(D);
  _7 = _6 + -35;
  iftmp.679_8 = (unsigned int) _7;

  <bb 5>:
  # iftmp.679_1 = PHI <iftmp.679_5(3), iftmp.679_8(4)>
  _9 = iftmp.679_1;

<L3>:
  return _9;

}



;; Function void Decode85(const unsigned char*, unsigned char*) (_ZL8Decode85PKhPh, funcdef_no=759, decl_uid=18696, cgraph_uid=658, symbol_order=663)

void Decode85(const unsigned char*, unsigned char*) (const unsigned char * src, unsigned char * dst)
{
  unsigned int tmp;
  unsigned char D.29596;
  unsigned int D.29595;
  unsigned char * D.29594;
  unsigned char D.29593;
  unsigned int D.29592;
  unsigned char * D.29591;
  unsigned char D.29590;
  unsigned int D.29589;
  unsigned char * D.29588;
  unsigned char D.29587;
  unsigned int D.29586;
  unsigned int D.29585;
  unsigned int D.29584;
  unsigned int D.29583;
  unsigned int D.29582;
  unsigned int D.29581;
  unsigned int D.29580;
  unsigned int D.29579;
  int D.29578;
  char D.29577;
  unsigned char D.29576;
  const unsigned char * D.29575;
  unsigned int D.29574;
  int D.29573;
  char D.29572;
  unsigned char D.29571;
  const unsigned char * D.29570;
  unsigned int D.29569;
  int D.29568;
  char D.29567;
  unsigned char D.29566;
  const unsigned char * D.29565;
  unsigned int D.29564;
  int D.29563;
  char D.29562;
  unsigned char D.29561;
  const unsigned char * D.29560;
  unsigned int D.29559;
  int D.29558;
  char D.29557;
  unsigned char D.29556;
  unsigned char D.29554;
  unsigned char _7;
  unsigned char _8;
  char _9;
  int _10;
  unsigned int _12;
  const unsigned char * _13;
  unsigned char _14;
  char _15;
  int _16;
  unsigned int _18;
  const unsigned char * _19;
  unsigned char _20;
  char _21;
  int _22;
  unsigned int _24;
  const unsigned char * _25;
  unsigned char _26;
  char _27;
  int _28;
  unsigned int _30;
  const unsigned char * _31;
  unsigned char _32;
  char _33;
  int _34;
  unsigned int _36;
  unsigned int _37;
  unsigned int _38;
  unsigned int _39;
  unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  unsigned int _43;
  unsigned char _45;
  unsigned char * _47;
  unsigned int _48;
  unsigned char _49;
  unsigned char * _51;
  unsigned int _52;
  unsigned char _53;
  unsigned char * _55;
  unsigned int _56;
  unsigned char _57;

  <bb 2>:
  # src_1 = PHI <src_4(D)(0), src_59(3)>
  # dst_2 = PHI <dst_5(D)(0), dst_60(3)>
  _7 = *src_1;
  if (_7 == 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  _8 = *src_1;
  _9 = (char) _8;
  _10 = (int) _9;
  _12 = Decode85Byte (_10);
  _13 = src_1 + 1;
  _14 = *_13;
  _15 = (char) _14;
  _16 = (int) _15;
  _18 = Decode85Byte (_16);
  _19 = src_1 + 2;
  _20 = *_19;
  _21 = (char) _20;
  _22 = (int) _21;
  _24 = Decode85Byte (_22);
  _25 = src_1 + 3;
  _26 = *_25;
  _27 = (char) _26;
  _28 = (int) _27;
  _30 = Decode85Byte (_28);
  _31 = src_1 + 4;
  _32 = *_31;
  _33 = (char) _32;
  _34 = (int) _33;
  _36 = Decode85Byte (_34);
  _37 = _36 * 85;
  _38 = _30 + _37;
  _39 = _38 * 85;
  _40 = _24 + _39;
  _41 = _40 * 85;
  _42 = _18 + _41;
  _43 = _42 * 85;
  tmp_44 = _12 + _43;
  _45 = (unsigned char) tmp_44;
  *dst_2 = _45;
  _47 = dst_2 + 1;
  _48 = tmp_44 >> 8;
  _49 = (unsigned char) _48;
  *_47 = _49;
  _51 = dst_2 + 2;
  _52 = tmp_44 >> 16;
  _53 = (unsigned char) _52;
  *_51 = _53;
  _55 = dst_2 + 3;
  _56 = tmp_44 >> 24;
  _57 = (unsigned char) _56;
  *_55 = _57;
  src_59 = src_1 + 5;
  dst_60 = dst_2 + 4;
  goto <bb 2>;

  <bb 4>:
  return;

}



;; Function ImFont* ImFontAtlas::AddFontDefault(const ImFontConfig*) (_ZN11ImFontAtlas14AddFontDefaultEPK12ImFontConfig, funcdef_no=760, decl_uid=6237, cgraph_uid=659, symbol_order=664)

ImFont* ImFontAtlas::AddFontDefault(const ImFontConfig*) (struct ImFontAtlas * const this, const struct ImFontConfig * font_cfg_template)
{
  struct ImFont * D.29616;
  struct ImFont * font;
  const char * ttf_compressed_base85;
  struct ImFontConfig font_cfg;
  struct ImFont * D.29614;
  float D.29613;
  const ImWchar * D.29612;
  float D.29608;
  char D.29604;
  int D.29602;
  int _10;
  char _13;
  float _15;
  const ImWchar * _21;
  float _22;
  struct ImFont * _24;
  struct ImFont * _27;

  <bb 2>:
  if (font_cfg_template_5(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  font_cfg = *font_cfg_template_5(D);
  goto <bb 5>;

  <bb 4>:
  ImFontConfig::ImFontConfig (&font_cfg);

  <bb 5>:
  if (font_cfg_template_5(D) == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  font_cfg.OversampleV = 1;
  _10 = font_cfg.OversampleV;
  font_cfg.OversampleH = _10;
  font_cfg.PixelSnapH = 1;

  <bb 7>:
  _13 = font_cfg.Name[0];
  if (_13 == 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  __builtin_memcpy (&font_cfg.Name, "ProggyClean.ttf, 13px", 22);

  <bb 9>:
  _15 = font_cfg.SizePixels;
  if (_15 <= 0.0)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  font_cfg.SizePixels = 1.3e+1;

  <bb 11>:
  ttf_compressed_base85_18 = GetDefaultCompressedFontDataTTFBase85 ();
  _21 = ImFontAtlas::GetGlyphRangesDefault (this_19(D));
  _22 = font_cfg.SizePixels;
  _24 = ImFontAtlas::AddFontFromMemoryCompressedBase85TTF (this_19(D), ttf_compressed_base85_18, _22, &font_cfg, _21);
  font_25 = _24;
  font_25->DisplayOffset.y = 1.0e+0;
  _27 = font_25;
  font_cfg ={v} {CLOBBER};

<L13>:
  return _27;

}



;; Function ImFont* ImFontAtlas::AddFontFromFileTTF(const char*, float, const ImFontConfig*, const ImWchar*) (_ZN11ImFontAtlas18AddFontFromFileTTFEPKcfPK12ImFontConfigPKt, funcdef_no=761, decl_uid=6243, cgraph_uid=660, symbol_order=665)

ImFont* ImFontAtlas::AddFontFromFileTTF(const char*, float, const ImFontConfig*, const ImWchar*) (struct ImFontAtlas * const this, const char * filename, float size_pixels, const struct ImFontConfig * font_cfg_template, const ImWchar * glyph_ranges)
{
  struct ImFont * D.29645;
  void * D.29644;
  const char * p;
  struct ImFontConfig font_cfg;
  static const char __PRETTY_FUNCTION__[97] = "ImFont* ImFontAtlas::AddFontFromFileTTF(const char*, float, const ImFontConfig*, const ImWchar*)";
  void * data;
  int data_size;
  int data_size.680;
  double D.29640;
  char D.29638;
  const char * D.29637;
  char D.29635;
  const char * D.29634;
  long unsigned int D.29631;
  char D.29628;
  struct ImFont * D.29624;
  void * _9;
  char _14;
  long unsigned int _15;
  const char * _17;
  char _18;
  const char * _19;
  char _20;
  double _23;
  int data_size.680_25;
  struct ImFont * _29;
  struct ImFont * _30;

  <bb 2>:
  data_size = 0;
  _9 = ImFileLoadToMemory (filename_7(D), "rb", &data_size, 0);
  data_10 = _9;
  if (data_10 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1550, &__PRETTY_FUNCTION__);

  <bb 4>:
  if (font_cfg_template_11(D) != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  font_cfg = *font_cfg_template_11(D);
  goto <bb 7>;

  <bb 6>:
  ImFontConfig::ImFontConfig (&font_cfg);

  <bb 7>:
  _14 = font_cfg.Name[0];
  if (_14 == 0)
    goto <bb 8>;
  else
    goto <bb 14>;

  <bb 8>:
  _15 = strlen (filename_7(D));
  p_16 = filename_7(D) + _15;

  <bb 9>:
  # p_1 = PHI <p_16(8), p_21(12)>
  if (p_1 <= filename_7(D))
    goto <bb 13>;
  else
    goto <bb 10>;

  <bb 10>:
  _17 = p_1 + 18446744073709551615;
  _18 = *_17;
  if (_18 == 47)
    goto <bb 13>;
  else
    goto <bb 11>;

  <bb 11>:
  _19 = p_1 + 18446744073709551615;
  _20 = *_19;
  if (_20 == 92)
    goto <bb 13>;
  else
    goto <bb 12>;

  <bb 12>:
  p_21 = p_1 + 18446744073709551615;
  goto <bb 9>;

  <bb 13>:
  _23 = (double) size_pixels_22(D);
  ImFormatString (&font_cfg.Name, 40, "%s, %.0fpx", p_1, _23);

  <bb 14>:
  data_size.680_25 = data_size;
  _29 = ImFontAtlas::AddFontFromMemoryTTF (this_26(D), data_10, data_size.680_25, size_pixels_22(D), &font_cfg, glyph_ranges_27(D));
  _30 = _29;
  data_size ={v} {CLOBBER};
  font_cfg ={v} {CLOBBER};

<L17>:
  return _30;

}



;; Function ImFont* ImFontAtlas::AddFontFromMemoryTTF(void*, int, float, const ImFontConfig*, const ImWchar*) (_ZN11ImFontAtlas20AddFontFromMemoryTTFEPvifPK12ImFontConfigPKt, funcdef_no=762, decl_uid=6250, cgraph_uid=661, symbol_order=666)

ImFont* ImFontAtlas::AddFontFromMemoryTTF(void*, int, float, const ImFontConfig*, const ImWchar*) (struct ImFontAtlas * const this, void * ttf_data, int ttf_size, float size_pixels, const struct ImFontConfig * font_cfg_template, const ImWchar * glyph_ranges)
{
  struct ImFont * D.29660;
  static const char __PRETTY_FUNCTION__[98] = "ImFont* ImFontAtlas::AddFontFromMemoryTTF(void*, int, float, const ImFontConfig*, const ImWchar*)";
  struct ImFontConfig font_cfg;
  struct ImFont * D.29658;
  void * D.29651;
  void * _7;
  struct ImFont * _18;
  struct ImFont * _19;

  <bb 2>:
  if (font_cfg_template_3(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  font_cfg = *font_cfg_template_3(D);
  goto <bb 5>;

  <bb 4>:
  ImFontConfig::ImFontConfig (&font_cfg);

  <bb 5>:
  _7 = font_cfg.FontData;
  if (_7 == 0B)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  __assert_fail ("font_cfg.FontData == __null", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1568, &__PRETTY_FUNCTION__);

  <bb 7>:
  font_cfg.FontData = ttf_data_8(D);
  font_cfg.FontDataSize = ttf_size_10(D);
  font_cfg.SizePixels = size_pixels_12(D);
  if (glyph_ranges_14(D) != 0B)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  font_cfg.GlyphRanges = glyph_ranges_14(D);

  <bb 9>:
  _18 = ImFontAtlas::AddFont (this_16(D), &font_cfg);
  _19 = _18;
  font_cfg ={v} {CLOBBER};

<L10>:
  return _19;

}



;; Function ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void*, int, float, const ImFontConfig*, const ImWchar*) (_ZN11ImFontAtlas30AddFontFromMemoryCompressedTTFEPKvifPK12ImFontConfigPKt, funcdef_no=763, decl_uid=6257, cgraph_uid=662, symbol_order=667)

ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void*, int, float, const ImFontConfig*, const ImWchar*) (struct ImFontAtlas * const this, const void * compressed_ttf_data, int compressed_ttf_size, float size_pixels, const struct ImFontConfig * font_cfg_template, const ImWchar * glyph_ranges)
{
  struct ImFont * D.29676;
  unsigned char * D.29675;
  static const char __PRETTY_FUNCTION__[114] = "ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void*, int, float, const ImFontConfig*, const ImWchar*)";
  struct ImFontConfig font_cfg;
  unsigned char * buf_decompressed_data;
  const unsigned int buf_decompressed_size;
  int buf_decompressed_size.682;
  struct ImFont * D.29672;
  void * D.29668;
  unsigned int compressed_ttf_size.681;
  long unsigned int D.29663;
  long unsigned int _7;
  unsigned char * _9;
  unsigned int compressed_ttf_size.681_12;
  void * _17;
  int buf_decompressed_size.682_19;
  struct ImFont * _24;
  struct ImFont * _25;

  <bb 2>:
  buf_decompressed_size_6 = stb_decompress_length (compressed_ttf_data_4(D));
  _7 = (long unsigned int) buf_decompressed_size_6;
  _9 = ImGui::MemAlloc (_7);
  buf_decompressed_data_10 = _9;
  compressed_ttf_size.681_12 = (unsigned int) compressed_ttf_size_11(D);
  stb_decompress (buf_decompressed_data_10, compressed_ttf_data_4(D), compressed_ttf_size.681_12);
  if (font_cfg_template_14(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  font_cfg = *font_cfg_template_14(D);
  goto <bb 5>;

  <bb 4>:
  ImFontConfig::ImFontConfig (&font_cfg);

  <bb 5>:
  _17 = font_cfg.FontData;
  if (_17 == 0B)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  __assert_fail ("font_cfg.FontData == __null", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1584, &__PRETTY_FUNCTION__);

  <bb 7>:
  font_cfg.FontDataOwnedByAtlas = 1;
  buf_decompressed_size.682_19 = (int) buf_decompressed_size_6;
  _24 = ImFontAtlas::AddFontFromMemoryTTF (this_20(D), buf_decompressed_data_10, buf_decompressed_size.682_19, size_pixels_21(D), &font_cfg, glyph_ranges_22(D));
  _25 = _24;
  font_cfg ={v} {CLOBBER};

<L7>:
  return _25;

}



;; Function ImFont* ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(const char*, float, const ImFontConfig*, const ImWchar*) (_ZN11ImFontAtlas36AddFontFromMemoryCompressedBase85TTFEPKcfPK12ImFontConfigPKt, funcdef_no=764, decl_uid=6263, cgraph_uid=663, symbol_order=668)

ImFont* ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(const char*, float, const ImFontConfig*, const ImWchar*) (struct ImFontAtlas * const this, const char * compressed_ttf_data_base85, float size_pixels, const struct ImFontConfig * font_cfg, const ImWchar * glyph_ranges)
{
  struct ImFont * D.29687;
  void * D.29686;
  struct ImFont * font;
  void * compressed_ttf;
  int compressed_ttf_size;
  struct ImFont * D.29684;
  long unsigned int D.29683;
  int D.29682;
  int D.29681;
  int D.29680;
  long unsigned int D.29679;
  long unsigned int _3;
  int _4;
  int _5;
  int _6;
  long unsigned int _8;
  void * _10;
  struct ImFont * _18;
  struct ImFont * _21;

  <bb 2>:
  _3 = strlen (compressed_ttf_data_base85_2(D));
  _4 = (int) _3;
  _5 = _4 + 4;
  _6 = _5 / 5;
  compressed_ttf_size_7 = _6 * 4;
  _8 = (long unsigned int) compressed_ttf_size_7;
  _10 = ImGui::MemAlloc (_8);
  compressed_ttf_11 = _10;
  Decode85 (compressed_ttf_data_base85_2(D), compressed_ttf_11);
  _18 = ImFontAtlas::AddFontFromMemoryCompressedTTF (this_13(D), compressed_ttf_11, compressed_ttf_size_7, size_pixels_14(D), font_cfg_15(D), glyph_ranges_16(D));
  font_19 = _18;
  ImGui::MemFree (compressed_ttf_11);
  _21 = font_19;

<L0>:
  return _21;

}



;; Function int ImFontAtlas::AddCustomRectRegular(unsigned int, int, int) (_ZN11ImFontAtlas20AddCustomRectRegularEjii, funcdef_no=765, decl_uid=6462, cgraph_uid=664, symbol_order=669)

int ImFontAtlas::AddCustomRectRegular(unsigned int, int, int) (struct ImFontAtlas * const this, unsigned int id, int width, int height)
{
  struct CustomRect r;
  static const char __PRETTY_FUNCTION__[62] = "int ImFontAtlas::AddCustomRectRegular(unsigned int, int, int)";
  int D.29703;
  int D.29702;
  struct ImVector * D.29701;
  short unsigned int D.29700;
  short unsigned int D.29699;
  short unsigned int _7;
  short unsigned int _9;
  struct ImVector * _12;
  int _14;
  int _15;

  <bb 2>:
  if (id_1(D) > 65535)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("id >= 0x10000", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1601, &__PRETTY_FUNCTION__);

  <bb 4>:
  if (width_2(D) > 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  if (width_2(D) <= 65535)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  goto <bb 8>;

  <bb 7>:
  __assert_fail ("width > 0 && width <= 0xFFFF", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1602, &__PRETTY_FUNCTION__);

  <bb 8>:
  if (height_3(D) > 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:
  if (height_3(D) <= 65535)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  goto <bb 12>;

  <bb 11>:
  __assert_fail ("height > 0 && height <= 0xFFFF", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1603, &__PRETTY_FUNCTION__);

  <bb 12>:
  ImFontAtlas::CustomRect::CustomRect (&r);
  r.ID = id_1(D);
  _7 = (short unsigned int) width_2(D);
  r.Width = _7;
  _9 = (short unsigned int) height_3(D);
  r.Height = _9;
  _12 = &this_11(D)->CustomRects;
  ImVector<ImFontAtlas::CustomRect>::push_back (_12, &r);
  _14 = this_11(D)->CustomRects.Size;
  _15 = _14 + -1;
  r ={v} {CLOBBER};

<L12>:
  return _15;

}



;; Function int ImFontAtlas::AddCustomRectFontGlyph(ImFont*, ImWchar, int, int, float, const ImVec2&) (_ZN11ImFontAtlas22AddCustomRectFontGlyphEP6ImFonttiifRK6ImVec2, funcdef_no=766, decl_uid=6470, cgraph_uid=665, symbol_order=670)

int ImFontAtlas::AddCustomRectFontGlyph(ImFont*, ImWchar, int, int, float, const ImVec2&) (struct ImFontAtlas * const this, struct ImFont * font, ImWchar id, int width, int height, float advance_x, const struct ImVec2 & offset)
{
  struct CustomRect r;
  static const char __PRETTY_FUNCTION__[90] = "int ImFontAtlas::AddCustomRectFontGlyph(ImFont*, ImWchar, int, int, float, const ImVec2&)";
  int D.29771;
  int D.29770;
  struct ImVector * D.29769;
  short unsigned int D.29768;
  short unsigned int D.29767;
  unsigned int D.29766;
  unsigned int _7;
  short unsigned int _9;
  short unsigned int _11;
  struct ImVector * _19;
  int _21;
  int _22;

  <bb 2>:
  if (font_1(D) != 0B)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("font != __null", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1614, &__PRETTY_FUNCTION__);

  <bb 4>:
  if (width_2(D) > 0)
    goto <bb 5>;
  else
    goto <bb 7>;

  <bb 5>:
  if (width_2(D) <= 65535)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  goto <bb 8>;

  <bb 7>:
  __assert_fail ("width > 0 && width <= 0xFFFF", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1615, &__PRETTY_FUNCTION__);

  <bb 8>:
  if (height_3(D) > 0)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:
  if (height_3(D) <= 65535)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  goto <bb 12>;

  <bb 11>:
  __assert_fail ("height > 0 && height <= 0xFFFF", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1616, &__PRETTY_FUNCTION__);

  <bb 12>:
  ImFontAtlas::CustomRect::CustomRect (&r);
  _7 = (unsigned int) id_6(D);
  r.ID = _7;
  _9 = (short unsigned int) width_2(D);
  r.Width = _9;
  _11 = (short unsigned int) height_3(D);
  r.Height = _11;
  r.GlyphAdvanceX = advance_x_13(D);
  r.GlyphOffset = *offset_15(D);
  r.Font = font_1(D);
  _19 = &this_18(D)->CustomRects;
  ImVector<ImFontAtlas::CustomRect>::push_back (_19, &r);
  _21 = this_18(D)->CustomRects.Size;
  _22 = _21 + -1;
  r ={v} {CLOBBER};

<L12>:
  return _22;

}



;; Function void ImFontAtlas::CalcCustomRectUV(const ImFontAtlas::CustomRect*, ImVec2*, ImVec2*) (_ZN11ImFontAtlas16CalcCustomRectUVEPKNS_10CustomRectEP6ImVec2S4_, funcdef_no=767, decl_uid=6478, cgraph_uid=666, symbol_order=671)

void ImFontAtlas::CalcCustomRectUV(const ImFontAtlas::CustomRect*, ImVec2*, ImVec2*) (struct ImFontAtlas * const this, const struct CustomRect * rect, struct ImVec2 * out_uv_min, struct ImVec2 * out_uv_max)
{
  static const char __PRETTY_FUNCTION__[85] = "void ImFontAtlas::CalcCustomRectUV(const ImFontAtlas::CustomRect*, ImVec2*, ImVec2*)";
  float D.29808;
  float D.29807;
  float D.29806;
  int D.29805;
  int D.29804;
  short unsigned int D.29803;
  int D.29802;
  short unsigned int D.29801;
  float D.29800;
  float D.29799;
  float D.29798;
  int D.29797;
  int D.29796;
  short unsigned int D.29795;
  int D.29794;
  short unsigned int D.29793;
  struct ImVec2 D.18829;
  float D.29792;
  float D.29791;
  float D.29790;
  short unsigned int D.29789;
  float D.29788;
  float D.29787;
  float D.29786;
  short unsigned int D.29785;
  struct ImVec2 D.18828;
  bool D.29781;
  int D.29779;
  int D.29777;
  int _3;
  int _4;
  bool _7;
  short unsigned int _8;
  float _9;
  float _10;
  float _11;
  short unsigned int _12;
  float _13;
  float _14;
  float _15;
  short unsigned int _20;
  int _21;
  short unsigned int _22;
  int _23;
  int _24;
  float _25;
  float _26;
  float _27;
  short unsigned int _28;
  int _29;
  short unsigned int _30;
  int _31;
  int _32;
  float _33;
  float _34;
  float _35;

  <bb 2>:
  _3 = this_2(D)->TexWidth;
  if (_3 > 0)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  _4 = this_2(D)->TexHeight;
  if (_4 > 0)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  goto <bb 6>;

  <bb 5>:
  __assert_fail ("TexWidth > 0 && TexHeight > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1630, &__PRETTY_FUNCTION__);

  <bb 6>:
  _7 = ImFontAtlas::CustomRect::IsPacked (rect_5(D));
  if (_7 != 0)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  __assert_fail ("rect->IsPacked()", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1631, &__PRETTY_FUNCTION__);

  <bb 8>:
  _8 = rect_5(D)->Y;
  _9 = (float) _8;
  _10 = this_2(D)->TexUvScale.y;
  _11 = _9 * _10;
  _12 = rect_5(D)->X;
  _13 = (float) _12;
  _14 = this_2(D)->TexUvScale.x;
  _15 = _13 * _14;
  ImVec2::ImVec2 (&D.18828, _15, _11);
  *out_uv_min_17(D) = D.18828;
  D.18828 ={v} {CLOBBER};
  _20 = rect_5(D)->Y;
  _21 = (int) _20;
  _22 = rect_5(D)->Height;
  _23 = (int) _22;
  _24 = _21 + _23;
  _25 = (float) _24;
  _26 = this_2(D)->TexUvScale.y;
  _27 = _25 * _26;
  _28 = rect_5(D)->X;
  _29 = (int) _28;
  _30 = rect_5(D)->Width;
  _31 = (int) _30;
  _32 = _29 + _31;
  _33 = (float) _32;
  _34 = this_2(D)->TexUvScale.x;
  _35 = _33 * _34;
  ImVec2::ImVec2 (&D.18829, _35, _27);
  *out_uv_max_37(D) = D.18829;
  D.18829 ={v} {CLOBBER};
  return;

}



;; Function bool ImFontAtlas::GetMouseCursorTexData(ImGuiMouseCursor, ImVec2*, ImVec2*, ImVec2*, ImVec2*) (_ZN11ImFontAtlas21GetMouseCursorTexDataEiP6ImVec2S1_S1_S1_, funcdef_no=768, decl_uid=6485, cgraph_uid=667, symbol_order=672)

bool ImFontAtlas::GetMouseCursorTexData(ImGuiMouseCursor, ImVec2*, ImVec2*, ImVec2*, ImVec2*) (struct ImFontAtlas * const this, ImGuiMouseCursor cursor_type, struct ImVec2 * out_offset, struct ImVec2 * out_size, struct ImVec2 * out_uv_border, struct ImVec2 * out_uv_fill)
{
  struct ImVec2 size;
  struct ImVec2 pos;
  struct CustomRect & r;
  static const char __PRETTY_FUNCTION__[94] = "bool ImFontAtlas::GetMouseCursorTexData(ImGuiMouseCursor, ImVec2*, ImVec2*, ImVec2*, ImVec2*)";
  struct ImVec2 D.18849;
  struct ImVec2 * D.29842;
  struct ImVec2 * D.29841;
  struct ImVec2 * D.29840;
  float D.29839;
  float D.29838;
  struct ImVec2 D.18846;
  struct ImVec2 * D.29837;
  struct ImVec2 * D.29836;
  struct ImVec2 * D.29835;
  const struct ImVec2 * D.29834;
  float D.29833;
  short unsigned int D.29832;
  float D.29831;
  short unsigned int D.29830;
  struct ImVec2 D.18841;
  unsigned int D.29826;
  struct ImVector * D.29825;
  int D.29824;
  int D.29820;
  int D.29817;
  int D.29816;
  bool D.29815;
  bool _1;
  int _6;
  int _7;
  bool _8;
  int _9;
  int _10;
  struct ImVector * _11;
  unsigned int _14;
  short unsigned int _15;
  float _16;
  short unsigned int _17;
  float _18;
  const struct ImVec2 * _20;
  struct ImVec2 * _28;
  struct ImVec2 * _31;
  struct ImVec2 * _32;
  float _36;
  float _37;
  struct ImVec2 * _39;
  struct ImVec2 * _42;
  struct ImVec2 * _43;
  bool _47;
  bool _50;

  <bb 2>:
  if (cursor_type_3(D) < 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  if (cursor_type_3(D) > 6)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _50 = 0;
  goto <bb 12>;

  <bb 5>:
  _6 = this_5(D)->Flags;
  _7 = _6 & 2;
  if (_7 != 0)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _8 = 0;
  goto <bb 12>;

  <bb 7>:
  _9 = this_5(D)->CustomRectIds[0];
  if (_9 != -1)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  __assert_fail ("CustomRectIds[0] != -1", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1643, &__PRETTY_FUNCTION__);

  <bb 9>:
  _10 = this_5(D)->CustomRectIds[0];
  _11 = &this_5(D)->CustomRects;
  r_13 = ImVector<ImFontAtlas::CustomRect>::operator[] (_11, _10);
  _14 = r_13->ID;
  if (_14 == 2147483648)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  __assert_fail ("r.ID == FONT_ATLAS_DEFAULT_TEX_DATA_ID", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1645, &__PRETTY_FUNCTION__);

  <bb 11>:
  _15 = r_13->Y;
  _16 = (float) _15;
  _17 = r_13->X;
  _18 = (float) _17;
  ImVec2::ImVec2 (&D.18841, _18, _16);
  _20 = &FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type_3(D)][0];
  pos = operator+ (_20, &D.18841);
  D.18841 ={v} {CLOBBER};
  size = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type_3(D)][1];
  *out_size_24(D) = size;
  *out_offset_26(D) = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[cursor_type_3(D)][2];
  _28 = &this_5(D)->TexUvScale;
  *out_uv_border_29(D) = operator* (&pos, _28);
  _31 = out_uv_border_29(D) + 8;
  _32 = &this_5(D)->TexUvScale;
  D.18846 = operator+ (&pos, &size);
  *_31 = operator* (&D.18846, _32);
  D.18846 ={v} {CLOBBER};
  _36 = pos.x;
  _37 = _36 + 9.1e+1;
  pos.x = _37;
  _39 = &this_5(D)->TexUvScale;
  *out_uv_fill_40(D) = operator* (&pos, _39);
  _42 = out_uv_fill_40(D) + 8;
  _43 = &this_5(D)->TexUvScale;
  D.18849 = operator+ (&pos, &size);
  *_42 = operator* (&D.18849, _43);
  D.18849 ={v} {CLOBBER};
  _47 = 1;

  <bb 12>:
  # _1 = PHI <_50(4), _8(6), _47(11)>
  pos ={v} {CLOBBER};
  size ={v} {CLOBBER};

<L12>:
  return _1;

}



;; Function bool ImFontAtlas::Build() (_ZN11ImFontAtlas5BuildEv, funcdef_no=769, decl_uid=6273, cgraph_uid=668, symbol_order=673)

bool ImFontAtlas::Build() (struct ImFontAtlas * const this)
{
  bool D.29865;
  bool D.29863;
  bool _4;
  bool _5;

  <bb 2>:
  _4 = ImFontAtlasBuildWithStbTruetype (this_2(D));
  _5 = _4;

<L0>:
  return _5;

}



;; Function void ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char*, float) (_Z39ImFontAtlasBuildMultiplyCalcLookupTablePhf, funcdef_no=770, decl_uid=14102, cgraph_uid=669, symbol_order=674)

void ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char*, float) (unsigned char * out_table, float in_brighten_factor)
{
  unsigned int value;
  unsigned int i;
  unsigned char iftmp.685;
  unsigned char * D.29871;
  sizetype D.29870;
  float D.29869;
  float D.29868;
  unsigned char iftmp.685_2;
  float _6;
  float _8;
  sizetype _10;
  unsigned char * _12;
  unsigned char iftmp.685_13;
  unsigned char iftmp.685_14;

  <bb 2>:
  i_4 = 0;

  <bb 3>:
  # i_1 = PHI <i_4(2), i_16(7)>
  if (i_1 > 255)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:
  _6 = (float) i_1;
  _8 = _6 * in_brighten_factor_7(D);
  value_9 = (unsigned int) _8;
  _10 = (sizetype) i_1;
  _12 = out_table_11(D) + _10;
  if (value_9 <= 255)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  iftmp.685_13 = (unsigned char) value_9;
  goto <bb 7>;

  <bb 6>:
  iftmp.685_14 = 255;

  <bb 7>:
  # iftmp.685_2 = PHI <iftmp.685_13(5), iftmp.685_14(6)>
  *_12 = iftmp.685_2;
  i_16 = i_1 + 1;
  goto <bb 3>;

  <bb 8>:
  return;

}



;; Function void ImFontAtlasBuildMultiplyRectAlpha8(const unsigned char*, unsigned char*, int, int, int, int, int) (_Z34ImFontAtlasBuildMultiplyRectAlpha8PKhPhiiiii, funcdef_no=771, decl_uid=14110, cgraph_uid=670, symbol_order=675)

void ImFontAtlasBuildMultiplyRectAlpha8(const unsigned char*, unsigned char*, int, int, int, int, int) (const unsigned char * table, unsigned char * pixels, int x, int y, int w, int h, int stride)
{
  int i;
  int j;
  unsigned char * data;
  sizetype D.29892;
  unsigned char D.29891;
  const unsigned char * D.29890;
  sizetype D.29889;
  unsigned char D.29888;
  unsigned char * D.29887;
  sizetype D.29886;
  unsigned char * D.29885;
  sizetype D.29884;
  sizetype D.29879;
  sizetype D.29878;
  int D.29877;
  sizetype D.29876;
  sizetype _7;
  int _10;
  sizetype _11;
  sizetype _12;
  sizetype _20;
  unsigned char * _21;
  sizetype _22;
  unsigned char * _23;
  unsigned char _24;
  sizetype _25;
  const unsigned char * _27;
  unsigned char _28;
  sizetype _32;

  <bb 2>:
  _7 = (sizetype) x_6(D);
  _10 = y_8(D) * stride_9(D);
  _11 = (sizetype) _10;
  _12 = _7 + _11;
  data_14 = pixels_13(D) + _12;
  j_16 = h_15(D);

  <bb 3>:
  # data_1 = PHI <data_14(2), data_33(7)>
  # j_2 = PHI <j_16(2), j_31(7)>
  if (j_2 <= 0)
    goto <bb 8>;
  else
    goto <bb 4>;

  <bb 4>:
  i_18 = 0;

  <bb 5>:
  # i_3 = PHI <i_18(4), i_30(6)>
  if (i_3 >= w_19(D))
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  _20 = (sizetype) i_3;
  _21 = data_1 + _20;
  _22 = (sizetype) i_3;
  _23 = data_1 + _22;
  _24 = *_23;
  _25 = (sizetype) _24;
  _27 = table_26(D) + _25;
  _28 = *_27;
  *_21 = _28;
  i_30 = i_3 + 1;
  goto <bb 5>;

  <bb 7>:
  j_31 = j_2 + -1;
  _32 = (sizetype) stride_9(D);
  data_33 = data_1 + _32;
  goto <bb 3>;

  <bb 8>:
  return;

}



;; Function bool ImFontAtlasBuildWithStbTruetype(ImFontAtlas*) (_Z31ImFontAtlasBuildWithStbTruetypeP11ImFontAtlas, funcdef_no=772, decl_uid=14086, cgraph_uid=671, symbol_order=676)

bool ImFontAtlasBuildWithStbTruetype(ImFontAtlas*) (struct ImFontAtlas * atlas)
{
  const struct ImFontGlyph * D.30250;
  void * D.30249;
  int D.30248;
  struct stbtt_pack_range * D.30247;
  struct stbrp_rect * D.30246;
  struct stbtt_packedchar * D.30245;
  struct ImFontTempBuildData * D.30244;
  int D.30243;
  float dummy_y;
  float dummy_x;
  struct stbtt_aligned_quad q;
  const int codepoint;
  const struct stbtt_packedchar & pc;
  int char_idx;
  struct stbtt_pack_range & range;
  int i;
  const float off_y;
  const float off_x;
  const float descent;
  const float ascent;
  int unscaled_line_gap;
  int unscaled_descent;
  int unscaled_ascent;
  const float font_scale;
  struct ImFont * dst_font;
  struct ImFontTempBuildData & tmp;
  struct ImFontConfig & cfg;
  int input_i;
  const struct stbrp_rect * r;
  unsigned char multiply_table[256];
  struct ImFontTempBuildData & tmp;
  struct ImFontConfig & cfg;
  int input_i;
  int i;
  struct stbtt_pack_range & range;
  const ImWchar * in_range;
  int i;
  const ImWchar * in_range;
  int n;
  int font_ranges_count;
  int font_glyphs_count;
  struct ImFontTempBuildData & tmp;
  struct ImFontConfig & cfg;
  int input_i;
  const int font_offset;
  struct ImFontTempBuildData & tmp;
  struct ImFontConfig & cfg;
  int input_i;
  const ImWchar * in_range;
  struct ImFontConfig & cfg;
  int input_i;
  struct stbtt_pack_range * buf_ranges;
  struct stbrp_rect * buf_rects;
  struct stbtt_packedchar * buf_packedchars;
  int buf_ranges_n;
  int buf_rects_n;
  int buf_packedchars_n;
  struct ImFontTempBuildData * tmp_array;
  struct stbtt_pack_context spc;
  const int max_tex_height;
  int total_ranges_count;
  int total_glyphs_count;
  static const char __PRETTY_FUNCTION__[51] = "bool ImFontAtlasBuildWithStbTruetype(ImFontAtlas*)";
  int D.30241;
  short unsigned int D.30240;
  float D.30239;
  float D.30238;
  float D.30237;
  float D.30236;
  float D.30235;
  float D.30234;
  float D.30233;
  float D.30232;
  float D.30231;
  float D.30230;
  float D.30229;
  float D.30228;
  float D.30227;
  struct stbtt_packedchar * D.30226;
  int D.30225;
  int D.30224;
  const struct ImFontGlyph * D.30220;
  int D.30219;
  short unsigned int D.30218;
  bool D.30216;
  bool iftmp.700;
  bool retval.699;
  int D.30211;
  short unsigned int D.30208;
  short unsigned int D.30205;
  short unsigned int D.30202;
  short unsigned int D.30199;
  long unsigned int D.30198;
  long unsigned int D.30197;
  struct stbtt_packedchar * D.30196;
  int D.30194;
  long unsigned int D.30192;
  long unsigned int D.30191;
  struct stbtt_pack_range * D.30190;
  int D.30188;
  float D.30186;
  int D.30185;
  float D.30184;
  float D.30183;
  float D.30182;
  float D.30181;
  float D.30177;
  int unscaled_descent.698;
  float iftmp.697;
  float D.30174;
  float D.30173;
  int unscaled_descent.696;
  float D.30171;
  float D.30167;
  int unscaled_ascent.695;
  float iftmp.694;
  float D.30164;
  float D.30163;
  int unscaled_ascent.693;
  struct stbtt_fontinfo * D.30161;
  struct stbtt_fontinfo * D.30160;
  float D.30159;
  bool D.30155;
  long unsigned int D.30154;
  long unsigned int D.30153;
  struct ImVector * D.30152;
  int D.30150;
  unsigned char * D.30146;
  int D.30145;
  short unsigned int D.30144;
  int D.30143;
  short unsigned int D.30142;
  int D.30141;
  short unsigned int D.30140;
  int D.30139;
  short unsigned int D.30138;
  int D.30137;
  int D.30134;
  struct stbrp_rect * D.30132;
  long unsigned int D.30131;
  long unsigned int D.30130;
  int D.30129;
  struct stbrp_rect * D.30128;
  float D.30126;
  float D.30123;
  struct stbtt_fontinfo * D.30122;
  struct stbtt_pack_range * D.30121;
  int D.30120;
  struct stbrp_rect * D.30119;
  unsigned int D.30118;
  int D.30117;
  unsigned int D.30116;
  int D.30115;
  long unsigned int D.30114;
  long unsigned int D.30113;
  struct ImVector * D.30112;
  int D.30110;
  int D.30108;
  unsigned char * D.30107;
  unsigned char * D.30106;
  long unsigned int D.30105;
  int D.30104;
  int D.30103;
  int D.30102;
  void * D.30101;
  long unsigned int D.30100;
  int D.30099;
  int D.30098;
  int D.30097;
  float D.30096;
  float D.30095;
  int D.30094;
  float D.30093;
  float D.30092;
  int D.30091;
  struct ImVec2 D.18953;
  int D.30090;
  int D.30088;
  int D.30085;
  int D.30084;
  int iftmp.692;
  int D.30072;
  int D.30071;
  int D.30070;
  int D.30069;
  short unsigned int D.30068;
  struct stbrp_rect * D.30067;
  long unsigned int D.30066;
  long unsigned int D.30065;
  struct stbrp_rect * D.30064;
  int D.30063;
  short unsigned int D.30062;
  struct stbrp_rect * D.30061;
  long unsigned int D.30060;
  long unsigned int D.30059;
  struct stbrp_rect * D.30058;
  int D.30055;
  struct stbrp_rect * D.30054;
  long unsigned int D.30053;
  long unsigned int D.30052;
  struct stbrp_rect * D.30051;
  void * D.30048;
  struct stbrp_rect * D.30047;
  struct stbtt_fontinfo * D.30043;
  struct stbtt_pack_range * D.30042;
  int D.30041;
  struct stbrp_rect * D.30040;
  unsigned int D.30039;
  int D.30038;
  unsigned int D.30037;
  int D.30036;
  struct stbrp_rect * D.30035;
  long unsigned int D.30034;
  long unsigned int D.30033;
  int D.30032;
  struct stbtt_packedchar * D.30031;
  long unsigned int D.30030;
  long unsigned int D.30029;
  int D.30028;
  int D.30027;
  int D.30026;
  short unsigned int D.30025;
  int D.30024;
  short unsigned int D.30023;
  const ImWchar * D.30022;
  int D.30021;
  short unsigned int D.30020;
  float D.30019;
  long unsigned int D.30018;
  long unsigned int D.30017;
  struct stbtt_pack_range * D.30016;
  long unsigned int D.30015;
  long unsigned int D.30014;
  const ImWchar * D.30013;
  struct stbtt_pack_range * D.30010;
  long unsigned int D.30009;
  long unsigned int D.30008;
  int D.30007;
  int D.30006;
  int D.30005;
  short unsigned int D.30004;
  int D.30003;
  short unsigned int D.30002;
  const ImWchar * D.30001;
  short unsigned int D.29999;
  const ImWchar * D.29998;
  short unsigned int D.29996;
  long unsigned int D.29994;
  long unsigned int D.29993;
  struct ImVector * D.29992;
  int D.29990;
  long unsigned int D.29988;
  long unsigned int D.29987;
  long unsigned int D.29986;
  long unsigned int D.29985;
  long unsigned int D.29984;
  long unsigned int D.29983;
  long unsigned int D.29982;
  long unsigned int D.29981;
  long unsigned int D.29980;
  long unsigned int D.29979;
  long unsigned int D.29978;
  long unsigned int D.29977;
  int D.29976;
  int D.29973;
  struct stbtt_fontinfo * D.29972;
  void * D.29971;
  bool retval.691;
  void * D.29966;
  int D.29965;
  struct ImFontAtlas * D.29964;
  struct ImFont * D.29963;
  bool D.29961;
  bool D.29960;
  struct ImFont * D.29959;
  struct ImFont * D.29957;
  long unsigned int D.29953;
  long unsigned int D.29952;
  struct ImVector * D.29951;
  int D.29949;
  long unsigned int D.29947;
  long unsigned int D.29946;
  int D.29945;
  void * D.29944;
  bool D.29943;
  int D.29940;
  int D.29939;
  int D.29938;
  bool retval.690;
  int iftmp.689;
  int iftmp.688;
  int iftmp.687;
  int D.29921;
  int iftmp.686;
  int D.29919;
  int D.29918;
  int D.29917;
  short unsigned int D.29916;
  int D.29915;
  short unsigned int D.29914;
  const ImWchar * D.29913;
  short unsigned int D.29911;
  const ImWchar * D.29910;
  short unsigned int D.29908;
  const ImWchar * D.29905;
  const ImWchar * D.29902;
  struct ImVector * D.29901;
  int D.29899;
  struct ImVec2 D.18883;
  struct ImVec2 D.18882;
  int D.29897;
  int D.29893;
  int iftmp.686_23;
  int iftmp.687_24;
  int iftmp.688_25;
  int iftmp.689_26;
  bool _27;
  int iftmp.692_28;
  float iftmp.694_29;
  float iftmp.697_30;
  bool iftmp.700_31;
  int _59;
  int _63;
  int _75;
  struct ImVector * _76;
  const ImWchar * _79;
  const ImWchar * _81;
  short unsigned int _84;
  const ImWchar * _85;
  short unsigned int _86;
  const ImWchar * _87;
  short unsigned int _88;
  int _89;
  short unsigned int _90;
  int _91;
  int _92;
  int _93;
  int _98;
  int iftmp.686_99;
  int iftmp.689_100;
  int iftmp.689_101;
  int iftmp.688_102;
  int iftmp.688_103;
  int iftmp.687_104;
  int iftmp.687_105;
  int iftmp.686_106;
  int _111;
  int _112;
  int _114;
  int _115;
  bool retval.690_116;
  bool _117;
  void * _119;
  int _121;
  long unsigned int _122;
  long unsigned int _123;
  struct ImFontTempBuildData * _125;
  int _128;
  struct ImVector * _129;
  long unsigned int _132;
  long unsigned int _133;
  struct ImFont * _135;
  struct ImFont * _136;
  bool _138;
  bool _139;
  struct ImFont * _140;
  struct ImFontAtlas * _141;
  int _142;
  void * _143;
  void * _146;
  struct stbtt_fontinfo * _147;
  int _149;
  bool retval.691_150;
  int _153;
  bool _156;
  long unsigned int _162;
  long unsigned int _163;
  struct stbtt_packedchar * _165;
  long unsigned int _167;
  long unsigned int _168;
  struct stbrp_rect * _170;
  long unsigned int _172;
  long unsigned int _173;
  struct stbtt_pack_range * _175;
  long unsigned int _177;
  long unsigned int _178;
  long unsigned int _180;
  long unsigned int _181;
  long unsigned int _183;
  long unsigned int _184;
  int _187;
  struct ImVector * _188;
  long unsigned int _191;
  long unsigned int _192;
  short unsigned int _197;
  const ImWchar * _198;
  short unsigned int _199;
  const ImWchar * _200;
  short unsigned int _201;
  int _202;
  short unsigned int _203;
  int _204;
  int _205;
  int _206;
  long unsigned int _210;
  long unsigned int _211;
  struct stbtt_pack_range * _212;
  const ImWchar * _217;
  long unsigned int _218;
  long unsigned int _219;
  struct stbtt_pack_range * _221;
  long unsigned int _222;
  long unsigned int _223;
  float _225;
  short unsigned int _227;
  int _228;
  const ImWchar * _230;
  short unsigned int _231;
  int _232;
  short unsigned int _233;
  int _234;
  int _235;
  int _236;
  long unsigned int _238;
  long unsigned int _239;
  struct stbtt_packedchar * _240;
  int _242;
  long unsigned int _245;
  long unsigned int _246;
  struct stbrp_rect * _247;
  int _251;
  unsigned int _252;
  int _253;
  unsigned int _254;
  struct stbrp_rect * _256;
  int _257;
  struct stbtt_pack_range * _258;
  struct stbtt_fontinfo * _259;
  int _261;
  struct stbrp_rect * _263;
  void * _264;
  struct stbrp_rect * _267;
  long unsigned int _268;
  long unsigned int _269;
  struct stbrp_rect * _270;
  int _271;
  struct stbrp_rect * _272;
  long unsigned int _273;
  long unsigned int _274;
  struct stbrp_rect * _275;
  short unsigned int _276;
  int _277;
  struct stbrp_rect * _278;
  long unsigned int _279;
  long unsigned int _280;
  struct stbrp_rect * _281;
  short unsigned int _282;
  int _283;
  int _284;
  int _285;
  int _287;
  int _292;
  int _293;
  int _294;
  int iftmp.692_295;
  int _296;
  int iftmp.692_298;
  int _300;
  float _301;
  float _302;
  int _303;
  float _304;
  float _305;
  int _309;
  int _310;
  int _311;
  long unsigned int _312;
  void * _314;
  void * _315;
  int _317;
  int _318;
  int _319;
  long unsigned int _320;
  unsigned char * _321;
  unsigned char * _323;
  int _325;
  int _328;
  struct ImVector * _329;
  long unsigned int _332;
  long unsigned int _333;
  int _335;
  unsigned int _336;
  int _337;
  unsigned int _338;
  struct stbrp_rect * _340;
  int _341;
  struct stbtt_pack_range * _342;
  struct stbtt_fontinfo * _343;
  float _345;
  float _346;
  struct stbrp_rect * _349;
  int _350;
  long unsigned int _351;
  long unsigned int _352;
  struct stbrp_rect * _353;
  int _354;
  int _355;
  short unsigned int _356;
  int _357;
  short unsigned int _358;
  int _359;
  short unsigned int _360;
  int _361;
  short unsigned int _362;
  int _363;
  unsigned char * _364;
  int _374;
  struct ImVector * _375;
  long unsigned int _378;
  long unsigned int _379;
  bool _382;
  float _384;
  struct stbtt_fontinfo * _385;
  struct stbtt_fontinfo * _388;
  int unscaled_ascent.693_390;
  float _391;
  float _392;
  int unscaled_ascent.695_393;
  float _394;
  float iftmp.694_395;
  float iftmp.694_396;
  float _397;
  int unscaled_descent.696_400;
  float _401;
  float _402;
  int unscaled_descent.698_403;
  float _404;
  float iftmp.697_405;
  float iftmp.697_406;
  float _407;
  float _412;
  float _413;
  float _414;
  int _415;
  float _416;
  int _419;
  struct stbtt_pack_range * _420;
  long unsigned int _421;
  long unsigned int _422;
  int _425;
  struct stbtt_packedchar * _426;
  long unsigned int _427;
  long unsigned int _428;
  short unsigned int _430;
  short unsigned int _431;
  short unsigned int _432;
  short unsigned int _433;
  int _434;
  bool _436;
  short unsigned int _437;
  int _438;
  const struct ImFontGlyph * _440;
  const struct ImFontGlyph * _441;
  bool iftmp.700_442;
  bool iftmp.700_443;
  bool retval.699_444;
  int _447;
  int _448;
  struct stbtt_packedchar * _449;
  float _451;
  float _452;
  float _453;
  float _454;
  float _455;
  float _456;
  float _457;
  float _458;
  float _459;
  float _460;
  float _461;
  float _462;
  float _463;
  short unsigned int _464;
  int _465;
  bool _489;

  <bb 2>:
  _59 = atlas_58(D)->ConfigData.Size;
  if (_59 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("atlas->ConfigData.Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1682, &__PRETTY_FUNCTION__);

  <bb 4>:
  ImFontAtlasBuildRegisterDefaultCustomRects (atlas_58(D));
  atlas_58(D)->TexID = 0B;
  atlas_58(D)->TexHeight = 0;
  _63 = atlas_58(D)->TexHeight;
  atlas_58(D)->TexWidth = _63;
  ImVec2::ImVec2 (&D.18882, 0.0, 0.0);
  atlas_58(D)->TexUvScale = D.18882;
  D.18882 ={v} {CLOBBER};
  ImVec2::ImVec2 (&D.18883, 0.0, 0.0);
  atlas_58(D)->TexUvWhitePixel = D.18883;
  D.18883 ={v} {CLOBBER};
  ImFontAtlas::ClearTexData (atlas_58(D));
  total_glyphs_count_72 = 0;
  total_ranges_count_73 = 0;
  input_i_74 = 0;

  <bb 5>:
  # total_glyphs_count_1 = PHI <total_glyphs_count_72(4), total_glyphs_count_2(12)>
  # total_ranges_count_3 = PHI <total_ranges_count_73(4), total_ranges_count_4(12)>
  # input_i_5 = PHI <input_i_74(4), input_i_97(12)>
  _75 = atlas_58(D)->ConfigData.Size;
  if (_75 <= input_i_5)
    goto <bb 13>;
  else
    goto <bb 6>;

  <bb 6>:
  _76 = &atlas_58(D)->ConfigData;
  cfg_78 = ImVector<ImFontConfig>::operator[] (_76, input_i_5);
  _79 = cfg_78->GlyphRanges;
  if (_79 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  _81 = ImFontAtlas::GetGlyphRangesDefault (atlas_58(D));
  cfg_78->GlyphRanges = _81;

  <bb 8>:
  in_range_83 = cfg_78->GlyphRanges;

  <bb 9>:
  # total_glyphs_count_2 = PHI <total_glyphs_count_1(8), total_glyphs_count_94(11)>
  # total_ranges_count_4 = PHI <total_ranges_count_3(8), total_ranges_count_96(11)>
  # in_range_6 = PHI <in_range_83(8), in_range_95(11)>
  _84 = *in_range_6;
  if (_84 == 0)
    goto <bb 12>;
  else
    goto <bb 10>;

  <bb 10>:
  _85 = in_range_6 + 2;
  _86 = *_85;
  if (_86 == 0)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  _87 = in_range_6 + 2;
  _88 = *_87;
  _89 = (int) _88;
  _90 = *in_range_6;
  _91 = (int) _90;
  _92 = _89 - _91;
  _93 = _92 + 1;
  total_glyphs_count_94 = _93 + total_glyphs_count_2;
  in_range_95 = in_range_6 + 4;
  total_ranges_count_96 = total_ranges_count_4 + 1;
  goto <bb 9>;

  <bb 12>:
  input_i_97 = input_i_5 + 1;
  goto <bb 5>;

  <bb 13>:
  _98 = atlas_58(D)->TexDesiredWidth;
  if (_98 > 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  iftmp.686_99 = atlas_58(D)->TexDesiredWidth;
  goto <bb 25>;

  <bb 15>:
  if (total_glyphs_count_1 <= 4000)
    goto <bb 16>;
  else
    goto <bb 23>;

  <bb 16>:
  if (total_glyphs_count_1 <= 2000)
    goto <bb 17>;
  else
    goto <bb 21>;

  <bb 17>:
  if (total_glyphs_count_1 > 1000)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  iftmp.689_100 = 1024;
  goto <bb 20>;

  <bb 19>:
  iftmp.689_101 = 512;

  <bb 20>:
  # iftmp.689_26 = PHI <iftmp.689_100(18), iftmp.689_101(19)>
  iftmp.688_102 = iftmp.689_26;
  goto <bb 22>;

  <bb 21>:
  iftmp.688_103 = 2048;

  <bb 22>:
  # iftmp.688_25 = PHI <iftmp.688_102(20), iftmp.688_103(21)>
  iftmp.687_104 = iftmp.688_25;
  goto <bb 24>;

  <bb 23>:
  iftmp.687_105 = 4096;

  <bb 24>:
  # iftmp.687_24 = PHI <iftmp.687_104(22), iftmp.687_105(23)>
  iftmp.686_106 = iftmp.687_24;

  <bb 25>:
  # iftmp.686_23 = PHI <iftmp.686_99(14), iftmp.686_106(24)>
  atlas_58(D)->TexWidth = iftmp.686_23;
  atlas_58(D)->TexHeight = 0;
  max_tex_height_109 = 32768;
  spc = {};
  _111 = atlas_58(D)->TexGlyphPadding;
  _112 = atlas_58(D)->TexWidth;
  _114 = stbtt_PackBegin (&spc, 0B, _112, 32768, 0, _111, 0B);
  _115 = _114;
  retval.690_116 = _115 == 0;
  if (retval.690_116 != 0)
    goto <bb 26>;
  else
    goto <bb 27>;

  <bb 26>:
  _117 = 0;
  goto <bb 106>;

  <bb 27>:
  stbtt_PackSetOversampling (&spc, 1, 1);
  _119 = spc.pack_info;
  ImFontAtlasBuildPackCustomRects (atlas_58(D), _119);
  _121 = atlas_58(D)->ConfigData.Size;
  _122 = (long unsigned int) _121;
  _123 = _122 * 192;
  _125 = ImGui::MemAlloc (_123);
  tmp_array_126 = _125;
  input_i_127 = 0;

  <bb 28>:
  # input_i_7 = PHI <input_i_127(27), input_i_151(38)>
  _128 = atlas_58(D)->ConfigData.Size;
  if (_128 <= input_i_7)
    goto <bb 39>;
  else
    goto <bb 29>;

  <bb 29>:
  _129 = &atlas_58(D)->ConfigData;
  cfg_131 = ImVector<ImFontConfig>::operator[] (_129, input_i_7);
  _132 = (long unsigned int) input_i_7;
  _133 = _132 * 192;
  tmp_134 = tmp_array_126 + _133;
  _135 = cfg_131->DstFont;
  if (_135 != 0B)
    goto <bb 30>;
  else
    goto <bb 33>;

  <bb 30>:
  _136 = cfg_131->DstFont;
  _138 = ImFont::IsLoaded (_136);
  _139 = ~_138;
  if (_139 != 0)
    goto <bb 32>;
  else
    goto <bb 31>;

  <bb 31>:
  _140 = cfg_131->DstFont;
  _141 = _140->ContainerAtlas;
  if (_141 == atlas_58(D))
    goto <bb 32>;
  else
    goto <bb 33>;

  <bb 32>:
  goto <bb 34>;

  <bb 33>:
  __assert_fail ("cfg.DstFont && (!cfg.DstFont->IsLoaded() || cfg.DstFont->ContainerAtlas == atlas)", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1733, &__PRETTY_FUNCTION__);

  <bb 34>:
  _142 = cfg_131->FontNo;
  _143 = cfg_131->FontData;
  font_offset_145 = stbtt_GetFontOffsetForIndex (_143, _142);
  if (font_offset_145 >= 0)
    goto <bb 36>;
  else
    goto <bb 35>;

  <bb 35>:
  __assert_fail ("font_offset >= 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1736, &__PRETTY_FUNCTION__);

  <bb 36>:
  _146 = cfg_131->FontData;
  _147 = &tmp_134->FontInfo;
  _149 = stbtt_InitFont (_147, _146, font_offset_145);
  retval.691_150 = _149 == 0;
  if (retval.691_150 != 0)
    goto <bb 37>;
  else
    goto <bb 38>;

  <bb 37>:
  atlas_58(D)->TexHeight = 0;
  _153 = atlas_58(D)->TexHeight;
  atlas_58(D)->TexWidth = _153;
  ImGui::MemFree (tmp_array_126);
  _156 = 0;
  goto <bb 106>;

  <bb 38>:
  input_i_151 = input_i_7 + 1;
  goto <bb 28>;

  <bb 39>:
  buf_packedchars_n_159 = 0;
  buf_rects_n_160 = 0;
  buf_ranges_n_161 = 0;
  _162 = (long unsigned int) total_glyphs_count_1;
  _163 = _162 * 28;
  _165 = ImGui::MemAlloc (_163);
  buf_packedchars_166 = _165;
  _167 = (long unsigned int) total_glyphs_count_1;
  _168 = _167 * 16;
  _170 = ImGui::MemAlloc (_168);
  buf_rects_171 = _170;
  _172 = (long unsigned int) total_ranges_count_3;
  _173 = _172 * 40;
  _175 = ImGui::MemAlloc (_173);
  buf_ranges_176 = _175;
  _177 = (long unsigned int) total_glyphs_count_1;
  _178 = _177 * 28;
  memset (buf_packedchars_166, 0, _178);
  _180 = (long unsigned int) total_glyphs_count_1;
  _181 = _180 * 16;
  memset (buf_rects_171, 0, _181);
  _183 = (long unsigned int) total_ranges_count_3;
  _184 = _183 * 40;
  memset (buf_ranges_176, 0, _184);
  input_i_186 = 0;

  <bb 40>:
  # buf_packedchars_n_8 = PHI <buf_packedchars_n_159(39), buf_packedchars_n_9(55)>
  # buf_rects_n_10 = PHI <buf_rects_n_160(39), buf_rects_n_250(55)>
  # buf_ranges_n_11 = PHI <buf_ranges_n_161(39), buf_ranges_n_215(55)>
  # input_i_12 = PHI <input_i_186(39), input_i_290(55)>
  _187 = atlas_58(D)->ConfigData.Size;
  if (_187 <= input_i_12)
    goto <bb 56>;
  else
    goto <bb 41>;

  <bb 41>:
  _188 = &atlas_58(D)->ConfigData;
  cfg_190 = ImVector<ImFontConfig>::operator[] (_188, input_i_12);
  _191 = (long unsigned int) input_i_12;
  _192 = _191 * 192;
  tmp_193 = tmp_array_126 + _192;
  font_glyphs_count_194 = 0;
  font_ranges_count_195 = 0;
  in_range_196 = cfg_190->GlyphRanges;

  <bb 42>:
  # font_glyphs_count_13 = PHI <font_glyphs_count_194(41), font_glyphs_count_207(44)>
  # font_ranges_count_14 = PHI <font_ranges_count_195(41), font_ranges_count_209(44)>
  # in_range_15 = PHI <in_range_196(41), in_range_208(44)>
  _197 = *in_range_15;
  if (_197 == 0)
    goto <bb 45>;
  else
    goto <bb 43>;

  <bb 43>:
  _198 = in_range_15 + 2;
  _199 = *_198;
  if (_199 == 0)
    goto <bb 45>;
  else
    goto <bb 44>;

  <bb 44>:
  _200 = in_range_15 + 2;
  _201 = *_200;
  _202 = (int) _201;
  _203 = *in_range_15;
  _204 = (int) _203;
  _205 = _202 - _204;
  _206 = _205 + 1;
  font_glyphs_count_207 = _206 + font_glyphs_count_13;
  in_range_208 = in_range_15 + 4;
  font_ranges_count_209 = font_ranges_count_14 + 1;
  goto <bb 42>;

  <bb 45>:
  _210 = (long unsigned int) buf_ranges_n_11;
  _211 = _210 * 40;
  _212 = buf_ranges_176 + _211;
  tmp_193->Ranges = _212;
  tmp_193->RangesCount = font_ranges_count_14;
  buf_ranges_n_215 = buf_ranges_n_11 + font_ranges_count_14;
  i_216 = 0;

  <bb 46>:
  # buf_packedchars_n_9 = PHI <buf_packedchars_n_8(45), buf_packedchars_n_243(47)>
  # i_16 = PHI <i_216(45), i_244(47)>
  if (i_16 >= font_ranges_count_14)
    goto <bb 48>;
  else
    goto <bb 47>;

  <bb 47>:
  _217 = cfg_190->GlyphRanges;
  _218 = (long unsigned int) i_16;
  _219 = _218 * 4;
  in_range_220 = _217 + _219;
  _221 = tmp_193->Ranges;
  _222 = (long unsigned int) i_16;
  _223 = _222 * 40;
  range_224 = _221 + _223;
  _225 = cfg_190->SizePixels;
  range_224->font_size = _225;
  _227 = *in_range_220;
  _228 = (int) _227;
  range_224->first_unicode_codepoint_in_range = _228;
  _230 = in_range_220 + 2;
  _231 = *_230;
  _232 = (int) _231;
  _233 = *in_range_220;
  _234 = (int) _233;
  _235 = _232 - _234;
  _236 = _235 + 1;
  range_224->num_chars = _236;
  _238 = (long unsigned int) buf_packedchars_n_9;
  _239 = _238 * 28;
  _240 = buf_packedchars_166 + _239;
  range_224->chardata_for_range = _240;
  _242 = range_224->num_chars;
  buf_packedchars_n_243 = _242 + buf_packedchars_n_9;
  i_244 = i_16 + 1;
  goto <bb 46>;

  <bb 48>:
  _245 = (long unsigned int) buf_rects_n_10;
  _246 = _245 * 16;
  _247 = buf_rects_171 + _246;
  tmp_193->Rects = _247;
  tmp_193->RectsCount = font_glyphs_count_13;
  buf_rects_n_250 = buf_rects_n_10 + font_glyphs_count_13;
  _251 = cfg_190->OversampleV;
  _252 = (unsigned int) _251;
  _253 = cfg_190->OversampleH;
  _254 = (unsigned int) _253;
  stbtt_PackSetOversampling (&spc, _254, _252);
  _256 = tmp_193->Rects;
  _257 = tmp_193->RangesCount;
  _258 = tmp_193->Ranges;
  _259 = &tmp_193->FontInfo;
  _261 = stbtt_PackFontRangesGatherRects (&spc, _259, _258, _257, _256);
  n_262 = _261;
  if (n_262 == font_glyphs_count_13)
    goto <bb 50>;
  else
    goto <bb 49>;

  <bb 49>:
  __assert_fail ("n == font_glyphs_count", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1785, &__PRETTY_FUNCTION__);

  <bb 50>:
  _263 = tmp_193->Rects;
  _264 = spc.pack_info;
  stbrp_pack_rects (_264, _263, n_262);
  i_266 = 0;

  <bb 51>:
  # i_17 = PHI <i_266(50), i_289(54)>
  if (i_17 >= n_262)
    goto <bb 55>;
  else
    goto <bb 52>;

  <bb 52>:
  _267 = tmp_193->Rects;
  _268 = (long unsigned int) i_17;
  _269 = _268 * 16;
  _270 = _267 + _269;
  _271 = _270->was_packed;
  if (_271 != 0)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  _272 = tmp_193->Rects;
  _273 = (long unsigned int) i_17;
  _274 = _273 * 16;
  _275 = _272 + _274;
  _276 = _275->y;
  _277 = (int) _276;
  _278 = tmp_193->Rects;
  _279 = (long unsigned int) i_17;
  _280 = _279 * 16;
  _281 = _278 + _280;
  _282 = _281->h;
  _283 = (int) _282;
  _284 = _277 + _283;
  _285 = atlas_58(D)->TexHeight;
  _287 = ImMax (_285, _284);
  atlas_58(D)->TexHeight = _287;

  <bb 54>:
  i_289 = i_17 + 1;
  goto <bb 51>;

  <bb 55>:
  input_i_290 = input_i_12 + 1;
  goto <bb 40>;

  <bb 56>:
  if (buf_rects_n_10 == total_glyphs_count_1)
    goto <bb 58>;
  else
    goto <bb 57>;

  <bb 57>:
  __assert_fail ("buf_rects_n == total_glyphs_count", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1793, &__PRETTY_FUNCTION__);

  <bb 58>:
  if (buf_packedchars_n_8 == total_glyphs_count_1)
    goto <bb 60>;
  else
    goto <bb 59>;

  <bb 59>:
  __assert_fail ("buf_packedchars_n == total_glyphs_count", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1794, &__PRETTY_FUNCTION__);

  <bb 60>:
  if (buf_ranges_n_11 == total_ranges_count_3)
    goto <bb 62>;
  else
    goto <bb 61>;

  <bb 61>:
  __assert_fail ("buf_ranges_n == total_ranges_count", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1795, &__PRETTY_FUNCTION__);

  <bb 62>:
  _292 = atlas_58(D)->Flags;
  _293 = _292 & 1;
  if (_293 != 0)
    goto <bb 63>;
  else
    goto <bb 64>;

  <bb 63>:
  _294 = atlas_58(D)->TexHeight;
  iftmp.692_295 = _294 + 1;
  goto <bb 65>;

  <bb 64>:
  _296 = atlas_58(D)->TexHeight;
  iftmp.692_298 = ImUpperPowerOfTwo (_296);

  <bb 65>:
  # iftmp.692_28 = PHI <iftmp.692_295(63), iftmp.692_298(64)>
  atlas_58(D)->TexHeight = iftmp.692_28;
  _300 = atlas_58(D)->TexHeight;
  _301 = (float) _300;
  _302 = 1.0e+0 / _301;
  _303 = atlas_58(D)->TexWidth;
  _304 = (float) _303;
  _305 = 1.0e+0 / _304;
  ImVec2::ImVec2 (&D.18953, _305, _302);
  atlas_58(D)->TexUvScale = D.18953;
  D.18953 ={v} {CLOBBER};
  _309 = atlas_58(D)->TexWidth;
  _310 = atlas_58(D)->TexHeight;
  _311 = _309 * _310;
  _312 = (long unsigned int) _311;
  _314 = ImGui::MemAlloc (_312);
  _315 = _314;
  atlas_58(D)->TexPixelsAlpha8 = _315;
  _317 = atlas_58(D)->TexWidth;
  _318 = atlas_58(D)->TexHeight;
  _319 = _317 * _318;
  _320 = (long unsigned int) _319;
  _321 = atlas_58(D)->TexPixelsAlpha8;
  memset (_321, 0, _320);
  _323 = atlas_58(D)->TexPixelsAlpha8;
  spc.pixels = _323;
  _325 = atlas_58(D)->TexHeight;
  spc.height = _325;
  input_i_327 = 0;

  <bb 66>:
  # input_i_18 = PHI <input_i_327(65), input_i_369(74)>
  _328 = atlas_58(D)->ConfigData.Size;
  if (_328 <= input_i_18)
    goto <bb 75>;
  else
    goto <bb 67>;

  <bb 67>:
  _329 = &atlas_58(D)->ConfigData;
  cfg_331 = ImVector<ImFontConfig>::operator[] (_329, input_i_18);
  _332 = (long unsigned int) input_i_18;
  _333 = _332 * 192;
  tmp_334 = tmp_array_126 + _333;
  _335 = cfg_331->OversampleV;
  _336 = (unsigned int) _335;
  _337 = cfg_331->OversampleH;
  _338 = (unsigned int) _337;
  stbtt_PackSetOversampling (&spc, _338, _336);
  _340 = tmp_334->Rects;
  _341 = tmp_334->RangesCount;
  _342 = tmp_334->Ranges;
  _343 = &tmp_334->FontInfo;
  stbtt_PackFontRangesRenderIntoRects (&spc, _343, _342, _341, _340);
  _345 = cfg_331->RasterizerMultiply;
  if (_345 != 1.0e+0)
    goto <bb 68>;
  else
    goto <bb 74>;

  <bb 68>:
  _346 = cfg_331->RasterizerMultiply;
  ImFontAtlasBuildMultiplyCalcLookupTable (&multiply_table, _346);
  r_348 = tmp_334->Rects;

  <bb 69>:
  # r_19 = PHI <r_348(68), r_366(72)>
  _349 = tmp_334->Rects;
  _350 = tmp_334->RectsCount;
  _351 = (long unsigned int) _350;
  _352 = _351 * 16;
  _353 = _349 + _352;
  if (_353 == r_19)
    goto <bb 73>;
  else
    goto <bb 70>;

  <bb 70>:
  _354 = r_19->was_packed;
  if (_354 != 0)
    goto <bb 71>;
  else
    goto <bb 72>;

  <bb 71>:
  _355 = spc.stride_in_bytes;
  _356 = r_19->h;
  _357 = (int) _356;
  _358 = r_19->w;
  _359 = (int) _358;
  _360 = r_19->y;
  _361 = (int) _360;
  _362 = r_19->x;
  _363 = (int) _362;
  _364 = spc.pixels;
  ImFontAtlasBuildMultiplyRectAlpha8 (&multiply_table, _364, _363, _361, _359, _357, _355);

  <bb 72>:
  r_366 = r_19 + 16;
  goto <bb 69>;

  <bb 73>:
  multiply_table ={v} {CLOBBER};

  <bb 74>:
  tmp_334->Rects = 0B;
  input_i_369 = input_i_18 + 1;
  goto <bb 66>;

  <bb 75>:
  stbtt_PackEnd (&spc);
  ImGui::MemFree (buf_rects_171);
  buf_rects_372 = 0B;
  input_i_373 = 0;

  <bb 76>:
  # input_i_20 = PHI <input_i_373(75), input_i_481(104)>
  _374 = atlas_58(D)->ConfigData.Size;
  if (_374 <= input_i_20)
    goto <bb 105>;
  else
    goto <bb 77>;

  <bb 77>:
  _375 = &atlas_58(D)->ConfigData;
  cfg_377 = ImVector<ImFontConfig>::operator[] (_375, input_i_20);
  _378 = (long unsigned int) input_i_20;
  _379 = _378 * 192;
  tmp_380 = tmp_array_126 + _379;
  dst_font_381 = cfg_377->DstFont;
  _382 = cfg_377->MergeMode;
  if (_382 != 0)
    goto <bb 78>;
  else
    goto <bb 79>;

  <bb 78>:
  ImFont::BuildLookupTable (dst_font_381);

  <bb 79>:
  _384 = cfg_377->SizePixels;
  _385 = &tmp_380->FontInfo;
  font_scale_387 = stbtt_ScaleForPixelHeight (_385, _384);
  _388 = &tmp_380->FontInfo;
  stbtt_GetFontVMetrics (_388, &unscaled_ascent, &unscaled_descent, &unscaled_line_gap);
  unscaled_ascent.693_390 = unscaled_ascent;
  _391 = (float) unscaled_ascent.693_390;
  _392 = _391 * font_scale_387;
  unscaled_ascent.695_393 = unscaled_ascent;
  _394 = (float) unscaled_ascent.695_393;
  if (_394 > 0.0)
    goto <bb 80>;
  else
    goto <bb 81>;

  <bb 80>:
  iftmp.694_395 = 1.0e+0;
  goto <bb 82>;

  <bb 81>:
  iftmp.694_396 = -1.0e+0;

  <bb 82>:
  # iftmp.694_29 = PHI <iftmp.694_395(80), iftmp.694_396(81)>
  _397 = _392 + iftmp.694_29;
  ascent_399 = ImFloor (_397);
  unscaled_descent.696_400 = unscaled_descent;
  _401 = (float) unscaled_descent.696_400;
  _402 = _401 * font_scale_387;
  unscaled_descent.698_403 = unscaled_descent;
  _404 = (float) unscaled_descent.698_403;
  if (_404 > 0.0)
    goto <bb 83>;
  else
    goto <bb 84>;

  <bb 83>:
  iftmp.697_405 = 1.0e+0;
  goto <bb 85>;

  <bb 84>:
  iftmp.697_406 = -1.0e+0;

  <bb 85>:
  # iftmp.697_30 = PHI <iftmp.697_405(83), iftmp.697_406(84)>
  _407 = _402 + iftmp.697_30;
  descent_409 = ImFloor (_407);
  ImFontAtlasBuildSetupFont (atlas_58(D), dst_font_381, cfg_377, ascent_399, descent_409);
  off_x_411 = cfg_377->GlyphOffset.x;
  _412 = cfg_377->GlyphOffset.y;
  _413 = dst_font_381->Ascent;
  _414 = _413 + 5.0e-1;
  _415 = (int) _414;
  _416 = (float) _415;
  off_y_417 = _412 + _416;
  i_418 = 0;

  <bb 86>:
  # i_21 = PHI <i_418(85), i_477(103)>
  _419 = tmp_380->RangesCount;
  if (_419 <= i_21)
    goto <bb 104>;
  else
    goto <bb 87>;

  <bb 87>:
  _420 = tmp_380->Ranges;
  _421 = (long unsigned int) i_21;
  _422 = _421 * 40;
  range_423 = _420 + _422;
  char_idx_424 = 0;

  <bb 88>:
  # char_idx_22 = PHI <char_idx_424(87), char_idx_476(102)>
  _425 = range_423->num_chars;
  if (_425 <= char_idx_22)
    goto <bb 103>;
  else
    goto <bb 89>;

  <bb 89>:
  _426 = range_423->chardata_for_range;
  _427 = (long unsigned int) char_idx_22;
  _428 = _427 * 28;
  pc_429 = _426 + _428;
  _430 = pc_429->x0;
  if (_430 == 0)
    goto <bb 90>;
  else
    goto <bb 94>;

  <bb 90>:
  _431 = pc_429->x1;
  if (_431 == 0)
    goto <bb 91>;
  else
    goto <bb 94>;

  <bb 91>:
  _432 = pc_429->y0;
  if (_432 == 0)
    goto <bb 92>;
  else
    goto <bb 94>;

  <bb 92>:
  _433 = pc_429->y1;
  if (_433 == 0)
    goto <bb 93>;
  else
    goto <bb 94>;

  <bb 93>:
  goto <bb 101>;

  <bb 94>:
  _434 = range_423->first_unicode_codepoint_in_range;
  codepoint_435 = _434 + char_idx_22;
  _436 = cfg_377->MergeMode;
  if (_436 != 0)
    goto <bb 95>;
  else
    goto <bb 97>;

  <bb 95>:
  _437 = (short unsigned int) codepoint_435;
  _438 = (int) _437;
  _440 = ImFont::FindGlyphNoFallback (dst_font_381, _438);
  _441 = _440;
  if (_441 != 0B)
    goto <bb 96>;
  else
    goto <bb 97>;

  <bb 96>:
  iftmp.700_442 = 1;
  goto <bb 98>;

  <bb 97>:
  iftmp.700_443 = 0;

  <bb 98>:
  # iftmp.700_31 = PHI <iftmp.700_442(96), iftmp.700_443(97)>
  retval.699_444 = iftmp.700_31;
  if (retval.699_444 != 0)
    goto <bb 99>;
  else
    goto <bb 100>;

  <bb 99>:
  goto <bb 101>;

  <bb 100>:
  dummy_x = 0.0;
  dummy_y = 0.0;
  _447 = atlas_58(D)->TexHeight;
  _448 = atlas_58(D)->TexWidth;
  _449 = range_423->chardata_for_range;
  stbtt_GetPackedQuad (_449, _448, _447, char_idx_22, &dummy_x, &dummy_y, &q, 0);
  _451 = pc_429->xadvance;
  _452 = q.t1;
  _453 = q.s1;
  _454 = q.t0;
  _455 = q.s0;
  _456 = q.y1;
  _457 = _456 + off_y_417;
  _458 = q.x1;
  _459 = _458 + off_x_411;
  _460 = q.y0;
  _461 = _460 + off_y_417;
  _462 = q.x0;
  _463 = _462 + off_x_411;
  _464 = (short unsigned int) codepoint_435;
  _465 = (int) _464;
  ImFont::AddGlyph (dst_font_381, _465, _463, _461, _459, _457, _455, _454, _453, _452, _451);
  q ={v} {CLOBBER};
  dummy_x ={v} {CLOBBER};
  dummy_y ={v} {CLOBBER};
  goto <bb 102>;

  <bb 101>:
  q ={v} {CLOBBER};
  dummy_x ={v} {CLOBBER};
  dummy_y ={v} {CLOBBER};

  <bb 102>:
  char_idx_476 = char_idx_22 + 1;
  goto <bb 88>;

  <bb 103>:
  i_477 = i_21 + 1;
  goto <bb 86>;

  <bb 104>:
  unscaled_ascent ={v} {CLOBBER};
  unscaled_descent ={v} {CLOBBER};
  unscaled_line_gap ={v} {CLOBBER};
  input_i_481 = input_i_20 + 1;
  goto <bb 76>;

  <bb 105>:
  ImGui::MemFree (buf_packedchars_166);
  ImGui::MemFree (buf_ranges_176);
  ImGui::MemFree (tmp_array_126);
  ImFontAtlasBuildFinish (atlas_58(D));
  _489 = 1;

  <bb 106>:
  # _27 = PHI <_117(26), _156(37), _489(105)>
  spc ={v} {CLOBBER};

<L119>:
  return _27;

}



;; Function void ImFontAtlasBuildRegisterDefaultCustomRects(ImFontAtlas*) (_Z42ImFontAtlasBuildRegisterDefaultCustomRectsP11ImFontAtlas, funcdef_no=773, decl_uid=14088, cgraph_uid=672, symbol_order=677)

void ImFontAtlasBuildRegisterDefaultCustomRects(ImFontAtlas*) (struct ImFontAtlas * atlas)
{
  int D.30288;
  int D.30287;
  int D.30285;
  int D.30283;
  int D.30280;
  int D.30279;
  int D.30276;
  int _4;
  int _5;
  int _6;
  int _8;
  int _9;
  int _12;
  int _13;

  <bb 2>:
  _4 = atlas_3(D)->CustomRectIds[0];
  if (_4 >= 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _5 = atlas_3(D)->Flags;
  _6 = _5 & 2;
  if (_6 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _8 = ImFontAtlas::AddCustomRectRegular (atlas_3(D), 2147483648, 181, 27);
  _9 = _8;
  atlas_3(D)->CustomRectIds[0] = _9;
  goto <bb 7> (<L5>);

  <bb 6>:
  _12 = ImFontAtlas::AddCustomRectRegular (atlas_3(D), 2147483648, 2, 2);
  _13 = _12;
  atlas_3(D)->CustomRectIds[0] = _13;

<L5>:
  return;

}



;; Function void ImFontAtlasBuildSetupFont(ImFontAtlas*, ImFont*, ImFontConfig*, float, float) (_Z25ImFontAtlasBuildSetupFontP11ImFontAtlasP6ImFontP12ImFontConfigff, funcdef_no=774, decl_uid=14094, cgraph_uid=673, symbol_order=678)

void ImFontAtlasBuildSetupFont(ImFontAtlas*, ImFont*, ImFontConfig*, float, float) (struct ImFontAtlas * atlas, struct ImFont * font, struct ImFontConfig * font_config, float ascent, float descent)
{
  short int D.30299;
  unsigned short D.30298;
  unsigned short D.30297;
  short int D.30296;
  short int D.30295;
  float D.30293;
  bool D.30290;
  bool D.30289;
  bool _4;
  bool _5;
  float _8;
  short int _17;
  short int _18;
  unsigned short _19;
  unsigned short _20;
  short int _21;

  <bb 2>:
  _4 = font_config_3(D)->MergeMode;
  _5 = ~_4;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  ImFont::ClearOutputData (font_6(D));
  _8 = font_config_3(D)->SizePixels;
  font_6(D)->FontSize = _8;
  font_6(D)->ConfigData = font_config_3(D);
  font_6(D)->ContainerAtlas = atlas_11(D);
  font_6(D)->Ascent = ascent_13(D);
  font_6(D)->Descent = descent_15(D);

  <bb 4>:
  _17 = font_6(D)->ConfigDataCount;
  _18 = _17;
  _19 = (unsigned short) _18;
  _20 = _19 + 1;
  _21 = (short int) _20;
  font_6(D)->ConfigDataCount = _21;
  return;

}



;; Function void ImFontAtlasBuildPackCustomRects(ImFontAtlas*, void*) (_Z31ImFontAtlasBuildPackCustomRectsP11ImFontAtlasPv, funcdef_no=775, decl_uid=14097, cgraph_uid=674, symbol_order=679)

void ImFontAtlasBuildPackCustomRects(ImFontAtlas*, void*) (struct ImFontAtlas * atlas, void * pack_context_opaque)
{
  void * D.32758;
  int i;
  int i;
  struct ImVector pack_rects;
  static const char __PRETTY_FUNCTION__[58] = "void ImFontAtlasBuildPackCustomRects(ImFontAtlas*, void*)";
  struct ImVector & user_rects;
  struct stbrp_context * pack_context;
  int D.30354;
  int D.30353;
  int D.30352;
  int D.30351;
  short unsigned int D.30350;
  struct value_type & D.30349;
  int D.30348;
  short unsigned int D.30347;
  struct value_type & D.30346;
  short unsigned int D.30344;
  struct value_type & D.30343;
  short unsigned int D.30342;
  struct value_type & D.30341;
  short unsigned int D.30339;
  struct value_type & D.30338;
  short unsigned int D.30337;
  struct value_type & D.30336;
  short unsigned int D.30333;
  struct value_type & D.30332;
  struct value_type & D.30331;
  short unsigned int D.30330;
  struct value_type & D.30329;
  struct value_type & D.30328;
  int D.30325;
  struct value_type & D.30324;
  bool retval.702;
  int D.30321;
  struct value_type & D.30319;
  int D.30318;
  short unsigned int D.30317;
  struct value_type & D.30316;
  struct value_type & D.30315;
  short unsigned int D.30314;
  struct value_type & D.30313;
  struct value_type & D.30312;
  int D.30310;
  struct stbrp_rect * D.30308;
  long unsigned int D.30307;
  long unsigned int D.30306;
  int D.30305;
  int D.30304;
  int D.30300;
  int _13;
  int _15;
  int _17;
  long unsigned int _18;
  long unsigned int _19;
  struct stbrp_rect * _20;
  int _23;
  struct value_type & _25;
  struct value_type & _27;
  short unsigned int _28;
  struct value_type & _31;
  struct value_type & _33;
  short unsigned int _34;
  int _37;
  struct value_type & _39;
  int _42;
  struct value_type & _44;
  int _45;
  bool retval.702_46;
  struct value_type & _48;
  struct value_type & _50;
  short unsigned int _51;
  struct value_type & _54;
  struct value_type & _56;
  short unsigned int _57;
  struct value_type & _60;
  short unsigned int _61;
  struct value_type & _63;
  short unsigned int _64;
  struct value_type & _66;
  short unsigned int _67;
  struct value_type & _69;
  short unsigned int _70;
  struct value_type & _72;
  short unsigned int _73;
  int _74;
  struct value_type & _76;
  short unsigned int _77;
  int _78;
  int _79;
  int _80;
  int _82;

  <bb 2>:
  pack_context_9 = pack_context_opaque_8(D);
  user_rects_11 = &atlas_10(D)->CustomRects;
  _13 = user_rects_11->Size;
  if (_13 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("user_rects.Size >= 1", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1907, &__PRETTY_FUNCTION__);

  <bb 4>:
  ImVector<stbrp_rect>::ImVector (&pack_rects);
  _15 = user_rects_11->Size;
  ImVector<stbrp_rect>::resize (&pack_rects, _15);

  <bb 5>:
  _17 = user_rects_11->Size;
  _18 = (long unsigned int) _17;
  _19 = _18 * 16;
  _20 = pack_rects.Data;
  memset (_20, 0, _19);
  i_22 = 0;

  <bb 6>:
  # i_1 = PHI <i_22(5), i_36(7)>
  _23 = user_rects_11->Size;
  if (_23 <= i_1)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _25 = ImVector<stbrp_rect>::operator[] (&pack_rects, i_1);
  _27 = ImVector<ImFontAtlas::CustomRect>::operator[] (user_rects_11, i_1);
  _28 = _27->Width;
  _25->w = _28;
  _31 = ImVector<stbrp_rect>::operator[] (&pack_rects, i_1);
  _33 = ImVector<ImFontAtlas::CustomRect>::operator[] (user_rects_11, i_1);
  _34 = _33->Height;
  _31->h = _34;
  i_36 = i_1 + 1;
  goto <bb 6>;

  <bb 8>:
  _37 = pack_rects.Size;
  _39 = ImVector<stbrp_rect>::operator[] (&pack_rects, 0);
  stbrp_pack_rects (pack_context_9, _39, _37);

  <bb 9>:
  i_41 = 0;

  <bb 10>:
  # i_2 = PHI <i_41(9), i_85(17)>
  _42 = pack_rects.Size;
  if (_42 <= i_2)
    goto <bb 18>;
  else
    goto <bb 11>;

  <bb 11>:
  _44 = ImVector<stbrp_rect>::operator[] (&pack_rects, i_2);
  _45 = _44->was_packed;
  retval.702_46 = _45 != 0;
  if (retval.702_46 != 0)
    goto <bb 12>;
  else
    goto <bb 17>;

  <bb 12>:
  _48 = ImVector<ImFontAtlas::CustomRect>::operator[] (user_rects_11, i_2);
  _50 = ImVector<stbrp_rect>::operator[] (&pack_rects, i_2);
  _51 = _50->x;
  _48->X = _51;
  _54 = ImVector<ImFontAtlas::CustomRect>::operator[] (user_rects_11, i_2);
  _56 = ImVector<stbrp_rect>::operator[] (&pack_rects, i_2);
  _57 = _56->y;
  _54->Y = _57;
  _60 = ImVector<stbrp_rect>::operator[] (&pack_rects, i_2);
  _61 = _60->w;
  _63 = ImVector<ImFontAtlas::CustomRect>::operator[] (user_rects_11, i_2);
  _64 = _63->Width;
  if (_61 == _64)
    goto <bb 13>;
  else
    goto <bb 15>;

  <bb 13>:
  _66 = ImVector<stbrp_rect>::operator[] (&pack_rects, i_2);
  _67 = _66->h;
  _69 = ImVector<ImFontAtlas::CustomRect>::operator[] (user_rects_11, i_2);
  _70 = _69->Height;
  if (_67 == _70)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  goto <bb 16>;

  <bb 15>:
  __assert_fail ("pack_rects[i].w == user_rects[i].Width && pack_rects[i].h == user_rects[i].Height", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1923, &__PRETTY_FUNCTION__);

  <bb 16>:
  _72 = ImVector<stbrp_rect>::operator[] (&pack_rects, i_2);
  _73 = _72->y;
  _74 = (int) _73;
  _76 = ImVector<stbrp_rect>::operator[] (&pack_rects, i_2);
  _77 = _76->h;
  _78 = (int) _77;
  _79 = _74 + _78;
  _80 = atlas_10(D)->TexHeight;
  _82 = ImMax (_80, _79);
  atlas_10(D)->TexHeight = _82;

  <bb 17>:
  i_85 = i_2 + 1;
  goto <bb 10>;

  <bb 18>:
  ImVector<stbrp_rect>::~ImVector (&pack_rects);
  pack_rects ={v} {CLOBBER};
  return;

<L16>:
  ImVector<stbrp_rect>::~ImVector (&pack_rects);
  _89 = __builtin_eh_pointer (2);
  __builtin_unwind_resume (_89);

}



;; Function void ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas*) (_ZL36ImFontAtlasBuildRenderDefaultTexDataP11ImFontAtlas, funcdef_no=776, decl_uid=19163, cgraph_uid=675, symbol_order=680)

void ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas*) (struct ImFontAtlas * atlas)
{
  const int offset;
  const int offset1;
  const int offset0;
  int x;
  int n;
  int y;
  const int w;
  struct CustomRect & r;
  static const char __PRETTY_FUNCTION__[56] = "void ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas*)";
  float D.30505;
  float D.30504;
  float D.30503;
  float D.30502;
  int D.30501;
  short unsigned int D.30500;
  float D.30499;
  float D.30498;
  float D.30497;
  float D.30496;
  int D.30495;
  short unsigned int D.30494;
  struct ImVec2 D.19174;
  unsigned char D.30493;
  unsigned char D.30492;
  unsigned char D.30491;
  unsigned char * D.30490;
  sizetype D.30489;
  sizetype D.30488;
  int D.30487;
  unsigned char * D.30486;
  unsigned char * D.30485;
  sizetype D.30484;
  int D.30483;
  unsigned char * D.30482;
  unsigned char * D.30481;
  sizetype D.30480;
  sizetype D.30479;
  unsigned char * D.30478;
  unsigned char * D.30477;
  sizetype D.30476;
  unsigned char * D.30475;
  int D.30474;
  int D.30473;
  short unsigned int D.30472;
  int D.30471;
  short unsigned int D.30470;
  short unsigned int D.30468;
  short unsigned int D.30466;
  char D.30459;
  unsigned char iftmp.706;
  unsigned char * D.30457;
  sizetype D.30456;
  unsigned char * D.30455;
  char D.30451;
  unsigned char iftmp.705;
  unsigned char * D.30449;
  sizetype D.30448;
  unsigned char * D.30447;
  int D.30446;
  int D.30445;
  int D.30444;
  short unsigned int D.30443;
  int D.30442;
  int D.30441;
  short unsigned int D.30440;
  short unsigned int D.30434;
  short unsigned int D.30432;
  int D.30427;
  int D.30426;
  bool D.30422;
  unsigned int D.30418;
  struct ImVector * D.30417;
  int D.30416;
  unsigned char * D.30412;
  int D.30408;
  unsigned char iftmp.705_5;
  unsigned char iftmp.706_6;
  int _12;
  unsigned char * _13;
  int _14;
  struct ImVector * _15;
  unsigned int _18;
  bool _20;
  int _22;
  int _23;
  short unsigned int _24;
  short unsigned int _25;
  short unsigned int _29;
  int _30;
  int _31;
  short unsigned int _32;
  int _33;
  int _34;
  int _35;
  unsigned char * _38;
  sizetype _39;
  unsigned char * _40;
  char _41;
  unsigned char iftmp.705_42;
  unsigned char iftmp.705_43;
  unsigned char * _45;
  sizetype _46;
  unsigned char * _47;
  char _48;
  unsigned char iftmp.706_49;
  unsigned char iftmp.706_50;
  short unsigned int _56;
  short unsigned int _57;
  short unsigned int _58;
  int _59;
  short unsigned int _60;
  int _61;
  int _62;
  unsigned char * _64;
  sizetype _65;
  unsigned char * _66;
  unsigned char * _67;
  sizetype _68;
  sizetype _69;
  unsigned char * _70;
  unsigned char * _71;
  int _72;
  sizetype _73;
  unsigned char * _74;
  unsigned char * _75;
  int _76;
  sizetype _77;
  sizetype _78;
  unsigned char * _79;
  unsigned char _81;
  unsigned char _83;
  unsigned char _85;
  short unsigned int _88;
  int _89;
  float _90;
  float _91;
  float _92;
  float _93;
  short unsigned int _94;
  int _95;
  float _96;
  float _97;
  float _98;
  float _99;

  <bb 2>:
  _12 = atlas_11(D)->CustomRectIds[0];
  if (_12 >= 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("atlas->CustomRectIds[0] >= 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1930, &__PRETTY_FUNCTION__);

  <bb 4>:
  _13 = atlas_11(D)->TexPixelsAlpha8;
  if (_13 != 0B)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  __assert_fail ("atlas->TexPixelsAlpha8 != __null", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1931, &__PRETTY_FUNCTION__);

  <bb 6>:
  _14 = atlas_11(D)->CustomRectIds[0];
  _15 = &atlas_11(D)->CustomRects;
  r_17 = ImVector<ImFontAtlas::CustomRect>::operator[] (_15, _14);
  _18 = r_17->ID;
  if (_18 == 2147483648)
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  __assert_fail ("r.ID == FONT_ATLAS_DEFAULT_TEX_DATA_ID", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1933, &__PRETTY_FUNCTION__);

  <bb 8>:
  _20 = ImFontAtlas::CustomRect::IsPacked (r_17);
  if (_20 != 0)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  __assert_fail ("r.IsPacked()", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1934, &__PRETTY_FUNCTION__);

  <bb 10>:
  w_21 = atlas_11(D)->TexWidth;
  _22 = atlas_11(D)->Flags;
  _23 = _22 & 2;
  if (_23 == 0)
    goto <bb 11>;
  else
    goto <bb 28>;

  <bb 11>:
  _24 = r_17->Width;
  if (_24 == 181)
    goto <bb 12>;
  else
    goto <bb 14>;

  <bb 12>:
  _25 = r_17->Height;
  if (_25 == 27)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  goto <bb 15>;

  <bb 14>:
  __assert_fail ("r.Width == FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF * 2 + 1 && r.Height == FONT_ATLAS_DEFAULT_TEX_DATA_H", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1940, &__PRETTY_FUNCTION__);

  <bb 15>:
  y_26 = 0;
  n_27 = 0;

  <bb 16>:
  # y_1 = PHI <y_26(15), y_54(26)>
  # n_2 = PHI <n_27(15), n_3(26)>
  if (y_1 > 26)
    goto <bb 27>;
  else
    goto <bb 17>;

  <bb 17>:
  x_28 = 0;

  <bb 18>:
  # n_3 = PHI <n_2(17), n_53(25)>
  # x_4 = PHI <x_28(17), x_52(25)>
  if (x_4 > 89)
    goto <bb 26>;
  else
    goto <bb 19>;

  <bb 19>:
  _29 = r_17->X;
  _30 = (int) _29;
  _31 = _30 + x_4;
  _32 = r_17->Y;
  _33 = (int) _32;
  _34 = _33 + y_1;
  _35 = _34 * w_21;
  offset0_36 = _31 + _35;
  offset1_37 = offset0_36 + 91;
  _38 = atlas_11(D)->TexPixelsAlpha8;
  _39 = (sizetype) offset0_36;
  _40 = _38 + _39;
  _41 = FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[n_3];
  if (_41 == 46)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  iftmp.705_42 = 255;
  goto <bb 22>;

  <bb 21>:
  iftmp.705_43 = 0;

  <bb 22>:
  # iftmp.705_5 = PHI <iftmp.705_42(20), iftmp.705_43(21)>
  *_40 = iftmp.705_5;
  _45 = atlas_11(D)->TexPixelsAlpha8;
  _46 = (sizetype) offset1_37;
  _47 = _45 + _46;
  _48 = FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[n_3];
  if (_48 == 88)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  iftmp.706_49 = 255;
  goto <bb 25>;

  <bb 24>:
  iftmp.706_50 = 0;

  <bb 25>:
  # iftmp.706_6 = PHI <iftmp.706_49(23), iftmp.706_50(24)>
  *_47 = iftmp.706_6;
  x_52 = x_4 + 1;
  n_53 = n_3 + 1;
  goto <bb 18>;

  <bb 26>:
  y_54 = y_1 + 1;
  goto <bb 16>;

  <bb 27>:
  goto <bb 33>;

  <bb 28>:
  _56 = r_17->Width;
  if (_56 == 2)
    goto <bb 29>;
  else
    goto <bb 31>;

  <bb 29>:
  _57 = r_17->Height;
  if (_57 == 2)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  goto <bb 32>;

  <bb 31>:
  __assert_fail ("r.Width == 2 && r.Height == 2", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1952, &__PRETTY_FUNCTION__);

  <bb 32>:
  _58 = r_17->X;
  _59 = (int) _58;
  _60 = r_17->Y;
  _61 = (int) _60;
  _62 = _61 * w_21;
  offset_63 = _59 + _62;
  _64 = atlas_11(D)->TexPixelsAlpha8;
  _65 = (sizetype) offset_63;
  _66 = _64 + _65;
  _67 = atlas_11(D)->TexPixelsAlpha8;
  _68 = (sizetype) offset_63;
  _69 = _68 + 1;
  _70 = _67 + _69;
  _71 = atlas_11(D)->TexPixelsAlpha8;
  _72 = offset_63 + w_21;
  _73 = (sizetype) _72;
  _74 = _71 + _73;
  _75 = atlas_11(D)->TexPixelsAlpha8;
  _76 = offset_63 + w_21;
  _77 = (sizetype) _76;
  _78 = _77 + 1;
  _79 = _75 + _78;
  *_79 = 255;
  _81 = *_79;
  *_74 = _81;
  _83 = *_74;
  *_70 = _83;
  _85 = *_70;
  *_66 = _85;

  <bb 33>:
  _88 = r_17->Y;
  _89 = (int) _88;
  _90 = (float) _89;
  _91 = _90 + 5.0e-1;
  _92 = atlas_11(D)->TexUvScale.y;
  _93 = _91 * _92;
  _94 = r_17->X;
  _95 = (int) _94;
  _96 = (float) _95;
  _97 = _96 + 5.0e-1;
  _98 = atlas_11(D)->TexUvScale.x;
  _99 = _97 * _98;
  ImVec2::ImVec2 (&D.19174, _99, _93);
  atlas_11(D)->TexUvWhitePixel = D.19174;
  D.19174 ={v} {CLOBBER};
  return;

}



;; Function void ImFontAtlasBuildFinish(ImFontAtlas*) (_Z22ImFontAtlasBuildFinishP11ImFontAtlas, funcdef_no=777, decl_uid=14099, cgraph_uid=676, symbol_order=681)

void ImFontAtlasBuildFinish(ImFontAtlas*) (struct ImFontAtlas * atlas)
{
  int i;
  struct ImVec2 uv1;
  struct ImVec2 uv0;
  const struct CustomRect & r;
  int i;
  static const char __PRETTY_FUNCTION__[42] = "void ImFontAtlasBuildFinish(ImFontAtlas*)";
  struct ImFont * D.30552;
  struct ImFont * & D.30551;
  struct ImVector * D.30550;
  struct ImFont * D.30547;
  struct ImFont * & D.30546;
  struct ImVector * D.30545;
  bool retval.707;
  int D.30542;
  struct ImFont * D.30540;
  int D.30539;
  short unsigned int D.30538;
  unsigned int D.30537;
  float D.30536;
  float D.30535;
  float D.30534;
  float D.30533;
  int D.30532;
  short unsigned int D.30531;
  float D.30530;
  float D.30529;
  float D.30528;
  int D.30527;
  short unsigned int D.30526;
  float D.30525;
  float D.30524;
  float D.30523;
  float D.30522;
  float D.30521;
  float D.30520;
  struct ImFontAtlas * D.30516;
  struct ImFont * D.30515;
  unsigned int D.30514;
  struct ImFont * D.30512;
  struct ImVector * D.30509;
  int D.30507;
  int _11;
  struct ImVector * _12;
  struct ImFont * _15;
  unsigned int _16;
  struct ImFont * _17;
  struct ImFontAtlas * _18;
  float _22;
  float _23;
  float _24;
  float _25;
  float _26;
  float _27;
  short unsigned int _28;
  int _29;
  float _30;
  float _31;
  float _32;
  short unsigned int _33;
  int _34;
  float _35;
  float _36;
  float _37;
  float _38;
  unsigned int _39;
  short unsigned int _40;
  int _41;
  struct ImFont * _42;
  int _53;
  struct ImVector * _54;
  struct ImFont * & _56;
  struct ImFont * _57;
  bool retval.707_58;
  struct ImVector * _59;
  struct ImFont * & _61;
  struct ImFont * _62;

  <bb 2>:
  ImFontAtlasBuildRenderDefaultTexData (atlas_8(D));
  i_10 = 0;

  <bb 3>:
  # i_1 = PHI <i_10(2), i_51(10)>
  _11 = atlas_8(D)->CustomRects.Size;
  if (_11 <= i_1)
    goto <bb 11>;
  else
    goto <bb 4>;

  <bb 4>:
  _12 = &atlas_8(D)->CustomRects;
  r_14 = ImVector<ImFontAtlas::CustomRect>::operator[] (_12, i_1);
  _15 = r_14->Font;
  if (_15 == 0B)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  _16 = r_14->ID;
  if (_16 > 65536)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  uv0 ={v} {CLOBBER};
  uv1 ={v} {CLOBBER};
  goto <bb 10>;

  <bb 7>:
  _17 = r_14->Font;
  _18 = _17->ContainerAtlas;
  if (_18 == atlas_8(D))
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  __assert_fail ("r.Font->ContainerAtlas == atlas", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 1971, &__PRETTY_FUNCTION__);

  <bb 9>:
  ImVec2::ImVec2 (&uv0);
  ImVec2::ImVec2 (&uv1);
  ImFontAtlas::CalcCustomRectUV (atlas_8(D), r_14, &uv0, &uv1);
  _22 = r_14->GlyphAdvanceX;
  _23 = uv1.y;
  _24 = uv1.x;
  _25 = uv0.y;
  _26 = uv0.x;
  _27 = r_14->GlyphOffset.y;
  _28 = r_14->Height;
  _29 = (int) _28;
  _30 = (float) _29;
  _31 = _27 + _30;
  _32 = r_14->GlyphOffset.x;
  _33 = r_14->Width;
  _34 = (int) _33;
  _35 = (float) _34;
  _36 = _32 + _35;
  _37 = r_14->GlyphOffset.y;
  _38 = r_14->GlyphOffset.x;
  _39 = r_14->ID;
  _40 = (short unsigned int) _39;
  _41 = (int) _40;
  _42 = r_14->Font;
  ImFont::AddGlyph (_42, _41, _38, _37, _36, _31, _26, _25, _24, _23, _22);
  uv0 ={v} {CLOBBER};
  uv1 ={v} {CLOBBER};

  <bb 10>:
  i_51 = i_1 + 1;
  goto <bb 3>;

  <bb 11>:
  i_52 = 0;

  <bb 12>:
  # i_2 = PHI <i_52(11), i_64(15)>
  _53 = atlas_8(D)->Fonts.Size;
  if (_53 <= i_2)
    goto <bb 16>;
  else
    goto <bb 13>;

  <bb 13>:
  _54 = &atlas_8(D)->Fonts;
  _56 = ImVector<ImFont*>::operator[] (_54, i_2);
  _57 = *_56;
  retval.707_58 = _57->DirtyLookupTables;
  if (retval.707_58 != 0)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _59 = &atlas_8(D)->Fonts;
  _61 = ImVector<ImFont*>::operator[] (_59, i_2);
  _62 = *_61;
  ImFont::BuildLookupTable (_62);

  <bb 15>:
  i_64 = i_2 + 1;
  goto <bb 12>;

  <bb 16>:
  return;

}



;; Function const ImWchar* ImFontAtlas::GetGlyphRangesDefault() (_ZN11ImFontAtlas21GetGlyphRangesDefaultEv, funcdef_no=778, decl_uid=6290, cgraph_uid=677, symbol_order=683)

const ImWchar* ImFontAtlas::GetGlyphRangesDefault() (struct ImFontAtlas * const this)
{
  static const ImWchar ranges[3] = {32, 255, 0};
  const ImWchar * D.30557;
  const ImWchar * _1;

  <bb 2>:
  _1 = &ranges[0];

<L0>:
  return _1;

}



;; Function const ImWchar* ImFontAtlas::GetGlyphRangesKorean() (_ZN11ImFontAtlas20GetGlyphRangesKoreanEv, funcdef_no=779, decl_uid=6292, cgraph_uid=678, symbol_order=685)

const ImWchar* ImFontAtlas::GetGlyphRangesKorean() (struct ImFontAtlas * const this)
{
  static const ImWchar ranges[7] = {32, 255, 12593, 12643, 44032, 55197, 0};
  const ImWchar * D.30559;
  const ImWchar * _1;

  <bb 2>:
  _1 = &ranges[0];

<L0>:
  return _1;

}



;; Function const ImWchar* ImFontAtlas::GetGlyphRangesChinese() (_ZN11ImFontAtlas21GetGlyphRangesChineseEv, funcdef_no=780, decl_uid=6296, cgraph_uid=679, symbol_order=687)

const ImWchar* ImFontAtlas::GetGlyphRangesChinese() (struct ImFontAtlas * const this)
{
  static const ImWchar ranges[11] = {32, 255, 12288, 12543, 12784, 12799, 65280, 65519, 19968, 40879, 0};
  const ImWchar * D.30561;
  const ImWchar * _1;

  <bb 2>:
  _1 = &ranges[0];

<L0>:
  return _1;

}



;; Function const ImWchar* ImFontAtlas::GetGlyphRangesJapanese() (_ZN11ImFontAtlas22GetGlyphRangesJapaneseEv, funcdef_no=781, decl_uid=6294, cgraph_uid=680, symbol_order=692)

const ImWchar* ImFontAtlas::GetGlyphRangesJapanese() (struct ImFontAtlas * const this)
{
  int n;
  ImWchar * dst;
  int codepoint;
  static ImWchar full_ranges[3901];
  static bool full_ranges_unpacked = 0;
  static ImWchar base_ranges[8] = {32, 255, 12288, 12543, 12784, 12799, 65280, 65519};
  static const short int offsets_from_0x4E00[1946] = {-1, 0, 1, 3, 0, 0, 0, 0, 1, 0, 5, 1, 1, 0, 7, 4, 6, 10, 0, 1, 9, 9, 7, 1, 3, 19, 1, 10, 7, 1, 0, 1, 0, 5, 1, 0, 6, 4, 2, 6, 0, 0, 12, 6, 8, 0, 3, 5, 0, 1, 0, 9, 0, 0, 8, 1, 1, 3, 4, 5, 13, 0, 0, 8, 2, 17, 4, 3, 1, 1, 9, 6, 0, 0, 0, 2, 1, 3, 2, 22, 1, 9, 11, 1, 13, 1, 3, 12, 0, 5, 9, 2, 0, 6, 12, 5, 3, 12, 4, 1, 2, 16, 1, 1, 4, 6, 5, 3, 0, 6, 13, 15, 5, 12, 8, 14, 0, 0, 6, 15, 3, 6, 0, 18, 8, 1, 6, 14, 1, 5, 4, 12, 24, 3, 13, 12, 10, 24, 0, 0, 0, 1, 0, 1, 1, 2, 9, 10, 2, 2, 0, 0, 3, 3, 1, 0, 3, 8, 0, 3, 2, 4, 4, 1, 6, 11, 10, 14, 6, 15, 3, 4, 15, 1, 0, 0, 5, 2, 2, 0, 0, 1, 6, 5, 5, 6, 0, 3, 6, 5, 0, 0, 1, 0, 11, 2, 2, 8, 4, 7, 0, 10, 0, 1, 2, 17, 19, 3, 0, 2, 5, 0, 6, 2, 4, 4, 6, 1, 1, 11, 2, 0, 3, 1, 2, 1, 2, 10, 7, 6, 3, 16, 0, 8, 24, 0, 0, 3, 1, 1, 3, 0, 1, 6, 0, 0, 0, 2, 0, 1, 5, 15, 0, 1, 0, 0, 2, 11, 19, 1, 4, 19, 7, 6, 5, 1, 0, 0, 0, 0, 5, 1, 0, 1, 9, 0, 0, 5, 0, 2, 0, 1, 0, 3, 0, 11, 3, 0, 2, 0, 0, 0, 0, 0, 9, 3, 6, 4, 12, 0, 14, 0, 0, 29, 10, 8, 0, 14, 37, 13, 0, 31, 16, 19, 0, 8, 30, 1, 20, 8, 3, 48, 21, 1, 0, 12, 0, 10, 44, 34, 42, 54, 11, 18, 82, 0, 2, 1, 2, 12, 1, 0, 6, 2, 17, 2, 12, 7, 0, 7, 17, 4, 2, 6, 24, 23, 8, 23, 39, 2, 16, 23, 1, 0, 5, 1, 2, 15, 14, 5, 6, 2, 11, 0, 8, 6, 2, 2, 2, 14, 20, 4, 15, 3, 4, 11, 10, 10, 2, 5, 2, 1, 30, 2, 1, 0, 0, 22, 5, 5, 0, 3, 1, 5, 4, 1, 0, 0, 2, 2, 21, 1, 5, 1, 2, 16, 2, 1, 3, 4, 0, 8, 4, 0, 0, 5, 14, 11, 2, 16, 1, 13, 1, 7, 0, 22, 15, 3, 1, 22, 7, 14, 22, 19, 11, 24, 18, 46, 10, 20, 64, 45, 3, 2, 0, 4, 5, 0, 1, 4, 25, 1, 0, 0, 2, 10, 0, 0, 0, 1, 0, 1, 2, 0, 0, 9, 1, 2, 0, 0, 0, 2, 5, 2, 1, 1, 5, 5, 8, 1, 1, 1, 5, 1, 4, 9, 1, 3, 0, 1, 0, 1, 1, 2, 0, 0, 2, 0, 1, 8, 22, 8, 1, 0, 0, 0, 0, 4, 2, 1, 0, 9, 8, 5, 0, 9, 1, 30, 24, 2, 6, 4, 39, 0, 14, 5, 16, 6, 26, 179, 0, 2, 1, 1, 0, 0, 0, 5, 2, 9, 6, 0, 2, 5, 16, 7, 5, 1, 1, 0, 2, 4, 4, 7, 15, 13, 14, 0, 0, 3, 0, 1, 0, 0, 0, 2, 1, 6, 4, 5, 1, 4, 9, 0, 3, 1, 8, 0, 0, 10, 5, 0, 43, 0, 2, 6, 8, 4, 0, 2, 0, 0, 9, 6, 0, 9, 3, 1, 6, 20, 14, 6, 1, 4, 0, 7, 2, 3, 0, 2, 0, 5, 0, 3, 1, 0, 3, 9, 7, 0, 3, 4, 0, 4, 9, 1, 6, 0, 9, 0, 0, 2, 3, 10, 9, 28, 3, 6, 2, 4, 1, 2, 32, 4, 1, 18, 2, 0, 3, 1, 5, 30, 10, 0, 2, 2, 2, 0, 7, 9, 8, 11, 10, 11, 7, 2, 13, 7, 5, 10, 0, 3, 40, 2, 0, 1, 6, 12, 0, 4, 5, 1, 5, 11, 11, 21, 4, 8, 3, 7, 8, 8, 33, 5, 23, 0, 0, 19, 8, 8, 2, 3, 0, 6, 1, 1, 1, 5, 1, 27, 4, 2, 5, 0, 3, 5, 6, 3, 1, 0, 3, 1, 12, 5, 3, 3, 2, 0, 7, 7, 2, 1, 0, 4, 0, 1, 1, 2, 0, 10, 10, 6, 2, 5, 9, 7, 5, 15, 15, 21, 6, 11, 5, 20, 4, 3, 5, 5, 2, 5, 0, 2, 1, 0, 1, 7, 28, 0, 9, 0, 5, 12, 5, 5, 18, 30, 0, 12, 3, 3, 21, 16, 25, 32, 9, 3, 14, 11, 24, 5, 66, 9, 1, 2, 0, 5, 9, 1, 5, 1, 8, 0, 8, 3, 3, 0, 1, 15, 1, 4, 8, 1, 2, 7, 0, 7, 2, 8, 3, 7, 5, 3, 7, 10, 2, 1, 0, 0, 2, 25, 0, 6, 4, 0, 10, 0, 4, 2, 4, 1, 12, 5, 38, 4, 0, 4, 1, 10, 5, 9, 4, 0, 14, 4, 2, 5, 18, 20, 21, 1, 3, 0, 5, 0, 7, 0, 3, 7, 1, 3, 1, 1, 8, 1, 0, 0, 0, 3, 2, 5, 2, 11, 6, 0, 13, 1, 3, 9, 1, 12, 0, 16, 6, 2, 1, 0, 2, 1, 12, 6, 13, 11, 2, 0, 28, 1, 7, 8, 14, 13, 8, 13, 0, 2, 0, 5, 4, 8, 10, 2, 37, 42, 19, 6, 6, 7, 4, 14, 11, 18, 14, 80, 7, 6, 0, 4, 72, 12, 36, 27, 7, 7, 0, 14, 17, 19, 164, 27, 0, 5, 10, 7, 3, 13, 6, 14, 0, 2, 2, 5, 3, 0, 6, 13, 0, 0, 10, 29, 0, 4, 0, 3, 13, 0, 3, 1, 6, 51, 1, 5, 28, 2, 0, 8, 0, 20, 2, 4, 0, 25, 2, 10, 13, 10, 0, 16, 4, 0, 1, 0, 2, 1, 7, 0, 1, 8, 11, 0, 0, 1, 2, 7, 2, 23, 11, 6, 6, 4, 16, 2, 2, 2, 0, 22, 9, 3, 3, 5, 2, 0, 15, 16, 21, 2, 9, 20, 15, 15, 5, 3, 9, 1, 0, 0, 1, 7, 7, 5, 4, 2, 2, 2, 38, 24, 14, 0, 0, 15, 5, 6, 24, 14, 5, 5, 11, 0, 21, 12, 0, 3, 8, 4, 11, 1, 8, 0, 11, 27, 7, 2, 4, 9, 21, 59, 0, 1, 39, 3, 60, 62, 3, 0, 12, 11, 0, 3, 30, 11, 0, 13, 88, 4, 15, 5, 28, 13, 1, 4, 48, 17, 17, 4, 28, 32, 46, 0, 16, 0, 18, 11, 1, 8, 6, 38, 11, 2, 6, 11, 38, 2, 0, 45, 3, 11, 2, 7, 8, 4, 30, 14, 17, 2, 1, 1, 65, 18, 12, 16, 4, 2, 45, 123, 12, 56, 33, 1, 4, 3, 4, 7, 0, 0, 0, 3, 2, 0, 16, 4, 2, 4, 2, 0, 7, 4, 5, 2, 26, 2, 25, 6, 11, 6, 1, 16, 2, 6, 17, 77, 15, 3, 35, 0, 1, 0, 5, 1, 0, 38, 16, 6, 3, 12, 3, 3, 3, 0, 9, 3, 1, 3, 5, 2, 9, 0, 18, 0, 25, 1, 3, 32, 1, 72, 46, 6, 2, 7, 1, 3, 14, 17, 0, 28, 1, 40, 13, 0, 20, 15, 40, 6, 38, 24, 12, 43, 1, 1, 9, 0, 12, 6, 0, 6, 2, 4, 19, 3, 7, 1, 48, 0, 9, 5, 0, 5, 6, 9, 6, 10, 15, 2, 11, 19, 3, 9, 2, 0, 1, 10, 1, 27, 8, 1, 3, 6, 1, 14, 0, 26, 0, 27, 16, 3, 4, 9, 6, 2, 23, 9, 10, 5, 25, 2, 1, 6, 1, 1, 48, 15, 9, 15, 14, 3, 4, 26, 60, 29, 13, 37, 21, 1, 6, 4, 0, 2, 11, 22, 23, 16, 16, 2, 2, 1, 3, 0, 5, 1, 6, 4, 0, 0, 4, 0, 0, 8, 3, 0, 2, 5, 0, 7, 1, 7, 3, 13, 2, 4, 10, 3, 0, 2, 31, 0, 18, 3, 0, 12, 10, 4, 1, 0, 7, 5, 7, 0, 5, 4, 12, 2, 22, 10, 4, 2, 15, 2, 8, 9, 0, 23, 2, 197, 51, 3, 1, 1, 4, 13, 4, 3, 21, 4, 19, 3, 10, 5, 40, 0, 4, 1, 1, 10, 4, 1, 27, 34, 7, 21, 2, 17, 2, 9, 6, 4, 2, 3, 0, 4, 2, 7, 8, 2, 5, 1, 15, 21, 3, 4, 4, 2, 2, 17, 22, 1, 5, 22, 4, 26, 7, 0, 32, 1, 11, 42, 15, 4, 1, 2, 5, 0, 19, 3, 1, 8, 6, 0, 10, 1, 9, 2, 13, 30, 8, 2, 24, 17, 19, 1, 4, 4, 25, 13, 0, 10, 16, 11, 39, 18, 8, 5, 30, 82, 1, 6, 8, 18, 77, 11, 13, 20, 75, 11, 112, 78, 33, 3, 0, 0, 60, 17, 84, 9, 1, 1, 12, 30, 10, 49, 5, 32, 158, 178, 5, 5, 6, 3, 3, 1, 3, 1, 4, 7, 6, 19, 31, 21, 0, 2, 9, 5, 6, 27, 4, 9, 8, 1, 76, 18, 12, 1, 4, 0, 3, 3, 6, 3, 12, 2, 8, 30, 16, 2, 25, 1, 5, 5, 4, 3, 0, 6, 10, 2, 3, 1, 0, 5, 1, 19, 3, 0, 8, 1, 5, 2, 6, 0, 0, 0, 19, 1, 2, 0, 5, 1, 2, 5, 1, 3, 7, 0, 4, 12, 7, 3, 10, 22, 0, 9, 5, 1, 0, 2, 20, 1, 1, 3, 23, 30, 3, 9, 9, 1, 4, 191, 14, 3, 15, 6, 8, 50, 0, 1, 0, 0, 4, 0, 0, 1, 0, 2, 4, 2, 0, 2, 3, 0, 2, 0, 2, 2, 8, 7, 0, 1, 1, 1, 3, 3, 17, 11, 91, 1, 9, 3, 2, 13, 4, 24, 15, 41, 3, 13, 3, 1, 20, 4, 125, 29, 30, 1, 0, 4, 12, 2, 21, 4, 5, 5, 19, 11, 0, 13, 11, 86, 2, 18, 0, 7, 1, 8, 8, 2, 2, 22, 1, 2, 6, 5, 2, 0, 1, 2, 8, 0, 2, 0, 5, 2, 1, 0, 2, 10, 2, 0, 5, 9, 2, 1, 2, 0, 1, 0, 4, 0, 0, 10, 2, 5, 3, 0, 6, 1, 0, 1, 4, 4, 33, 3, 13, 17, 3, 18, 6, 4, 7, 1, 5, 78, 0, 4, 1, 13, 7, 1, 8, 1, 0, 35, 27, 15, 3, 0, 0, 0, 1, 11, 5, 41, 38, 15, 22, 6, 14, 14, 2, 1, 11, 6, 20, 63, 5, 8, 27, 7, 11, 2, 2, 40, 58, 23, 50, 54, 56, 293, 8, 8, 1, 5, 1, 14, 0, 1, 12, 37, 89, 8, 8, 8, 2, 10, 6, 0, 0, 0, 4, 5, 2, 1, 0, 1, 1, 2, 7, 0, 3, 3, 0, 4, 6, 0, 3, 2, 19, 3, 8, 0, 0, 0, 4, 4, 16, 0, 4, 1, 5, 1, 3, 0, 3, 4, 6, 2, 17, 10, 10, 31, 6, 4, 3, 6, 10, 126, 7, 3, 2, 2, 0, 9, 0, 0, 5, 20, 13, 0, 15, 0, 6, 0, 2, 5, 8, 64, 50, 3, 2, 12, 2, 9, 0, 0, 11, 8, 20, 109, 2, 18, 23, 0, 0, 9, 61, 3, 0, 28, 41, 77, 27, 19, 17, 81, 5, 2, 14, 5, 83, 57, 252, 14, 154, 263, 14, 20, 8, 13, 6, 57, 39, 38};
  const ImWchar * D.30577;
  short unsigned int D.30575;
  short unsigned int D.30574;
  int D.30573;
  int D.30572;
  short int D.30571;
  ImWchar * D.30570;
  __int128 unsigned D.30567;
  bool D.30564;
  bool full_ranges_unpacked.708;
  bool full_ranges_unpacked.708_7;
  bool _8;
  __int128 unsigned _10;
  ImWchar * _14;
  short int _15;
  int _16;
  int _17;
  short unsigned int _19;
  short unsigned int _21;
  const ImWchar * _27;

  <bb 2>:
  full_ranges_unpacked.708_7 = full_ranges_unpacked;
  _8 = ~full_ranges_unpacked.708_7;
  if (_8 != 0)
    goto <bb 3>;
  else
    goto <bb 7>;

  <bb 3>:
  codepoint_9 = 19968;
  _10 = MEM[(char * {ref-all})&base_ranges];
  MEM[(char * {ref-all})&full_ranges] = _10;
  dst_12 = &full_ranges + 16;
  n_13 = 0;

  <bb 4>:
  # codepoint_1 = PHI <codepoint_9(3), codepoint_18(5)>
  # dst_2 = PHI <dst_12(3), dst_24(5)>
  # n_3 = PHI <n_13(3), n_23(5)>
  if (n_3 > 1945)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  _14 = dst_2 + 2;
  _15 = offsets_from_0x4E00[n_3];
  _16 = (int) _15;
  _17 = _16 + 1;
  codepoint_18 = _17 + codepoint_1;
  _19 = (short unsigned int) codepoint_18;
  *_14 = _19;
  _21 = *_14;
  *dst_2 = _21;
  n_23 = n_3 + 1;
  dst_24 = dst_2 + 4;
  goto <bb 4>;

  <bb 6>:
  *dst_2 = 0;
  full_ranges_unpacked = 1;

  <bb 7>:
  _27 = &full_ranges[0];

<L6>:
  return _27;

}



;; Function const ImWchar* ImFontAtlas::GetGlyphRangesCyrillic() (_ZN11ImFontAtlas22GetGlyphRangesCyrillicEv, funcdef_no=782, decl_uid=6298, cgraph_uid=681, symbol_order=694)

const ImWchar* ImFontAtlas::GetGlyphRangesCyrillic() (struct ImFontAtlas * const this)
{
  static const ImWchar ranges[9] = {32, 255, 1024, 1327, 11744, 11775, 42560, 42655, 0};
  const ImWchar * D.30579;
  const ImWchar * _1;

  <bb 2>:
  _1 = &ranges[0];

<L0>:
  return _1;

}



;; Function const ImWchar* ImFontAtlas::GetGlyphRangesThai() (_ZN11ImFontAtlas18GetGlyphRangesThaiEv, funcdef_no=783, decl_uid=6300, cgraph_uid=682, symbol_order=696)

const ImWchar* ImFontAtlas::GetGlyphRangesThai() (struct ImFontAtlas * const this)
{
  static const ImWchar ranges[7] = {32, 255, 8208, 8286, 3584, 3711, 0};
  const ImWchar * D.30581;
  const ImWchar * _1;

  <bb 2>:
  _1 = &ranges[0];

<L0>:
  return _1;

}



;; Function void ImFontAtlas::GlyphRangesBuilder::AddText(const char*, const char*) (_ZN11ImFontAtlas18GlyphRangesBuilder7AddTextEPKcS2_, funcdef_no=784, decl_uid=6420, cgraph_uid=683, symbol_order=697)

void ImFontAtlas::GlyphRangesBuilder::AddText(const char*, const char*) (struct GlyphRangesBuilder * const this, const char * text, const char * text_end)
{
  int D.30600;
  int c_len;
  unsigned int c;
  int D.30598;
  short unsigned int D.30597;
  unsigned int c.711;
  unsigned int c.710;
  sizetype D.30590;
  char D.30588;
  bool iftmp.709;
  bool iftmp.709_2;
  bool iftmp.709_10;
  char _11;
  bool iftmp.709_12;
  int _15;
  sizetype _17;
  unsigned int c.710_19;
  unsigned int c.711_20;
  short unsigned int _21;
  int _22;

  <bb 2>:
  # text_1 = PHI <text_7(D)(0), text_18(10)>
  if (text_end_9(D) != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  iftmp.709_10 = text_1 < text_end_9(D);
  goto <bb 5>;

  <bb 4>:
  _11 = *text_1;
  iftmp.709_12 = _11 != 0;

  <bb 5>:
  # iftmp.709_2 = PHI <iftmp.709_10(3), iftmp.709_12(4)>
  if (iftmp.709_2 != 0)
    goto <bb 6>;
  else
    goto <bb 11>;

  <bb 6>:
  c = 0;
  _15 = ImTextCharFromUtf8 (&c, text_1, text_end_9(D));
  c_len_16 = _15;
  _17 = (sizetype) c_len_16;
  text_18 = text_1 + _17;
  if (c_len_16 == 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  c ={v} {CLOBBER};
  goto <bb 11>;

  <bb 8>:
  c.710_19 = c;
  if (c.710_19 <= 65535)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  c.711_20 = c;
  _21 = (short unsigned int) c.711_20;
  _22 = (int) _21;
  ImFontAtlas::GlyphRangesBuilder::AddChar (this_23(D), _22);

  <bb 10>:
  c ={v} {CLOBBER};
  goto <bb 2>;

  <bb 11>:
  return;

}



;; Function void ImFontAtlas::GlyphRangesBuilder::AddRanges(const ImWchar*) (_ZN11ImFontAtlas18GlyphRangesBuilder9AddRangesEPKt, funcdef_no=785, decl_uid=6423, cgraph_uid=684, symbol_order=698)

void ImFontAtlas::GlyphRangesBuilder::AddRanges(const ImWchar*) (struct GlyphRangesBuilder * const this, const ImWchar * ranges)
{
  ImWchar c;
  short unsigned int c.712;
  int D.30632;
  int D.30630;
  short unsigned int D.30629;
  const ImWchar * D.30628;
  int D.30627;
  short unsigned int D.30624;
  short unsigned int _7;
  int _9;
  const ImWchar * _10;
  short unsigned int _11;
  int _12;
  int _13;
  short unsigned int c.712_16;

  <bb 2>:
  # ranges_1 = PHI <ranges_5(D)(0), ranges_18(6)>
  _7 = *ranges_1;
  if (_7 == 0)
    goto <bb 7>;
  else
    goto <bb 3>;

  <bb 3>:
  c_8 = *ranges_1;

  <bb 4>:
  # c_2 = PHI <c_8(3), c_17(5)>
  _9 = (int) c_2;
  _10 = ranges_1 + 2;
  _11 = *_10;
  _12 = (int) _11;
  if (_9 > _12)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  _13 = (int) c_2;
  ImFontAtlas::GlyphRangesBuilder::AddChar (this_14(D), _13);
  c.712_16 = c_2;
  c_17 = c.712_16 + 1;
  goto <bb 4>;

  <bb 6>:
  ranges_18 = ranges_1 + 4;
  goto <bb 2>;

  <bb 7>:
  return;

}



;; Function void ImFontAtlas::GlyphRangesBuilder::BuildRanges(ImVector<short unsigned int>*) (_ZN11ImFontAtlas18GlyphRangesBuilder11BuildRangesEP8ImVectorItE, funcdef_no=786, decl_uid=6426, cgraph_uid=685, symbol_order=699)

void ImFontAtlas::GlyphRangesBuilder::BuildRanges(ImVector<short unsigned int>*) (struct GlyphRangesBuilder * const this, struct ImVector * out_ranges)
{
  bool D.30654;
  bool D.30652;
  int n;
  const value_type D.19249;
  short unsigned int D.30650;
  const value_type D.19248;
  bool D.30647;
  int D.30646;
  bool iftmp.715;
  bool retval.714;
  short unsigned int D.30639;
  const value_type D.19247;
  bool retval.713;
  bool iftmp.715_4;
  bool _14;
  bool retval.713_15;
  short unsigned int _16;
  int _21;
  bool _23;
  bool _24;
  bool iftmp.715_25;
  bool iftmp.715_26;
  bool retval.714_27;
  short unsigned int _29;

  <bb 2>:
  n_10 = 0;

  <bb 3>:
  # n_1 = PHI <n_10(2), n_35(13)>
  if (n_1 > 65535)
    goto <bb 14>;
  else
    goto <bb 4>;

  <bb 4>:
  _14 = ImFontAtlas::GlyphRangesBuilder::GetBit (this_12(D), n_1);
  retval.713_15 = _14;
  if (retval.713_15 != 0)
    goto <bb 5>;
  else
    goto <bb 13>;

  <bb 5>:
  _16 = (short unsigned int) n_1;
  D.19247 = _16;
  ImVector<short unsigned int>::push_back (out_ranges_18(D), &D.19247);
  D.19247 ={v} {CLOBBER};

  <bb 6>:
  # n_2 = PHI <n_1(5), n_28(11)>
  if (n_2 <= 65535)
    goto <bb 7>;
  else
    goto <bb 9>;

  <bb 7>:
  _21 = n_2 + 1;
  _23 = ImFontAtlas::GlyphRangesBuilder::GetBit (this_12(D), _21);
  _24 = _23;
  if (_24 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  iftmp.715_25 = 1;
  goto <bb 10>;

  <bb 9>:
  iftmp.715_26 = 0;

  <bb 10>:
  # iftmp.715_4 = PHI <iftmp.715_25(8), iftmp.715_26(9)>
  retval.714_27 = iftmp.715_4;
  if (retval.714_27 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  n_28 = n_2 + 1;
  goto <bb 6>;

  <bb 12>:
  _29 = (short unsigned int) n_2;
  D.19248 = _29;
  ImVector<short unsigned int>::push_back (out_ranges_18(D), &D.19248);
  D.19248 ={v} {CLOBBER};

  <bb 13>:
  # n_3 = PHI <n_1(4), n_2(12)>
  n_35 = n_3 + 1;
  goto <bb 3>;

  <bb 14>:
  D.19249 = 0;
  ImVector<short unsigned int>::push_back (out_ranges_18(D), &D.19249);
  D.19249 ={v} {CLOBBER};
  return;

}



;; Function ImFont::ImFont() (_ZN6ImFontC2Ev, funcdef_no=788, decl_uid=7147, cgraph_uid=687, symbol_order=701)

Merging blocks 4 and 5
Merging blocks 4 and 6
ImFont::ImFont() (struct ImFont * const this)
{
  void * D.32773;
  struct ImVector * D.30689;
  struct ImVector * D.30688;
  struct ImVector * D.30687;
  struct ImVec2 D.19259;
  struct ImVector * D.30686;
  struct ImVector * D.30685;
  struct ImVector * D.30684;
  struct ImVec2 * D.30683;
  struct ImVec2 * _4;
  struct ImVector * _6;
  struct ImVector * _8;
  struct ImVector * _10;
  struct ImVector * _18;
  struct ImVector * _20;
  struct ImVector * _22;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  _4 = &this_2(D)->DisplayOffset;
  ImVec2::ImVec2 (_4);
  _6 = &this_2(D)->Glyphs;
  ImVector<ImFontGlyph>::ImVector (_6);
  _8 = &this_2(D)->IndexAdvanceX;
  ImVector<float>::ImVector (_8);
  _10 = &this_2(D)->IndexLookup;
  ImVector<short unsigned int>::ImVector (_10);
  this_2(D)->Scale = 1.0e+0;
  this_2(D)->FallbackChar = 63;
  ImVec2::ImVec2 (&D.19259, 0.0, 0.0);
  this_2(D)->DisplayOffset = D.19259;
  D.19259 ={v} {CLOBBER};
  ImFont::ClearOutputData (this_2(D));

  <bb 3>:
  return;

<L0>:
  _18 = &this_2(D)->IndexLookup;
  ImVector<short unsigned int>::~ImVector (_18);
  __builtin_eh_copy_values (2, 3);
  _20 = &this_2(D)->IndexAdvanceX;
  ImVector<float>::~ImVector (_20);
  __builtin_eh_copy_values (1, 2);
  _22 = &this_2(D)->Glyphs;
  ImVector<ImFontGlyph>::~ImVector (_22);
  _24 = __builtin_eh_pointer (1);
  __builtin_unwind_resume (_24);

}



;; Function ImFont::~ImFont() (_ZN6ImFontD2Ev, funcdef_no=791, decl_uid=7152, cgraph_uid=690, symbol_order=704)

ImFont::~ImFont() (struct ImFont * const this)
{
  struct ImVector * D.30707;
  struct ImVector * D.30706;
  struct ImVector * D.30705;
  struct ImVector * _4;
  struct ImVector * _6;
  struct ImVector * _8;

  <bb 2>:
  ImFont::ClearOutputData (this_2(D));
  _4 = &this_2(D)->IndexLookup;
  ImVector<short unsigned int>::~ImVector (_4);
  _6 = &this_2(D)->IndexAdvanceX;
  ImVector<float>::~ImVector (_6);
  _8 = &this_2(D)->Glyphs;
  ImVector<ImFontGlyph>::~ImVector (_8);
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function void ImFont::ClearOutputData() (_ZN6ImFont15ClearOutputDataEv, funcdef_no=793, decl_uid=7072, cgraph_uid=692, symbol_order=706)

void ImFont::ClearOutputData() (struct ImFont * const this)
{
  float D.30711;
  struct ImVector * D.30710;
  struct ImVector * D.30709;
  struct ImVector * D.30708;
  struct ImVector * _4;
  struct ImVector * _6;
  struct ImVector * _8;
  float _16;

  <bb 2>:
  this_2(D)->FontSize = 0.0;
  _4 = &this_2(D)->Glyphs;
  ImVector<ImFontGlyph>::clear (_4);
  _6 = &this_2(D)->IndexAdvanceX;
  ImVector<float>::clear (_6);
  _8 = &this_2(D)->IndexLookup;
  ImVector<short unsigned int>::clear (_8);
  this_2(D)->FallbackGlyph = 0B;
  this_2(D)->FallbackAdvanceX = 0.0;
  this_2(D)->ConfigDataCount = 0;
  this_2(D)->ConfigData = 0B;
  this_2(D)->ContainerAtlas = 0B;
  this_2(D)->Descent = 0.0;
  _16 = this_2(D)->Descent;
  this_2(D)->Ascent = _16;
  this_2(D)->DirtyLookupTables = 1;
  this_2(D)->MetricsTotalSurface = 0;
  return;

}



;; Function void ImFont::BuildLookupTable() (_ZN6ImFont16BuildLookupTableEv, funcdef_no=794, decl_uid=7074, cgraph_uid=693, symbol_order=707)

void ImFont::BuildLookupTable() (struct ImFont * const this)
{
  const struct ImFontGlyph * D.30807;
  const struct ImFontGlyph * D.30806;
  const struct ImFontGlyph * D.30805;
  int i;
  struct ImFontGlyph & tab_glyph;
  int codepoint;
  int i;
  int i;
  static const char __PRETTY_FUNCTION__[32] = "void ImFont::BuildLookupTable()";
  int max_codepoint;
  float D.30803;
  value_type & D.30802;
  struct ImVector * D.30801;
  float D.30798;
  value_type & D.30797;
  struct ImVector * D.30796;
  bool retval.719;
  int D.30793;
  const struct ImFontGlyph * D.30790;
  const struct ImFontGlyph * D.30787;
  float iftmp.718;
  const struct ImFontGlyph * D.30785;
  int D.30784;
  short unsigned int D.30783;
  short unsigned int D.30781;
  short unsigned int D.30780;
  int D.30779;
  value_type & D.30778;
  struct ImVector * D.30777;
  int D.30776;
  short unsigned int D.30775;
  float D.30774;
  value_type & D.30773;
  struct ImVector * D.30772;
  int D.30771;
  short unsigned int D.30770;
  float D.30769;
  float D.30768;
  const struct ImFontGlyph * D.30767;
  struct ImVector * D.30766;
  struct ImVector * D.30764;
  int D.30763;
  int D.30762;
  short unsigned int D.30759;
  struct value_type & D.30758;
  struct ImVector * D.30757;
  bool retval.717;
  const struct ImFontGlyph * D.30753;
  bool retval.716;
  short unsigned int D.30751;
  value_type & D.30750;
  struct ImVector * D.30749;
  float D.30748;
  struct value_type & D.30747;
  struct ImVector * D.30746;
  value_type & D.30745;
  struct ImVector * D.30744;
  short unsigned int D.30743;
  struct value_type & D.30742;
  struct ImVector * D.30741;
  int D.30739;
  int D.30737;
  struct ImVector * D.30736;
  struct ImVector * D.30735;
  int D.30731;
  int D.30730;
  short unsigned int D.30729;
  struct value_type & D.30728;
  struct ImVector * D.30727;
  int D.30725;
  float iftmp.718_5;
  int _16;
  struct ImVector * _17;
  struct value_type & _19;
  short unsigned int _20;
  int _21;
  int _25;
  struct ImVector * _26;
  struct ImVector * _28;
  int _31;
  int _34;
  struct ImVector * _35;
  struct value_type & _37;
  short unsigned int _38;
  struct ImVector * _40;
  value_type & _42;
  struct ImVector * _43;
  struct value_type & _45;
  float _46;
  struct ImVector * _48;
  value_type & _50;
  short unsigned int _51;
  const struct ImFontGlyph * _55;
  const struct ImFontGlyph * _56;
  bool retval.716_57;
  struct ImVector * _58;
  struct value_type & _60;
  short unsigned int _61;
  bool retval.717_62;
  int _63;
  int _64;
  struct ImVector * _65;
  struct ImVector * _67;
  const struct ImFontGlyph * _71;
  const struct ImFontGlyph * _72;
  float _75;
  float _76;
  short unsigned int _78;
  int _79;
  struct ImVector * _80;
  value_type & _82;
  float _83;
  short unsigned int _85;
  int _86;
  struct ImVector * _87;
  value_type & _89;
  int _90;
  short unsigned int _91;
  short unsigned int _92;
  short unsigned int _94;
  int _95;
  const struct ImFontGlyph * _97;
  const struct ImFontGlyph * _98;
  const struct ImFontGlyph * _100;
  const struct ImFontGlyph * _101;
  float iftmp.718_102;
  float iftmp.718_103;
  int _106;
  struct ImVector * _107;
  value_type & _109;
  float _110;
  bool retval.719_111;
  struct ImVector * _112;
  value_type & _114;
  float _115;

  <bb 2>:
  max_codepoint_12 = 0;
  i_13 = 0;

  <bb 3>:
  # max_codepoint_1 = PHI <max_codepoint_12(2), max_codepoint_23(4)>
  # i_2 = PHI <i_13(2), i_24(4)>
  _16 = this_15(D)->Glyphs.Size;
  if (_16 == i_2)
    goto <bb 5>;
  else
    goto <bb 4>;

  <bb 4>:
  _17 = &this_15(D)->Glyphs;
  _19 = ImVector<ImFontGlyph>::operator[] (_17, i_2);
  _20 = _19->Codepoint;
  _21 = (int) _20;
  max_codepoint_23 = ImMax (max_codepoint_1, _21);
  i_24 = i_2 + 1;
  goto <bb 3>;

  <bb 5>:
  _25 = this_15(D)->Glyphs.Size;
  if (_25 <= 65534)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  __assert_fail ("Glyphs.Size < 0xFFFF", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 2195, &__PRETTY_FUNCTION__);

  <bb 7>:
  _26 = &this_15(D)->IndexAdvanceX;
  ImVector<float>::clear (_26);
  _28 = &this_15(D)->IndexLookup;
  ImVector<short unsigned int>::clear (_28);
  this_15(D)->DirtyLookupTables = 0;
  _31 = max_codepoint_1 + 1;
  ImFont::GrowIndex (this_15(D), _31);
  i_33 = 0;

  <bb 8>:
  # i_3 = PHI <i_33(7), i_53(9)>
  _34 = this_15(D)->Glyphs.Size;
  if (_34 <= i_3)
    goto <bb 10>;
  else
    goto <bb 9>;

  <bb 9>:
  _35 = &this_15(D)->Glyphs;
  _37 = ImVector<ImFontGlyph>::operator[] (_35, i_3);
  _38 = _37->Codepoint;
  codepoint_39 = (int) _38;
  _40 = &this_15(D)->IndexAdvanceX;
  _42 = ImVector<float>::operator[] (_40, codepoint_39);
  _43 = &this_15(D)->Glyphs;
  _45 = ImVector<ImFontGlyph>::operator[] (_43, i_3);
  _46 = _45->AdvanceX;
  *_42 = _46;
  _48 = &this_15(D)->IndexLookup;
  _50 = ImVector<short unsigned int>::operator[] (_48, codepoint_39);
  _51 = (short unsigned int) i_3;
  *_50 = _51;
  i_53 = i_3 + 1;
  goto <bb 8>;

  <bb 10>:
  _55 = ImFont::FindGlyph (this_15(D), 32);
  _56 = _55;
  retval.716_57 = _56 != 0B;
  if (retval.716_57 != 0)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 11>:
  _58 = &this_15(D)->Glyphs;
  _60 = ImVector<ImFontGlyph>::back (_58);
  _61 = _60->Codepoint;
  retval.717_62 = _61 != 9;
  if (retval.717_62 != 0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _63 = this_15(D)->Glyphs.Size;
  _64 = _63 + 1;
  _65 = &this_15(D)->Glyphs;
  ImVector<ImFontGlyph>::resize (_65, _64);

  <bb 13>:
  _67 = &this_15(D)->Glyphs;
  tab_glyph_69 = ImVector<ImFontGlyph>::back (_67);
  _71 = ImFont::FindGlyph (this_15(D), 32);
  _72 = _71;
  *tab_glyph_69 = *_72;
  tab_glyph_69->Codepoint = 9;
  _75 = tab_glyph_69->AdvanceX;
  _76 = _75 * 4.0e+0;
  tab_glyph_69->AdvanceX = _76;
  _78 = tab_glyph_69->Codepoint;
  _79 = (int) _78;
  _80 = &this_15(D)->IndexAdvanceX;
  _82 = ImVector<float>::operator[] (_80, _79);
  _83 = tab_glyph_69->AdvanceX;
  *_82 = _83;
  _85 = tab_glyph_69->Codepoint;
  _86 = (int) _85;
  _87 = &this_15(D)->IndexLookup;
  _89 = ImVector<short unsigned int>::operator[] (_87, _86);
  _90 = this_15(D)->Glyphs.Size;
  _91 = (short unsigned int) _90;
  _92 = _91 + 65535;
  *_89 = _92;

  <bb 14>:
  _94 = this_15(D)->FallbackChar;
  _95 = (int) _94;
  _97 = ImFont::FindGlyphNoFallback (this_15(D), _95);
  _98 = _97;
  this_15(D)->FallbackGlyph = _98;
  _100 = this_15(D)->FallbackGlyph;
  if (_100 != 0B)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _101 = this_15(D)->FallbackGlyph;
  iftmp.718_102 = _101->AdvanceX;
  goto <bb 17>;

  <bb 16>:
  iftmp.718_103 = 0.0;

  <bb 17>:
  # iftmp.718_5 = PHI <iftmp.718_102(15), iftmp.718_103(16)>
  this_15(D)->FallbackAdvanceX = iftmp.718_5;
  i_105 = 0;

  <bb 18>:
  # i_4 = PHI <i_105(17), i_117(21)>
  _106 = max_codepoint_1 + 1;
  if (_106 <= i_4)
    goto <bb 22>;
  else
    goto <bb 19>;

  <bb 19>:
  _107 = &this_15(D)->IndexAdvanceX;
  _109 = ImVector<float>::operator[] (_107, i_4);
  _110 = *_109;
  retval.719_111 = _110 < 0.0;
  if (retval.719_111 != 0)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _112 = &this_15(D)->IndexAdvanceX;
  _114 = ImVector<float>::operator[] (_112, i_4);
  _115 = this_15(D)->FallbackAdvanceX;
  *_114 = _115;

  <bb 21>:
  i_117 = i_4 + 1;
  goto <bb 18>;

  <bb 22>:
  return;

}



;; Function void ImFont::SetFallbackChar(ImWchar) (_ZN6ImFont15SetFallbackCharEt, funcdef_no=795, decl_uid=7083, cgraph_uid=694, symbol_order=708)

void ImFont::SetFallbackChar(ImWchar) (struct ImFont * const this, ImWchar c)
{
  <bb 2>:
  this_2(D)->FallbackChar = c_3(D);
  ImFont::BuildLookupTable (this_2(D));
  return;

}



;; Function void ImFont::GrowIndex(int) (_ZN6ImFont9GrowIndexEi, funcdef_no=796, decl_uid=7125, cgraph_uid=695, symbol_order=709)

void ImFont::GrowIndex(int) (struct ImFont * const this, int new_size)
{
  static const char __PRETTY_FUNCTION__[28] = "void ImFont::GrowIndex(int)";
  struct ImVector * D.30881;
  const value_type D.19306;
  struct ImVector * D.30880;
  const value_type D.19305;
  int D.30877;
  int D.30873;
  int D.30872;
  int _4;
  int _5;
  int _6;
  struct ImVector * _9;
  struct ImVector * _13;

  <bb 2>:
  _4 = this_3(D)->IndexAdvanceX.Size;
  _5 = this_3(D)->IndexLookup.Size;
  if (_4 == _5)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("IndexAdvanceX.Size == IndexLookup.Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 2236, &__PRETTY_FUNCTION__);

  <bb 4>:
  _6 = this_3(D)->IndexLookup.Size;
  if (_6 >= new_size_7(D))
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  goto <bb 7> (<L5>);

  <bb 6>:
  D.19305 = -1.0e+0;
  _9 = &this_3(D)->IndexAdvanceX;
  ImVector<float>::resize (_9, new_size_7(D), &D.19305);
  D.19305 ={v} {CLOBBER};
  D.19306 = 65535;
  _13 = &this_3(D)->IndexLookup;
  ImVector<short unsigned int>::resize (_13, new_size_7(D), &D.19306);
  D.19306 ={v} {CLOBBER};

<L5>:
  return;

}



;; Function void ImFont::AddGlyph(ImWchar, float, float, float, float, float, float, float, float, float) (_ZN6ImFont8AddGlyphEtfffffffff, funcdef_no=797, decl_uid=7137, cgraph_uid=696, symbol_order=710)

void ImFont::AddGlyph(ImWchar, float, float, float, float, float, float, float, float, float) (struct ImFont * const this, ImWchar codepoint, float x0, float y0, float x1, float y1, float u0, float v0, float u1, float v1, float advance_x)
{
  struct ImFontGlyph & glyph;
  int D.30983;
  int D.30982;
  int D.30981;
  float D.30980;
  float D.30979;
  float D.30978;
  int D.30977;
  struct ImFontAtlas * D.30976;
  float D.30975;
  float D.30974;
  float D.30973;
  int D.30972;
  float D.30971;
  float D.30970;
  float D.30969;
  int D.30968;
  struct ImFontAtlas * D.30967;
  float D.30966;
  float D.30965;
  float D.30964;
  int D.30963;
  float D.30961;
  int D.30960;
  float D.30959;
  float D.30958;
  bool D.30955;
  struct ImFontConfig * D.30954;
  float D.30953;
  float D.30952;
  struct ImFontConfig * D.30951;
  struct ImVector * D.30950;
  struct ImVector * D.30949;
  int D.30948;
  int D.30947;
  int _4;
  int _5;
  struct ImVector * _6;
  struct ImVector * _8;
  struct ImFontConfig * _29;
  float _30;
  float _32;
  struct ImFontConfig * _34;
  bool _35;
  float _36;
  float _37;
  int _38;
  float _39;
  int _42;
  float _43;
  float _44;
  float _45;
  struct ImFontAtlas * _46;
  int _47;
  float _48;
  float _49;
  float _50;
  int _51;
  float _52;
  float _53;
  float _54;
  struct ImFontAtlas * _55;
  int _56;
  float _57;
  float _58;
  float _59;
  int _60;
  int _61;
  int _62;

  <bb 2>:
  _4 = this_3(D)->Glyphs.Size;
  _5 = _4 + 1;
  _6 = &this_3(D)->Glyphs;
  ImVector<ImFontGlyph>::resize (_6, _5);
  _8 = &this_3(D)->Glyphs;
  glyph_10 = ImVector<ImFontGlyph>::back (_8);
  glyph_10->Codepoint = codepoint_11(D);
  glyph_10->X0 = x0_13(D);
  glyph_10->Y0 = y0_15(D);
  glyph_10->X1 = x1_17(D);
  glyph_10->Y1 = y1_19(D);
  glyph_10->U0 = u0_21(D);
  glyph_10->V0 = v0_23(D);
  glyph_10->U1 = u1_25(D);
  glyph_10->V1 = v1_27(D);
  _29 = this_3(D)->ConfigData;
  _30 = _29->GlyphExtraSpacing.x;
  _32 = _30 + advance_x_31(D);
  glyph_10->AdvanceX = _32;
  _34 = this_3(D)->ConfigData;
  _35 = _34->PixelSnapH;
  if (_35 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _36 = glyph_10->AdvanceX;
  _37 = _36 + 5.0e-1;
  _38 = (int) _37;
  _39 = (float) _38;
  glyph_10->AdvanceX = _39;

  <bb 4>:
  this_3(D)->DirtyLookupTables = 1;
  _42 = this_3(D)->MetricsTotalSurface;
  _43 = glyph_10->U1;
  _44 = glyph_10->U0;
  _45 = _43 - _44;
  _46 = this_3(D)->ContainerAtlas;
  _47 = _46->TexWidth;
  _48 = (float) _47;
  _49 = _45 * _48;
  _50 = _49 + 1.9900000095367431640625e+0;
  _51 = (int) _50;
  _52 = glyph_10->V1;
  _53 = glyph_10->V0;
  _54 = _52 - _53;
  _55 = this_3(D)->ContainerAtlas;
  _56 = _55->TexHeight;
  _57 = (float) _56;
  _58 = _54 * _57;
  _59 = _58 + 1.9900000095367431640625e+0;
  _60 = (int) _59;
  _61 = _51 * _60;
  _62 = _42 + _61;
  this_3(D)->MetricsTotalSurface = _62;
  return;

}



;; Function void ImFont::AddRemapChar(ImWchar, ImWchar, bool) (_ZN6ImFont12AddRemapCharEttb, funcdef_no=798, decl_uid=7142, cgraph_uid=697, symbol_order=711)

void ImFont::AddRemapChar(ImWchar, ImWchar, bool) (struct ImFont * const this, ImWchar dst, ImWchar src, bool overwrite_dst)
{
  int index_size;
  static const char __PRETTY_FUNCTION__[50] = "void ImFont::AddRemapChar(ImWchar, ImWchar, bool)";
  float * D.31031;
  long unsigned int D.31030;
  long unsigned int D.31029;
  float * D.31028;
  int D.31025;
  float iftmp.725;
  value_type & D.31023;
  struct ImVector * D.31022;
  int D.31021;
  short unsigned int * D.31019;
  long unsigned int D.31018;
  long unsigned int D.31017;
  short unsigned int * D.31016;
  int D.31013;
  short unsigned int iftmp.724;
  value_type & D.31011;
  struct ImVector * D.31010;
  int D.31009;
  int D.31008;
  int D.31007;
  int D.31004;
  int D.31001;
  bool D.30998;
  short unsigned int D.30995;
  short unsigned int * D.30994;
  long unsigned int D.30993;
  long unsigned int D.30992;
  short unsigned int * D.30991;
  int D.30988;
  int D.30984;
  short unsigned int iftmp.724_1;
  float iftmp.725_2;
  int _6;
  int _9;
  short unsigned int * _10;
  long unsigned int _11;
  long unsigned int _12;
  short unsigned int * _13;
  short unsigned int _14;
  bool _16;
  int _18;
  int _19;
  int _20;
  int _21;
  int _23;
  struct ImVector * _24;
  value_type & _26;
  int _27;
  short unsigned int * _28;
  long unsigned int _29;
  long unsigned int _30;
  short unsigned int * _31;
  short unsigned int iftmp.724_32;
  short unsigned int iftmp.724_33;
  int _35;
  struct ImVector * _36;
  value_type & _38;
  int _39;
  float * _40;
  long unsigned int _41;
  long unsigned int _42;
  float * _43;
  float iftmp.725_44;
  float iftmp.725_45;

  <bb 2>:
  _6 = this_5(D)->IndexLookup.Size;
  if (_6 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("IndexLookup.Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 2268, &__PRETTY_FUNCTION__);

  <bb 4>:
  index_size_7 = this_5(D)->IndexLookup.Size;
  _9 = (int) dst_8(D);
  if (_9 < index_size_7)
    goto <bb 5>;
  else
    goto <bb 8>;

  <bb 5>:
  _10 = this_5(D)->IndexLookup.Data;
  _11 = (long unsigned int) dst_8(D);
  _12 = _11 * 2;
  _13 = _10 + _12;
  _14 = *_13;
  if (_14 == 65535)
    goto <bb 6>;
  else
    goto <bb 8>;

  <bb 6>:
  _16 = ~overwrite_dst_15(D);
  if (_16 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  goto <bb 18> (<L19>);

  <bb 8>:
  _18 = (int) src_17(D);
  if (_18 >= index_size_7)
    goto <bb 9>;
  else
    goto <bb 11>;

  <bb 9>:
  _19 = (int) dst_8(D);
  if (_19 >= index_size_7)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  goto <bb 18> (<L19>);

  <bb 11>:
  _20 = (int) dst_8(D);
  _21 = _20 + 1;
  ImFont::GrowIndex (this_5(D), _21);
  _23 = (int) dst_8(D);
  _24 = &this_5(D)->IndexLookup;
  _26 = ImVector<short unsigned int>::operator[] (_24, _23);
  _27 = (int) src_17(D);
  if (_27 < index_size_7)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _28 = this_5(D)->IndexLookup.Data;
  _29 = (long unsigned int) src_17(D);
  _30 = _29 * 2;
  _31 = _28 + _30;
  iftmp.724_32 = *_31;
  goto <bb 14>;

  <bb 13>:
  iftmp.724_33 = 65535;

  <bb 14>:
  # iftmp.724_1 = PHI <iftmp.724_32(12), iftmp.724_33(13)>
  *_26 = iftmp.724_1;
  _35 = (int) dst_8(D);
  _36 = &this_5(D)->IndexAdvanceX;
  _38 = ImVector<float>::operator[] (_36, _35);
  _39 = (int) src_17(D);
  if (_39 < index_size_7)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _40 = this_5(D)->IndexAdvanceX.Data;
  _41 = (long unsigned int) src_17(D);
  _42 = _41 * 4;
  _43 = _40 + _42;
  iftmp.725_44 = *_43;
  goto <bb 17>;

  <bb 16>:
  iftmp.725_45 = 1.0e+0;

  <bb 17>:
  # iftmp.725_2 = PHI <iftmp.725_44(15), iftmp.725_45(16)>
  *_38 = iftmp.725_2;

<L19>:
  return;

}



;; Function const ImFontGlyph* ImFont::FindGlyph(ImWchar) const (_ZNK6ImFont9FindGlyphEt, funcdef_no=799, decl_uid=7077, cgraph_uid=698, symbol_order=712)

const ImFontGlyph* ImFont::FindGlyph(ImWchar) const (const struct ImFont * const this, ImWchar c)
{
  const short unsigned int i;
  long unsigned int D.31046;
  long unsigned int D.31045;
  struct ImFontGlyph * D.31044;
  const value_type & D.31041;
  const struct ImVector * D.31040;
  int D.31039;
  const struct ImFontGlyph * D.31038;
  int D.31035;
  int D.31034;
  const struct ImFontGlyph * _1;
  int _4;
  int _7;
  const struct ImFontGlyph * _8;
  int _9;
  const struct ImVector * _10;
  const value_type & _12;
  const struct ImFontGlyph * _14;
  struct ImFontGlyph * _15;
  long unsigned int _16;
  long unsigned int _17;
  const struct ImFontGlyph * _18;

  <bb 2>:
  _4 = (int) c_3(D);
  _7 = this_6(D)->IndexLookup.Size;
  if (_4 >= _7)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _8 = this_6(D)->FallbackGlyph;
  goto <bb 7> (<L4>);

  <bb 4>:
  _9 = (int) c_3(D);
  _10 = &this_6(D)->IndexLookup;
  _12 = ImVector<short unsigned int>::operator[] (_10, _9);
  i_13 = *_12;
  if (i_13 == 65535)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _14 = this_6(D)->FallbackGlyph;
  goto <bb 7> (<L4>);

  <bb 6>:
  _15 = this_6(D)->Glyphs.Data;
  _16 = (long unsigned int) i_13;
  _17 = _16 * 40;
  _18 = _15 + _17;

  # _1 = PHI <_8(3), _14(5), _18(6)>
<L4>:
  return _1;

}



;; Function const ImFontGlyph* ImFont::FindGlyphNoFallback(ImWchar) const (_ZNK6ImFont19FindGlyphNoFallbackEt, funcdef_no=800, decl_uid=7080, cgraph_uid=699, symbol_order=713)

const ImFontGlyph* ImFont::FindGlyphNoFallback(ImWchar) const (const struct ImFont * const this, ImWchar c)
{
  const short unsigned int i;
  long unsigned int D.31069;
  long unsigned int D.31068;
  struct ImFontGlyph * D.31067;
  const value_type & D.31064;
  const struct ImVector * D.31063;
  int D.31062;
  const struct ImFontGlyph * D.31061;
  int D.31058;
  int D.31057;
  const struct ImFontGlyph * _1;
  int _4;
  int _7;
  const struct ImFontGlyph * _8;
  int _9;
  const struct ImVector * _10;
  const value_type & _12;
  const struct ImFontGlyph * _14;
  struct ImFontGlyph * _15;
  long unsigned int _16;
  long unsigned int _17;
  const struct ImFontGlyph * _18;

  <bb 2>:
  _4 = (int) c_3(D);
  _7 = this_6(D)->IndexLookup.Size;
  if (_4 >= _7)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _8 = 0B;
  goto <bb 7> (<L4>);

  <bb 4>:
  _9 = (int) c_3(D);
  _10 = &this_6(D)->IndexLookup;
  _12 = ImVector<short unsigned int>::operator[] (_10, _9);
  i_13 = *_12;
  if (i_13 == 65535)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _14 = 0B;
  goto <bb 7> (<L4>);

  <bb 6>:
  _15 = this_6(D)->Glyphs.Data;
  _16 = (long unsigned int) i_13;
  _17 = _16 * 40;
  _18 = _15 + _17;

  # _1 = PHI <_8(3), _14(5), _18(6)>
<L4>:
  return _1;

}



;; Function const char* ImFont::CalcWordWrapPositionA(float, const char*, const char*, float) const (_ZNK6ImFont21CalcWordWrapPositionAEfPKcS1_f, funcdef_no=801, decl_uid=7104, cgraph_uid=700, symbol_order=714)

const char* ImFont::CalcWordWrapPositionA(float, const char*, const char*, float) const (const struct ImFont * const this, float scale, const char * text, const char * text_end, float wrap_width)
{
  int D.31144;
  const float char_width;
  const char * next_s;
  unsigned int c;
  const char * s;
  bool inside_word;
  const char * prev_word_end;
  const char * word_end;
  float blank_width;
  float word_width;
  float line_width;
  const char * D.31142;
  const char * iftmp.746;
  float D.31132;
  unsigned int c.745;
  unsigned int c.744;
  unsigned int c.743;
  unsigned int c.742;
  unsigned int c.741;
  unsigned int c.740;
  bool iftmp.739;
  float D.31116;
  unsigned int c.738;
  bool retval.737;
  const value_type & D.31103;
  const struct ImVector * D.31102;
  int c.736;
  unsigned int c.735;
  int c.734;
  unsigned int c.733;
  int D.31095;
  value_type iftmp.732;
  unsigned int c.731;
  unsigned int c.730;
  unsigned int c.729;
  unsigned int c.728;
  sizetype D.31080;
  int D.31079;
  unsigned int c.727;
  unsigned int c.726;
  char D.31073;
  value_type iftmp.732_38;
  bool iftmp.739_39;
  const char * iftmp.746_40;
  char _60;
  unsigned int c.726_61;
  unsigned int c.727_63;
  int _66;
  int _67;
  sizetype _68;
  unsigned int c.728_71;
  unsigned int c.729_72;
  unsigned int c.730_73;
  unsigned int c.731_74;
  int _83;
  unsigned int c.733_84;
  int c.734_85;
  unsigned int c.735_86;
  int c.736_87;
  const struct ImVector * _88;
  const value_type & _90;
  value_type iftmp.732_91;
  value_type iftmp.732_92;
  unsigned int c.738_94;
  bool retval.737_96;
  float _105;
  unsigned int c.740_109;
  unsigned int c.741_110;
  unsigned int c.742_111;
  unsigned int c.743_112;
  unsigned int c.744_113;
  unsigned int c.745_114;
  bool iftmp.739_115;
  bool iftmp.739_116;
  float _118;
  const char * iftmp.746_121;
  const char * iftmp.746_122;
  const char * _125;

  <bb 2>:
  line_width_47 = 0.0;
  word_width_48 = 0.0;
  blank_width_49 = 0.0;
  wrap_width_52 = wrap_width_50(D) / scale_51(D);
  word_end_54 = text_53(D);
  prev_word_end_55 = 0B;
  inside_word_56 = 1;
  s_57 = text_53(D);

  <bb 3>:
  # line_width_1 = PHI <line_width_47(2), line_width_6(43)>
  # word_width_7 = PHI <word_width_48(2), word_width_11(43)>
  # blank_width_12 = PHI <blank_width_49(2), blank_width_17(43)>
  # word_end_18 = PHI <word_end_54(2), word_end_22(43)>
  # prev_word_end_23 = PHI <prev_word_end_55(2), prev_word_end_26(43)>
  # inside_word_27 = PHI <inside_word_56(2), inside_word_30(43)>
  # s_31 = PHI <s_57(2), s_35(43)>
  if (s_31 >= text_end_59(D))
    goto <bb 44>;
  else
    goto <bb 4>;

  <bb 4>:
  _60 = *s_31;
  c.726_61 = (unsigned int) _60;
  c = c.726_61;
  c.727_63 = c;
  if (c.727_63 <= 127)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  next_s_64 = s_31 + 1;
  goto <bb 7>;

  <bb 6>:
  _66 = ImTextCharFromUtf8 (&c, s_31, text_end_59(D));
  _67 = _66;
  _68 = (sizetype) _67;
  next_s_69 = s_31 + _68;

  <bb 7>:
  # next_s_37 = PHI <next_s_64(5), next_s_69(6)>
  c.728_71 = c;
  if (c.728_71 == 0)
    goto <bb 8>;
  else
    goto <bb 9>;

  <bb 8>:
  goto <bb 41>;

  <bb 9>:
  c.729_72 = c;
  if (c.729_72 <= 31)
    goto <bb 10>;
  else
    goto <bb 14>;

  <bb 10>:
  c.730_73 = c;
  if (c.730_73 == 10)
    goto <bb 11>;
  else
    goto <bb 12>;

  <bb 11>:
  blank_width_76 = 0.0;
  word_width_77 = blank_width_76;
  line_width_78 = word_width_77;
  inside_word_79 = 1;
  s_80 = next_s_37;
  goto <bb 42>;

  <bb 12>:
  c.731_74 = c;
  if (c.731_74 == 13)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  s_75 = next_s_37;
  goto <bb 42>;

  <bb 14>:
  _83 = this_82(D)->IndexAdvanceX.Size;
  c.733_84 = c;
  c.734_85 = (int) c.733_84;
  if (_83 > c.734_85)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  c.735_86 = c;
  c.736_87 = (int) c.735_86;
  _88 = &this_82(D)->IndexAdvanceX;
  _90 = ImVector<float>::operator[] (_88, c.736_87);
  iftmp.732_91 = *_90;
  goto <bb 17>;

  <bb 16>:
  iftmp.732_92 = this_82(D)->FallbackAdvanceX;

  <bb 17>:
  # iftmp.732_38 = PHI <iftmp.732_91(15), iftmp.732_92(16)>
  char_width_93 = iftmp.732_38;
  c.738_94 = c;
  retval.737_96 = ImCharIsSpace (c.738_94);
  if (retval.737_96 != 0)
    goto <bb 18>;
  else
    goto <bb 21>;

  <bb 18>:
  if (inside_word_27 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  line_width_97 = line_width_1 + blank_width_12;
  blank_width_98 = 0.0;
  word_end_99 = s_31;

  <bb 20>:
  # line_width_2 = PHI <line_width_1(18), line_width_97(19)>
  # blank_width_13 = PHI <blank_width_12(18), blank_width_98(19)>
  # word_end_19 = PHI <word_end_18(18), word_end_99(19)>
  blank_width_100 = blank_width_13 + char_width_93;
  inside_word_101 = 0;
  goto <bb 33>;

  <bb 21>:
  word_width_102 = word_width_7 + char_width_93;
  if (inside_word_27 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;

  <bb 22>:
  word_end_103 = next_s_37;
  goto <bb 24>;

  <bb 23>:
  prev_word_end_104 = word_end_18;
  _105 = word_width_102 + blank_width_12;
  line_width_106 = _105 + line_width_1;
  blank_width_107 = 0.0;
  word_width_108 = blank_width_107;

  <bb 24>:
  # line_width_3 = PHI <line_width_1(22), line_width_106(23)>
  # word_width_8 = PHI <word_width_102(22), word_width_108(23)>
  # blank_width_14 = PHI <blank_width_12(22), blank_width_107(23)>
  # word_end_20 = PHI <word_end_103(22), word_end_18(23)>
  # prev_word_end_24 = PHI <prev_word_end_23(22), prev_word_end_104(23)>
  c.740_109 = c;
  if (c.740_109 != 46)
    goto <bb 25>;
  else
    goto <bb 31>;

  <bb 25>:
  c.741_110 = c;
  if (c.741_110 != 44)
    goto <bb 26>;
  else
    goto <bb 31>;

  <bb 26>:
  c.742_111 = c;
  if (c.742_111 != 59)
    goto <bb 27>;
  else
    goto <bb 31>;

  <bb 27>:
  c.743_112 = c;
  if (c.743_112 != 33)
    goto <bb 28>;
  else
    goto <bb 31>;

  <bb 28>:
  c.744_113 = c;
  if (c.744_113 != 63)
    goto <bb 29>;
  else
    goto <bb 31>;

  <bb 29>:
  c.745_114 = c;
  if (c.745_114 != 34)
    goto <bb 30>;
  else
    goto <bb 31>;

  <bb 30>:
  iftmp.739_115 = 1;
  goto <bb 32>;

  <bb 31>:
  iftmp.739_116 = 0;

  <bb 32>:
  # iftmp.739_39 = PHI <iftmp.739_115(30), iftmp.739_116(31)>
  inside_word_117 = iftmp.739_39;

  <bb 33>:
  # line_width_4 = PHI <line_width_2(20), line_width_3(32)>
  # word_width_9 = PHI <word_width_7(20), word_width_8(32)>
  # blank_width_15 = PHI <blank_width_100(20), blank_width_14(32)>
  # word_end_21 = PHI <word_end_19(20), word_end_20(32)>
  # prev_word_end_25 = PHI <prev_word_end_23(20), prev_word_end_24(32)>
  # inside_word_28 = PHI <inside_word_101(20), inside_word_117(32)>
  _118 = line_width_4 + word_width_9;
  if (_118 >= wrap_width_52)
    goto <bb 34>;
  else
    goto <bb 40>;

  <bb 34>:
  if (word_width_9 < wrap_width_52)
    goto <bb 35>;
  else
    goto <bb 39>;

  <bb 35>:
  if (prev_word_end_25 != 0B)
    goto <bb 36>;
  else
    goto <bb 37>;

  <bb 36>:
  iftmp.746_121 = prev_word_end_25;
  goto <bb 38>;

  <bb 37>:
  iftmp.746_122 = word_end_21;

  <bb 38>:
  # iftmp.746_40 = PHI <iftmp.746_121(36), iftmp.746_122(37)>
  s_123 = iftmp.746_40;

  <bb 39>:
  # s_32 = PHI <s_31(34), s_123(38)>
  goto <bb 41>;

  <bb 40>:
  s_119 = next_s_37;
  c ={v} {CLOBBER};
  goto <bb 43>;

  <bb 41>:
  # s_33 = PHI <s_31(8), s_32(39)>
  c ={v} {CLOBBER};
  goto <bb 44>;

  <bb 42>:
  # line_width_5 = PHI <line_width_78(11), line_width_1(13)>
  # word_width_10 = PHI <word_width_77(11), word_width_7(13)>
  # blank_width_16 = PHI <blank_width_76(11), blank_width_12(13)>
  # inside_word_29 = PHI <inside_word_79(11), inside_word_27(13)>
  # s_34 = PHI <s_80(11), s_75(13)>
  c ={v} {CLOBBER};

  <bb 43>:
  # line_width_6 = PHI <line_width_4(40), line_width_5(42)>
  # word_width_11 = PHI <word_width_9(40), word_width_10(42)>
  # blank_width_17 = PHI <blank_width_15(40), blank_width_16(42)>
  # word_end_22 = PHI <word_end_21(40), word_end_18(42)>
  # prev_word_end_26 = PHI <prev_word_end_25(40), prev_word_end_23(42)>
  # inside_word_30 = PHI <inside_word_28(40), inside_word_29(42)>
  # s_35 = PHI <s_119(40), s_34(42)>
  goto <bb 3>;

  <bb 44>:
  # s_36 = PHI <s_31(3), s_33(41)>
  _125 = s_36;

<L47>:
  return _125;

}



;; Function ImVec2 ImFont::CalcTextSizeA(float, float, float, const char*, const char*, const char**) const (_ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_, funcdef_no=802, decl_uid=7098, cgraph_uid=701, symbol_order=715)

ImVec2 ImFont::CalcTextSizeA(float, float, float, const char*, const char*, const char**) const (const struct ImFont * const this, float size, float max_width, float wrap_width, const char * text_begin, const char * text_end, const char * * remaining)
{
  void * D.32781;
  int D.31254;
  const char * D.31253;
  const char c;
  const float char_width;
  unsigned int c;
  const char * prev_s;
  const char * s;
  const char * word_wrap_eol;
  const bool word_wrap_enabled;
  float line_width;
  struct ImVec2 text_size;
  const float scale;
  const float line_height;
  struct ImVec2 D.31251;
  float D.31247;
  float D.31246;
  float D.31245;
  float D.31238;
  float D.31235;
  const value_type & D.31233;
  const struct ImVector * D.31232;
  int c.759;
  unsigned int c.758;
  int c.757;
  unsigned int c.756;
  int D.31225;
  value_type iftmp.755;
  unsigned int c.754;
  float D.31219;
  float D.31218;
  float D.31217;
  float D.31216;
  unsigned int c.753;
  unsigned int c.752;
  unsigned int c.751;
  sizetype D.31206;
  int D.19378;
  unsigned int c.750;
  unsigned int c.749;
  char D.31200;
  unsigned int D.31193;
  bool retval.748;
  float D.31189;
  float D.31188;
  float D.31184;
  float D.31177;
  float D.31170;
  long unsigned int D.31168;
  value_type iftmp.755_18;
  long unsigned int _38;
  float _43;
  float _51;
  const char * _53;
  float _56;
  float _58;
  float _59;
  unsigned int _64;
  bool retval.748_66;
  char _70;
  unsigned int c.749_71;
  unsigned int c.750_73;
  int _76;
  int _77;
  sizetype _78;
  unsigned int c.751_80;
  unsigned int c.752_81;
  unsigned int c.753_82;
  unsigned int c.754_83;
  float _84;
  float _86;
  float _88;
  float _89;
  int _92;
  unsigned int c.756_93;
  int c.757_94;
  unsigned int c.758_95;
  int c.759_96;
  const struct ImVector * _97;
  const value_type & _99;
  value_type iftmp.755_100;
  value_type iftmp.755_101;
  float _103;
  float _112;
  float _114;
  float _115;
  float _116;

  <bb 2>:
  if (text_end_35(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _38 = strlen (text_begin_37(D));
  text_end_39 = text_begin_37(D) + _38;

  <bb 4>:
  # text_end_1 = PHI <text_end_35(D)(2), text_end_39(3)>
  line_height_41 = size_40(D);
  _43 = this_42(D)->FontSize;
  scale_44 = size_40(D) / _43;
  ImVec2::ImVec2 (&text_size, 0.0, 0.0);
  line_width_46 = 0.0;
  word_wrap_enabled_48 = wrap_width_47(D) > 0.0;
  word_wrap_eol_49 = 0B;
  s_50 = text_begin_37(D);

  <bb 5>:
  # line_width_2 = PHI <line_width_46(4), line_width_4(42)>
  # word_wrap_eol_5 = PHI <word_wrap_eol_49(4), word_wrap_eol_9(42)>
  # s_10 = PHI <s_50(4), s_16(42)>
  if (s_10 >= text_end_1)
    goto <bb 43>;
  else
    goto <bb 6>;

  <bb 6>:
  if (word_wrap_enabled_48 != 0)
    goto <bb 7>;
  else
    goto <bb 24>;

  <bb 7>:
  if (word_wrap_eol_5 == 0B)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  _51 = wrap_width_47(D) - line_width_2;
  _53 = ImFont::CalcWordWrapPositionA (this_42(D), scale_44, s_10, text_end_1, _51);

  <bb 9>:
  word_wrap_eol_54 = _53;
  if (word_wrap_eol_54 == s_10)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  word_wrap_eol_55 = word_wrap_eol_54 + 1;

  <bb 11>:
  # word_wrap_eol_6 = PHI <word_wrap_eol_5(7), word_wrap_eol_55(10), word_wrap_eol_54(9)>
  if (s_10 >= word_wrap_eol_6)
    goto <bb 12>;
  else
    goto <bb 23>;

  <bb 12>:
  _56 = text_size.x;
  if (_56 < line_width_2)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  text_size.x = line_width_2;

  <bb 14>:
  _58 = text_size.y;
  _59 = _58 + line_height_41;
  text_size.y = _59;
  line_width_61 = 0.0;
  word_wrap_eol_62 = 0B;

  <bb 15>:
  # s_11 = PHI <s_10(14), s_67(21)>
  if (s_11 >= text_end_1)
    goto <bb 22>;
  else
    goto <bb 16>;

  <bb 16>:
  c_63 = *s_11;
  _64 = (unsigned int) c_63;
  retval.748_66 = ImCharIsSpace (_64);
  if (retval.748_66 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;

  <bb 17>:
  s_67 = s_11 + 1;
  goto <bb 21>;

  <bb 18>:
  if (c_63 == 10)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  s_68 = s_11 + 1;
  goto <bb 22>;

  <bb 20>:
  goto <bb 22>;

  <bb 21>:
  goto <bb 15>;

  <bb 22>:
  # s_12 = PHI <s_11(15), s_68(19), s_11(20)>
  goto <bb 40>;

  <bb 23>:

  <bb 24>:
  # word_wrap_eol_7 = PHI <word_wrap_eol_5(6), word_wrap_eol_6(23)>
  prev_s_69 = s_10;
  _70 = *s_10;
  c.749_71 = (unsigned int) _70;
  c = c.749_71;
  c.750_73 = c;
  if (c.750_73 <= 127)
    goto <bb 25>;
  else
    goto <bb 26>;

  <bb 25>:
  s_74 = s_10 + 1;
  goto <bb 29>;

  <bb 26>:
  _76 = ImTextCharFromUtf8 (&c, s_10, text_end_1);

  <bb 27>:
  _77 = _76;
  _78 = (sizetype) _77;
  s_79 = s_10 + _78;
  c.751_80 = c;
  if (c.751_80 == 0)
    goto <bb 28>;
  else
    goto <bb 29>;

  <bb 28>:
  goto <bb 41>;

  <bb 29>:
  # s_13 = PHI <s_74(25), s_79(27)>
  c.752_81 = c;
  if (c.752_81 <= 31)
    goto <bb 30>;
  else
    goto <bb 34>;

  <bb 30>:
  c.753_82 = c;
  if (c.753_82 == 10)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  _84 = text_size.x;
  _86 = ImMax (_84, line_width_2);
  text_size.x = _86;
  _88 = text_size.y;
  _89 = _88 + line_height_41;
  text_size.y = _89;
  line_width_91 = 0.0;
  goto <bb 40>;

  <bb 32>:
  c.754_83 = c;
  if (c.754_83 == 13)
    goto <bb 33>;
  else
    goto <bb 34>;

  <bb 33>:
  goto <bb 40>;

  <bb 34>:
  _92 = this_42(D)->IndexAdvanceX.Size;
  c.756_93 = c;
  c.757_94 = (int) c.756_93;
  if (_92 > c.757_94)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  c.758_95 = c;
  c.759_96 = (int) c.758_95;
  _97 = &this_42(D)->IndexAdvanceX;
  _99 = ImVector<float>::operator[] (_97, c.759_96);
  iftmp.755_100 = *_99;
  goto <bb 37>;

  <bb 36>:
  iftmp.755_101 = this_42(D)->FallbackAdvanceX;

  <bb 37>:
  # iftmp.755_18 = PHI <iftmp.755_100(35), iftmp.755_101(36)>
  char_width_102 = iftmp.755_18 * scale_44;
  _103 = line_width_2 + char_width_102;
  if (_103 >= max_width_104(D))
    goto <bb 38>;
  else
    goto <bb 39>;

  <bb 38>:
  s_107 = prev_s_69;
  goto <bb 41>;

  <bb 39>:
  line_width_105 = line_width_2 + char_width_102;
  c ={v} {CLOBBER};
  goto <bb 42>;

  <bb 40>:
  # line_width_3 = PHI <line_width_61(22), line_width_91(31), line_width_2(33)>
  # word_wrap_eol_8 = PHI <word_wrap_eol_62(22), word_wrap_eol_7(31), word_wrap_eol_7(33)>
  # s_14 = PHI <s_12(22), s_13(31), s_13(33)>
  c ={v} {CLOBBER};
  goto <bb 42>;

  <bb 41>:
  # s_15 = PHI <s_79(28), s_107(38)>
  c ={v} {CLOBBER};
  goto <bb 43>;

  <bb 42>:
  # line_width_4 = PHI <line_width_105(39), line_width_3(40)>
  # word_wrap_eol_9 = PHI <word_wrap_eol_7(39), word_wrap_eol_8(40)>
  # s_16 = PHI <s_13(39), s_14(40)>
  goto <bb 5>;

  <bb 43>:
  # s_17 = PHI <s_10(5), s_15(41)>
  _112 = text_size.x;
  if (_112 < line_width_2)
    goto <bb 44>;
  else
    goto <bb 45>;

  <bb 44>:
  text_size.x = line_width_2;

  <bb 45>:
  if (line_width_2 > 0.0)
    goto <bb 47>;
  else
    goto <bb 46>;

  <bb 46>:
  _114 = text_size.y;
  if (_114 == 0.0)
    goto <bb 47>;
  else
    goto <bb 48>;

  <bb 47>:
  _115 = text_size.y;
  _116 = _115 + line_height_41;
  text_size.y = _116;

  <bb 48>:
  if (remaining_118(D) != 0B)
    goto <bb 49>;
  else
    goto <bb 50>;

  <bb 49>:
  *remaining_118(D) = s_17;

  <bb 50>:
  D.31251 = text_size;
  text_size ={v} {CLOBBER};

<L59>:
  return D.31251;

<L60>:
  _110 = __builtin_eh_pointer (1);
  __builtin_unwind_resume (_110);

}



;; Function void ImFont::RenderChar(ImDrawList*, float, ImVec2, ImU32, short unsigned int) const (_ZNK6ImFont10RenderCharEP10ImDrawListf6ImVec2jt, funcdef_no=803, decl_uid=7111, cgraph_uid=702, symbol_order=716)

void ImFont::RenderChar(ImDrawList*, float, ImVec2, ImU32, short unsigned int) const (const struct ImFont * const this, struct ImDrawList * draw_list, float size, struct ImVec2 pos, ImU32 col, short unsigned int c)
{
  const struct ImFontGlyph * D.31306;
  float scale;
  const struct ImFontGlyph * glyph;
  float D.31303;
  float D.31302;
  float D.31301;
  float D.31300;
  float D.31299;
  float D.31298;
  float D.31297;
  float D.31296;
  struct ImVec2 D.19395;
  float D.31295;
  float D.31294;
  float D.31293;
  float D.31292;
  float D.31291;
  float D.31290;
  float D.31289;
  float D.31288;
  struct ImVec2 D.19396;
  float D.31287;
  float D.31286;
  struct ImVec2 D.19397;
  float D.31285;
  float D.31284;
  struct ImVec2 D.19398;
  float D.31283;
  float D.31282;
  float D.31281;
  int D.31280;
  float D.31279;
  float D.31278;
  float D.31277;
  float D.31276;
  int D.31275;
  float D.31274;
  float D.31272;
  float iftmp.760;
  int D.31266;
  float iftmp.760_1;
  int _4;
  const struct ImFontGlyph * _8;
  float _11;
  float iftmp.760_12;
  float iftmp.760_13;
  float _15;
  int _16;
  float _17;
  float _18;
  float _19;
  float _21;
  int _22;
  float _23;
  float _24;
  float _25;
  float _29;
  float _30;
  float _32;
  float _33;
  float _35;
  float _36;
  float _37;
  float _38;
  float _39;
  float _40;
  float _41;
  float _42;
  float _44;
  float _45;
  float _46;
  float _47;
  float _48;
  float _49;
  float _50;
  float _51;

  <bb 2>:
  if (c_3(D) == 32)
    goto <bb 6>;
  else
    goto <bb 3>;

  <bb 3>:
  if (c_3(D) == 9)
    goto <bb 6>;
  else
    goto <bb 4>;

  <bb 4>:
  if (c_3(D) == 10)
    goto <bb 6>;
  else
    goto <bb 5>;

  <bb 5>:
  if (c_3(D) == 13)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  goto <bb 12> (<L11>);

  <bb 7>:
  _4 = (int) c_3(D);
  _8 = ImFont::FindGlyph (this_6(D), _4);
  glyph_9 = _8;
  if (glyph_9 != 0B)
    goto <bb 8>;
  else
    goto <bb 12> (<L11>);

  <bb 8>:
  if (size_10(D) >= 0.0)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _11 = this_6(D)->FontSize;
  iftmp.760_12 = size_10(D) / _11;
  goto <bb 11>;

  <bb 10>:
  iftmp.760_13 = 1.0e+0;

  <bb 11>:
  # iftmp.760_1 = PHI <iftmp.760_12(9), iftmp.760_13(10)>
  scale_14 = iftmp.760_1;
  _15 = pos.x;
  _16 = (int) _15;
  _17 = (float) _16;
  _18 = this_6(D)->DisplayOffset.x;
  _19 = _17 + _18;
  pos.x = _19;
  _21 = pos.y;
  _22 = (int) _21;
  _23 = (float) _22;
  _24 = this_6(D)->DisplayOffset.y;
  _25 = _23 + _24;
  pos.y = _25;
  ImDrawList::PrimReserve (draw_list_27(D), 6, 4);
  _29 = glyph_9->V1;
  _30 = glyph_9->U1;
  ImVec2::ImVec2 (&D.19398, _30, _29);
  _32 = glyph_9->V0;
  _33 = glyph_9->U0;
  ImVec2::ImVec2 (&D.19397, _33, _32);
  _35 = pos.y;
  _36 = glyph_9->Y1;
  _37 = _36 * scale_14;
  _38 = _35 + _37;
  _39 = pos.x;
  _40 = glyph_9->X1;
  _41 = _40 * scale_14;
  _42 = _39 + _41;
  ImVec2::ImVec2 (&D.19396, _42, _38);
  _44 = pos.y;
  _45 = glyph_9->Y0;
  _46 = _45 * scale_14;
  _47 = _44 + _46;
  _48 = pos.x;
  _49 = glyph_9->X0;
  _50 = _49 * scale_14;
  _51 = _48 + _50;
  ImVec2::ImVec2 (&D.19395, _51, _47);
  ImDrawList::PrimRectUV (draw_list_27(D), &D.19395, &D.19396, &D.19397, &D.19398, col_53(D));
  D.19395 ={v} {CLOBBER};
  D.19396 ={v} {CLOBBER};
  D.19397 ={v} {CLOBBER};
  D.19398 ={v} {CLOBBER};

<L11>:
  return;

}



;; Function void ImFont::RenderText(ImDrawList*, float, ImVec2, ImU32, const ImVec4&, const char*, const char*, float, bool) const (_ZNK6ImFont10RenderTextEP10ImDrawListf6ImVec2jRK6ImVec4PKcS7_fb, funcdef_no=804, decl_uid=7122, cgraph_uid=703, symbol_order=717)

void ImFont::RenderText(ImDrawList*, float, ImVec2, ImU32, const ImVec4&, const char*, const char*, float, bool) const (const struct ImFont * const this, struct ImDrawList * draw_list, float size, struct ImVec2 pos, ImU32 col, const struct ImVec4 & clip_rect, const char * text_begin, const char * text_end, float wrap_width, bool cpu_fine_clip)
{
  const struct ImFontGlyph * D.31550;
  int D.31549;
  const char * D.31548;
  float v2;
  float u2;
  float v1;
  float u1;
  float y2;
  float y1;
  float x2;
  float x1;
  const struct ImFontGlyph * glyph;
  const char c;
  float char_width;
  unsigned int c;
  unsigned int vtx_current_idx;
  ImDrawIdx * idx_write;
  struct ImDrawVert * vtx_write;
  const int idx_expected_size;
  const int idx_count_max;
  const int vtx_count_max;
  const char * s;
  const char * word_wrap_eol;
  const bool word_wrap_enabled;
  const float line_height;
  const float scale;
  float y;
  float x;
  unsigned int D.31546;
  int D.31545;
  unsigned int D.31544;
  unsigned int D.31543;
  int D.31542;
  int D.31541;
  unsigned int D.31540;
  struct value_type & D.31539;
  struct ImVector * D.31538;
  int D.31537;
  int D.31536;
  struct ImVector * D.31535;
  int D.31534;
  long int D.31533;
  long int D.31532;
  long int D.31531;
  short unsigned int * D.31530;
  long int idx_write.785;
  struct ImVector * D.31528;
  int D.31527;
  long int D.31526;
  long int D.31525;
  long int D.31524;
  struct ImDrawVert * D.31523;
  long int vtx_write.784;
  unsigned int vtx_current_idx.783;
  unsigned int vtx_current_idx.782;
  struct ImDrawVert * D.31516;
  struct ImDrawVert * D.31515;
  struct ImDrawVert * D.31514;
  struct ImDrawVert * D.31513;
  struct ImDrawVert * D.31512;
  struct ImDrawVert * D.31511;
  struct ImDrawVert * D.31510;
  struct ImDrawVert * D.31509;
  struct ImDrawVert * D.31508;
  struct ImDrawVert * D.31507;
  struct ImDrawVert * D.31506;
  struct ImDrawVert * D.31505;
  struct ImDrawVert * D.31504;
  struct ImDrawVert * D.31503;
  struct ImDrawVert * D.31502;
  short unsigned int D.31501;
  short unsigned int D.31500;
  unsigned int vtx_current_idx.781;
  ImDrawIdx * D.31498;
  short unsigned int D.31497;
  short unsigned int D.31496;
  unsigned int vtx_current_idx.780;
  ImDrawIdx * D.31494;
  short unsigned int D.31493;
  unsigned int vtx_current_idx.779;
  ImDrawIdx * D.31491;
  short unsigned int D.31490;
  short unsigned int D.31489;
  unsigned int vtx_current_idx.778;
  ImDrawIdx * D.31487;
  short unsigned int D.31486;
  short unsigned int D.31485;
  unsigned int vtx_current_idx.777;
  ImDrawIdx * D.31483;
  short unsigned int D.31482;
  unsigned int vtx_current_idx.776;
  float D.31476;
  float D.31475;
  float D.31474;
  float D.31473;
  float D.31472;
  float D.31471;
  float D.31468;
  float D.31466;
  float D.31465;
  float D.31464;
  float D.31463;
  float D.31462;
  float D.31461;
  float D.31458;
  float D.31456;
  float D.31455;
  float D.31454;
  float D.31453;
  float D.31452;
  float D.31451;
  float D.31450;
  float D.31447;
  float D.31445;
  float D.31444;
  float D.31443;
  float D.31442;
  float D.31441;
  float D.31440;
  float D.31439;
  float D.31436;
  float D.31431;
  float D.31428;
  float D.31427;
  float D.31426;
  float D.31425;
  float D.31424;
  float D.31423;
  float D.31422;
  float D.31421;
  float D.31420;
  unsigned int c.775;
  unsigned int c.774;
  float D.31413;
  int D.31410;
  short unsigned int D.31409;
  unsigned int c.773;
  unsigned int c.772;
  char D.31401;
  float D.31396;
  float D.31395;
  bool D.31392;
  float D.31389;
  unsigned int c.771;
  unsigned int c.770;
  unsigned int c.769;
  sizetype D.31379;
  int D.19426;
  unsigned int c.768;
  unsigned int c.767;
  char D.31373;
  unsigned int D.31366;
  bool retval.766;
  float D.31356;
  float D.31355;
  float D.31354;
  unsigned int vtx_current_idx.765;
  int D.31346;
  int D.31345;
  long int D.31344;
  long int s.764;
  long int text_end.763;
  int D.31341;
  long int D.31340;
  long int s.762;
  long int text_end.761;
  char D.31335;
  float D.31330;
  float D.31329;
  bool D.31326;
  float D.31325;
  float D.31324;
  float D.31321;
  float D.31320;
  float D.31319;
  float D.31318;
  int D.31317;
  float D.31316;
  float D.31315;
  float D.31314;
  float D.31313;
  int D.31312;
  float D.31311;
  long unsigned int D.31309;
  long unsigned int _69;
  float _71;
  int _72;
  float _73;
  float _75;
  float _76;
  float _78;
  int _79;
  float _80;
  float _81;
  float _82;
  float _87;
  float _88;
  float _91;
  bool _97;
  float _98;
  float _99;
  char _100;
  long int text_end.761_102;
  long int s.762_103;
  long int _104;
  int _105;
  long int text_end.763_107;
  long int s.764_108;
  long int _109;
  int _110;
  int _113;
  unsigned int vtx_current_idx.765_118;
  float _120;
  float _121;
  float _122;
  const char * _124;
  unsigned int _131;
  bool retval.766_133;
  char _136;
  unsigned int c.767_137;
  unsigned int c.768_139;
  int _142;
  int _143;
  sizetype _144;
  unsigned int c.769_146;
  unsigned int c.770_147;
  unsigned int c.771_148;
  unsigned int c.772_149;
  float _152;
  bool _153;
  float _154;
  float _155;
  char _156;
  unsigned int c.773_159;
  short unsigned int _160;
  int _161;
  const struct ImFontGlyph * _163;
  float _165;
  unsigned int c.774_167;
  unsigned int c.775_168;
  float _169;
  float _170;
  float _172;
  float _173;
  float _175;
  float _176;
  float _178;
  float _179;
  float _181;
  float _182;
  float _188;
  float _189;
  float _190;
  float _191;
  float _192;
  float _193;
  float _194;
  float _195;
  float _198;
  float _199;
  float _200;
  float _201;
  float _202;
  float _203;
  float _204;
  float _205;
  float _208;
  float _209;
  float _210;
  float _211;
  float _212;
  float _213;
  float _214;
  float _217;
  float _218;
  float _219;
  float _220;
  float _221;
  float _222;
  float _223;
  unsigned int vtx_current_idx.776_227;
  short unsigned int _228;
  ImDrawIdx * _230;
  unsigned int vtx_current_idx.777_231;
  short unsigned int _232;
  short unsigned int _233;
  ImDrawIdx * _235;
  unsigned int vtx_current_idx.778_236;
  short unsigned int _237;
  short unsigned int _238;
  ImDrawIdx * _240;
  unsigned int vtx_current_idx.779_241;
  short unsigned int _242;
  ImDrawIdx * _244;
  unsigned int vtx_current_idx.780_245;
  short unsigned int _246;
  short unsigned int _247;
  ImDrawIdx * _249;
  unsigned int vtx_current_idx.781_250;
  short unsigned int _251;
  short unsigned int _252;
  struct ImDrawVert * _260;
  struct ImDrawVert * _262;
  struct ImDrawVert * _264;
  struct ImDrawVert * _266;
  struct ImDrawVert * _268;
  struct ImDrawVert * _270;
  struct ImDrawVert * _272;
  struct ImDrawVert * _274;
  struct ImDrawVert * _276;
  struct ImDrawVert * _278;
  struct ImDrawVert * _280;
  struct ImDrawVert * _282;
  struct ImDrawVert * _284;
  struct ImDrawVert * _286;
  struct ImDrawVert * _288;
  unsigned int vtx_current_idx.782_291;
  unsigned int vtx_current_idx.783_292;
  long int vtx_write.784_300;
  struct ImDrawVert * _301;
  long int _302;
  long int _303;
  long int _304;
  int _305;
  struct ImVector * _306;
  long int idx_write.785_308;
  short unsigned int * _309;
  long int _310;
  long int _311;
  long int _312;
  int _313;
  struct ImVector * _314;
  int _316;
  int _317;
  struct ImVector * _318;
  struct value_type & _320;
  unsigned int _321;
  int _322;
  int _323;
  unsigned int _324;
  unsigned int _325;
  int _329;
  unsigned int _330;

  <bb 2>:
  if (text_end_66(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _69 = strlen (text_begin_68(D));
  text_end_70 = text_begin_68(D) + _69;

  <bb 4>:
  # text_end_1 = PHI <text_end_66(D)(2), text_end_70(3)>
  _71 = pos.x;
  _72 = (int) _71;
  _73 = (float) _72;
  _75 = this_74(D)->DisplayOffset.x;
  _76 = _73 + _75;
  pos.x = _76;
  _78 = pos.y;
  _79 = (int) _78;
  _80 = (float) _79;
  _81 = this_74(D)->DisplayOffset.y;
  _82 = _80 + _81;
  pos.y = _82;
  x_84 = pos.x;
  y_85 = pos.y;
  _87 = clip_rect_86(D)->w;
  if (_87 < y_85)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  vtx_current_idx ={v} {CLOBBER};
  goto <bb 68> (<L95>);

  <bb 6>:
  _88 = this_74(D)->FontSize;
  scale_90 = size_89(D) / _88;
  _91 = this_74(D)->FontSize;
  line_height_92 = _91 * scale_90;
  word_wrap_enabled_94 = wrap_width_93(D) > 0.0;
  word_wrap_eol_95 = 0B;
  s_96 = text_begin_68(D);
  _97 = ~word_wrap_enabled_94;
  if (_97 != 0)
    goto <bb 7>;
  else
    goto <bb 11>;

  <bb 7>:
  _98 = y_85 + line_height_92;
  _99 = clip_rect_86(D)->y;
  if (_98 < _99)
    goto <bb 8>;
  else
    goto <bb 11>;

  <bb 8>:
  # s_13 = PHI <s_96(7), s_101(10)>
  if (s_13 >= text_end_1)
    goto <bb 11>;
  else
    goto <bb 9>;

  <bb 9>:
  _100 = *s_13;
  if (_100 == 10)
    goto <bb 11>;
  else
    goto <bb 10>;

  <bb 10>:
  s_101 = s_13 + 1;
  goto <bb 8>;

  <bb 11>:
  # s_14 = PHI <s_96(6), s_96(7), s_13(9), s_13(8)>
  text_end.761_102 = (long int) text_end_1;
  s.762_103 = (long int) s_14;
  _104 = text_end.761_102 - s.762_103;
  _105 = (int) _104;
  vtx_count_max_106 = _105 * 4;
  text_end.763_107 = (long int) text_end_1;
  s.764_108 = (long int) s_14;
  _109 = text_end.763_107 - s.764_108;
  _110 = (int) _109;
  idx_count_max_111 = _110 * 6;
  _113 = draw_list_112(D)->IdxBuffer.Size;
  idx_expected_size_114 = _113 + idx_count_max_111;
  ImDrawList::PrimReserve (draw_list_112(D), idx_count_max_111, vtx_count_max_106);
  vtx_write_116 = draw_list_112(D)->_VtxWritePtr;
  idx_write_117 = draw_list_112(D)->_IdxWritePtr;
  vtx_current_idx.765_118 = draw_list_112(D)->_VtxCurrentIdx;
  vtx_current_idx = vtx_current_idx.765_118;

  <bb 12>:
  # x_2 = PHI <x_84(11), x_4(66)>
  # y_5 = PHI <y_85(11), y_7(66)>
  # word_wrap_eol_8 = PHI <word_wrap_eol_95(11), word_wrap_eol_12(66)>
  # s_15 = PHI <s_14(11), s_22(66)>
  # vtx_write_23 = PHI <vtx_write_116(11), vtx_write_27(66)>
  # idx_write_28 = PHI <idx_write_117(11), idx_write_32(66)>
  if (s_15 >= text_end_1)
    goto <bb 67>;
  else
    goto <bb 13>;

  <bb 13>:
  if (word_wrap_enabled_94 != 0)
    goto <bb 14>;
  else
    goto <bb 28>;

  <bb 14>:
  if (word_wrap_eol_8 == 0B)
    goto <bb 15>;
  else
    goto <bb 17>;

  <bb 15>:
  _120 = pos.x;
  _121 = x_2 - _120;
  _122 = wrap_width_93(D) - _121;
  _124 = ImFont::CalcWordWrapPositionA (this_74(D), scale_90, s_15, text_end_1, _122);
  word_wrap_eol_125 = _124;
  if (word_wrap_eol_125 == s_15)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  word_wrap_eol_126 = word_wrap_eol_125 + 1;

  <bb 17>:
  # word_wrap_eol_9 = PHI <word_wrap_eol_8(14), word_wrap_eol_126(16), word_wrap_eol_125(15)>
  if (s_15 >= word_wrap_eol_9)
    goto <bb 18>;
  else
    goto <bb 27>;

  <bb 18>:
  x_127 = pos.x;
  y_128 = y_5 + line_height_92;
  word_wrap_eol_129 = 0B;

  <bb 19>:
  # s_16 = PHI <s_15(18), s_134(25)>
  if (s_16 >= text_end_1)
    goto <bb 26>;
  else
    goto <bb 20>;

  <bb 20>:
  c_130 = *s_16;
  _131 = (unsigned int) c_130;
  retval.766_133 = ImCharIsSpace (_131);
  if (retval.766_133 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  s_134 = s_16 + 1;
  goto <bb 25>;

  <bb 22>:
  if (c_130 == 10)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  s_135 = s_16 + 1;
  goto <bb 26>;

  <bb 24>:
  goto <bb 26>;

  <bb 25>:
  goto <bb 19>;

  <bb 26>:
  # s_17 = PHI <s_16(19), s_135(23), s_16(24)>
  goto <bb 64>;

  <bb 27>:

  <bb 28>:
  # word_wrap_eol_10 = PHI <word_wrap_eol_8(13), word_wrap_eol_9(27)>
  _136 = *s_15;
  c.767_137 = (unsigned int) _136;
  c = c.767_137;
  c.768_139 = c;
  if (c.768_139 <= 127)
    goto <bb 29>;
  else
    goto <bb 30>;

  <bb 29>:
  s_140 = s_15 + 1;
  goto <bb 32>;

  <bb 30>:
  _142 = ImTextCharFromUtf8 (&c, s_15, text_end_1);
  _143 = _142;
  _144 = (sizetype) _143;
  s_145 = s_15 + _144;
  c.769_146 = c;
  if (c.769_146 == 0)
    goto <bb 31>;
  else
    goto <bb 32>;

  <bb 31>:
  goto <bb 65>;

  <bb 32>:
  # s_18 = PHI <s_140(29), s_145(30)>
  c.770_147 = c;
  if (c.770_147 <= 31)
    goto <bb 33>;
  else
    goto <bb 44>;

  <bb 33>:
  c.771_148 = c;
  if (c.771_148 == 10)
    goto <bb 34>;
  else
    goto <bb 42>;

  <bb 34>:
  x_150 = pos.x;
  y_151 = y_5 + line_height_92;
  _152 = clip_rect_86(D)->w;
  if (_152 < y_151)
    goto <bb 35>;
  else
    goto <bb 36>;

  <bb 35>:
  goto <bb 65>;

  <bb 36>:
  _153 = ~word_wrap_enabled_94;
  if (_153 != 0)
    goto <bb 37>;
  else
    goto <bb 41>;

  <bb 37>:
  _154 = y_151 + line_height_92;
  _155 = clip_rect_86(D)->y;
  if (_154 < _155)
    goto <bb 38>;
  else
    goto <bb 41>;

  <bb 38>:
  # s_19 = PHI <s_18(37), s_157(40)>
  if (s_19 >= text_end_1)
    goto <bb 41>;
  else
    goto <bb 39>;

  <bb 39>:
  _156 = *s_19;
  if (_156 == 10)
    goto <bb 41>;
  else
    goto <bb 40>;

  <bb 40>:
  s_157 = s_19 + 1;
  goto <bb 38>;

  <bb 41>:
  # s_20 = PHI <s_18(36), s_18(37), s_19(39), s_19(38)>
  goto <bb 64>;

  <bb 42>:
  c.772_149 = c;
  if (c.772_149 == 13)
    goto <bb 43>;
  else
    goto <bb 44>;

  <bb 43>:
  goto <bb 64>;

  <bb 44>:
  char_width_158 = 0.0;
  c.773_159 = c;
  _160 = (short unsigned int) c.773_159;
  _161 = (int) _160;
  _163 = ImFont::FindGlyph (this_74(D), _161);
  glyph_164 = _163;
  if (glyph_164 != 0B)
    goto <bb 45>;
  else
    goto <bb 63>;

  <bb 45>:
  _165 = glyph_164->AdvanceX;
  char_width_166 = _165 * scale_90;
  c.774_167 = c;
  if (c.774_167 != 32)
    goto <bb 46>;
  else
    goto <bb 62>;

  <bb 46>:
  c.775_168 = c;
  if (c.775_168 != 9)
    goto <bb 47>;
  else
    goto <bb 62>;

  <bb 47>:
  _169 = glyph_164->X0;
  _170 = _169 * scale_90;
  x1_171 = _170 + x_2;
  _172 = glyph_164->X1;
  _173 = _172 * scale_90;
  x2_174 = _173 + x_2;
  _175 = glyph_164->Y0;
  _176 = _175 * scale_90;
  y1_177 = _176 + y_5;
  _178 = glyph_164->Y1;
  _179 = _178 * scale_90;
  y2_180 = _179 + y_5;
  _181 = clip_rect_86(D)->z;
  if (_181 >= x1_171)
    goto <bb 48>;
  else
    goto <bb 61>;

  <bb 48>:
  _182 = clip_rect_86(D)->x;
  if (_182 <= x2_174)
    goto <bb 49>;
  else
    goto <bb 61>;

  <bb 49>:
  u1_183 = glyph_164->U0;
  v1_184 = glyph_164->V0;
  u2_185 = glyph_164->U1;
  v2_186 = glyph_164->V1;
  if (cpu_fine_clip_187(D) != 0)
    goto <bb 50>;
  else
    goto <bb 60>;

  <bb 50>:
  _188 = clip_rect_86(D)->x;
  if (_188 > x1_171)
    goto <bb 51>;
  else
    goto <bb 52>;

  <bb 51>:
  _189 = clip_rect_86(D)->x;
  _190 = x2_174 - _189;
  _191 = x2_174 - x1_171;
  _192 = _190 / _191;
  _193 = 1.0e+0 - _192;
  _194 = u2_185 - u1_183;
  _195 = _193 * _194;
  u1_196 = _195 + u1_183;
  x1_197 = clip_rect_86(D)->x;

  <bb 52>:
  # x1_34 = PHI <x1_171(50), x1_197(51)>
  # u1_42 = PHI <u1_183(50), u1_196(51)>
  _198 = clip_rect_86(D)->y;
  if (_198 > y1_177)
    goto <bb 53>;
  else
    goto <bb 54>;

  <bb 53>:
  _199 = clip_rect_86(D)->y;
  _200 = y2_180 - _199;
  _201 = y2_180 - y1_177;
  _202 = _200 / _201;
  _203 = 1.0e+0 - _202;
  _204 = v2_186 - v1_184;
  _205 = _203 * _204;
  v1_206 = _205 + v1_184;
  y1_207 = clip_rect_86(D)->y;

  <bb 54>:
  # y1_38 = PHI <y1_177(52), y1_207(53)>
  # v1_44 = PHI <v1_184(52), v1_206(53)>
  _208 = clip_rect_86(D)->z;
  if (_208 < x2_174)
    goto <bb 55>;
  else
    goto <bb 56>;

  <bb 55>:
  _209 = clip_rect_86(D)->z;
  _210 = _209 - x1_34;
  _211 = x2_174 - x1_34;
  _212 = _210 / _211;
  _213 = u2_185 - u1_42;
  _214 = _212 * _213;
  u2_215 = _214 + u1_42;
  x2_216 = clip_rect_86(D)->z;

  <bb 56>:
  # x2_36 = PHI <x2_174(54), x2_216(55)>
  # u2_46 = PHI <u2_185(54), u2_215(55)>
  _217 = clip_rect_86(D)->w;
  if (_217 < y2_180)
    goto <bb 57>;
  else
    goto <bb 58>;

  <bb 57>:
  _218 = clip_rect_86(D)->w;
  _219 = _218 - y1_38;
  _220 = y2_180 - y1_38;
  _221 = _219 / _220;
  _222 = v2_186 - v1_44;
  _223 = _221 * _222;
  v2_224 = _223 + v1_44;
  y2_225 = clip_rect_86(D)->w;

  <bb 58>:
  # y2_40 = PHI <y2_180(56), y2_225(57)>
  # v2_48 = PHI <v2_186(56), v2_224(57)>
  if (y1_38 >= y2_40)
    goto <bb 59>;
  else
    goto <bb 60>;

  <bb 59>:
  x_226 = x_2 + char_width_166;
  goto <bb 64>;

  <bb 60>:
  # x1_35 = PHI <x1_171(49), x1_34(58)>
  # x2_37 = PHI <x2_174(49), x2_36(58)>
  # y1_39 = PHI <y1_177(49), y1_38(58)>
  # y2_41 = PHI <y2_180(49), y2_40(58)>
  # u1_43 = PHI <u1_183(49), u1_42(58)>
  # v1_45 = PHI <v1_184(49), v1_44(58)>
  # u2_47 = PHI <u2_185(49), u2_46(58)>
  # v2_49 = PHI <v2_186(49), v2_48(58)>
  vtx_current_idx.776_227 = vtx_current_idx;
  _228 = (short unsigned int) vtx_current_idx.776_227;
  *idx_write_28 = _228;
  _230 = idx_write_28 + 2;
  vtx_current_idx.777_231 = vtx_current_idx;
  _232 = (short unsigned int) vtx_current_idx.777_231;
  _233 = _232 + 1;
  *_230 = _233;
  _235 = idx_write_28 + 4;
  vtx_current_idx.778_236 = vtx_current_idx;
  _237 = (short unsigned int) vtx_current_idx.778_236;
  _238 = _237 + 2;
  *_235 = _238;
  _240 = idx_write_28 + 6;
  vtx_current_idx.779_241 = vtx_current_idx;
  _242 = (short unsigned int) vtx_current_idx.779_241;
  *_240 = _242;
  _244 = idx_write_28 + 8;
  vtx_current_idx.780_245 = vtx_current_idx;
  _246 = (short unsigned int) vtx_current_idx.780_245;
  _247 = _246 + 2;
  *_244 = _247;
  _249 = idx_write_28 + 10;
  vtx_current_idx.781_250 = vtx_current_idx;
  _251 = (short unsigned int) vtx_current_idx.781_250;
  _252 = _251 + 3;
  *_249 = _252;
  vtx_write_23->pos.x = x1_35;
  vtx_write_23->pos.y = y1_39;
  vtx_write_23->col = col_256(D);
  vtx_write_23->uv.x = u1_43;
  vtx_write_23->uv.y = v1_45;
  _260 = vtx_write_23 + 20;
  _260->pos.x = x2_37;
  _262 = vtx_write_23 + 20;
  _262->pos.y = y1_39;
  _264 = vtx_write_23 + 20;
  _264->col = col_256(D);
  _266 = vtx_write_23 + 20;
  _266->uv.x = u2_47;
  _268 = vtx_write_23 + 20;
  _268->uv.y = v1_45;
  _270 = vtx_write_23 + 40;
  _270->pos.x = x2_37;
  _272 = vtx_write_23 + 40;
  _272->pos.y = y2_41;
  _274 = vtx_write_23 + 40;
  _274->col = col_256(D);
  _276 = vtx_write_23 + 40;
  _276->uv.x = u2_47;
  _278 = vtx_write_23 + 40;
  _278->uv.y = v2_49;
  _280 = vtx_write_23 + 60;
  _280->pos.x = x1_35;
  _282 = vtx_write_23 + 60;
  _282->pos.y = y2_41;
  _284 = vtx_write_23 + 60;
  _284->col = col_256(D);
  _286 = vtx_write_23 + 60;
  _286->uv.x = u1_43;
  _288 = vtx_write_23 + 60;
  _288->uv.y = v2_49;
  vtx_write_290 = vtx_write_23 + 80;
  vtx_current_idx.782_291 = vtx_current_idx;
  vtx_current_idx.783_292 = vtx_current_idx.782_291 + 4;
  vtx_current_idx = vtx_current_idx.783_292;
  idx_write_294 = idx_write_28 + 12;

  <bb 61>:
  # vtx_write_24 = PHI <vtx_write_23(47), vtx_write_23(48), vtx_write_290(60)>
  # idx_write_29 = PHI <idx_write_28(47), idx_write_28(48), idx_write_294(60)>

  <bb 62>:
  # vtx_write_25 = PHI <vtx_write_23(45), vtx_write_23(46), vtx_write_24(61)>
  # idx_write_30 = PHI <idx_write_28(45), idx_write_28(46), idx_write_29(61)>

  <bb 63>:
  # vtx_write_26 = PHI <vtx_write_23(44), vtx_write_25(62)>
  # idx_write_31 = PHI <idx_write_28(44), idx_write_30(62)>
  # char_width_33 = PHI <char_width_158(44), char_width_166(62)>
  x_295 = x_2 + char_width_33;
  c ={v} {CLOBBER};
  goto <bb 66>;

  <bb 64>:
  # x_3 = PHI <x_127(26), x_150(41), x_2(43), x_226(59)>
  # y_6 = PHI <y_128(26), y_151(41), y_5(43), y_5(59)>
  # word_wrap_eol_11 = PHI <word_wrap_eol_129(26), word_wrap_eol_10(41), word_wrap_eol_10(43), word_wrap_eol_10(59)>
  # s_21 = PHI <s_17(26), s_20(41), s_18(43), s_18(59)>
  c ={v} {CLOBBER};
  goto <bb 66>;

  <bb 65>:
  c ={v} {CLOBBER};
  goto <bb 67>;

  <bb 66>:
  # x_4 = PHI <x_295(63), x_3(64)>
  # y_7 = PHI <y_5(63), y_6(64)>
  # word_wrap_eol_12 = PHI <word_wrap_eol_10(63), word_wrap_eol_11(64)>
  # s_22 = PHI <s_18(63), s_21(64)>
  # vtx_write_27 = PHI <vtx_write_26(63), vtx_write_23(64)>
  # idx_write_32 = PHI <idx_write_31(63), idx_write_28(64)>
  goto <bb 12>;

  <bb 67>:
  vtx_write.784_300 = (long int) vtx_write_23;
  _301 = draw_list_112(D)->VtxBuffer.Data;
  _302 = (long int) _301;
  _303 = vtx_write.784_300 - _302;
  _304 = _303 /[ex] 20;
  _305 = (int) _304;
  _306 = &draw_list_112(D)->VtxBuffer;
  ImVector<ImDrawVert>::resize (_306, _305);
  idx_write.785_308 = (long int) idx_write_28;
  _309 = draw_list_112(D)->IdxBuffer.Data;
  _310 = (long int) _309;
  _311 = idx_write.785_308 - _310;
  _312 = _311 /[ex] 2;
  _313 = (int) _312;
  _314 = &draw_list_112(D)->IdxBuffer;
  ImVector<short unsigned int>::resize (_314, _313);
  _316 = draw_list_112(D)->CmdBuffer.Size;
  _317 = _316 + -1;
  _318 = &draw_list_112(D)->CmdBuffer;
  _320 = ImVector<ImDrawCmd>::operator[] (_318, _317);
  _321 = _320->ElemCount;
  _322 = draw_list_112(D)->IdxBuffer.Size;
  _323 = idx_expected_size_114 - _322;
  _324 = (unsigned int) _323;
  _325 = _321 - _324;
  _320->ElemCount = _325;
  draw_list_112(D)->_VtxWritePtr = vtx_write_23;
  draw_list_112(D)->_IdxWritePtr = idx_write_28;
  _329 = draw_list_112(D)->VtxBuffer.Size;
  _330 = (unsigned int) _329;
  draw_list_112(D)->_VtxCurrentIdx = _330;
  vtx_current_idx ={v} {CLOBBER};

<L95>:
  return;

}



;; Function float ImAcos01(float) (_ZL8ImAcos01f, funcdef_no=805, decl_uid=19446, cgraph_uid=704, symbol_order=718)

float ImAcos01(float) (float x)
{
  float D.31684;
  float _1;
  float _4;
  float _6;
  float _8;

  <bb 2>:
  if (x_3(D) <= 0.0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _4 = 1.57079637050628662109375e+0;
  goto <bb 7> (<L4>);

  <bb 4>:
  if (x_3(D) >= 1.0e+0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _6 = 0.0;
  goto <bb 7> (<L4>);

  <bb 6>:
  _8 = acosf (x_3(D));

  # _1 = PHI <_4(3), _6(5), _8(6)>
<L4>:
  return _1;

}



;; Function void ImGui::RenderRectFilledRangeH(ImDrawList*, const ImRect&, ImU32, float, float, float) (_ZN5ImGui22RenderRectFilledRangeHEP10ImDrawListRK6ImRectjfff, funcdef_no=806, decl_uid=13926, cgraph_uid=705, symbol_order=719)

void ImGui::RenderRectFilledRangeH(ImDrawList*, const ImRect&, ImU32, float, float, float) (struct ImDrawList * draw_list, const struct ImRect & rect, ImU32 col, float x_start_norm, float x_end_norm, float rounding)
{
  const float x1;
  const float arc1_e;
  const float arc1_b;
  const float x0;
  const float arc0_e;
  const float arc0_b;
  const float inv_rounding;
  struct ImVec2 p1;
  struct ImVec2 p0;
  float D.31659;
  float D.31658;
  struct ImVec2 D.19478;
  float D.31657;
  float D.31656;
  struct ImVec2 D.19477;
  float D.31655;
  float D.31654;
  float D.31653;
  float D.31652;
  struct ImVec2 D.19476;
  float D.31651;
  float D.31650;
  struct ImVec2 D.19475;
  float D.31644;
  struct ImVec2 D.19474;
  float D.31643;
  struct ImVec2 D.19473;
  float D.31640;
  float D.31639;
  float D.31638;
  float D.31637;
  float D.31636;
  float D.31635;
  float D.31634;
  float D.31633;
  float D.31632;
  float D.31631;
  float D.31630;
  float D.31629;
  float D.31628;
  float D.31625;
  float D.31624;
  float D.31623;
  float D.31622;
  float D.31621;
  struct ImVec2 D.19469;
  float D.31620;
  float D.31619;
  float D.31618;
  float D.31617;
  struct ImVec2 D.19468;
  float D.31616;
  float D.31615;
  float D.31614;
  float D.31613;
  struct ImVec2 D.19467;
  float D.31612;
  float D.31611;
  struct ImVec2 D.19466;
  float D.31605;
  struct ImVec2 D.19465;
  float D.31604;
  struct ImVec2 D.19464;
  float D.31601;
  float D.31600;
  float D.31599;
  float D.31598;
  float D.31597;
  float D.31596;
  float D.31595;
  float D.31594;
  float D.31593;
  float D.31592;
  float D.31591;
  float D.31590;
  float D.31589;
  float D.31588;
  float D.31587;
  float D.31586;
  float D.31585;
  float D.31584;
  float D.31583;
  float D.31582;
  float D.31581;
  float D.31580;
  float D.31579;
  float D.31576;
  float D.31575;
  float D.31574;
  float x_end_norm.791;
  float D.31572;
  float D.31571;
  float D.31570;
  float D.31569;
  float x_start_norm.790;
  float D.31567;
  float x_end_norm.789;
  float x_start_norm.788;
  float x_start_norm.787;
  float x_end_norm.786;
  float x_end_norm.786_9;
  float x_start_norm.787_10;
  float x_start_norm.788_11;
  float x_end_norm.789_12;
  float _15;
  float x_start_norm.790_16;
  float _17;
  float _18;
  float _20;
  float _22;
  float x_end_norm.791_23;
  float _24;
  float _25;
  float _27;
  float _30;
  float _31;
  float _32;
  float _33;
  float _34;
  float _35;
  float _36;
  float _37;
  float _39;
  float _40;
  float _44;
  float _45;
  float _46;
  float _47;
  float _48;
  float _51;
  float _52;
  float _53;
  float _54;
  float _55;
  float _58;
  float _59;
  float _60;
  float _63;
  float _68;
  float _74;
  float _75;
  float _79;
  float _80;
  float _86;
  float _87;
  float _88;
  float _89;
  float _93;
  float _94;
  float _95;
  float _96;
  float _102;
  float _103;
  float _104;
  float _105;
  float _106;
  float _107;
  float _108;
  float _109;
  float _112;
  float _113;
  float _114;
  float _115;
  float _116;
  float _119;
  float _120;
  float _121;
  float _124;
  float _128;
  float _134;
  float _135;
  float _139;
  float _140;
  float _146;
  float _147;
  float _148;
  float _149;
  float _153;
  float _154;

  <bb 2>:
  x_end_norm.786_9 = x_end_norm;
  x_start_norm.787_10 = x_start_norm;
  if (x_end_norm.786_9 == x_start_norm.787_10)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 23>;

  <bb 4>:
  x_start_norm.788_11 = x_start_norm;
  x_end_norm.789_12 = x_end_norm;
  if (x_start_norm.788_11 > x_end_norm.789_12)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  ImSwap (&x_start_norm, &x_end_norm);

  <bb 6>:
  _15 = rect_14(D)->Min.y;
  x_start_norm.790_16 = x_start_norm;
  _17 = rect_14(D)->Max.x;
  _18 = rect_14(D)->Min.x;
  _20 = ImLerp (_18, _17, x_start_norm.790_16);
  ImVec2::ImVec2 (&p0, _20, _15);
  _22 = rect_14(D)->Max.y;
  x_end_norm.791_23 = x_end_norm;
  _24 = rect_14(D)->Max.x;
  _25 = rect_14(D)->Min.x;
  _27 = ImLerp (_25, _24, x_end_norm.791_23);
  ImVec2::ImVec2 (&p1, _27, _22);
  if (rounding_29(D) == 0.0)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  ImDrawList::AddRectFilled (draw_list_65(D), &p0, &p1, col_160(D), 0.0, 15);
  goto <bb 23>;

  <bb 8>:
  _30 = rect_14(D)->Max.y;
  _31 = rect_14(D)->Min.y;
  _32 = _30 - _31;
  _33 = _32 * 5.0e-1;
  _34 = rect_14(D)->Max.x;
  _35 = rect_14(D)->Min.x;
  _36 = _34 - _35;
  _37 = _36 * 5.0e-1;
  _39 = ImMin (_37, _33);
  _40 = _39 - 1.0e+0;
  rounding_42 = ImClamp (_40, 0.0, rounding_29(D));
  inv_rounding_43 = 1.0e+0 / rounding_42;
  _44 = p0.x;
  _45 = rect_14(D)->Min.x;
  _46 = _44 - _45;
  _47 = _46 * inv_rounding_43;
  _48 = 1.0e+0 - _47;
  arc0_b_50 = ImAcos01 (_48);
  _51 = p1.x;
  _52 = rect_14(D)->Min.x;
  _53 = _51 - _52;
  _54 = _53 * inv_rounding_43;
  _55 = 1.0e+0 - _54;
  arc0_e_57 = ImAcos01 (_55);
  _58 = rect_14(D)->Min.x;
  _59 = _58 + rounding_42;
  _60 = p0.x;
  x0_62 = ImMax (_60, _59);
  if (arc0_b_50 == arc0_e_57)
    goto <bb 9>;
  else
    goto <bb 10>;

  <bb 9>:
  _63 = p1.y;
  ImVec2::ImVec2 (&D.19464, x0_62, _63);
  ImDrawList::PathLineTo (draw_list_65(D), &D.19464);
  D.19464 ={v} {CLOBBER};
  _68 = p0.y;
  ImVec2::ImVec2 (&D.19465, x0_62, _68);
  ImDrawList::PathLineTo (draw_list_65(D), &D.19465);
  D.19465 ={v} {CLOBBER};
  goto <bb 14>;

  <bb 10>:
  if (arc0_b_50 == 0.0)
    goto <bb 11>;
  else
    goto <bb 13>;

  <bb 11>:
  if (arc0_e_57 == 1.57079637050628662109375e+0)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _74 = p1.y;
  _75 = _74 - rounding_42;
  ImVec2::ImVec2 (&D.19466, x0_62, _75);
  ImDrawList::PathArcToFast (draw_list_65(D), &D.19466, rounding_42, 3, 6);
  D.19466 ={v} {CLOBBER};
  _79 = p0.y;
  _80 = _79 + rounding_42;
  ImVec2::ImVec2 (&D.19467, x0_62, _80);
  ImDrawList::PathArcToFast (draw_list_65(D), &D.19467, rounding_42, 6, 9);
  D.19467 ={v} {CLOBBER};
  goto <bb 14>;

  <bb 13>:
  _86 = 3.1415927410125732421875e+0 - arc0_b_50;
  _87 = 3.1415927410125732421875e+0 - arc0_e_57;
  _88 = p1.y;
  _89 = _88 - rounding_42;
  ImVec2::ImVec2 (&D.19468, x0_62, _89);
  ImDrawList::PathArcTo (draw_list_65(D), &D.19468, rounding_42, _87, _86, 3);
  D.19468 ={v} {CLOBBER};
  _93 = arc0_e_57 + 3.1415927410125732421875e+0;
  _94 = arc0_b_50 + 3.1415927410125732421875e+0;
  _95 = p0.y;
  _96 = _95 + rounding_42;
  ImVec2::ImVec2 (&D.19469, x0_62, _96);
  ImDrawList::PathArcTo (draw_list_65(D), &D.19469, rounding_42, _94, _93, 3);
  D.19469 ={v} {CLOBBER};

  <bb 14>:
  _102 = p1.x;
  _103 = rect_14(D)->Min.x;
  _104 = _103 + rounding_42;
  if (_102 > _104)
    goto <bb 15>;
  else
    goto <bb 22>;

  <bb 15>:
  _105 = rect_14(D)->Max.x;
  _106 = p1.x;
  _107 = _105 - _106;
  _108 = _107 * inv_rounding_43;
  _109 = 1.0e+0 - _108;
  arc1_b_111 = ImAcos01 (_109);
  _112 = rect_14(D)->Max.x;
  _113 = p0.x;
  _114 = _112 - _113;
  _115 = _114 * inv_rounding_43;
  _116 = 1.0e+0 - _115;
  arc1_e_118 = ImAcos01 (_116);
  _119 = rect_14(D)->Max.x;
  _120 = _119 - rounding_42;
  _121 = p1.x;
  x1_123 = ImMin (_121, _120);
  if (arc1_b_111 == arc1_e_118)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _124 = p0.y;
  ImVec2::ImVec2 (&D.19473, x1_123, _124);
  ImDrawList::PathLineTo (draw_list_65(D), &D.19473);
  D.19473 ={v} {CLOBBER};
  _128 = p1.y;
  ImVec2::ImVec2 (&D.19474, x1_123, _128);
  ImDrawList::PathLineTo (draw_list_65(D), &D.19474);
  D.19474 ={v} {CLOBBER};
  goto <bb 21>;

  <bb 17>:
  if (arc1_b_111 == 0.0)
    goto <bb 18>;
  else
    goto <bb 20>;

  <bb 18>:
  if (arc1_e_118 == 1.57079637050628662109375e+0)
    goto <bb 19>;
  else
    goto <bb 20>;

  <bb 19>:
  _134 = p0.y;
  _135 = _134 + rounding_42;
  ImVec2::ImVec2 (&D.19475, x1_123, _135);
  ImDrawList::PathArcToFast (draw_list_65(D), &D.19475, rounding_42, 9, 12);
  D.19475 ={v} {CLOBBER};
  _139 = p1.y;
  _140 = _139 - rounding_42;
  ImVec2::ImVec2 (&D.19476, x1_123, _140);
  ImDrawList::PathArcToFast (draw_list_65(D), &D.19476, rounding_42, 0, 3);
  D.19476 ={v} {CLOBBER};
  goto <bb 21>;

  <bb 20>:
  _146 = -arc1_b_111;
  _147 = -arc1_e_118;
  _148 = p0.y;
  _149 = _148 + rounding_42;
  ImVec2::ImVec2 (&D.19477, x1_123, _149);
  ImDrawList::PathArcTo (draw_list_65(D), &D.19477, rounding_42, _147, _146, 3);
  D.19477 ={v} {CLOBBER};
  _153 = p1.y;
  _154 = _153 - rounding_42;
  ImVec2::ImVec2 (&D.19478, x1_123, _154);
  ImDrawList::PathArcTo (draw_list_65(D), &D.19478, rounding_42, arc1_b_111, arc1_e_118, 3);
  D.19478 ={v} {CLOBBER};

  <bb 21>:

  <bb 22>:
  ImDrawList::PathFillConvex (draw_list_65(D), col_160(D));
  p0 ={v} {CLOBBER};
  p1 ={v} {CLOBBER};
  goto <bb 24> (<L26>);

  <bb 23>:
  p0 ={v} {CLOBBER};
  p1 ={v} {CLOBBER};

<L26>:
  return;

}



;; Function unsigned int stb_decompress_length(const unsigned char*) (_ZL21stb_decompress_lengthPKh, funcdef_no=807, decl_uid=18685, cgraph_uid=706, symbol_order=720)

unsigned int stb_decompress_length(const unsigned char*) (const unsigned char * input)
{
  int D.31706;
  int D.31705;
  unsigned char D.31704;
  const unsigned char * D.31703;
  int D.31702;
  int D.31701;
  int D.31700;
  unsigned char D.31699;
  const unsigned char * D.31698;
  int D.31697;
  int D.31696;
  int D.31695;
  unsigned char D.31694;
  const unsigned char * D.31693;
  int D.31692;
  int D.31691;
  unsigned char D.31690;
  const unsigned char * D.31689;
  unsigned int D.31688;
  const unsigned char * _2;
  unsigned char _4;
  int _5;
  int _6;
  const unsigned char * _7;
  unsigned char _8;
  int _9;
  int _10;
  int _11;
  const unsigned char * _12;
  unsigned char _13;
  int _14;
  int _15;
  int _16;
  const unsigned char * _17;
  unsigned char _18;
  int _19;
  int _20;
  unsigned int _21;

  <bb 2>:
  _2 = input_1(D) + 8;
  _4 = *_2;
  _5 = (int) _4;
  _6 = _5 << 24;
  _7 = input_1(D) + 9;
  _8 = *_7;
  _9 = (int) _8;
  _10 = _9 << 16;
  _11 = _6 + _10;
  _12 = input_1(D) + 10;
  _13 = *_12;
  _14 = (int) _13;
  _15 = _14 << 8;
  _16 = _11 + _15;
  _17 = input_1(D) + 11;
  _18 = *_17;
  _19 = (int) _18;
  _20 = _16 + _19;
  _21 = (unsigned int) _20;

<L0>:
  return _21;

}



;; Function void stb__match(const unsigned char*, unsigned int) (_ZL10stb__matchPKhj, funcdef_no=808, decl_uid=19488, cgraph_uid=707, symbol_order=725)

void stb__match(const unsigned char*, unsigned int) (const unsigned char * data, unsigned int length)
{
  static const char __PRETTY_FUNCTION__[52] = "void stb__match(const unsigned char*, unsigned int)";
  unsigned char D.31737;
  const unsigned char * data.803;
  unsigned char * D.31735;
  unsigned char * stb__dout.802;
  unsigned char * stb__dout.801;
  unsigned int length.800;
  bool retval.799;
  unsigned char * D.31728;
  unsigned char * stb__barrier_out_e.798;
  unsigned char * stb__barrier_out_b.797;
  unsigned char * D.31723;
  sizetype D.31722;
  unsigned char * stb__dout.796;
  unsigned char * stb__barrier_out_e.795;
  unsigned char * D.31717;
  sizetype D.31716;
  unsigned char * stb__dout.794;
  unsigned char * stb__barrier_out_e.793;
  unsigned char * D.31710;
  sizetype D.31709;
  unsigned char * stb__dout.792;
  unsigned char * stb__dout.792_6;
  sizetype _8;
  unsigned char * _9;
  unsigned char * stb__barrier_out_e.793_10;
  unsigned char * stb__dout.794_11;
  sizetype _12;
  unsigned char * _13;
  unsigned char * stb__barrier_out_e.795_14;
  unsigned char * stb__dout.796_15;
  sizetype _16;
  unsigned char * _17;
  unsigned char * stb__barrier_out_b.797_19;
  unsigned char * stb__barrier_out_e.798_21;
  unsigned char * _22;
  unsigned int length.800_24;
  bool retval.799_26;
  unsigned char * stb__dout.801_27;
  unsigned char * stb__dout.802_28;
  unsigned char * _29;
  const unsigned char * data.803_31;
  unsigned char _33;

  <bb 2>:
  stb__dout.792_6 = stb__dout;
  _8 = (sizetype) length_7(D);
  _9 = stb__dout.792_6 + _8;
  stb__barrier_out_e.793_10 = stb__barrier_out_e;
  if (_9 <= stb__barrier_out_e.793_10)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("stb__dout + length <= stb__barrier_out_e", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 2771, &__PRETTY_FUNCTION__);

  <bb 4>:
  stb__dout.794_11 = stb__dout;
  _12 = (sizetype) length_7(D);
  _13 = stb__dout.794_11 + _12;
  stb__barrier_out_e.795_14 = stb__barrier_out_e;
  if (_13 > stb__barrier_out_e.795_14)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  stb__dout.796_15 = stb__dout;
  _16 = (sizetype) length_7(D);
  _17 = stb__dout.796_15 + _16;
  stb__dout = _17;
  goto <bb 10> (<L10>);

  <bb 6>:
  stb__barrier_out_b.797_19 = stb__barrier_out_b;
  if (data_20(D) < stb__barrier_out_b.797_19)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  stb__barrier_out_e.798_21 = stb__barrier_out_e;
  _22 = stb__barrier_out_e.798_21 + 1;
  stb__dout = _22;
  goto <bb 10> (<L10>);

  <bb 8>:
  # data_1 = PHI <data_20(D)(6), data_32(9)>
  # length_2 = PHI <length_7(D)(6), length_25(9)>
  length.800_24 = length_2;
  length_25 = length.800_24 + 4294967295;
  retval.799_26 = length.800_24 != 0;
  if (retval.799_26 != 0)
    goto <bb 9>;
  else
    goto <bb 10> (<L10>);

  <bb 9>:
  stb__dout.801_27 = stb__dout;
  stb__dout.802_28 = stb__dout.801_27;
  _29 = stb__dout.802_28 + 1;
  stb__dout = _29;
  data.803_31 = data_1;
  data_32 = data.803_31 + 1;
  _33 = *data.803_31;
  *stb__dout.802_28 = _33;
  goto <bb 8>;

<L10>:
  return;

}



;; Function void stb__lit(const unsigned char*, unsigned int) (_ZL8stb__litPKhj, funcdef_no=809, decl_uid=19495, cgraph_uid=708, symbol_order=726)

void stb__lit(const unsigned char*, unsigned int) (const unsigned char * data, unsigned int length)
{
  static const char __PRETTY_FUNCTION__[50] = "void stb__lit(const unsigned char*, unsigned int)";
  unsigned char * D.31764;
  sizetype D.31763;
  unsigned char * stb__dout.812;
  unsigned char * stb__dout.811;
  long unsigned int D.31760;
  unsigned char * D.31759;
  unsigned char * stb__barrier_out_e.810;
  const unsigned char * stb__barrier_in_b.809;
  unsigned char * D.31754;
  sizetype D.31753;
  unsigned char * stb__dout.808;
  unsigned char * stb__barrier_out_e.807;
  unsigned char * D.31748;
  sizetype D.31747;
  unsigned char * stb__dout.806;
  unsigned char * stb__barrier_out_e.805;
  unsigned char * D.31741;
  sizetype D.31740;
  unsigned char * stb__dout.804;
  unsigned char * stb__dout.804_3;
  sizetype _5;
  unsigned char * _6;
  unsigned char * stb__barrier_out_e.805_7;
  unsigned char * stb__dout.806_8;
  sizetype _9;
  unsigned char * _10;
  unsigned char * stb__barrier_out_e.807_11;
  unsigned char * stb__dout.808_12;
  sizetype _13;
  unsigned char * _14;
  const unsigned char * stb__barrier_in_b.809_16;
  unsigned char * stb__barrier_out_e.810_18;
  unsigned char * _19;
  long unsigned int _21;
  unsigned char * stb__dout.811_22;
  unsigned char * stb__dout.812_24;
  sizetype _25;
  unsigned char * _26;

  <bb 2>:
  stb__dout.804_3 = stb__dout;
  _5 = (sizetype) length_4(D);
  _6 = stb__dout.804_3 + _5;
  stb__barrier_out_e.805_7 = stb__barrier_out_e;
  if (_6 <= stb__barrier_out_e.805_7)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("stb__dout + length <= stb__barrier_out_e", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 2779, &__PRETTY_FUNCTION__);

  <bb 4>:
  stb__dout.806_8 = stb__dout;
  _9 = (sizetype) length_4(D);
  _10 = stb__dout.806_8 + _9;
  stb__barrier_out_e.807_11 = stb__barrier_out_e;
  if (_10 > stb__barrier_out_e.807_11)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  stb__dout.808_12 = stb__dout;
  _13 = (sizetype) length_4(D);
  _14 = stb__dout.808_12 + _13;
  stb__dout = _14;
  goto <bb 9> (<L7>);

  <bb 6>:
  stb__barrier_in_b.809_16 = stb__barrier_in_b;
  if (data_17(D) < stb__barrier_in_b.809_16)
    goto <bb 7>;
  else
    goto <bb 8>;

  <bb 7>:
  stb__barrier_out_e.810_18 = stb__barrier_out_e;
  _19 = stb__barrier_out_e.810_18 + 1;
  stb__dout = _19;
  goto <bb 9> (<L7>);

  <bb 8>:
  _21 = (long unsigned int) length_4(D);
  stb__dout.811_22 = stb__dout;
  memcpy (stb__dout.811_22, data_17(D), _21);
  stb__dout.812_24 = stb__dout;
  _25 = (sizetype) length_4(D);
  _26 = stb__dout.812_24 + _25;
  stb__dout = _26;

<L7>:
  return;

}



;; Function const unsigned char* stb_decompress_token(const unsigned char*) (_ZL20stb_decompress_tokenPKh, funcdef_no=810, decl_uid=19499, cgraph_uid=709, symbol_order=727)

const unsigned char* stb_decompress_token(const unsigned char*) (const unsigned char * i)
{
  const unsigned char * D.31982;
  unsigned char * D.31980;
  sizetype D.31979;
  sizetype D.31978;
  int D.31977;
  int D.31976;
  int D.31975;
  unsigned char D.31974;
  const unsigned char * D.31973;
  int D.31972;
  int D.31971;
  unsigned char D.31970;
  const unsigned char * D.31969;
  int D.31968;
  int D.31967;
  unsigned char D.31966;
  const unsigned char * D.31965;
  unsigned char * stb__dout.818;
  unsigned int D.31963;
  int D.31962;
  int D.31961;
  int D.31960;
  unsigned char D.31959;
  const unsigned char * D.31958;
  int D.31957;
  int D.31956;
  unsigned char D.31955;
  const unsigned char * D.31954;
  unsigned char D.31951;
  unsigned char * D.31949;
  sizetype D.31948;
  sizetype D.31947;
  int D.31946;
  int D.31945;
  int D.31944;
  unsigned char D.31943;
  const unsigned char * D.31942;
  int D.31941;
  int D.31940;
  unsigned char D.31939;
  const unsigned char * D.31938;
  int D.31937;
  int D.31936;
  unsigned char D.31935;
  const unsigned char * D.31934;
  unsigned char * stb__dout.817;
  unsigned int D.31932;
  int D.31931;
  int D.31930;
  unsigned char D.31929;
  const unsigned char * D.31928;
  unsigned char D.31925;
  sizetype D.31923;
  int D.31922;
  int D.31921;
  int D.31920;
  unsigned char D.31919;
  const unsigned char * D.31918;
  int D.31917;
  int D.31916;
  unsigned char D.31915;
  const unsigned char * D.31914;
  const unsigned char * D.31913;
  unsigned int D.31912;
  int D.31911;
  int D.31910;
  int D.31909;
  unsigned char D.31908;
  const unsigned char * D.31907;
  int D.31906;
  int D.31905;
  unsigned char D.31904;
  const unsigned char * D.31903;
  unsigned char D.31900;
  sizetype D.31898;
  int D.31897;
  int D.31896;
  int D.31895;
  unsigned char D.31894;
  const unsigned char * D.31893;
  int D.31892;
  int D.31891;
  unsigned char D.31890;
  const unsigned char * D.31889;
  unsigned int D.31888;
  int D.31887;
  int D.31886;
  int D.31885;
  unsigned char D.31884;
  const unsigned char * D.31883;
  int D.31882;
  int D.31881;
  unsigned char D.31880;
  int D.31877;
  unsigned char D.31876;
  unsigned char * D.31874;
  sizetype D.31873;
  sizetype D.31872;
  int D.31871;
  int D.31870;
  int D.31869;
  int D.31868;
  unsigned char D.31867;
  const unsigned char * D.31866;
  int D.31865;
  int D.31864;
  unsigned char D.31863;
  const unsigned char * D.31862;
  int D.31861;
  int D.31860;
  unsigned char D.31859;
  unsigned char * stb__dout.816;
  unsigned int D.31857;
  int D.31856;
  int D.31855;
  int D.31854;
  unsigned char D.31853;
  const unsigned char * D.31852;
  int D.31851;
  int D.31850;
  unsigned char D.31849;
  const unsigned char * D.31848;
  int D.31845;
  unsigned char D.31844;
  unsigned char * D.31842;
  sizetype D.31841;
  sizetype D.31840;
  int D.31839;
  int D.31838;
  int D.31837;
  int D.31836;
  unsigned char D.31835;
  const unsigned char * D.31834;
  int D.31833;
  int D.31832;
  unsigned char D.31831;
  const unsigned char * D.31830;
  int D.31829;
  int D.31828;
  unsigned char D.31827;
  unsigned char * stb__dout.815;
  unsigned int D.31825;
  int D.31824;
  int D.31823;
  unsigned char D.31822;
  const unsigned char * D.31821;
  int D.31818;
  unsigned char D.31817;
  sizetype D.31815;
  int D.31814;
  int D.31813;
  unsigned char D.31812;
  const unsigned char * D.31811;
  unsigned int D.31810;
  int D.31809;
  int D.31808;
  unsigned char D.31807;
  unsigned char * D.31805;
  sizetype D.31804;
  sizetype D.31803;
  int D.31802;
  int D.31801;
  int D.31800;
  unsigned char D.31799;
  const unsigned char * D.31798;
  int D.31797;
  int D.31796;
  unsigned char D.31795;
  unsigned char * stb__dout.814;
  unsigned int D.31793;
  int D.31792;
  int D.31791;
  unsigned char D.31790;
  const unsigned char * D.31789;
  int D.31786;
  unsigned char D.31785;
  unsigned char * D.31783;
  sizetype D.31782;
  sizetype D.31781;
  unsigned char D.31780;
  const unsigned char * D.31779;
  unsigned char * stb__dout.813;
  unsigned int D.31777;
  int D.31776;
  int D.31775;
  unsigned char D.31774;
  int D.31771;
  unsigned char D.31770;
  int D.31767;
  unsigned char D.31766;
  unsigned char _7;
  int _8;
  unsigned char _9;
  int _10;
  unsigned char _11;
  int _12;
  int _13;
  unsigned int _14;
  unsigned char * stb__dout.813_15;
  const unsigned char * _16;
  unsigned char _17;
  sizetype _18;
  sizetype _19;
  unsigned char * _20;
  unsigned char _23;
  int _24;
  const unsigned char * _25;
  unsigned char _26;
  int _27;
  int _28;
  unsigned int _29;
  unsigned char * stb__dout.814_30;
  unsigned char _31;
  int _32;
  int _33;
  const unsigned char * _34;
  unsigned char _35;
  int _36;
  int _37;
  int _38;
  sizetype _39;
  sizetype _40;
  unsigned char * _41;
  unsigned char _44;
  int _45;
  int _46;
  unsigned int _47;
  const unsigned char * _48;
  unsigned char _50;
  int _51;
  int _52;
  sizetype _53;
  unsigned char _55;
  int _56;
  const unsigned char * _57;
  unsigned char _58;
  int _59;
  int _60;
  unsigned int _61;
  unsigned char * stb__dout.815_62;
  unsigned char _63;
  int _64;
  int _65;
  const unsigned char * _66;
  unsigned char _67;
  int _68;
  int _69;
  const unsigned char * _70;
  unsigned char _71;
  int _72;
  int _73;
  int _74;
  int _75;
  sizetype _76;
  sizetype _77;
  unsigned char * _78;
  unsigned char _81;
  int _82;
  const unsigned char * _83;
  unsigned char _84;
  int _85;
  int _86;
  const unsigned char * _87;
  unsigned char _88;
  int _89;
  int _90;
  int _91;
  unsigned int _92;
  unsigned char * stb__dout.816_93;
  unsigned char _94;
  int _95;
  int _96;
  const unsigned char * _97;
  unsigned char _98;
  int _99;
  int _100;
  const unsigned char * _101;
  unsigned char _102;
  int _103;
  int _104;
  int _105;
  int _106;
  sizetype _107;
  sizetype _108;
  unsigned char * _109;
  unsigned char _112;
  int _113;
  unsigned char _114;
  int _115;
  int _116;
  const unsigned char * _117;
  unsigned char _118;
  int _119;
  int _120;
  int _121;
  unsigned int _122;
  const unsigned char * _123;
  unsigned char _125;
  int _126;
  int _127;
  const unsigned char * _128;
  unsigned char _129;
  int _130;
  int _131;
  int _132;
  sizetype _133;
  unsigned char _135;
  const unsigned char * _136;
  unsigned char _137;
  int _138;
  int _139;
  const unsigned char * _140;
  unsigned char _141;
  int _142;
  int _143;
  int _144;
  unsigned int _145;
  const unsigned char * _146;
  const unsigned char * _148;
  unsigned char _149;
  int _150;
  int _151;
  const unsigned char * _152;
  unsigned char _153;
  int _154;
  int _155;
  int _156;
  sizetype _157;
  unsigned char _159;
  const unsigned char * _160;
  unsigned char _161;
  int _162;
  int _163;
  unsigned int _164;
  unsigned char * stb__dout.817_165;
  const unsigned char * _166;
  unsigned char _167;
  int _168;
  int _169;
  const unsigned char * _170;
  unsigned char _171;
  int _172;
  int _173;
  const unsigned char * _174;
  unsigned char _175;
  int _176;
  int _177;
  int _178;
  sizetype _179;
  sizetype _180;
  unsigned char * _181;
  unsigned char _184;
  const unsigned char * _185;
  unsigned char _186;
  int _187;
  int _188;
  const unsigned char * _189;
  unsigned char _190;
  int _191;
  int _192;
  int _193;
  unsigned int _194;
  unsigned char * stb__dout.818_195;
  const unsigned char * _196;
  unsigned char _197;
  int _198;
  int _199;
  const unsigned char * _200;
  unsigned char _201;
  int _202;
  int _203;
  const unsigned char * _204;
  unsigned char _205;
  int _206;
  int _207;
  int _208;
  sizetype _209;
  sizetype _210;
  unsigned char * _211;
  const unsigned char * _214;

  <bb 2>:
  _7 = *i_6(D);
  _8 = (int) _7;
  if (_8 > 31)
    goto <bb 3>;
  else
    goto <bb 9>;

  <bb 3>:
  _9 = *i_6(D);
  _10 = (int) _9;
  if (_10 > 127)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _11 = *i_6(D);
  _12 = (int) _11;
  _13 = _12 + -127;
  _14 = (unsigned int) _13;
  stb__dout.813_15 = stb__dout;
  _16 = i_6(D) + 1;
  _17 = *_16;
  _18 = (sizetype) _17;
  _19 = ~_18;
  _20 = stb__dout.813_15 + _19;
  stb__match (_20, _14);
  i_22 = i_6(D) + 2;
  goto <bb 8>;

  <bb 5>:
  _23 = *i_6(D);
  _24 = (int) _23;
  if (_24 > 63)
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  _25 = i_6(D) + 2;
  _26 = *_25;
  _27 = (int) _26;
  _28 = _27 + 1;
  _29 = (unsigned int) _28;
  stb__dout.814_30 = stb__dout;
  _31 = *i_6(D);
  _32 = (int) _31;
  _33 = _32 << 8;
  _34 = i_6(D) + 1;
  _35 = *_34;
  _36 = (int) _35;
  _37 = _33 + _36;
  _38 = _37 + -16384;
  _39 = (sizetype) _38;
  _40 = ~_39;
  _41 = stb__dout.814_30 + _40;
  stb__match (_41, _29);
  i_43 = i_6(D) + 3;
  goto <bb 8>;

  <bb 7>:
  _44 = *i_6(D);
  _45 = (int) _44;
  _46 = _45 + -31;
  _47 = (unsigned int) _46;
  _48 = i_6(D) + 1;
  stb__lit (_48, _47);
  _50 = *i_6(D);
  _51 = (int) _50;
  _52 = _51 + -30;
  _53 = (sizetype) _52;
  i_54 = i_6(D) + _53;

  <bb 8>:
  # i_1 = PHI <i_22(4), i_43(6), i_54(7)>
  goto <bb 21>;

  <bb 9>:
  _55 = *i_6(D);
  _56 = (int) _55;
  if (_56 > 23)
    goto <bb 10>;
  else
    goto <bb 11>;

  <bb 10>:
  _57 = i_6(D) + 3;
  _58 = *_57;
  _59 = (int) _58;
  _60 = _59 + 1;
  _61 = (unsigned int) _60;
  stb__dout.815_62 = stb__dout;
  _63 = *i_6(D);
  _64 = (int) _63;
  _65 = _64 << 16;
  _66 = i_6(D) + 1;
  _67 = *_66;
  _68 = (int) _67;
  _69 = _68 << 8;
  _70 = i_6(D) + 2;
  _71 = *_70;
  _72 = (int) _71;
  _73 = _69 + _72;
  _74 = _65 + _73;
  _75 = _74 + -1572864;
  _76 = (sizetype) _75;
  _77 = ~_76;
  _78 = stb__dout.815_62 + _77;
  stb__match (_78, _61);
  i_80 = i_6(D) + 4;
  goto <bb 21>;

  <bb 11>:
  _81 = *i_6(D);
  _82 = (int) _81;
  if (_82 > 15)
    goto <bb 12>;
  else
    goto <bb 13>;

  <bb 12>:
  _83 = i_6(D) + 3;
  _84 = *_83;
  _85 = (int) _84;
  _86 = _85 << 8;
  _87 = i_6(D) + 4;
  _88 = *_87;
  _89 = (int) _88;
  _90 = _86 + _89;
  _91 = _90 + 1;
  _92 = (unsigned int) _91;
  stb__dout.816_93 = stb__dout;
  _94 = *i_6(D);
  _95 = (int) _94;
  _96 = _95 << 16;
  _97 = i_6(D) + 1;
  _98 = *_97;
  _99 = (int) _98;
  _100 = _99 << 8;
  _101 = i_6(D) + 2;
  _102 = *_101;
  _103 = (int) _102;
  _104 = _100 + _103;
  _105 = _96 + _104;
  _106 = _105 + -1048576;
  _107 = (sizetype) _106;
  _108 = ~_107;
  _109 = stb__dout.816_93 + _108;
  stb__match (_109, _92);
  i_111 = i_6(D) + 5;
  goto <bb 21>;

  <bb 13>:
  _112 = *i_6(D);
  _113 = (int) _112;
  if (_113 > 7)
    goto <bb 14>;
  else
    goto <bb 15>;

  <bb 14>:
  _114 = *i_6(D);
  _115 = (int) _114;
  _116 = _115 << 8;
  _117 = i_6(D) + 1;
  _118 = *_117;
  _119 = (int) _118;
  _120 = _116 + _119;
  _121 = _120 + -2047;
  _122 = (unsigned int) _121;
  _123 = i_6(D) + 2;
  stb__lit (_123, _122);
  _125 = *i_6(D);
  _126 = (int) _125;
  _127 = _126 << 8;
  _128 = i_6(D) + 1;
  _129 = *_128;
  _130 = (int) _129;
  _131 = _127 + _130;
  _132 = _131 + -2045;
  _133 = (sizetype) _132;
  i_134 = i_6(D) + _133;
  goto <bb 21>;

  <bb 15>:
  _135 = *i_6(D);
  if (_135 == 7)
    goto <bb 16>;
  else
    goto <bb 17>;

  <bb 16>:
  _136 = i_6(D) + 1;
  _137 = *_136;
  _138 = (int) _137;
  _139 = _138 << 8;
  _140 = i_6(D) + 2;
  _141 = *_140;
  _142 = (int) _141;
  _143 = _139 + _142;
  _144 = _143 + 1;
  _145 = (unsigned int) _144;
  _146 = i_6(D) + 3;
  stb__lit (_146, _145);
  _148 = i_6(D) + 1;
  _149 = *_148;
  _150 = (int) _149;
  _151 = _150 << 8;
  _152 = i_6(D) + 2;
  _153 = *_152;
  _154 = (int) _153;
  _155 = _151 + _154;
  _156 = _155 + 4;
  _157 = (sizetype) _156;
  i_158 = i_6(D) + _157;
  goto <bb 21>;

  <bb 17>:
  _159 = *i_6(D);
  if (_159 == 6)
    goto <bb 18>;
  else
    goto <bb 19>;

  <bb 18>:
  _160 = i_6(D) + 4;
  _161 = *_160;
  _162 = (int) _161;
  _163 = _162 + 1;
  _164 = (unsigned int) _163;
  stb__dout.817_165 = stb__dout;
  _166 = i_6(D) + 1;
  _167 = *_166;
  _168 = (int) _167;
  _169 = _168 << 16;
  _170 = i_6(D) + 2;
  _171 = *_170;
  _172 = (int) _171;
  _173 = _172 << 8;
  _174 = i_6(D) + 3;
  _175 = *_174;
  _176 = (int) _175;
  _177 = _173 + _176;
  _178 = _169 + _177;
  _179 = (sizetype) _178;
  _180 = ~_179;
  _181 = stb__dout.817_165 + _180;
  stb__match (_181, _164);
  i_183 = i_6(D) + 5;
  goto <bb 21>;

  <bb 19>:
  _184 = *i_6(D);
  if (_184 == 4)
    goto <bb 20>;
  else
    goto <bb 21>;

  <bb 20>:
  _185 = i_6(D) + 4;
  _186 = *_185;
  _187 = (int) _186;
  _188 = _187 << 8;
  _189 = i_6(D) + 5;
  _190 = *_189;
  _191 = (int) _190;
  _192 = _188 + _191;
  _193 = _192 + 1;
  _194 = (unsigned int) _193;
  stb__dout.818_195 = stb__dout;
  _196 = i_6(D) + 1;
  _197 = *_196;
  _198 = (int) _197;
  _199 = _198 << 16;
  _200 = i_6(D) + 2;
  _201 = *_200;
  _202 = (int) _201;
  _203 = _202 << 8;
  _204 = i_6(D) + 3;
  _205 = *_204;
  _206 = (int) _205;
  _207 = _203 + _206;
  _208 = _199 + _207;
  _209 = (sizetype) _208;
  _210 = ~_209;
  _211 = stb__dout.818_195 + _210;
  stb__match (_211, _194);
  i_213 = i_6(D) + 6;

  <bb 21>:
  # i_2 = PHI <i_1(8), i_80(10), i_111(12), i_134(14), i_158(16), i_183(18), i_6(D)(19), i_213(20)>
  _214 = i_2;

<L27>:
  return _214;

}



;; Function unsigned int stb_adler32(unsigned int, unsigned char*, unsigned int) (_ZL11stb_adler32jPhj, funcdef_no=811, decl_uid=19504, cgraph_uid=710, symbol_order=728)

unsigned int stb_adler32(unsigned int, unsigned char*, unsigned int) (unsigned int adler32, unsigned char * buffer, unsigned int buflen)
{
  long unsigned int i;
  long unsigned int blocklen;
  long unsigned int s2;
  long unsigned int s1;
  const long unsigned int ADLER_MOD;
  unsigned int D.32023;
  unsigned int D.32022;
  unsigned int D.32021;
  unsigned int D.32020;
  unsigned int D.32019;
  long unsigned int D.32018;
  unsigned char * buffer.819;
  unsigned char D.19511;
  long unsigned int D.32014;
  unsigned char D.32013;
  unsigned char * D.32012;
  long unsigned int D.32011;
  unsigned char D.32010;
  unsigned char * D.32009;
  long unsigned int D.32008;
  unsigned char D.32007;
  unsigned char * D.32006;
  long unsigned int D.32005;
  unsigned char D.32004;
  unsigned char * D.32003;
  long unsigned int D.32002;
  unsigned char D.32001;
  unsigned char * D.32000;
  long unsigned int D.31999;
  unsigned char D.31998;
  unsigned char * D.31997;
  long unsigned int D.31996;
  unsigned char D.31995;
  unsigned char * D.31994;
  long unsigned int D.31993;
  unsigned char D.31992;
  long unsigned int D.31990;
  unsigned int D.31986;
  unsigned int D.31985;
  long unsigned int D.31984;
  long unsigned int _16;
  unsigned int _18;
  unsigned int _21;
  long unsigned int _25;
  unsigned char _27;
  long unsigned int _28;
  unsigned char * _31;
  unsigned char _32;
  long unsigned int _33;
  unsigned char * _36;
  unsigned char _37;
  long unsigned int _38;
  unsigned char * _41;
  unsigned char _42;
  long unsigned int _43;
  unsigned char * _46;
  unsigned char _47;
  long unsigned int _48;
  unsigned char * _51;
  unsigned char _52;
  long unsigned int _53;
  unsigned char * _56;
  unsigned char _57;
  long unsigned int _58;
  unsigned char * _61;
  unsigned char _62;
  long unsigned int _63;
  unsigned char * buffer.819_68;
  unsigned char _70;
  long unsigned int _71;
  unsigned int _77;
  unsigned int _80;
  unsigned int _81;
  unsigned int _82;
  unsigned int _83;

  <bb 2>:
  ADLER_MOD_14 = 65521;
  _16 = (long unsigned int) adler32_15(D);
  s1_17 = _16 & 65535;
  _18 = adler32_15(D) >> 16;
  s2_19 = (long unsigned int) _18;
  _21 = buflen_20(D) % 5552;
  blocklen_22 = (long unsigned int) _21;

  <bb 3>:
  # buffer_1 = PHI <buffer_23(D)(2), buffer_3(9)>
  # buflen_4 = PHI <buflen_20(D)(2), buflen_78(9)>
  # s1_5 = PHI <s1_17(2), s1_75(9)>
  # s2_8 = PHI <s2_19(2), s2_76(9)>
  # blocklen_11 = PHI <blocklen_22(2), blocklen_79(9)>
  if (buflen_4 == 0)
    goto <bb 10>;
  else
    goto <bb 4>;

  <bb 4>:
  i_24 = 0;

  <bb 5>:
  # buffer_2 = PHI <buffer_1(4), buffer_66(6)>
  # s1_6 = PHI <s1_5(4), s1_64(6)>
  # s2_9 = PHI <s2_8(4), s2_65(6)>
  # i_12 = PHI <i_24(4), i_67(6)>
  _25 = i_12 + 7;
  if (_25 >= blocklen_11)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  _27 = *buffer_2;
  _28 = (long unsigned int) _27;
  s1_29 = _28 + s1_6;
  s2_30 = s2_9 + s1_29;
  _31 = buffer_2 + 1;
  _32 = *_31;
  _33 = (long unsigned int) _32;
  s1_34 = _33 + s1_29;
  s2_35 = s2_30 + s1_34;
  _36 = buffer_2 + 2;
  _37 = *_36;
  _38 = (long unsigned int) _37;
  s1_39 = _38 + s1_34;
  s2_40 = s2_35 + s1_39;
  _41 = buffer_2 + 3;
  _42 = *_41;
  _43 = (long unsigned int) _42;
  s1_44 = _43 + s1_39;
  s2_45 = s2_40 + s1_44;
  _46 = buffer_2 + 4;
  _47 = *_46;
  _48 = (long unsigned int) _47;
  s1_49 = _48 + s1_44;
  s2_50 = s2_45 + s1_49;
  _51 = buffer_2 + 5;
  _52 = *_51;
  _53 = (long unsigned int) _52;
  s1_54 = _53 + s1_49;
  s2_55 = s2_50 + s1_54;
  _56 = buffer_2 + 6;
  _57 = *_56;
  _58 = (long unsigned int) _57;
  s1_59 = _58 + s1_54;
  s2_60 = s2_55 + s1_59;
  _61 = buffer_2 + 7;
  _62 = *_61;
  _63 = (long unsigned int) _62;
  s1_64 = _63 + s1_59;
  s2_65 = s2_60 + s1_64;
  buffer_66 = buffer_2 + 8;
  i_67 = i_12 + 8;
  goto <bb 5>;

  <bb 7>:
  # buffer_3 = PHI <buffer_2(5), buffer_69(8)>
  # s1_7 = PHI <s1_6(5), s1_72(8)>
  # s2_10 = PHI <s2_9(5), s2_73(8)>
  # i_13 = PHI <i_12(5), i_74(8)>
  if (i_13 >= blocklen_11)
    goto <bb 9>;
  else
    goto <bb 8>;

  <bb 8>:
  buffer.819_68 = buffer_3;
  buffer_69 = buffer.819_68 + 1;
  _70 = *buffer.819_68;
  _71 = (long unsigned int) _70;
  s1_72 = _71 + s1_7;
  s2_73 = s2_10 + s1_72;
  i_74 = i_13 + 1;
  goto <bb 7>;

  <bb 9>:
  s1_75 = s1_7 % 65521;
  s2_76 = s2_10 % 65521;
  _77 = (unsigned int) blocklen_11;
  buflen_78 = buflen_4 - _77;
  blocklen_79 = 5552;
  goto <bb 3>;

  <bb 10>:
  _80 = (unsigned int) s2_8;
  _81 = _80 << 16;
  _82 = (unsigned int) s1_5;
  _83 = _81 + _82;

<L9>:
  return _83;

}



;; Function unsigned int stb_decompress(unsigned char*, const unsigned char*, unsigned int) (_ZL14stb_decompressPhPKhj, funcdef_no=812, decl_uid=18689, cgraph_uid=711, symbol_order=729)

unsigned int stb_decompress(unsigned char*, const unsigned char*, unsigned int) (unsigned char * output, const unsigned char * i, unsigned int D.19520)
{
  const unsigned char * old_i;
  static const char __PRETTY_FUNCTION__[80] = "unsigned int stb_decompress(unsigned char*, const unsigned char*, unsigned int)";
  unsigned int olen;
  unsigned char * stb__dout.824;
  unsigned char * D.32120;
  sizetype D.32119;
  unsigned char * stb__dout.823;
  unsigned char * D.32114;
  sizetype D.32113;
  unsigned int D.32107;
  int D.32106;
  int D.32105;
  int D.32104;
  int D.32103;
  unsigned char D.32102;
  const unsigned char * D.32101;
  int D.32100;
  int D.32099;
  unsigned char D.32098;
  const unsigned char * D.32097;
  int D.32096;
  int D.32095;
  unsigned char D.32094;
  const unsigned char * D.32093;
  int D.32092;
  int D.32091;
  unsigned char D.32090;
  const unsigned char * D.32089;
  unsigned int D.32088;
  bool retval.822;
  unsigned char * stb__dout.821;
  unsigned char * D.32083;
  sizetype D.32082;
  unsigned char * stb__dout.820;
  unsigned char * D.32077;
  sizetype D.32076;
  unsigned char D.32074;
  const unsigned char * D.32073;
  unsigned char D.32071;
  unsigned char * D.32066;
  sizetype D.32065;
  int D.32062;
  int D.32061;
  int D.32060;
  int D.32059;
  unsigned char D.32058;
  const unsigned char * D.32057;
  int D.32056;
  int D.32055;
  unsigned char D.32054;
  const unsigned char * D.32053;
  int D.32052;
  int D.32051;
  unsigned char D.32050;
  const unsigned char * D.32049;
  int D.32048;
  int D.32047;
  unsigned char D.32046;
  const unsigned char * D.32045;
  unsigned int D.32044;
  int D.32041;
  int D.32040;
  int D.32039;
  int D.32038;
  unsigned char D.32037;
  const unsigned char * D.32036;
  int D.32035;
  int D.32034;
  unsigned char D.32033;
  const unsigned char * D.32032;
  int D.32031;
  int D.32030;
  unsigned char D.32029;
  const unsigned char * D.32028;
  int D.32027;
  int D.32026;
  unsigned char D.32025;
  unsigned int _2;
  unsigned char _7;
  int _8;
  int _9;
  const unsigned char * _10;
  unsigned char _11;
  int _12;
  int _13;
  const unsigned char * _14;
  unsigned char _15;
  int _16;
  int _17;
  const unsigned char * _18;
  unsigned char _19;
  int _20;
  int _21;
  int _22;
  int _23;
  unsigned int _24;
  const unsigned char * _25;
  unsigned char _26;
  int _27;
  int _28;
  const unsigned char * _29;
  unsigned char _30;
  int _31;
  int _32;
  const unsigned char * _33;
  unsigned char _34;
  int _35;
  int _36;
  const unsigned char * _37;
  unsigned char _38;
  int _39;
  int _40;
  int _41;
  int _42;
  unsigned int _43;
  sizetype _47;
  unsigned char * _49;
  sizetype _57;
  unsigned char * _58;
  unsigned char * stb__dout.823_59;
  sizetype _60;
  unsigned char * _61;
  unsigned char * stb__dout.824_62;
  unsigned int _63;
  unsigned char _65;
  const unsigned char * _66;
  unsigned char _67;
  sizetype _68;
  unsigned char * _69;
  unsigned char * stb__dout.820_70;
  sizetype _71;
  unsigned char * _72;
  unsigned char * stb__dout.821_73;
  unsigned int _74;
  unsigned int _76;
  const unsigned char * _77;
  unsigned char _78;
  int _79;
  int _80;
  const unsigned char * _81;
  unsigned char _82;
  int _83;
  int _84;
  const unsigned char * _85;
  unsigned char _86;
  int _87;
  int _88;
  const unsigned char * _89;
  unsigned char _90;
  int _91;
  int _92;
  int _93;
  int _94;
  unsigned int _95;
  bool retval.822_96;
  unsigned int _97;
  unsigned int _98;

  <bb 2>:
  _7 = *i_6(D);
  _8 = (int) _7;
  _9 = _8 << 24;
  _10 = i_6(D) + 1;
  _11 = *_10;
  _12 = (int) _11;
  _13 = _12 << 16;
  _14 = i_6(D) + 2;
  _15 = *_14;
  _16 = (int) _15;
  _17 = _16 << 8;
  _18 = i_6(D) + 3;
  _19 = *_18;
  _20 = (int) _19;
  _21 = _17 + _20;
  _22 = _13 + _21;
  _23 = _9 + _22;
  if (_23 != 1471938560)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _24 = 0;
  goto <bb 23> (<L25>);

  <bb 4>:
  _25 = i_6(D) + 4;
  _26 = *_25;
  _27 = (int) _26;
  _28 = _27 << 24;
  _29 = i_6(D) + 5;
  _30 = *_29;
  _31 = (int) _30;
  _32 = _31 << 16;
  _33 = i_6(D) + 6;
  _34 = *_33;
  _35 = (int) _34;
  _36 = _35 << 8;
  _37 = i_6(D) + 7;
  _38 = *_37;
  _39 = (int) _38;
  _40 = _36 + _39;
  _41 = _32 + _40;
  _42 = _28 + _41;
  if (_42 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _43 = 0;
  goto <bb 23> (<L25>);

  <bb 6>:
  olen_45 = stb_decompress_length (i_6(D));
  stb__barrier_in_b = i_6(D);
  _47 = (sizetype) olen_45;
  _49 = output_48(D) + _47;
  stb__barrier_out_e = _49;
  stb__barrier_out_b = output_48(D);
  i_52 = i_6(D) + 16;
  stb__dout = output_48(D);

  <bb 7>:
  # i_1 = PHI <i_52(6), i_56(22)>
  old_i_54 = i_1;
  i_56 = stb_decompress_token (i_1);
  if (i_56 == old_i_54)
    goto <bb 8>;
  else
    goto <bb 18>;

  <bb 8>:
  _65 = *i_56;
  if (_65 == 5)
    goto <bb 9>;
  else
    goto <bb 17>;

  <bb 9>:
  _66 = i_56 + 1;
  _67 = *_66;
  if (_67 == 250)
    goto <bb 10>;
  else
    goto <bb 17>;

  <bb 10>:
  _68 = (sizetype) olen_45;
  _69 = output_48(D) + _68;
  stb__dout.820_70 = stb__dout;
  if (_69 == stb__dout.820_70)
    goto <bb 12>;
  else
    goto <bb 11>;

  <bb 11>:
  __assert_fail ("stb__dout == output + olen", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 2855, &__PRETTY_FUNCTION__);

  <bb 12>:
  _71 = (sizetype) olen_45;
  _72 = output_48(D) + _71;
  stb__dout.821_73 = stb__dout;
  if (_72 != stb__dout.821_73)
    goto <bb 13>;
  else
    goto <bb 14>;

  <bb 13>:
  _74 = 0;
  goto <bb 23> (<L25>);

  <bb 14>:
  _76 = stb_adler32 (1, output_48(D), olen_45);
  _77 = i_56 + 2;
  _78 = *_77;
  _79 = (int) _78;
  _80 = _79 << 24;
  _81 = i_56 + 3;
  _82 = *_81;
  _83 = (int) _82;
  _84 = _83 << 16;
  _85 = i_56 + 4;
  _86 = *_85;
  _87 = (int) _86;
  _88 = _87 << 8;
  _89 = i_56 + 5;
  _90 = *_89;
  _91 = (int) _90;
  _92 = _88 + _91;
  _93 = _84 + _92;
  _94 = _80 + _93;
  _95 = (unsigned int) _94;
  retval.822_96 = _76 != _95;
  if (retval.822_96 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;

  <bb 15>:
  _97 = 0;
  goto <bb 23> (<L25>);

  <bb 16>:
  _98 = olen_45;
  goto <bb 23> (<L25>);

  <bb 17>:
  __assert_fail ("0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 2861, &__PRETTY_FUNCTION__);

  <bb 18>:
  _57 = (sizetype) olen_45;
  _58 = output_48(D) + _57;
  stb__dout.823_59 = stb__dout;
  if (_58 >= stb__dout.823_59)
    goto <bb 20>;
  else
    goto <bb 19>;

  <bb 19>:
  __assert_fail ("stb__dout <= output + olen", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp", 2865, &__PRETTY_FUNCTION__);

  <bb 20>:
  _60 = (sizetype) olen_45;
  _61 = output_48(D) + _60;
  stb__dout.824_62 = stb__dout;
  if (_61 < stb__dout.824_62)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  _63 = 0;
  goto <bb 23> (<L25>);

  <bb 22>:
  goto <bb 7>;

  # _2 = PHI <_24(3), _43(5), _74(13), _97(15), _98(16), _63(21)>
<L25>:
  return _2;

}



;; Function const char* GetDefaultCompressedFontDataTTFBase85() (_ZL37GetDefaultCompressedFontDataTTFBase85v, funcdef_no=813, decl_uid=18690, cgraph_uid=712, symbol_order=731)

const char* GetDefaultCompressedFontDataTTFBase85() ()
{
  const char * D.32125;
  const char * _1;

  <bb 2>:
  _1 = &proggy_clean_ttf_compressed_data_base85;

<L0>:
  return _1;

}



;; Function ImVector<T>::ImVector() [with T = ImDrawCmd] (_ZN8ImVectorI9ImDrawCmdEC2Ev, funcdef_no=828, decl_uid=5144, cgraph_uid=727, symbol_order=746)

ImVector<T>::ImVector() [with T = ImDrawCmd] (struct ImVector * const this)
{
  int D.26863;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = ImDrawCmd] (_ZN8ImVectorI9ImDrawCmdED2Ev, funcdef_no=831, decl_uid=5149, cgraph_uid=730, symbol_order=749)

ImVector<T>::~ImVector() [with T = ImDrawCmd] (struct ImVector * const this)
{
  struct ImDrawCmd * D.26903;
  struct ImDrawCmd * D.26900;
  struct ImDrawCmd * _4;
  struct ImDrawCmd * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function ImVector<T>::ImVector() [with T = short unsigned int] (_ZN8ImVectorItEC2Ev, funcdef_no=834, decl_uid=5247, cgraph_uid=733, symbol_order=752)

ImVector<T>::ImVector() [with T = short unsigned int] (struct ImVector * const this)
{
  int D.26864;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = short unsigned int] (_ZN8ImVectorItED2Ev, funcdef_no=837, decl_uid=5252, cgraph_uid=736, symbol_order=755)

ImVector<T>::~ImVector() [with T = short unsigned int] (struct ImVector * const this)
{
  short unsigned int * D.26898;
  short unsigned int * D.26895;
  short unsigned int * _4;
  short unsigned int * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function ImVector<T>::ImVector() [with T = ImDrawVert] (_ZN8ImVectorI10ImDrawVertEC2Ev, funcdef_no=840, decl_uid=5368, cgraph_uid=739, symbol_order=758)

ImVector<T>::ImVector() [with T = ImDrawVert] (struct ImVector * const this)
{
  int D.26865;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = ImDrawVert] (_ZN8ImVectorI10ImDrawVertED2Ev, funcdef_no=843, decl_uid=5373, cgraph_uid=742, symbol_order=761)

ImVector<T>::~ImVector() [with T = ImDrawVert] (struct ImVector * const this)
{
  struct ImDrawVert * D.26893;
  struct ImDrawVert * D.26890;
  struct ImDrawVert * _4;
  struct ImDrawVert * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function ImVector<T>::ImVector() [with T = ImVec4] (_ZN8ImVectorI6ImVec4EC2Ev, funcdef_no=846, decl_uid=5477, cgraph_uid=745, symbol_order=764)

ImVector<T>::ImVector() [with T = ImVec4] (struct ImVector * const this)
{
  int D.26866;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = ImVec4] (_ZN8ImVectorI6ImVec4ED2Ev, funcdef_no=849, decl_uid=5482, cgraph_uid=748, symbol_order=767)

ImVector<T>::~ImVector() [with T = ImVec4] (struct ImVector * const this)
{
  struct ImVec4 * D.26888;
  struct ImVec4 * D.26885;
  struct ImVec4 * _4;
  struct ImVec4 * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function ImVector<T>::ImVector() [with T = void*] (_ZN8ImVectorIPvEC2Ev, funcdef_no=852, decl_uid=5580, cgraph_uid=751, symbol_order=770)

ImVector<T>::ImVector() [with T = void*] (struct ImVector * const this)
{
  int D.26867;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = void*] (_ZN8ImVectorIPvED2Ev, funcdef_no=855, decl_uid=5585, cgraph_uid=754, symbol_order=773)

ImVector<T>::~ImVector() [with T = void*] (struct ImVector * const this)
{
  void * * D.26883;
  void * * D.26880;
  void * * _4;
  void * * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function ImVector<T>::ImVector() [with T = ImVec2] (_ZN8ImVectorI6ImVec2EC2Ev, funcdef_no=858, decl_uid=5683, cgraph_uid=757, symbol_order=776)

ImVector<T>::ImVector() [with T = ImVec2] (struct ImVector * const this)
{
  int D.26868;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = ImVec2] (_ZN8ImVectorI6ImVec2ED2Ev, funcdef_no=861, decl_uid=5688, cgraph_uid=760, symbol_order=779)

ImVector<T>::~ImVector() [with T = ImVec2] (struct ImVector * const this)
{
  struct ImVec2 * D.26878;
  struct ImVec2 * D.26875;
  struct ImVec2 * _4;
  struct ImVec2 * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function ImVector<T>::ImVector() [with T = ImDrawChannel] (_ZN8ImVectorI13ImDrawChannelEC2Ev, funcdef_no=864, decl_uid=5788, cgraph_uid=763, symbol_order=782)

ImVector<T>::ImVector() [with T = ImDrawChannel] (struct ImVector * const this)
{
  int D.26869;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = ImDrawChannel] (_ZN8ImVectorI13ImDrawChannelED2Ev, funcdef_no=867, decl_uid=5793, cgraph_uid=766, symbol_order=785)

ImVector<T>::~ImVector() [with T = ImDrawChannel] (struct ImVector * const this)
{
  struct ImDrawChannel * D.26873;
  struct ImDrawChannel * D.26870;
  struct ImDrawChannel * _4;
  struct ImDrawChannel * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function void ImVector<T>::resize(int) [with T = ImVec2] (_ZN8ImVectorI6ImVec2E6resizeEi, funcdef_no=870, decl_uid=5647, cgraph_uid=769, symbol_order=788)

void ImVector<T>::resize(int) [with T = ImVec2] (struct ImVector * const this, int new_size)
{
  int D.26721;
  int D.26718;
  int _4;
  int _7;

  <bb 2>:
  _4 = this_3(D)->Capacity;
  if (_4 < new_size_5(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = ImVector<ImVec2>::_grow_capacity (this_3(D), new_size_5(D));
  ImVector<ImVec2>::reserve (this_3(D), _7);

  <bb 4>:
  this_3(D)->Size = new_size_5(D);
  return;

}



;; Function void ImVector<T>::push_back(const value_type&) [with T = ImVec2] (_ZN8ImVectorI6ImVec2E9push_backERKS0_, funcdef_no=871, decl_uid=5657, cgraph_uid=770, symbol_order=789)

void ImVector<T>::push_back(const value_type&) [with T = ImVec2] (struct ImVector * const this, const struct value_type & v)
{
  int D.28446;
  int D.28445;
  long unsigned int D.28444;
  struct ImVec2 * D.28443;
  long unsigned int D.28442;
  long unsigned int D.28441;
  int D.28440;
  struct ImVec2 * D.28439;
  int D.28437;
  int D.28436;
  int D.28435;
  int D.28432;
  int D.28431;
  int _4;
  int _5;
  int _6;
  int _7;
  int _9;
  struct ImVec2 * _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  struct ImVec2 * _15;
  long unsigned int _17;
  int _19;
  int _20;

  <bb 2>:
  _4 = this_3(D)->Size;
  _5 = this_3(D)->Capacity;
  if (_4 == _5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_3(D)->Size;
  _7 = _6 + 1;
  _9 = ImVector<ImVec2>::_grow_capacity (this_3(D), _7);
  ImVector<ImVec2>::reserve (this_3(D), _9);

  <bb 4>:
  _11 = this_3(D)->Data;
  _12 = this_3(D)->Size;
  _13 = (long unsigned int) _12;
  _14 = _13 * 8;
  _15 = _11 + _14;
  _17 = MEM[(char * {ref-all})v_16(D)];
  MEM[(char * {ref-all})_15] = _17;
  _19 = this_3(D)->Size;
  _20 = _19 + 1;
  this_3(D)->Size = _20;
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = unsigned char] (_ZN8ImVectorIhEixEi, funcdef_no=880, decl_uid=6329, cgraph_uid=779, symbol_order=798)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = unsigned char] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[120] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = unsigned char; ImVector<T>::value_type = unsigned char]";
  sizetype D.30621;
  unsigned char * D.30620;
  value_type & D.30619;
  int D.30615;
  int _3;
  unsigned char * _5;
  sizetype _6;
  value_type & _7;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (sizetype) i_4(D);
  _7 = _5 + _6;

<L3>:
  return _7;

}



;; Function const value_type& ImVector<T>::operator[](int) const [with T = float] (_ZNK8ImVectorIfEixEi, funcdef_no=882, decl_uid=6981, cgraph_uid=781, symbol_order=800)

const value_type& ImVector<T>::operator[](int) const [with T = float] (const struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[103] = "const value_type& ImVector<T>::operator[](int) const [with T = float; ImVector<T>::value_type = float]";
  long unsigned int D.31156;
  long unsigned int D.31155;
  float * D.31154;
  const value_type & D.31153;
  int D.31149;
  int _3;
  float * _5;
  long unsigned int _6;
  long unsigned int _7;
  const value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1170, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 4;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function ImVector<T>::ImVector() [with T = ImFont*] (_ZN8ImVectorIP6ImFontEC2Ev, funcdef_no=917, decl_uid=6588, cgraph_uid=816, symbol_order=835)

ImVector<T>::ImVector() [with T = ImFont*] (struct ImVector * const this)
{
  int D.29174;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = ImFont*] (_ZN8ImVectorIP6ImFontED2Ev, funcdef_no=920, decl_uid=6593, cgraph_uid=819, symbol_order=838)

ImVector<T>::~ImVector() [with T = ImFont*] (struct ImVector * const this)
{
  struct ImFont * * D.29193;
  struct ImFont * * D.29190;
  struct ImFont * * _4;
  struct ImFont * * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function ImVector<T>::ImVector() [with T = float] (_ZN8ImVectorIfEC2Ev, funcdef_no=953, decl_uid=7044, cgraph_uid=852, symbol_order=871)

ImVector<T>::ImVector() [with T = float] (struct ImVector * const this)
{
  int D.30694;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = float] (_ZN8ImVectorIfED2Ev, funcdef_no=956, decl_uid=7049, cgraph_uid=855, symbol_order=874)

ImVector<T>::~ImVector() [with T = float] (struct ImVector * const this)
{
  float * D.30698;
  float * D.30695;
  float * _4;
  float * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function void ImVector<T>::resize(int) [with T = ImDrawCmd] (_ZN8ImVectorI9ImDrawCmdE6resizeEi, funcdef_no=964, decl_uid=5108, cgraph_uid=863, symbol_order=882)

void ImVector<T>::resize(int) [with T = ImDrawCmd] (struct ImVector * const this, int new_size)
{
  int D.26546;
  int D.26543;
  int _4;
  int _7;

  <bb 2>:
  _4 = this_3(D)->Capacity;
  if (_4 < new_size_5(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = ImVector<ImDrawCmd>::_grow_capacity (this_3(D), new_size_5(D));
  ImVector<ImDrawCmd>::reserve (this_3(D), _7);

  <bb 4>:
  this_3(D)->Size = new_size_5(D);
  return;

}



;; Function void ImVector<T>::resize(int) [with T = short unsigned int] (_ZN8ImVectorItE6resizeEi, funcdef_no=965, decl_uid=5211, cgraph_uid=864, symbol_order=883)

void ImVector<T>::resize(int) [with T = short unsigned int] (struct ImVector * const this, int new_size)
{
  int D.26581;
  int D.26578;
  int _4;
  int _7;

  <bb 2>:
  _4 = this_3(D)->Capacity;
  if (_4 < new_size_5(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = ImVector<short unsigned int>::_grow_capacity (this_3(D), new_size_5(D));
  ImVector<short unsigned int>::reserve (this_3(D), _7);

  <bb 4>:
  this_3(D)->Size = new_size_5(D);
  return;

}



;; Function void ImVector<T>::resize(int) [with T = ImDrawVert] (_ZN8ImVectorI10ImDrawVertE6resizeEi, funcdef_no=966, decl_uid=5332, cgraph_uid=865, symbol_order=884)

void ImVector<T>::resize(int) [with T = ImDrawVert] (struct ImVector * const this, int new_size)
{
  int D.26616;
  int D.26613;
  int _4;
  int _7;

  <bb 2>:
  _4 = this_3(D)->Capacity;
  if (_4 < new_size_5(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = ImVector<ImDrawVert>::_grow_capacity (this_3(D), new_size_5(D));
  ImVector<ImDrawVert>::reserve (this_3(D), _7);

  <bb 4>:
  this_3(D)->Size = new_size_5(D);
  return;

}



;; Function void ImVector<T>::resize(int) [with T = ImVec4] (_ZN8ImVectorI6ImVec4E6resizeEi, funcdef_no=967, decl_uid=5441, cgraph_uid=866, symbol_order=885)

void ImVector<T>::resize(int) [with T = ImVec4] (struct ImVector * const this, int new_size)
{
  int D.26651;
  int D.26648;
  int _4;
  int _7;

  <bb 2>:
  _4 = this_3(D)->Capacity;
  if (_4 < new_size_5(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = ImVector<ImVec4>::_grow_capacity (this_3(D), new_size_5(D));
  ImVector<ImVec4>::reserve (this_3(D), _7);

  <bb 4>:
  this_3(D)->Size = new_size_5(D);
  return;

}



;; Function void ImVector<T>::resize(int) [with T = void*] (_ZN8ImVectorIPvE6resizeEi, funcdef_no=968, decl_uid=5544, cgraph_uid=867, symbol_order=886)

void ImVector<T>::resize(int) [with T = void*] (struct ImVector * const this, int new_size)
{
  int D.26686;
  int D.26683;
  int _4;
  int _7;

  <bb 2>:
  _4 = this_3(D)->Capacity;
  if (_4 < new_size_5(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = ImVector<void*>::_grow_capacity (this_3(D), new_size_5(D));
  ImVector<void*>::reserve (this_3(D), _7);

  <bb 4>:
  this_3(D)->Size = new_size_5(D);
  return;

}



;; Function void ImVector<T>::clear() [with T = ImDrawCmd] (_ZN8ImVectorI9ImDrawCmdE5clearEv, funcdef_no=969, decl_uid=5084, cgraph_uid=868, symbol_order=887)

void ImVector<T>::clear() [with T = ImDrawCmd] (struct ImVector * const this)
{
  struct ImDrawCmd * D.26802;
  int D.26801;
  struct ImDrawCmd * D.26798;
  struct ImDrawCmd * _4;
  int _6;
  struct ImDrawCmd * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function void ImVector<T>::clear() [with T = short unsigned int] (_ZN8ImVectorItE5clearEv, funcdef_no=970, decl_uid=5187, cgraph_uid=869, symbol_order=888)

void ImVector<T>::clear() [with T = short unsigned int] (struct ImVector * const this)
{
  short unsigned int * D.26817;
  int D.26816;
  short unsigned int * D.26813;
  short unsigned int * _4;
  int _6;
  short unsigned int * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function void ImVector<T>::clear() [with T = ImDrawVert] (_ZN8ImVectorI10ImDrawVertE5clearEv, funcdef_no=971, decl_uid=5308, cgraph_uid=870, symbol_order=889)

void ImVector<T>::clear() [with T = ImDrawVert] (struct ImVector * const this)
{
  struct ImDrawVert * D.26778;
  int D.26777;
  struct ImDrawVert * D.26774;
  struct ImDrawVert * _4;
  int _6;
  struct ImDrawVert * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function void ImVector<T>::clear() [with T = ImVec4] (_ZN8ImVectorI6ImVec4E5clearEv, funcdef_no=972, decl_uid=5417, cgraph_uid=871, symbol_order=890)

void ImVector<T>::clear() [with T = ImVec4] (struct ImVector * const this)
{
  struct ImVec4 * D.26784;
  int D.26783;
  struct ImVec4 * D.26780;
  struct ImVec4 * _4;
  int _6;
  struct ImVec4 * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function void ImVector<T>::clear() [with T = void*] (_ZN8ImVectorIPvE5clearEv, funcdef_no=973, decl_uid=5520, cgraph_uid=872, symbol_order=891)

void ImVector<T>::clear() [with T = void*] (struct ImVector * const this)
{
  void * * D.26790;
  int D.26789;
  void * * D.26786;
  void * * _4;
  int _6;
  void * * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function void ImVector<T>::clear() [with T = ImVec2] (_ZN8ImVectorI6ImVec2E5clearEv, funcdef_no=974, decl_uid=5623, cgraph_uid=873, symbol_order=892)

void ImVector<T>::clear() [with T = ImVec2] (struct ImVector * const this)
{
  struct ImVec2 * D.26796;
  int D.26795;
  struct ImVec2 * D.26792;
  struct ImVec2 * _4;
  int _6;
  struct ImVec2 * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImDrawChannel] (_ZN8ImVectorI13ImDrawChannelEixEi, funcdef_no=975, decl_uid=5722, cgraph_uid=874, symbol_order=893)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImDrawChannel] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[120] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImDrawChannel; ImVector<T>::value_type = ImDrawChannel]";
  long unsigned int D.26811;
  long unsigned int D.26810;
  struct ImDrawChannel * D.26809;
  struct value_type & D.26808;
  int D.26804;
  int _3;
  struct ImDrawChannel * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 32;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function void ImVector<T>::clear() [with T = ImDrawChannel] (_ZN8ImVectorI13ImDrawChannelE5clearEv, funcdef_no=976, decl_uid=5728, cgraph_uid=875, symbol_order=894)

void ImVector<T>::clear() [with T = ImDrawChannel] (struct ImVector * const this)
{
  struct ImDrawChannel * D.26823;
  int D.26822;
  struct ImDrawChannel * D.26819;
  struct ImDrawChannel * _4;
  int _6;
  struct ImDrawChannel * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function ImVector<T>& ImVector<T>::operator=(const ImVector<T>&) [with T = ImDrawCmd] (_ZN8ImVectorI9ImDrawCmdEaSERKS1_, funcdef_no=977, decl_uid=5069, cgraph_uid=876, symbol_order=895)

ImVector<T>& ImVector<T>::operator=(const ImVector<T>&) [with T = ImDrawCmd] (struct ImVector * const this, const struct ImVector & src)
{
  struct ImVector & D.26911;
  struct ImDrawCmd * D.26910;
  struct ImDrawCmd * D.26909;
  long unsigned int D.26908;
  long unsigned int D.26907;
  int D.26906;
  int D.26905;
  int _5;
  int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct ImDrawCmd * _10;
  struct ImDrawCmd * _11;
  struct ImVector & _13;

  <bb 2>:
  ImVector<ImDrawCmd>::clear (this_2(D));
  _5 = src_4(D)->Size;
  ImVector<ImDrawCmd>::resize (this_2(D), _5);
  _7 = this_2(D)->Size;
  _8 = (long unsigned int) _7;
  _9 = _8 * 48;
  _10 = src_4(D)->Data;
  _11 = this_2(D)->Data;
  memcpy (_11, _10, _9);
  _13 = this_2(D);

<L0>:
  return _13;

}



;; Function ImVector<T>& ImVector<T>::operator=(const ImVector<T>&) [with T = short unsigned int] (_ZN8ImVectorItEaSERKS0_, funcdef_no=978, decl_uid=5172, cgraph_uid=877, symbol_order=896)

ImVector<T>& ImVector<T>::operator=(const ImVector<T>&) [with T = short unsigned int] (struct ImVector * const this, const struct ImVector & src)
{
  struct ImVector & D.26919;
  short unsigned int * D.26918;
  short unsigned int * D.26917;
  long unsigned int D.26916;
  long unsigned int D.26915;
  int D.26914;
  int D.26913;
  int _5;
  int _7;
  long unsigned int _8;
  long unsigned int _9;
  short unsigned int * _10;
  short unsigned int * _11;
  struct ImVector & _13;

  <bb 2>:
  ImVector<short unsigned int>::clear (this_2(D));
  _5 = src_4(D)->Size;
  ImVector<short unsigned int>::resize (this_2(D), _5);
  _7 = this_2(D)->Size;
  _8 = (long unsigned int) _7;
  _9 = _8 * 2;
  _10 = src_4(D)->Data;
  _11 = this_2(D)->Data;
  memcpy (_11, _10, _9);
  _13 = this_2(D);

<L0>:
  return _13;

}



;; Function ImVector<T>& ImVector<T>::operator=(const ImVector<T>&) [with T = ImDrawVert] (_ZN8ImVectorI10ImDrawVertEaSERKS1_, funcdef_no=979, decl_uid=5293, cgraph_uid=878, symbol_order=897)

ImVector<T>& ImVector<T>::operator=(const ImVector<T>&) [with T = ImDrawVert] (struct ImVector * const this, const struct ImVector & src)
{
  struct ImVector & D.26927;
  struct ImDrawVert * D.26926;
  struct ImDrawVert * D.26925;
  long unsigned int D.26924;
  long unsigned int D.26923;
  int D.26922;
  int D.26921;
  int _5;
  int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct ImDrawVert * _10;
  struct ImDrawVert * _11;
  struct ImVector & _13;

  <bb 2>:
  ImVector<ImDrawVert>::clear (this_2(D));
  _5 = src_4(D)->Size;
  ImVector<ImDrawVert>::resize (this_2(D), _5);
  _7 = this_2(D)->Size;
  _8 = (long unsigned int) _7;
  _9 = _8 * 20;
  _10 = src_4(D)->Data;
  _11 = this_2(D)->Data;
  memcpy (_11, _10, _9);
  _13 = this_2(D);

<L0>:
  return _13;

}



;; Function void ImVector<T>::push_back(const value_type&) [with T = ImDrawCmd] (_ZN8ImVectorI9ImDrawCmdE9push_backERKS0_, funcdef_no=980, decl_uid=5118, cgraph_uid=879, symbol_order=898)

void ImVector<T>::push_back(const value_type&) [with T = ImDrawCmd] (struct ImVector * const this, const struct value_type & v)
{
  int D.26979;
  int D.26978;
  struct ImDrawCmd * D.26977;
  long unsigned int D.26976;
  long unsigned int D.26975;
  int D.26974;
  struct ImDrawCmd * D.26973;
  int D.26971;
  int D.26970;
  int D.26969;
  int D.26966;
  int D.26965;
  int _4;
  int _5;
  int _6;
  int _7;
  int _9;
  struct ImDrawCmd * _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  struct ImDrawCmd * _15;
  int _18;
  int _19;

  <bb 2>:
  _4 = this_3(D)->Size;
  _5 = this_3(D)->Capacity;
  if (_4 == _5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_3(D)->Size;
  _7 = _6 + 1;
  _9 = ImVector<ImDrawCmd>::_grow_capacity (this_3(D), _7);
  ImVector<ImDrawCmd>::reserve (this_3(D), _9);

  <bb 4>:
  _11 = this_3(D)->Data;
  _12 = this_3(D)->Size;
  _13 = (long unsigned int) _12;
  _14 = _13 * 48;
  _15 = _11 + _14;
  memcpy (_15, v_16(D), 48);
  _18 = this_3(D)->Size;
  _19 = _18 + 1;
  this_3(D)->Size = _19;
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::back() [with T = ImDrawCmd] (_ZN8ImVectorI9ImDrawCmdE4backEv, funcdef_no=981, decl_uid=5098, cgraph_uid=880, symbol_order=899)

ImVector<T>::value_type& ImVector<T>::back() [with T = ImDrawCmd] (struct ImVector * const this)
{
  static const char __PRETTY_FUNCTION__[103] = "ImVector<T>::value_type& ImVector<T>::back() [with T = ImDrawCmd; ImVector<T>::value_type = ImDrawCmd]";
  sizetype D.27002;
  long unsigned int D.27001;
  long unsigned int D.27000;
  int D.26999;
  struct ImDrawCmd * D.26998;
  struct value_type & D.26997;
  int D.26993;
  int _3;
  struct ImDrawCmd * _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  sizetype _8;
  struct value_type & _9;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1179, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = this_2(D)->Data;
  _5 = this_2(D)->Size;
  _6 = (long unsigned int) _5;
  _7 = _6 * 48;
  _8 = _7 + 18446744073709551568;
  _9 = _4 + _8;

<L3>:
  return _9;

}



;; Function void ImVector<T>::pop_back() [with T = ImDrawCmd] (_ZN8ImVectorI9ImDrawCmdE8pop_backEv, funcdef_no=982, decl_uid=5121, cgraph_uid=881, symbol_order=900)

void ImVector<T>::pop_back() [with T = ImDrawCmd] (struct ImVector * const this)
{
  static const char __PRETTY_FUNCTION__[50] = "void ImVector<T>::pop_back() [with T = ImDrawCmd]";
  int D.27072;
  int D.27071;
  int D.27067;
  int _3;
  int _4;
  int _5;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1200, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = this_2(D)->Size;
  _5 = _4 + -1;
  this_2(D)->Size = _5;
  return;

}



;; Function void ImVector<T>::push_back(const value_type&) [with T = ImVec4] (_ZN8ImVectorI6ImVec4E9push_backERKS0_, funcdef_no=983, decl_uid=5451, cgraph_uid=882, symbol_order=901)

void ImVector<T>::push_back(const value_type&) [with T = ImVec4] (struct ImVector * const this, const struct value_type & v)
{
  int D.27197;
  int D.27196;
  __int128 unsigned D.27195;
  struct ImVec4 * D.27194;
  long unsigned int D.27193;
  long unsigned int D.27192;
  int D.27191;
  struct ImVec4 * D.27190;
  int D.27188;
  int D.27187;
  int D.27186;
  int D.27183;
  int D.27182;
  int _4;
  int _5;
  int _6;
  int _7;
  int _9;
  struct ImVec4 * _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  struct ImVec4 * _15;
  __int128 unsigned _17;
  int _19;
  int _20;

  <bb 2>:
  _4 = this_3(D)->Size;
  _5 = this_3(D)->Capacity;
  if (_4 == _5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_3(D)->Size;
  _7 = _6 + 1;
  _9 = ImVector<ImVec4>::_grow_capacity (this_3(D), _7);
  ImVector<ImVec4>::reserve (this_3(D), _9);

  <bb 4>:
  _11 = this_3(D)->Data;
  _12 = this_3(D)->Size;
  _13 = (long unsigned int) _12;
  _14 = _13 * 16;
  _15 = _11 + _14;
  _17 = MEM[(char * {ref-all})v_16(D)];
  MEM[(char * {ref-all})_15] = _17;
  _19 = this_3(D)->Size;
  _20 = _19 + 1;
  this_3(D)->Size = _20;
  return;

}



;; Function void ImVector<T>::pop_back() [with T = ImVec4] (_ZN8ImVectorI6ImVec4E8pop_backEv, funcdef_no=984, decl_uid=5454, cgraph_uid=883, symbol_order=902)

void ImVector<T>::pop_back() [with T = ImVec4] (struct ImVector * const this)
{
  static const char __PRETTY_FUNCTION__[47] = "void ImVector<T>::pop_back() [with T = ImVec4]";
  int D.27218;
  int D.27217;
  int D.27213;
  int _3;
  int _4;
  int _5;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1200, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = this_2(D)->Size;
  _5 = _4 + -1;
  this_2(D)->Size = _5;
  return;

}



;; Function void ImVector<T>::push_back(const value_type&) [with T = void*] (_ZN8ImVectorIPvE9push_backERKS0_, funcdef_no=985, decl_uid=5554, cgraph_uid=884, symbol_order=903)

void ImVector<T>::push_back(const value_type&) [with T = void*] (struct ImVector * const this, void * const & v)
{
  int D.27235;
  int D.27234;
  long unsigned int D.27233;
  void * * D.27232;
  long unsigned int D.27231;
  long unsigned int D.27230;
  int D.27229;
  void * * D.27228;
  int D.27226;
  int D.27225;
  int D.27224;
  int D.27221;
  int D.27220;
  int _4;
  int _5;
  int _6;
  int _7;
  int _9;
  void * * _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  void * * _15;
  long unsigned int _17;
  int _19;
  int _20;

  <bb 2>:
  _4 = this_3(D)->Size;
  _5 = this_3(D)->Capacity;
  if (_4 == _5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_3(D)->Size;
  _7 = _6 + 1;
  _9 = ImVector<void*>::_grow_capacity (this_3(D), _7);
  ImVector<void*>::reserve (this_3(D), _9);

  <bb 4>:
  _11 = this_3(D)->Data;
  _12 = this_3(D)->Size;
  _13 = (long unsigned int) _12;
  _14 = _13 * 8;
  _15 = _11 + _14;
  _17 = MEM[(char * {ref-all})v_16(D)];
  MEM[(char * {ref-all})_15] = _17;
  _19 = this_3(D)->Size;
  _20 = _19 + 1;
  this_3(D)->Size = _20;
  return;

}



;; Function void ImVector<T>::pop_back() [with T = void*] (_ZN8ImVectorIPvE8pop_backEv, funcdef_no=986, decl_uid=5557, cgraph_uid=885, symbol_order=904)

void ImVector<T>::pop_back() [with T = void*] (struct ImVector * const this)
{
  static const char __PRETTY_FUNCTION__[46] = "void ImVector<T>::pop_back() [with T = void*]";
  int D.27246;
  int D.27245;
  int D.27241;
  int _3;
  int _4;
  int _5;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1200, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = this_2(D)->Size;
  _5 = _4 + -1;
  this_2(D)->Size = _5;
  return;

}



;; Function void ImVector<T>::resize(int) [with T = ImDrawChannel] (_ZN8ImVectorI13ImDrawChannelE6resizeEi, funcdef_no=987, decl_uid=5752, cgraph_uid=886, symbol_order=905)

void ImVector<T>::resize(int) [with T = ImDrawChannel] (struct ImVector * const this, int new_size)
{
  int D.27295;
  int D.27292;
  int _4;
  int _7;

  <bb 2>:
  _4 = this_3(D)->Capacity;
  if (_4 < new_size_5(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = ImVector<ImDrawChannel>::_grow_capacity (this_3(D), new_size_5(D));
  ImVector<ImDrawChannel>::reserve (this_3(D), _7);

  <bb 4>:
  this_3(D)->Size = new_size_5(D);
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::back() [with T = ImVec4] (_ZN8ImVectorI6ImVec4E4backEv, funcdef_no=988, decl_uid=5431, cgraph_uid=887, symbol_order=906)

ImVector<T>::value_type& ImVector<T>::back() [with T = ImVec4] (struct ImVector * const this)
{
  static const char __PRETTY_FUNCTION__[97] = "ImVector<T>::value_type& ImVector<T>::back() [with T = ImVec4; ImVector<T>::value_type = ImVec4]";
  sizetype D.27340;
  long unsigned int D.27339;
  long unsigned int D.27338;
  int D.27337;
  struct ImVec4 * D.27336;
  struct value_type & D.27335;
  int D.27331;
  int _3;
  struct ImVec4 * _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  sizetype _8;
  struct value_type & _9;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1179, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = this_2(D)->Data;
  _5 = this_2(D)->Size;
  _6 = (long unsigned int) _5;
  _7 = _6 * 16;
  _8 = _7 + 18446744073709551600;
  _9 = _4 + _8;

<L3>:
  return _9;

}



;; Function ImVector<T>::value_type& ImVector<T>::back() [with T = void*] (_ZN8ImVectorIPvE4backEv, funcdef_no=989, decl_uid=5534, cgraph_uid=888, symbol_order=907)

ImVector<T>::value_type& ImVector<T>::back() [with T = void*] (struct ImVector * const this)
{
  static const char __PRETTY_FUNCTION__[95] = "ImVector<T>::value_type& ImVector<T>::back() [with T = void*; ImVector<T>::value_type = void*]";
  sizetype D.27351;
  long unsigned int D.27350;
  long unsigned int D.27349;
  int D.27348;
  void * * D.27347;
  void * & D.27346;
  int D.27342;
  int _3;
  void * * _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  sizetype _8;
  void * & _9;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1179, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = this_2(D)->Data;
  _5 = this_2(D)->Size;
  _6 = (long unsigned int) _5;
  _7 = _6 * 8;
  _8 = _7 + 18446744073709551608;
  _9 = _4 + _8;

<L3>:
  return _9;

}



;; Function void ImVector<T>::reserve(int) [with T = ImVec2] (_ZN8ImVectorI6ImVec2E7reserveEi, funcdef_no=990, decl_uid=5654, cgraph_uid=889, symbol_order=908)

void ImVector<T>::reserve(int) [with T = ImVec2] (struct ImVector * const this, int new_capacity)
{
  struct value_type * D.26752;
  struct value_type * new_data;
  struct ImVec2 * D.26750;
  struct ImVec2 * D.26748;
  long unsigned int D.26747;
  long unsigned int D.26746;
  int D.26745;
  struct ImVec2 * D.26742;
  long unsigned int D.26741;
  long unsigned int D.26740;
  int D.26737;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  struct value_type * _10;
  struct ImVec2 * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  struct ImVec2 * _16;
  struct ImVec2 * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 8;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 8;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::back() [with T = ImVec2] (_ZN8ImVectorI6ImVec2E4backEv, funcdef_no=991, decl_uid=5637, cgraph_uid=890, symbol_order=909)

ImVector<T>::value_type& ImVector<T>::back() [with T = ImVec2] (struct ImVector * const this)
{
  static const char __PRETTY_FUNCTION__[97] = "ImVector<T>::value_type& ImVector<T>::back() [with T = ImVec2; ImVector<T>::value_type = ImVec2]";
  sizetype D.28576;
  long unsigned int D.28575;
  long unsigned int D.28574;
  int D.28573;
  struct ImVec2 * D.28572;
  struct value_type & D.28571;
  int D.28567;
  int _3;
  struct ImVec2 * _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  sizetype _8;
  struct value_type & _9;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1179, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = this_2(D)->Data;
  _5 = this_2(D)->Size;
  _6 = (long unsigned int) _5;
  _7 = _6 * 8;
  _8 = _7 + 18446744073709551608;
  _9 = _4 + _8;

<L3>:
  return _9;

}



;; Function bool ImVector<T>::empty() const [with T = void*] (_ZNK8ImVectorIPvE5emptyEv, funcdef_no=992, decl_uid=5508, cgraph_uid=891, symbol_order=910)

bool ImVector<T>::empty() const [with T = void*] (const struct ImVector * const this)
{
  int D.28852;
  bool D.28851;
  int _3;
  bool _4;

  <bb 2>:
  _3 = this_2(D)->Size;
  _4 = _3 == 0;

<L0>:
  return _4;

}



;; Function bool ImVector<T>::empty() const [with T = short unsigned int] (_ZNK8ImVectorItE5emptyEv, funcdef_no=993, decl_uid=5175, cgraph_uid=892, symbol_order=911)

bool ImVector<T>::empty() const [with T = short unsigned int] (const struct ImVector * const this)
{
  int D.28937;
  bool D.28936;
  int _3;
  bool _4;

  <bb 2>:
  _3 = this_2(D)->Size;
  _4 = _3 == 0;

<L0>:
  return _4;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImDrawVert] (_ZN8ImVectorI10ImDrawVertEixEi, funcdef_no=994, decl_uid=5302, cgraph_uid=893, symbol_order=912)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImDrawVert] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[114] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImDrawVert; ImVector<T>::value_type = ImDrawVert]";
  long unsigned int D.28955;
  long unsigned int D.28954;
  struct ImDrawVert * D.28953;
  struct value_type & D.28952;
  int D.28948;
  int _3;
  struct ImDrawVert * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 20;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = short unsigned int] (_ZN8ImVectorItEixEi, funcdef_no=995, decl_uid=5181, cgraph_uid=894, symbol_order=913)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = short unsigned int] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[130] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = short unsigned int; ImVector<T>::value_type = short unsigned int]";
  long unsigned int D.28946;
  long unsigned int D.28945;
  short unsigned int * D.28944;
  value_type & D.28943;
  int D.28939;
  int _3;
  short unsigned int * _5;
  long unsigned int _6;
  long unsigned int _7;
  value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 2;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function void ImVector<T>::swap(ImVector<T>&) [with T = ImDrawVert] (_ZN8ImVectorI10ImDrawVertE4swapERS1_, funcdef_no=996, decl_uid=5326, cgraph_uid=895, symbol_order=914)

void ImVector<T>::swap(ImVector<T>&) [with T = ImDrawVert] (struct ImVector * const this, struct ImVector & rhs)
{
  struct value_type * rhs_data;
  int rhs_cap;
  int rhs_size;
  struct ImDrawVert * D.28959;
  int D.28958;
  int D.28957;
  int _5;
  int _9;
  struct ImDrawVert * _13;

  <bb 2>:
  rhs_size_3 = rhs_2(D)->Size;
  _5 = this_4(D)->Size;
  rhs_2(D)->Size = _5;
  this_4(D)->Size = rhs_size_3;
  rhs_cap_8 = rhs_2(D)->Capacity;
  _9 = this_4(D)->Capacity;
  rhs_2(D)->Capacity = _9;
  this_4(D)->Capacity = rhs_cap_8;
  rhs_data_12 = rhs_2(D)->Data;
  _13 = this_4(D)->Data;
  rhs_2(D)->Data = _13;
  this_4(D)->Data = rhs_data_12;
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImDrawCmd] (_ZN8ImVectorI9ImDrawCmdEixEi, funcdef_no=997, decl_uid=5078, cgraph_uid=896, symbol_order=915)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImDrawCmd] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[112] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImDrawCmd; ImVector<T>::value_type = ImDrawCmd]";
  long unsigned int D.28990;
  long unsigned int D.28989;
  struct ImDrawCmd * D.28988;
  struct value_type & D.28987;
  int D.28983;
  int _3;
  struct ImDrawCmd * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 48;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function ImVector<T>::ImVector() [with T = ImFontAtlas::CustomRect] (_ZN8ImVectorIN11ImFontAtlas10CustomRectEEC2Ev, funcdef_no=999, decl_uid=6691, cgraph_uid=898, symbol_order=917)

ImVector<T>::ImVector() [with T = ImFontAtlas::CustomRect] (struct ImVector * const this)
{
  int D.29175;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = ImFontAtlas::CustomRect] (_ZN8ImVectorIN11ImFontAtlas10CustomRectEED2Ev, funcdef_no=1002, decl_uid=6696, cgraph_uid=901, symbol_order=920)

ImVector<T>::~ImVector() [with T = ImFontAtlas::CustomRect] (struct ImVector * const this)
{
  struct CustomRect * D.29188;
  struct CustomRect * D.29185;
  struct CustomRect * _4;
  struct CustomRect * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function ImVector<T>::ImVector() [with T = ImFontConfig] (_ZN8ImVectorI12ImFontConfigEC2Ev, funcdef_no=1005, decl_uid=6794, cgraph_uid=904, symbol_order=923)

ImVector<T>::ImVector() [with T = ImFontConfig] (struct ImVector * const this)
{
  int D.29176;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = ImFontConfig] (_ZN8ImVectorI12ImFontConfigED2Ev, funcdef_no=1008, decl_uid=6799, cgraph_uid=907, symbol_order=926)

ImVector<T>::~ImVector() [with T = ImFontConfig] (struct ImVector * const this)
{
  struct ImFontConfig * D.29183;
  struct ImFontConfig * D.29180;
  struct ImFontConfig * _4;
  struct ImFontConfig * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFontConfig] (_ZN8ImVectorI12ImFontConfigEixEi, funcdef_no=1010, decl_uid=6728, cgraph_uid=909, symbol_order=928)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFontConfig] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[118] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFontConfig; ImVector<T>::value_type = ImFontConfig]";
  long unsigned int D.29261;
  long unsigned int D.29260;
  struct ImFontConfig * D.29259;
  struct value_type & D.29258;
  int D.29254;
  int _3;
  struct ImFontConfig * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 128;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFont*] (_ZN8ImVectorIP6ImFontEixEi, funcdef_no=1011, decl_uid=6522, cgraph_uid=910, symbol_order=929)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFont*] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[108] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFont*; ImVector<T>::value_type = ImFont*]";
  long unsigned int D.29270;
  long unsigned int D.29269;
  struct ImFont * * D.29268;
  struct ImFont * & D.29267;
  int D.29263;
  int _3;
  struct ImFont * * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct ImFont * & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 8;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function void ImVector<T>::clear() [with T = ImFontConfig] (_ZN8ImVectorI12ImFontConfigE5clearEv, funcdef_no=1012, decl_uid=6734, cgraph_uid=911, symbol_order=930)

void ImVector<T>::clear() [with T = ImFontConfig] (struct ImVector * const this)
{
  struct ImFontConfig * D.29276;
  int D.29275;
  struct ImFontConfig * D.29272;
  struct ImFontConfig * _4;
  int _6;
  struct ImFontConfig * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function void ImVector<T>::clear() [with T = ImFontAtlas::CustomRect] (_ZN8ImVectorIN11ImFontAtlas10CustomRectEE5clearEv, funcdef_no=1013, decl_uid=6631, cgraph_uid=912, symbol_order=931)

void ImVector<T>::clear() [with T = ImFontAtlas::CustomRect] (struct ImVector * const this)
{
  struct CustomRect * D.29282;
  int D.29281;
  struct CustomRect * D.29278;
  struct CustomRect * _4;
  int _6;
  struct CustomRect * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function void IM_DELETE(T*&) [with T = ImFont] (_Z9IM_DELETEI6ImFontEvRPT_, funcdef_no=1014, decl_uid=18646, cgraph_uid=913, symbol_order=932)

void IM_DELETE(T*&) [with T = ImFont] (struct ImFont * & p)
{
  struct ImFont * D.29304;
  struct ImFont * D.29303;
  struct ImFont * D.29300;
  struct ImFont * _4;
  struct ImFont * _5;
  struct ImFont * _7;

  <bb 2>:
  _4 = *p_3(D);
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = *p_3(D);
  ImFont::~ImFont (_5);
  _7 = *p_3(D);
  ImGui::MemFree (_7);
  *p_3(D) = 0B;

  <bb 4>:
  return;

}



;; Function void ImVector<T>::clear() [with T = ImFont*] (_ZN8ImVectorIP6ImFontE5clearEv, funcdef_no=1015, decl_uid=6528, cgraph_uid=914, symbol_order=933)

void ImVector<T>::clear() [with T = ImFont*] (struct ImVector * const this)
{
  struct ImFont * * D.29310;
  int D.29309;
  struct ImFont * * D.29306;
  struct ImFont * * _4;
  int _6;
  struct ImFont * * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function bool ImVector<T>::empty() const [with T = ImFontConfig] (_ZNK8ImVectorI12ImFontConfigE5emptyEv, funcdef_no=1016, decl_uid=6722, cgraph_uid=915, symbol_order=934)

bool ImVector<T>::empty() const [with T = ImFontConfig] (const struct ImVector * const this)
{
  int D.29334;
  bool D.29333;
  int _3;
  bool _4;

  <bb 2>:
  _3 = this_2(D)->Size;
  _4 = _3 == 0;

<L0>:
  return _4;

}



;; Function void ImVector<T>::push_back(const value_type&) [with T = ImFont*] (_ZN8ImVectorIP6ImFontE9push_backERKS1_, funcdef_no=1017, decl_uid=6562, cgraph_uid=916, symbol_order=935)

void ImVector<T>::push_back(const value_type&) [with T = ImFont*] (struct ImVector * const this, struct ImFont * const & v)
{
  int D.29442;
  int D.29441;
  long unsigned int D.29440;
  struct ImFont * * D.29439;
  long unsigned int D.29438;
  long unsigned int D.29437;
  int D.29436;
  struct ImFont * * D.29435;
  int D.29433;
  int D.29432;
  int D.29431;
  int D.29428;
  int D.29427;
  int _4;
  int _5;
  int _6;
  int _7;
  int _9;
  struct ImFont * * _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  struct ImFont * * _15;
  long unsigned int _17;
  int _19;
  int _20;

  <bb 2>:
  _4 = this_3(D)->Size;
  _5 = this_3(D)->Capacity;
  if (_4 == _5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_3(D)->Size;
  _7 = _6 + 1;
  _9 = ImVector<ImFont*>::_grow_capacity (this_3(D), _7);
  ImVector<ImFont*>::reserve (this_3(D), _9);

  <bb 4>:
  _11 = this_3(D)->Data;
  _12 = this_3(D)->Size;
  _13 = (long unsigned int) _12;
  _14 = _13 * 8;
  _15 = _11 + _14;
  _17 = MEM[(char * {ref-all})v_16(D)];
  MEM[(char * {ref-all})_15] = _17;
  _19 = this_3(D)->Size;
  _20 = _19 + 1;
  this_3(D)->Size = _20;
  return;

}



;; Function bool ImVector<T>::empty() const [with T = ImFont*] (_ZNK8ImVectorIP6ImFontE5emptyEv, funcdef_no=1018, decl_uid=6516, cgraph_uid=917, symbol_order=936)

bool ImVector<T>::empty() const [with T = ImFont*] (const struct ImVector * const this)
{
  int D.29474;
  bool D.29473;
  int _3;
  bool _4;

  <bb 2>:
  _3 = this_2(D)->Size;
  _4 = _3 == 0;

<L0>:
  return _4;

}



;; Function void ImVector<T>::push_back(const value_type&) [with T = ImFontConfig] (_ZN8ImVectorI12ImFontConfigE9push_backERKS0_, funcdef_no=1019, decl_uid=6768, cgraph_uid=918, symbol_order=937)

void ImVector<T>::push_back(const value_type&) [with T = ImFontConfig] (struct ImVector * const this, const struct value_type & v)
{
  int D.29490;
  int D.29489;
  struct ImFontConfig * D.29488;
  long unsigned int D.29487;
  long unsigned int D.29486;
  int D.29485;
  struct ImFontConfig * D.29484;
  int D.29482;
  int D.29481;
  int D.29480;
  int D.29477;
  int D.29476;
  int _4;
  int _5;
  int _6;
  int _7;
  int _9;
  struct ImFontConfig * _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  struct ImFontConfig * _15;
  int _18;
  int _19;

  <bb 2>:
  _4 = this_3(D)->Size;
  _5 = this_3(D)->Capacity;
  if (_4 == _5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_3(D)->Size;
  _7 = _6 + 1;
  _9 = ImVector<ImFontConfig>::_grow_capacity (this_3(D), _7);
  ImVector<ImFontConfig>::reserve (this_3(D), _9);

  <bb 4>:
  _11 = this_3(D)->Data;
  _12 = this_3(D)->Size;
  _13 = (long unsigned int) _12;
  _14 = _13 * 128;
  _15 = _11 + _14;
  memcpy (_15, v_16(D), 128);
  _18 = this_3(D)->Size;
  _19 = _18 + 1;
  this_3(D)->Size = _19;
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::back() [with T = ImFontConfig] (_ZN8ImVectorI12ImFontConfigE4backEv, funcdef_no=1020, decl_uid=6748, cgraph_uid=919, symbol_order=938)

ImVector<T>::value_type& ImVector<T>::back() [with T = ImFontConfig] (struct ImVector * const this)
{
  static const char __PRETTY_FUNCTION__[109] = "ImVector<T>::value_type& ImVector<T>::back() [with T = ImFontConfig; ImVector<T>::value_type = ImFontConfig]";
  sizetype D.29530;
  long unsigned int D.29529;
  long unsigned int D.29528;
  int D.29527;
  struct ImFontConfig * D.29526;
  struct value_type & D.29525;
  int D.29521;
  int _3;
  struct ImFontConfig * _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  sizetype _8;
  struct value_type & _9;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1179, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = this_2(D)->Data;
  _5 = this_2(D)->Size;
  _6 = (long unsigned int) _5;
  _7 = _6 * 128;
  _8 = _7 + 18446744073709551488;
  _9 = _4 + _8;

<L3>:
  return _9;

}



;; Function ImVector<T>::value_type& ImVector<T>::back() [with T = ImFont*] (_ZN8ImVectorIP6ImFontE4backEv, funcdef_no=1021, decl_uid=6542, cgraph_uid=920, symbol_order=939)

ImVector<T>::value_type& ImVector<T>::back() [with T = ImFont*] (struct ImVector * const this)
{
  static const char __PRETTY_FUNCTION__[99] = "ImVector<T>::value_type& ImVector<T>::back() [with T = ImFont*; ImVector<T>::value_type = ImFont*]";
  sizetype D.29541;
  long unsigned int D.29540;
  long unsigned int D.29539;
  int D.29538;
  struct ImFont * * D.29537;
  struct ImFont * & D.29536;
  int D.29532;
  int _3;
  struct ImFont * * _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  sizetype _8;
  struct ImFont * & _9;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1179, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = this_2(D)->Data;
  _5 = this_2(D)->Size;
  _6 = (long unsigned int) _5;
  _7 = _6 * 8;
  _8 = _7 + 18446744073709551608;
  _9 = _4 + _8;

<L3>:
  return _9;

}



;; Function void ImVector<T>::push_back(const value_type&) [with T = ImFontAtlas::CustomRect] (_ZN8ImVectorIN11ImFontAtlas10CustomRectEE9push_backERKS1_, funcdef_no=1022, decl_uid=6665, cgraph_uid=921, symbol_order=940)

void ImVector<T>::push_back(const value_type&) [with T = ImFontAtlas::CustomRect] (struct ImVector * const this, const struct value_type & v)
{
  int D.29724;
  int D.29723;
  struct CustomRect * D.29722;
  long unsigned int D.29721;
  long unsigned int D.29720;
  int D.29719;
  struct CustomRect * D.29718;
  int D.29716;
  int D.29715;
  int D.29714;
  int D.29711;
  int D.29710;
  int _4;
  int _5;
  int _6;
  int _7;
  int _9;
  struct CustomRect * _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  struct CustomRect * _15;
  int _18;
  int _19;

  <bb 2>:
  _4 = this_3(D)->Size;
  _5 = this_3(D)->Capacity;
  if (_4 == _5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_3(D)->Size;
  _7 = _6 + 1;
  _9 = ImVector<ImFontAtlas::CustomRect>::_grow_capacity (this_3(D), _7);
  ImVector<ImFontAtlas::CustomRect>::reserve (this_3(D), _9);

  <bb 4>:
  _11 = this_3(D)->Data;
  _12 = this_3(D)->Size;
  _13 = (long unsigned int) _12;
  _14 = _13 * 32;
  _15 = _11 + _14;
  memcpy (_15, v_16(D), 32);
  _18 = this_3(D)->Size;
  _19 = _18 + 1;
  this_3(D)->Size = _19;
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFontAtlas::CustomRect] (_ZN8ImVectorIN11ImFontAtlas10CustomRectEEixEi, funcdef_no=1023, decl_uid=6625, cgraph_uid=922, symbol_order=941)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFontAtlas::CustomRect] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[140] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFontAtlas::CustomRect; ImVector<T>::value_type = ImFontAtlas::CustomRect]";
  long unsigned int D.29852;
  long unsigned int D.29851;
  struct CustomRect * D.29850;
  struct value_type & D.29849;
  int D.29845;
  int _3;
  struct CustomRect * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 32;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function ImVector<T>::ImVector() [with T = stbrp_rect] (_ZN8ImVectorI10stbrp_rectEC2Ev, funcdef_no=1025, decl_uid=19145, cgraph_uid=924, symbol_order=943)

ImVector<T>::ImVector() [with T = stbrp_rect] (struct ImVector * const this)
{
  int D.30358;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = stbrp_rect] (_ZN8ImVectorI10stbrp_rectED2Ev, funcdef_no=1028, decl_uid=19150, cgraph_uid=927, symbol_order=946)

ImVector<T>::~ImVector() [with T = stbrp_rect] (struct ImVector * const this)
{
  struct stbrp_rect * D.30406;
  struct stbrp_rect * D.30403;
  struct stbrp_rect * _4;
  struct stbrp_rect * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function void ImVector<T>::resize(int) [with T = stbrp_rect] (_ZN8ImVectorI10stbrp_rectE6resizeEi, funcdef_no=1030, decl_uid=19109, cgraph_uid=929, symbol_order=948)

void ImVector<T>::resize(int) [with T = stbrp_rect] (struct ImVector * const this, int new_size)
{
  int D.30362;
  int D.30359;
  int _4;
  int _7;

  <bb 2>:
  _4 = this_3(D)->Capacity;
  if (_4 < new_size_5(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = ImVector<stbrp_rect>::_grow_capacity (this_3(D), new_size_5(D));
  ImVector<stbrp_rect>::reserve (this_3(D), _7);

  <bb 4>:
  this_3(D)->Size = new_size_5(D);
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = stbrp_rect] (_ZN8ImVectorI10stbrp_rectEixEi, funcdef_no=1031, decl_uid=19079, cgraph_uid=930, symbol_order=949)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = stbrp_rect] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[114] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = stbrp_rect; ImVector<T>::value_type = stbrp_rect]";
  long unsigned int D.30401;
  long unsigned int D.30400;
  struct stbrp_rect * D.30399;
  struct value_type & D.30398;
  int D.30394;
  int _3;
  struct stbrp_rect * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 16;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function void ImVector<T>::push_back(const value_type&) [with T = short unsigned int] (_ZN8ImVectorItE9push_backERKt, funcdef_no=1032, decl_uid=5221, cgraph_uid=931, symbol_order=950)

void ImVector<T>::push_back(const value_type&) [with T = short unsigned int] (struct ImVector * const this, const value_type & v)
{
  int D.30682;
  int D.30681;
  short unsigned int D.30680;
  short unsigned int * D.30679;
  long unsigned int D.30678;
  long unsigned int D.30677;
  int D.30676;
  short unsigned int * D.30675;
  int D.30673;
  int D.30672;
  int D.30671;
  int D.30668;
  int D.30667;
  int _4;
  int _5;
  int _6;
  int _7;
  int _9;
  short unsigned int * _11;
  int _12;
  long unsigned int _13;
  long unsigned int _14;
  short unsigned int * _15;
  short unsigned int _17;
  int _19;
  int _20;

  <bb 2>:
  _4 = this_3(D)->Size;
  _5 = this_3(D)->Capacity;
  if (_4 == _5)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_3(D)->Size;
  _7 = _6 + 1;
  _9 = ImVector<short unsigned int>::_grow_capacity (this_3(D), _7);
  ImVector<short unsigned int>::reserve (this_3(D), _9);

  <bb 4>:
  _11 = this_3(D)->Data;
  _12 = this_3(D)->Size;
  _13 = (long unsigned int) _12;
  _14 = _13 * 2;
  _15 = _11 + _14;
  _17 = MEM[(char * {ref-all})v_16(D)];
  MEM[(char * {ref-all})_15] = _17;
  _19 = this_3(D)->Size;
  _20 = _19 + 1;
  this_3(D)->Size = _20;
  return;

}



;; Function ImVector<T>::ImVector() [with T = ImFontGlyph] (_ZN8ImVectorI11ImFontGlyphEC2Ev, funcdef_no=1034, decl_uid=6941, cgraph_uid=933, symbol_order=952)

ImVector<T>::ImVector() [with T = ImFontGlyph] (struct ImVector * const this)
{
  int D.30693;
  int _5;

  <bb 2>:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->Capacity = 0;
  _5 = this_2(D)->Capacity;
  this_2(D)->Size = _5;
  this_2(D)->Data = 0B;
  return;

}



;; Function ImVector<T>::~ImVector() [with T = ImFontGlyph] (_ZN8ImVectorI11ImFontGlyphED2Ev, funcdef_no=1037, decl_uid=6946, cgraph_uid=936, symbol_order=955)

ImVector<T>::~ImVector() [with T = ImFontGlyph] (struct ImVector * const this)
{
  struct ImFontGlyph * D.30703;
  struct ImFontGlyph * D.30700;
  struct ImFontGlyph * _4;
  struct ImFontGlyph * _5;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _5 = this_3(D)->Data;
  ImGui::MemFree (_5);

  <bb 4>:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function void ImVector<T>::clear() [with T = ImFontGlyph] (_ZN8ImVectorI11ImFontGlyphE5clearEv, funcdef_no=1039, decl_uid=6881, cgraph_uid=938, symbol_order=957)

void ImVector<T>::clear() [with T = ImFontGlyph] (struct ImVector * const this)
{
  struct ImFontGlyph * D.30716;
  int D.30715;
  struct ImFontGlyph * D.30712;
  struct ImFontGlyph * _4;
  int _6;
  struct ImFontGlyph * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function void ImVector<T>::clear() [with T = float] (_ZN8ImVectorIfE5clearEv, funcdef_no=1040, decl_uid=6984, cgraph_uid=939, symbol_order=958)

void ImVector<T>::clear() [with T = float] (struct ImVector * const this)
{
  float * D.30722;
  int D.30721;
  float * D.30718;
  float * _4;
  int _6;
  float * _8;

  <bb 2>:
  _4 = this_3(D)->Data;
  if (_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  this_3(D)->Capacity = 0;
  _6 = this_3(D)->Capacity;
  this_3(D)->Size = _6;
  _8 = this_3(D)->Data;
  ImGui::MemFree (_8);
  this_3(D)->Data = 0B;

  <bb 4>:
  return;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFontGlyph] (_ZN8ImVectorI11ImFontGlyphEixEi, funcdef_no=1041, decl_uid=6875, cgraph_uid=940, symbol_order=959)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFontGlyph] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[116] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = ImFontGlyph; ImVector<T>::value_type = ImFontGlyph]";
  long unsigned int D.30815;
  long unsigned int D.30814;
  struct ImFontGlyph * D.30813;
  struct value_type & D.30812;
  int D.30808;
  int _3;
  struct ImFontGlyph * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 40;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = float] (_ZN8ImVectorIfEixEi, funcdef_no=1042, decl_uid=6978, cgraph_uid=941, symbol_order=960)

ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = float] (struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[104] = "ImVector<T>::value_type& ImVector<T>::operator[](int) [with T = float; ImVector<T>::value_type = float]";
  long unsigned int D.30870;
  long unsigned int D.30869;
  float * D.30868;
  value_type & D.30867;
  int D.30863;
  int _3;
  float * _5;
  long unsigned int _6;
  long unsigned int _7;
  value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1169, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 4;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function ImVector<T>::value_type& ImVector<T>::back() [with T = ImFontGlyph] (_ZN8ImVectorI11ImFontGlyphE4backEv, funcdef_no=1043, decl_uid=6895, cgraph_uid=942, symbol_order=961)

ImVector<T>::value_type& ImVector<T>::back() [with T = ImFontGlyph] (struct ImVector * const this)
{
  static const char __PRETTY_FUNCTION__[107] = "ImVector<T>::value_type& ImVector<T>::back() [with T = ImFontGlyph; ImVector<T>::value_type = ImFontGlyph]";
  sizetype D.30861;
  long unsigned int D.30860;
  long unsigned int D.30859;
  int D.30858;
  struct ImFontGlyph * D.30857;
  struct value_type & D.30856;
  int D.30852;
  int _3;
  struct ImFontGlyph * _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  sizetype _8;
  struct value_type & _9;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > 0)
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("Size > 0", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1179, &__PRETTY_FUNCTION__);

  <bb 4>:
  _4 = this_2(D)->Data;
  _5 = this_2(D)->Size;
  _6 = (long unsigned int) _5;
  _7 = _6 * 40;
  _8 = _7 + 18446744073709551576;
  _9 = _4 + _8;

<L3>:
  return _9;

}



;; Function void ImVector<T>::resize(int) [with T = ImFontGlyph] (_ZN8ImVectorI11ImFontGlyphE6resizeEi, funcdef_no=1044, decl_uid=6905, cgraph_uid=943, symbol_order=962)

void ImVector<T>::resize(int) [with T = ImFontGlyph] (struct ImVector * const this, int new_size)
{
  int D.30820;
  int D.30817;
  int _4;
  int _7;

  <bb 2>:
  _4 = this_3(D)->Capacity;
  if (_4 < new_size_5(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _7 = ImVector<ImFontGlyph>::_grow_capacity (this_3(D), new_size_5(D));
  ImVector<ImFontGlyph>::reserve (this_3(D), _7);

  <bb 4>:
  this_3(D)->Size = new_size_5(D);
  return;

}



;; Function void ImVector<T>::resize(int, const value_type&) [with T = float] (_ZN8ImVectorIfE6resizeEiRKf, funcdef_no=1045, decl_uid=7011, cgraph_uid=944, symbol_order=963)

void ImVector<T>::resize(int, const value_type&) [with T = float] (struct ImVector * const this, int new_size, const value_type & v)
{
  int n;
  unsigned int D.30899;
  float * D.30898;
  long unsigned int D.30897;
  long unsigned int D.30896;
  float * D.30895;
  int D.30890;
  int D.30888;
  int D.30885;
  int _7;
  int _10;
  int _12;
  float * _14;
  long unsigned int _15;
  long unsigned int _16;
  float * _17;
  unsigned int _19;

  <bb 2>:
  _7 = this_6(D)->Capacity;
  if (_7 < new_size_8(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _10 = ImVector<float>::_grow_capacity (this_6(D), new_size_8(D));
  ImVector<float>::reserve (this_6(D), _10);

  <bb 4>:
  _12 = this_6(D)->Size;
  if (_12 < new_size_8(D))
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 5>:
  n_13 = this_6(D)->Size;

  <bb 6>:
  # n_1 = PHI <n_13(5), n_21(7)>
  if (n_1 >= new_size_8(D))
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _14 = this_6(D)->Data;
  _15 = (long unsigned int) n_1;
  _16 = _15 * 4;
  _17 = _14 + _16;
  _19 = MEM[(char * {ref-all})v_18(D)];
  MEM[(char * {ref-all})_17] = _19;
  n_21 = n_1 + 1;
  goto <bb 6>;

  <bb 8>:

  <bb 9>:
  this_6(D)->Size = new_size_8(D);
  return;

}



;; Function void ImVector<T>::resize(int, const value_type&) [with T = short unsigned int] (_ZN8ImVectorItE6resizeEiRKt, funcdef_no=1046, decl_uid=5214, cgraph_uid=945, symbol_order=964)

void ImVector<T>::resize(int, const value_type&) [with T = short unsigned int] (struct ImVector * const this, int new_size, const value_type & v)
{
  int n;
  short unsigned int D.30945;
  short unsigned int * D.30944;
  long unsigned int D.30943;
  long unsigned int D.30942;
  short unsigned int * D.30941;
  int D.30936;
  int D.30934;
  int D.30931;
  int _7;
  int _10;
  int _12;
  short unsigned int * _14;
  long unsigned int _15;
  long unsigned int _16;
  short unsigned int * _17;
  short unsigned int _19;

  <bb 2>:
  _7 = this_6(D)->Capacity;
  if (_7 < new_size_8(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _10 = ImVector<short unsigned int>::_grow_capacity (this_6(D), new_size_8(D));
  ImVector<short unsigned int>::reserve (this_6(D), _10);

  <bb 4>:
  _12 = this_6(D)->Size;
  if (_12 < new_size_8(D))
    goto <bb 5>;
  else
    goto <bb 9>;

  <bb 5>:
  n_13 = this_6(D)->Size;

  <bb 6>:
  # n_1 = PHI <n_13(5), n_21(7)>
  if (n_1 >= new_size_8(D))
    goto <bb 8>;
  else
    goto <bb 7>;

  <bb 7>:
  _14 = this_6(D)->Data;
  _15 = (long unsigned int) n_1;
  _16 = _15 * 2;
  _17 = _14 + _16;
  _19 = MEM[(char * {ref-all})v_18(D)];
  MEM[(char * {ref-all})_17] = _19;
  n_21 = n_1 + 1;
  goto <bb 6>;

  <bb 8>:

  <bb 9>:
  this_6(D)->Size = new_size_8(D);
  return;

}



;; Function const value_type& ImVector<T>::operator[](int) const [with T = short unsigned int] (_ZNK8ImVectorItEixEi, funcdef_no=1047, decl_uid=5184, cgraph_uid=946, symbol_order=965)

const value_type& ImVector<T>::operator[](int) const [with T = short unsigned int] (const struct ImVector * const this, int i)
{
  static const char __PRETTY_FUNCTION__[129] = "const value_type& ImVector<T>::operator[](int) const [with T = short unsigned int; ImVector<T>::value_type = short unsigned int]";
  long unsigned int D.31055;
  long unsigned int D.31054;
  short unsigned int * D.31053;
  const value_type & D.31052;
  int D.31048;
  int _3;
  short unsigned int * _5;
  long unsigned int _6;
  long unsigned int _7;
  const value_type & _8;

  <bb 2>:
  _3 = this_2(D)->Size;
  if (_3 > i_4(D))
    goto <bb 4>;
  else
    goto <bb 3>;

  <bb 3>:
  __assert_fail ("i < Size", "/home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui.h", 1170, &__PRETTY_FUNCTION__);

  <bb 4>:
  _5 = this_2(D)->Data;
  _6 = (long unsigned int) i_4(D);
  _7 = _6 * 2;
  _8 = _5 + _7;

<L3>:
  return _8;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = ImVec2] (_ZNK8ImVectorI6ImVec2E14_grow_capacityEi, funcdef_no=1049, decl_uid=5644, cgraph_uid=948, symbol_order=967)

int ImVector<T>::_grow_capacity(int) const [with T = ImVec2] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.587;
  int D.26731;
  int D.26729;
  int D.26728;
  int D.26727;
  int D.26724;
  int iftmp.586;
  int iftmp.586_1;
  int iftmp.587_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.586_9;
  int iftmp.586_10;
  int iftmp.587_13;
  int iftmp.587_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.586_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.586_10 = 8;

  <bb 5>:
  # iftmp.586_1 = PHI <iftmp.586_9(3), iftmp.586_10(4)>
  new_capacity_11 = iftmp.586_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.587_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.587_14 = sz_12(D);

  <bb 8>:
  # iftmp.587_2 = PHI <iftmp.587_13(6), iftmp.587_14(7)>
  _15 = iftmp.587_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = ImDrawCmd] (_ZN8ImVectorI9ImDrawCmdE7reserveEi, funcdef_no=1054, decl_uid=5115, cgraph_uid=953, symbol_order=972)

void ImVector<T>::reserve(int) [with T = ImDrawCmd] (struct ImVector * const this, int new_capacity)
{
  struct value_type * D.26577;
  struct value_type * new_data;
  struct ImDrawCmd * D.26575;
  struct ImDrawCmd * D.26573;
  long unsigned int D.26572;
  long unsigned int D.26571;
  int D.26570;
  struct ImDrawCmd * D.26567;
  long unsigned int D.26566;
  long unsigned int D.26565;
  int D.26562;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  struct value_type * _10;
  struct ImDrawCmd * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  struct ImDrawCmd * _16;
  struct ImDrawCmd * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 48;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 48;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = ImDrawCmd] (_ZNK8ImVectorI9ImDrawCmdE14_grow_capacityEi, funcdef_no=1055, decl_uid=5105, cgraph_uid=954, symbol_order=973)

int ImVector<T>::_grow_capacity(int) const [with T = ImDrawCmd] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.577;
  int D.26556;
  int D.26554;
  int D.26553;
  int D.26552;
  int D.26549;
  int iftmp.576;
  int iftmp.576_1;
  int iftmp.577_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.576_9;
  int iftmp.576_10;
  int iftmp.577_13;
  int iftmp.577_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.576_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.576_10 = 8;

  <bb 5>:
  # iftmp.576_1 = PHI <iftmp.576_9(3), iftmp.576_10(4)>
  new_capacity_11 = iftmp.576_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.577_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.577_14 = sz_12(D);

  <bb 8>:
  # iftmp.577_2 = PHI <iftmp.577_13(6), iftmp.577_14(7)>
  _15 = iftmp.577_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = short unsigned int] (_ZN8ImVectorItE7reserveEi, funcdef_no=1056, decl_uid=5218, cgraph_uid=955, symbol_order=974)

void ImVector<T>::reserve(int) [with T = short unsigned int] (struct ImVector * const this, int new_capacity)
{
  value_type * D.26612;
  value_type * new_data;
  short unsigned int * D.26610;
  short unsigned int * D.26608;
  long unsigned int D.26607;
  long unsigned int D.26606;
  int D.26605;
  short unsigned int * D.26602;
  long unsigned int D.26601;
  long unsigned int D.26600;
  int D.26597;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  value_type * _10;
  short unsigned int * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  short unsigned int * _16;
  short unsigned int * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 2;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 2;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = short unsigned int] (_ZNK8ImVectorItE14_grow_capacityEi, funcdef_no=1057, decl_uid=5208, cgraph_uid=956, symbol_order=975)

int ImVector<T>::_grow_capacity(int) const [with T = short unsigned int] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.579;
  int D.26591;
  int D.26589;
  int D.26588;
  int D.26587;
  int D.26584;
  int iftmp.578;
  int iftmp.578_1;
  int iftmp.579_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.578_9;
  int iftmp.578_10;
  int iftmp.579_13;
  int iftmp.579_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.578_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.578_10 = 8;

  <bb 5>:
  # iftmp.578_1 = PHI <iftmp.578_9(3), iftmp.578_10(4)>
  new_capacity_11 = iftmp.578_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.579_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.579_14 = sz_12(D);

  <bb 8>:
  # iftmp.579_2 = PHI <iftmp.579_13(6), iftmp.579_14(7)>
  _15 = iftmp.579_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = ImDrawVert] (_ZN8ImVectorI10ImDrawVertE7reserveEi, funcdef_no=1058, decl_uid=5339, cgraph_uid=957, symbol_order=976)

void ImVector<T>::reserve(int) [with T = ImDrawVert] (struct ImVector * const this, int new_capacity)
{
  struct value_type * D.26647;
  struct value_type * new_data;
  struct ImDrawVert * D.26645;
  struct ImDrawVert * D.26643;
  long unsigned int D.26642;
  long unsigned int D.26641;
  int D.26640;
  struct ImDrawVert * D.26637;
  long unsigned int D.26636;
  long unsigned int D.26635;
  int D.26632;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  struct value_type * _10;
  struct ImDrawVert * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  struct ImDrawVert * _16;
  struct ImDrawVert * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 20;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 20;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = ImDrawVert] (_ZNK8ImVectorI10ImDrawVertE14_grow_capacityEi, funcdef_no=1059, decl_uid=5329, cgraph_uid=958, symbol_order=977)

int ImVector<T>::_grow_capacity(int) const [with T = ImDrawVert] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.581;
  int D.26626;
  int D.26624;
  int D.26623;
  int D.26622;
  int D.26619;
  int iftmp.580;
  int iftmp.580_1;
  int iftmp.581_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.580_9;
  int iftmp.580_10;
  int iftmp.581_13;
  int iftmp.581_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.580_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.580_10 = 8;

  <bb 5>:
  # iftmp.580_1 = PHI <iftmp.580_9(3), iftmp.580_10(4)>
  new_capacity_11 = iftmp.580_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.581_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.581_14 = sz_12(D);

  <bb 8>:
  # iftmp.581_2 = PHI <iftmp.581_13(6), iftmp.581_14(7)>
  _15 = iftmp.581_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = ImVec4] (_ZN8ImVectorI6ImVec4E7reserveEi, funcdef_no=1060, decl_uid=5448, cgraph_uid=959, symbol_order=978)

void ImVector<T>::reserve(int) [with T = ImVec4] (struct ImVector * const this, int new_capacity)
{
  struct value_type * D.26682;
  struct value_type * new_data;
  struct ImVec4 * D.26680;
  struct ImVec4 * D.26678;
  long unsigned int D.26677;
  long unsigned int D.26676;
  int D.26675;
  struct ImVec4 * D.26672;
  long unsigned int D.26671;
  long unsigned int D.26670;
  int D.26667;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  struct value_type * _10;
  struct ImVec4 * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  struct ImVec4 * _16;
  struct ImVec4 * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 16;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 16;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = ImVec4] (_ZNK8ImVectorI6ImVec4E14_grow_capacityEi, funcdef_no=1061, decl_uid=5438, cgraph_uid=960, symbol_order=979)

int ImVector<T>::_grow_capacity(int) const [with T = ImVec4] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.583;
  int D.26661;
  int D.26659;
  int D.26658;
  int D.26657;
  int D.26654;
  int iftmp.582;
  int iftmp.582_1;
  int iftmp.583_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.582_9;
  int iftmp.582_10;
  int iftmp.583_13;
  int iftmp.583_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.582_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.582_10 = 8;

  <bb 5>:
  # iftmp.582_1 = PHI <iftmp.582_9(3), iftmp.582_10(4)>
  new_capacity_11 = iftmp.582_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.583_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.583_14 = sz_12(D);

  <bb 8>:
  # iftmp.583_2 = PHI <iftmp.583_13(6), iftmp.583_14(7)>
  _15 = iftmp.583_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = void*] (_ZN8ImVectorIPvE7reserveEi, funcdef_no=1062, decl_uid=5551, cgraph_uid=961, symbol_order=980)

void ImVector<T>::reserve(int) [with T = void*] (struct ImVector * const this, int new_capacity)
{
  void * * D.26717;
  void * * new_data;
  void * * D.26715;
  void * * D.26713;
  long unsigned int D.26712;
  long unsigned int D.26711;
  int D.26710;
  void * * D.26707;
  long unsigned int D.26706;
  long unsigned int D.26705;
  int D.26702;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  void * * _10;
  void * * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  void * * _16;
  void * * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 8;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 8;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = void*] (_ZNK8ImVectorIPvE14_grow_capacityEi, funcdef_no=1063, decl_uid=5541, cgraph_uid=962, symbol_order=981)

int ImVector<T>::_grow_capacity(int) const [with T = void*] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.585;
  int D.26696;
  int D.26694;
  int D.26693;
  int D.26692;
  int D.26689;
  int iftmp.584;
  int iftmp.584_1;
  int iftmp.585_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.584_9;
  int iftmp.584_10;
  int iftmp.585_13;
  int iftmp.585_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.584_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.584_10 = 8;

  <bb 5>:
  # iftmp.584_1 = PHI <iftmp.584_9(3), iftmp.584_10(4)>
  new_capacity_11 = iftmp.584_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.585_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.585_14 = sz_12(D);

  <bb 8>:
  # iftmp.585_2 = PHI <iftmp.585_13(6), iftmp.585_14(7)>
  _15 = iftmp.585_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = ImDrawChannel] (_ZN8ImVectorI13ImDrawChannelE7reserveEi, funcdef_no=1064, decl_uid=5759, cgraph_uid=963, symbol_order=982)

void ImVector<T>::reserve(int) [with T = ImDrawChannel] (struct ImVector * const this, int new_capacity)
{
  struct value_type * D.27326;
  struct value_type * new_data;
  struct ImDrawChannel * D.27324;
  struct ImDrawChannel * D.27322;
  long unsigned int D.27321;
  long unsigned int D.27320;
  int D.27319;
  struct ImDrawChannel * D.27316;
  long unsigned int D.27315;
  long unsigned int D.27314;
  int D.27311;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  struct value_type * _10;
  struct ImDrawChannel * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  struct ImDrawChannel * _16;
  struct ImDrawChannel * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 32;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 32;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = ImDrawChannel] (_ZNK8ImVectorI13ImDrawChannelE14_grow_capacityEi, funcdef_no=1065, decl_uid=5749, cgraph_uid=964, symbol_order=983)

int ImVector<T>::_grow_capacity(int) const [with T = ImDrawChannel] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.603;
  int D.27305;
  int D.27303;
  int D.27302;
  int D.27301;
  int D.27298;
  int iftmp.602;
  int iftmp.602_1;
  int iftmp.603_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.602_9;
  int iftmp.602_10;
  int iftmp.603_13;
  int iftmp.603_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.602_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.602_10 = 8;

  <bb 5>:
  # iftmp.602_1 = PHI <iftmp.602_9(3), iftmp.602_10(4)>
  new_capacity_11 = iftmp.602_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.603_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.603_14 = sz_12(D);

  <bb 8>:
  # iftmp.603_2 = PHI <iftmp.603_13(6), iftmp.603_14(7)>
  _15 = iftmp.603_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = ImFont*] (_ZN8ImVectorIP6ImFontE7reserveEi, funcdef_no=1066, decl_uid=6559, cgraph_uid=965, symbol_order=984)

void ImVector<T>::reserve(int) [with T = ImFont*] (struct ImVector * const this, int new_capacity)
{
  struct ImFont * * D.29472;
  struct ImFont * * new_data;
  struct ImFont * * D.29470;
  struct ImFont * * D.29468;
  long unsigned int D.29467;
  long unsigned int D.29466;
  int D.29465;
  struct ImFont * * D.29462;
  long unsigned int D.29461;
  long unsigned int D.29460;
  int D.29457;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  struct ImFont * * _10;
  struct ImFont * * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  struct ImFont * * _16;
  struct ImFont * * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 8;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 8;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = ImFont*] (_ZNK8ImVectorIP6ImFontE14_grow_capacityEi, funcdef_no=1067, decl_uid=6549, cgraph_uid=966, symbol_order=985)

int ImVector<T>::_grow_capacity(int) const [with T = ImFont*] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.676;
  int D.29451;
  int D.29449;
  int D.29448;
  int D.29447;
  int D.29444;
  int iftmp.675;
  int iftmp.675_1;
  int iftmp.676_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.675_9;
  int iftmp.675_10;
  int iftmp.676_13;
  int iftmp.676_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.675_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.675_10 = 8;

  <bb 5>:
  # iftmp.675_1 = PHI <iftmp.675_9(3), iftmp.675_10(4)>
  new_capacity_11 = iftmp.675_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.676_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.676_14 = sz_12(D);

  <bb 8>:
  # iftmp.676_2 = PHI <iftmp.676_13(6), iftmp.676_14(7)>
  _15 = iftmp.676_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = ImFontConfig] (_ZN8ImVectorI12ImFontConfigE7reserveEi, funcdef_no=1068, decl_uid=6765, cgraph_uid=967, symbol_order=986)

void ImVector<T>::reserve(int) [with T = ImFontConfig] (struct ImVector * const this, int new_capacity)
{
  struct value_type * D.29520;
  struct value_type * new_data;
  struct ImFontConfig * D.29518;
  struct ImFontConfig * D.29516;
  long unsigned int D.29515;
  long unsigned int D.29514;
  int D.29513;
  struct ImFontConfig * D.29510;
  long unsigned int D.29509;
  long unsigned int D.29508;
  int D.29505;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  struct value_type * _10;
  struct ImFontConfig * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  struct ImFontConfig * _16;
  struct ImFontConfig * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 128;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 128;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = ImFontConfig] (_ZNK8ImVectorI12ImFontConfigE14_grow_capacityEi, funcdef_no=1069, decl_uid=6755, cgraph_uid=968, symbol_order=987)

int ImVector<T>::_grow_capacity(int) const [with T = ImFontConfig] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.678;
  int D.29499;
  int D.29497;
  int D.29496;
  int D.29495;
  int D.29492;
  int iftmp.677;
  int iftmp.677_1;
  int iftmp.678_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.677_9;
  int iftmp.677_10;
  int iftmp.678_13;
  int iftmp.678_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.677_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.677_10 = 8;

  <bb 5>:
  # iftmp.677_1 = PHI <iftmp.677_9(3), iftmp.677_10(4)>
  new_capacity_11 = iftmp.677_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.678_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.678_14 = sz_12(D);

  <bb 8>:
  # iftmp.678_2 = PHI <iftmp.678_13(6), iftmp.678_14(7)>
  _15 = iftmp.678_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = ImFontAtlas::CustomRect] (_ZN8ImVectorIN11ImFontAtlas10CustomRectEE7reserveEi, funcdef_no=1070, decl_uid=6662, cgraph_uid=969, symbol_order=988)

void ImVector<T>::reserve(int) [with T = ImFontAtlas::CustomRect] (struct ImVector * const this, int new_capacity)
{
  struct value_type * D.29754;
  struct value_type * new_data;
  struct CustomRect * D.29752;
  struct CustomRect * D.29750;
  long unsigned int D.29749;
  long unsigned int D.29748;
  int D.29747;
  struct CustomRect * D.29744;
  long unsigned int D.29743;
  long unsigned int D.29742;
  int D.29739;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  struct value_type * _10;
  struct CustomRect * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  struct CustomRect * _16;
  struct CustomRect * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 32;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 32;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = ImFontAtlas::CustomRect] (_ZNK8ImVectorIN11ImFontAtlas10CustomRectEE14_grow_capacityEi, funcdef_no=1071, decl_uid=6652, cgraph_uid=970, symbol_order=989)

int ImVector<T>::_grow_capacity(int) const [with T = ImFontAtlas::CustomRect] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.684;
  int D.29733;
  int D.29731;
  int D.29730;
  int D.29729;
  int D.29726;
  int iftmp.683;
  int iftmp.683_1;
  int iftmp.684_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.683_9;
  int iftmp.683_10;
  int iftmp.684_13;
  int iftmp.684_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.683_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.683_10 = 8;

  <bb 5>:
  # iftmp.683_1 = PHI <iftmp.683_9(3), iftmp.683_10(4)>
  new_capacity_11 = iftmp.683_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.684_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.684_14 = sz_12(D);

  <bb 8>:
  # iftmp.684_2 = PHI <iftmp.684_13(6), iftmp.684_14(7)>
  _15 = iftmp.684_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = stbrp_rect] (_ZN8ImVectorI10stbrp_rectE7reserveEi, funcdef_no=1072, decl_uid=19116, cgraph_uid=971, symbol_order=990)

void ImVector<T>::reserve(int) [with T = stbrp_rect] (struct ImVector * const this, int new_capacity)
{
  struct value_type * D.30393;
  struct value_type * new_data;
  struct stbrp_rect * D.30391;
  struct stbrp_rect * D.30389;
  long unsigned int D.30388;
  long unsigned int D.30387;
  int D.30386;
  struct stbrp_rect * D.30383;
  long unsigned int D.30382;
  long unsigned int D.30381;
  int D.30378;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  struct value_type * _10;
  struct stbrp_rect * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  struct stbrp_rect * _16;
  struct stbrp_rect * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 16;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 16;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = stbrp_rect] (_ZNK8ImVectorI10stbrp_rectE14_grow_capacityEi, funcdef_no=1073, decl_uid=19106, cgraph_uid=972, symbol_order=991)

int ImVector<T>::_grow_capacity(int) const [with T = stbrp_rect] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.704;
  int D.30372;
  int D.30370;
  int D.30369;
  int D.30368;
  int D.30365;
  int iftmp.703;
  int iftmp.703_1;
  int iftmp.704_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.703_9;
  int iftmp.703_10;
  int iftmp.704_13;
  int iftmp.704_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.703_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.703_10 = 8;

  <bb 5>:
  # iftmp.703_1 = PHI <iftmp.703_9(3), iftmp.703_10(4)>
  new_capacity_11 = iftmp.703_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.704_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.704_14 = sz_12(D);

  <bb 8>:
  # iftmp.704_2 = PHI <iftmp.704_13(6), iftmp.704_14(7)>
  _15 = iftmp.704_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = ImFontGlyph] (_ZN8ImVectorI11ImFontGlyphE7reserveEi, funcdef_no=1074, decl_uid=6912, cgraph_uid=973, symbol_order=992)

void ImVector<T>::reserve(int) [with T = ImFontGlyph] (struct ImVector * const this, int new_capacity)
{
  struct value_type * D.30851;
  struct value_type * new_data;
  struct ImFontGlyph * D.30849;
  struct ImFontGlyph * D.30847;
  long unsigned int D.30846;
  long unsigned int D.30845;
  int D.30844;
  struct ImFontGlyph * D.30841;
  long unsigned int D.30840;
  long unsigned int D.30839;
  int D.30836;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  struct value_type * _10;
  struct ImFontGlyph * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  struct ImFontGlyph * _16;
  struct ImFontGlyph * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 40;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 40;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = ImFontGlyph] (_ZNK8ImVectorI11ImFontGlyphE14_grow_capacityEi, funcdef_no=1075, decl_uid=6902, cgraph_uid=974, symbol_order=993)

int ImVector<T>::_grow_capacity(int) const [with T = ImFontGlyph] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.721;
  int D.30830;
  int D.30828;
  int D.30827;
  int D.30826;
  int D.30823;
  int iftmp.720;
  int iftmp.720_1;
  int iftmp.721_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.720_9;
  int iftmp.720_10;
  int iftmp.721_13;
  int iftmp.721_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.720_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.720_10 = 8;

  <bb 5>:
  # iftmp.720_1 = PHI <iftmp.720_9(3), iftmp.720_10(4)>
  new_capacity_11 = iftmp.720_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.721_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.721_14 = sz_12(D);

  <bb 8>:
  # iftmp.721_2 = PHI <iftmp.721_13(6), iftmp.721_14(7)>
  _15 = iftmp.721_2;

<L6>:
  return _15;

}



;; Function void ImVector<T>::reserve(int) [with T = float] (_ZN8ImVectorIfE7reserveEi, funcdef_no=1076, decl_uid=7015, cgraph_uid=975, symbol_order=994)

void ImVector<T>::reserve(int) [with T = float] (struct ImVector * const this, int new_capacity)
{
  value_type * D.30930;
  value_type * new_data;
  float * D.30928;
  float * D.30926;
  long unsigned int D.30925;
  long unsigned int D.30924;
  int D.30923;
  float * D.30920;
  long unsigned int D.30919;
  long unsigned int D.30918;
  int D.30915;
  int _5;
  long unsigned int _7;
  long unsigned int _8;
  value_type * _10;
  float * _12;
  int _13;
  long unsigned int _14;
  long unsigned int _15;
  float * _16;
  float * _18;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 >= new_capacity_6(D))
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  goto <bb 7> (<L5>);

  <bb 4>:
  _7 = (long unsigned int) new_capacity_6(D);
  _8 = _7 * 4;
  _10 = ImGui::MemAlloc (_8);
  new_data_11 = _10;
  _12 = this_4(D)->Data;
  if (_12 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  _13 = this_4(D)->Size;
  _14 = (long unsigned int) _13;
  _15 = _14 * 4;
  _16 = this_4(D)->Data;
  memcpy (new_data_11, _16, _15);

  <bb 6>:
  _18 = this_4(D)->Data;
  ImGui::MemFree (_18);
  this_4(D)->Data = new_data_11;
  this_4(D)->Capacity = new_capacity_6(D);

<L5>:
  return;

}



;; Function int ImVector<T>::_grow_capacity(int) const [with T = float] (_ZNK8ImVectorIfE14_grow_capacityEi, funcdef_no=1077, decl_uid=7005, cgraph_uid=976, symbol_order=995)

int ImVector<T>::_grow_capacity(int) const [with T = float] (const struct ImVector * const this, int sz)
{
  int new_capacity;
  int iftmp.723;
  int D.30909;
  int D.30907;
  int D.30906;
  int D.30905;
  int D.30902;
  int iftmp.722;
  int iftmp.722_1;
  int iftmp.723_2;
  int _5;
  int _6;
  int _7;
  int _8;
  int iftmp.722_9;
  int iftmp.722_10;
  int iftmp.723_13;
  int iftmp.723_14;
  int _15;

  <bb 2>:
  _5 = this_4(D)->Capacity;
  if (_5 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  _6 = this_4(D)->Capacity;
  _7 = this_4(D)->Capacity;
  _8 = _7 / 2;
  iftmp.722_9 = _6 + _8;
  goto <bb 5>;

  <bb 4>:
  iftmp.722_10 = 8;

  <bb 5>:
  # iftmp.722_1 = PHI <iftmp.722_9(3), iftmp.722_10(4)>
  new_capacity_11 = iftmp.722_1;
  if (new_capacity_11 > sz_12(D))
    goto <bb 6>;
  else
    goto <bb 7>;

  <bb 6>:
  iftmp.723_13 = new_capacity_11;
  goto <bb 8>;

  <bb 7>:
  iftmp.723_14 = sz_12(D);

  <bb 8>:
  # iftmp.723_2 = PHI <iftmp.723_13(6), iftmp.723_14(7)>
  _15 = iftmp.723_2;

<L6>:
  return _15;

}



;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=1078, decl_uid=19969, cgraph_uid=977, symbol_order=996)

void __static_initialization_and_destruction_0(int, int) (int __initialize_p, int __priority)
{
  long int D.18602;
  struct ImVec2 * D.18601;
  struct ImVec2 * D.18600;
  struct ImVec2 * retval.832;
  long int D.18599;
  struct ImVec2 * D.18598;
  struct ImVec2 * D.18597;
  struct ImVec2 * retval.831;
  long int D.18596;
  struct ImVec2 * D.18595;
  struct ImVec2 * D.18594;
  struct ImVec2 * retval.830;
  long int D.18593;
  struct ImVec2 * D.18592;
  struct ImVec2 * D.18591;
  struct ImVec2 * retval.829;
  long int D.18590;
  struct ImVec2 * D.18589;
  struct ImVec2 * D.18588;
  struct ImVec2 * retval.828;
  long int D.18587;
  struct ImVec2 * D.18586;
  struct ImVec2 * D.18585;
  struct ImVec2 * retval.827;
  long int D.18584;
  struct ImVec2 * D.18583;
  struct ImVec2 * D.18582;
  struct ImVec2 * retval.826;
  long int D.18581;
  struct ImVec2[3] * D.18580;
  struct ImVec2[3] * D.18579;
  struct ImVec2[3] * retval.825;
  struct ImVec2[3] * _5;
  struct ImVec2[3] * _6;
  long int _7;
  struct ImVec2 * _8;
  struct ImVec2 * _9;
  long int _10;
  struct ImVec2 * _12;
  long int _13;
  struct ImVec2 * _15;
  long int _16;
  struct ImVec2 * _18;
  long int _19;
  struct ImVec2 * retval.826_20;
  struct ImVec2[3] * _21;
  long int _22;
  struct ImVec2 * _23;
  struct ImVec2 * _24;
  long int _25;
  struct ImVec2 * _27;
  long int _28;
  struct ImVec2 * _30;
  long int _31;
  struct ImVec2 * _33;
  long int _34;
  struct ImVec2 * retval.827_35;
  struct ImVec2[3] * _36;
  long int _37;
  struct ImVec2 * _38;
  struct ImVec2 * _39;
  long int _40;
  struct ImVec2 * _42;
  long int _43;
  struct ImVec2 * _45;
  long int _46;
  struct ImVec2 * _48;
  long int _49;
  struct ImVec2 * retval.828_50;
  struct ImVec2[3] * _51;
  long int _52;
  struct ImVec2 * _53;
  struct ImVec2 * _54;
  long int _55;
  struct ImVec2 * _57;
  long int _58;
  struct ImVec2 * _60;
  long int _61;
  struct ImVec2 * _63;
  long int _64;
  struct ImVec2 * retval.829_65;
  struct ImVec2[3] * _66;
  long int _67;
  struct ImVec2 * _68;
  struct ImVec2 * _69;
  long int _70;
  struct ImVec2 * _72;
  long int _73;
  struct ImVec2 * _75;
  long int _76;
  struct ImVec2 * _78;
  long int _79;
  struct ImVec2 * retval.830_80;
  struct ImVec2[3] * _81;
  long int _82;
  struct ImVec2 * _83;
  struct ImVec2 * _84;
  long int _85;
  struct ImVec2 * _87;
  long int _88;
  struct ImVec2 * _90;
  long int _91;
  struct ImVec2 * _93;
  long int _94;
  struct ImVec2 * retval.831_95;
  struct ImVec2[3] * _96;
  long int _97;
  struct ImVec2 * _98;
  struct ImVec2 * _99;
  long int _100;
  struct ImVec2 * _102;
  long int _103;
  struct ImVec2 * _105;
  long int _106;
  struct ImVec2 * _108;
  long int _109;
  struct ImVec2 * retval.832_110;
  struct ImVec2[3] * _111;
  long int _112;
  struct ImVec2[3] * retval.825_113;

  <bb 2>:
  if (__initialize_p_2(D) == 1)
    goto <bb 3>;
  else
    goto <bb 5>;

  <bb 3>:
  if (__priority_4(D) == 65535)
    goto <bb 4>;
  else
    goto <bb 5>;

  <bb 4>:
  _5 = &FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA;
  _6 = _5;
  _7 = 6;
  _8 = _6;
  _9 = _8;
  _10 = 2;
  ImVec2::ImVec2 (_9, 0.0, 3.0e+0);
  _12 = _9 + 8;
  _13 = _10 + -1;
  ImVec2::ImVec2 (_12, 1.2e+1, 1.9e+1);
  _15 = _12 + 8;
  _16 = _13 + -1;
  ImVec2::ImVec2 (_15, 0.0, 0.0);
  _18 = _15 + 8;
  _19 = _16 + -1;
  retval.826_20 = _8;
  _21 = _6 + 24;
  _22 = _7 + -1;
  _23 = _21;
  _24 = _23;
  _25 = 2;
  ImVec2::ImVec2 (_24, 1.3e+1, 0.0);
  _27 = _24 + 8;
  _28 = _25 + -1;
  ImVec2::ImVec2 (_27, 7.0e+0, 1.6e+1);
  _30 = _27 + 8;
  _31 = _28 + -1;
  ImVec2::ImVec2 (_30, 4.0e+0, 8.0e+0);
  _33 = _30 + 8;
  _34 = _31 + -1;
  retval.827_35 = _23;
  _36 = _21 + 24;
  _37 = _22 + -1;
  _38 = _36;
  _39 = _38;
  _40 = 2;
  ImVec2::ImVec2 (_39, 3.1e+1, 0.0);
  _42 = _39 + 8;
  _43 = _40 + -1;
  ImVec2::ImVec2 (_42, 2.3e+1, 2.3e+1);
  _45 = _42 + 8;
  _46 = _43 + -1;
  ImVec2::ImVec2 (_45, 1.1e+1, 1.1e+1);
  _48 = _45 + 8;
  _49 = _46 + -1;
  retval.828_50 = _38;
  _51 = _36 + 24;
  _52 = _37 + -1;
  _53 = _51;
  _54 = _53;
  _55 = 2;
  ImVec2::ImVec2 (_54, 2.1e+1, 0.0);
  _57 = _54 + 8;
  _58 = _55 + -1;
  ImVec2::ImVec2 (_57, 9.0e+0, 2.3e+1);
  _60 = _57 + 8;
  _61 = _58 + -1;
  ImVec2::ImVec2 (_60, 5.0e+0, 1.1e+1);
  _63 = _60 + 8;
  _64 = _61 + -1;
  retval.829_65 = _53;
  _66 = _51 + 24;
  _67 = _52 + -1;
  _68 = _66;
  _69 = _68;
  _70 = 2;
  ImVec2::ImVec2 (_69, 5.5e+1, 1.8e+1);
  _72 = _69 + 8;
  _73 = _70 + -1;
  ImVec2::ImVec2 (_72, 2.3e+1, 9.0e+0);
  _75 = _72 + 8;
  _76 = _73 + -1;
  ImVec2::ImVec2 (_75, 1.1e+1, 5.0e+0);
  _78 = _75 + 8;
  _79 = _76 + -1;
  retval.830_80 = _68;
  _81 = _66 + 24;
  _82 = _67 + -1;
  _83 = _81;
  _84 = _83;
  _85 = 2;
  ImVec2::ImVec2 (_84, 7.3e+1, 0.0);
  _87 = _84 + 8;
  _88 = _85 + -1;
  ImVec2::ImVec2 (_87, 1.7e+1, 1.7e+1);
  _90 = _87 + 8;
  _91 = _88 + -1;
  ImVec2::ImVec2 (_90, 9.0e+0, 9.0e+0);
  _93 = _90 + 8;
  _94 = _91 + -1;
  retval.831_95 = _83;
  _96 = _81 + 24;
  _97 = _82 + -1;
  _98 = _96;
  _99 = _98;
  _100 = 2;
  ImVec2::ImVec2 (_99, 5.5e+1, 0.0);
  _102 = _99 + 8;
  _103 = _100 + -1;
  ImVec2::ImVec2 (_102, 1.7e+1, 1.7e+1);
  _105 = _102 + 8;
  _106 = _103 + -1;
  ImVec2::ImVec2 (_105, 9.0e+0, 9.0e+0);
  _108 = _105 + 8;
  _109 = _106 + -1;
  retval.832_110 = _98;
  _111 = _96 + 24;
  _112 = _97 + -1;
  retval.825_113 = _5;

  <bb 5>:
  return;

}



;; Function (static initializers for /home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp) (_GLOBAL__sub_I__ZN5ImGui15StyleColorsDarkEP10ImGuiStyle, funcdef_no=1079, decl_uid=19973, cgraph_uid=978, symbol_order=997)

(static initializers for /home/benjamin/Videos/openGLSeries/code/vendor/imgui/imgui_draw.cpp) ()
{
  <bb 2>:
  __static_initialization_and_destruction_0 (1, 65535);
  return;

}


